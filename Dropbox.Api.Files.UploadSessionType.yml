### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.UploadSessionType
  commentId: T:Dropbox.Api.Files.UploadSessionType
  id: UploadSessionType
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.UploadSessionType.#ctor
  - Dropbox.Api.Files.UploadSessionType.AsConcurrent
  - Dropbox.Api.Files.UploadSessionType.AsOther
  - Dropbox.Api.Files.UploadSessionType.AsSequential
  - Dropbox.Api.Files.UploadSessionType.IsConcurrent
  - Dropbox.Api.Files.UploadSessionType.IsOther
  - Dropbox.Api.Files.UploadSessionType.IsSequential
  langs:
  - csharp
  - vb
  name: UploadSessionType
  nameWithType: UploadSessionType
  fullName: Dropbox.Api.Files.UploadSessionType
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: UploadSessionType
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionType.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The upload session type object</p>\n"
  example: []
  syntax:
    content: 'public class UploadSessionType : object'
    content.vb: >-
      Public Class UploadSessionType
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Files.UploadSessionType.Concurrent
  - Dropbox.Api.Files.UploadSessionType.Other
  - Dropbox.Api.Files.UploadSessionType.Sequential
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.UploadSessionType.#ctor
  commentId: M:Dropbox.Api.Files.UploadSessionType.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Files.UploadSessionType
  langs:
  - csharp
  - vb
  name: UploadSessionType()
  nameWithType: UploadSessionType.UploadSessionType()
  fullName: Dropbox.Api.Files.UploadSessionType.UploadSessionType()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionType.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.UploadSessionType\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public UploadSessionType()
    content.vb: Public Sub New
  overload: Dropbox.Api.Files.UploadSessionType.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.UploadSessionType.IsSequential
  commentId: P:Dropbox.Api.Files.UploadSessionType.IsSequential
  id: IsSequential
  parent: Dropbox.Api.Files.UploadSessionType
  langs:
  - csharp
  - vb
  name: IsSequential
  nameWithType: UploadSessionType.IsSequential
  fullName: Dropbox.Api.Files.UploadSessionType.IsSequential
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsSequential
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionType.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Sequential</p>\n"
  example: []
  syntax:
    content: public bool IsSequential { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSequential As Boolean
  overload: Dropbox.Api.Files.UploadSessionType.IsSequential*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionType.AsSequential
  commentId: P:Dropbox.Api.Files.UploadSessionType.AsSequential
  id: AsSequential
  parent: Dropbox.Api.Files.UploadSessionType
  langs:
  - csharp
  - vb
  name: AsSequential
  nameWithType: UploadSessionType.AsSequential
  fullName: Dropbox.Api.Files.UploadSessionType.AsSequential
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsSequential
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionType.cs
    startLine: 51
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Sequential, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public UploadSessionType.Sequential AsSequential { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.UploadSessionType.Sequential
    content.vb: Public ReadOnly Property AsSequential As UploadSessionType.Sequential
  overload: Dropbox.Api.Files.UploadSessionType.AsSequential*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionType.IsConcurrent
  commentId: P:Dropbox.Api.Files.UploadSessionType.IsConcurrent
  id: IsConcurrent
  parent: Dropbox.Api.Files.UploadSessionType
  langs:
  - csharp
  - vb
  name: IsConcurrent
  nameWithType: UploadSessionType.IsConcurrent
  fullName: Dropbox.Api.Files.UploadSessionType.IsConcurrent
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsConcurrent
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionType.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Concurrent</p>\n"
  example: []
  syntax:
    content: public bool IsConcurrent { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsConcurrent As Boolean
  overload: Dropbox.Api.Files.UploadSessionType.IsConcurrent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionType.AsConcurrent
  commentId: P:Dropbox.Api.Files.UploadSessionType.AsConcurrent
  id: AsConcurrent
  parent: Dropbox.Api.Files.UploadSessionType
  langs:
  - csharp
  - vb
  name: AsConcurrent
  nameWithType: UploadSessionType.AsConcurrent
  fullName: Dropbox.Api.Files.UploadSessionType.AsConcurrent
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsConcurrent
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionType.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Concurrent, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public UploadSessionType.Concurrent AsConcurrent { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.UploadSessionType.Concurrent
    content.vb: Public ReadOnly Property AsConcurrent As UploadSessionType.Concurrent
  overload: Dropbox.Api.Files.UploadSessionType.AsConcurrent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionType.IsOther
  commentId: P:Dropbox.Api.Files.UploadSessionType.IsOther
  id: IsOther
  parent: Dropbox.Api.Files.UploadSessionType
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: UploadSessionType.IsOther
  fullName: Dropbox.Api.Files.UploadSessionType.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionType.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.Files.UploadSessionType.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionType.AsOther
  commentId: P:Dropbox.Api.Files.UploadSessionType.AsOther
  id: AsOther
  parent: Dropbox.Api.Files.UploadSessionType
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: UploadSessionType.AsOther
  fullName: Dropbox.Api.Files.UploadSessionType.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionType.cs
    startLine: 95
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public UploadSessionType.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.UploadSessionType.Other
    content.vb: Public ReadOnly Property AsOther As UploadSessionType.Other
  overload: Dropbox.Api.Files.UploadSessionType.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Files.UploadSessionType
  commentId: T:Dropbox.Api.Files.UploadSessionType
  parent: Dropbox.Api.Files
  name: UploadSessionType
  nameWithType: UploadSessionType
  fullName: Dropbox.Api.Files.UploadSessionType
- uid: Dropbox.Api.Files.UploadSessionType.#ctor*
  commentId: Overload:Dropbox.Api.Files.UploadSessionType.#ctor
  name: UploadSessionType
  nameWithType: UploadSessionType.UploadSessionType
  fullName: Dropbox.Api.Files.UploadSessionType.UploadSessionType
- uid: Dropbox.Api.Files.UploadSessionType.IsSequential*
  commentId: Overload:Dropbox.Api.Files.UploadSessionType.IsSequential
  name: IsSequential
  nameWithType: UploadSessionType.IsSequential
  fullName: Dropbox.Api.Files.UploadSessionType.IsSequential
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Files.UploadSessionType.AsSequential*
  commentId: Overload:Dropbox.Api.Files.UploadSessionType.AsSequential
  name: AsSequential
  nameWithType: UploadSessionType.AsSequential
  fullName: Dropbox.Api.Files.UploadSessionType.AsSequential
- uid: Dropbox.Api.Files.UploadSessionType.Sequential
  commentId: T:Dropbox.Api.Files.UploadSessionType.Sequential
  parent: Dropbox.Api.Files
  name: UploadSessionType.Sequential
  nameWithType: UploadSessionType.Sequential
  fullName: Dropbox.Api.Files.UploadSessionType.Sequential
- uid: Dropbox.Api.Files.UploadSessionType.IsConcurrent*
  commentId: Overload:Dropbox.Api.Files.UploadSessionType.IsConcurrent
  name: IsConcurrent
  nameWithType: UploadSessionType.IsConcurrent
  fullName: Dropbox.Api.Files.UploadSessionType.IsConcurrent
- uid: Dropbox.Api.Files.UploadSessionType.AsConcurrent*
  commentId: Overload:Dropbox.Api.Files.UploadSessionType.AsConcurrent
  name: AsConcurrent
  nameWithType: UploadSessionType.AsConcurrent
  fullName: Dropbox.Api.Files.UploadSessionType.AsConcurrent
- uid: Dropbox.Api.Files.UploadSessionType.Concurrent
  commentId: T:Dropbox.Api.Files.UploadSessionType.Concurrent
  parent: Dropbox.Api.Files
  name: UploadSessionType.Concurrent
  nameWithType: UploadSessionType.Concurrent
  fullName: Dropbox.Api.Files.UploadSessionType.Concurrent
- uid: Dropbox.Api.Files.UploadSessionType.IsOther*
  commentId: Overload:Dropbox.Api.Files.UploadSessionType.IsOther
  name: IsOther
  nameWithType: UploadSessionType.IsOther
  fullName: Dropbox.Api.Files.UploadSessionType.IsOther
- uid: Dropbox.Api.Files.UploadSessionType.AsOther*
  commentId: Overload:Dropbox.Api.Files.UploadSessionType.AsOther
  name: AsOther
  nameWithType: UploadSessionType.AsOther
  fullName: Dropbox.Api.Files.UploadSessionType.AsOther
- uid: Dropbox.Api.Files.UploadSessionType.Other
  commentId: T:Dropbox.Api.Files.UploadSessionType.Other
  parent: Dropbox.Api.Files
  name: UploadSessionType.Other
  nameWithType: UploadSessionType.Other
  fullName: Dropbox.Api.Files.UploadSessionType.Other
shouldSkipMarkup: true
