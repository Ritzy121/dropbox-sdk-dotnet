### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamLog.AdminRole
  commentId: T:Dropbox.Api.TeamLog.AdminRole
  id: AdminRole
  parent: Dropbox.Api.TeamLog
  children:
  - Dropbox.Api.TeamLog.AdminRole.#ctor
  - Dropbox.Api.TeamLog.AdminRole.AsBillingAdmin
  - Dropbox.Api.TeamLog.AdminRole.AsComplianceAdmin
  - Dropbox.Api.TeamLog.AdminRole.AsContentAdmin
  - Dropbox.Api.TeamLog.AdminRole.AsLimitedAdmin
  - Dropbox.Api.TeamLog.AdminRole.AsMemberOnly
  - Dropbox.Api.TeamLog.AdminRole.AsOther
  - Dropbox.Api.TeamLog.AdminRole.AsReportingAdmin
  - Dropbox.Api.TeamLog.AdminRole.AsSecurityAdmin
  - Dropbox.Api.TeamLog.AdminRole.AsSupportAdmin
  - Dropbox.Api.TeamLog.AdminRole.AsTeamAdmin
  - Dropbox.Api.TeamLog.AdminRole.AsUserManagementAdmin
  - Dropbox.Api.TeamLog.AdminRole.IsBillingAdmin
  - Dropbox.Api.TeamLog.AdminRole.IsComplianceAdmin
  - Dropbox.Api.TeamLog.AdminRole.IsContentAdmin
  - Dropbox.Api.TeamLog.AdminRole.IsLimitedAdmin
  - Dropbox.Api.TeamLog.AdminRole.IsMemberOnly
  - Dropbox.Api.TeamLog.AdminRole.IsOther
  - Dropbox.Api.TeamLog.AdminRole.IsReportingAdmin
  - Dropbox.Api.TeamLog.AdminRole.IsSecurityAdmin
  - Dropbox.Api.TeamLog.AdminRole.IsSupportAdmin
  - Dropbox.Api.TeamLog.AdminRole.IsTeamAdmin
  - Dropbox.Api.TeamLog.AdminRole.IsUserManagementAdmin
  langs:
  - csharp
  - vb
  name: AdminRole
  nameWithType: AdminRole
  fullName: Dropbox.Api.TeamLog.AdminRole
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AdminRole
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>The admin role object</p>\n"
  example: []
  syntax:
    content: 'public class AdminRole : object'
    content.vb: >-
      Public Class AdminRole
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.TeamLog.AdminRole.BillingAdmin
  - Dropbox.Api.TeamLog.AdminRole.ComplianceAdmin
  - Dropbox.Api.TeamLog.AdminRole.ContentAdmin
  - Dropbox.Api.TeamLog.AdminRole.LimitedAdmin
  - Dropbox.Api.TeamLog.AdminRole.MemberOnly
  - Dropbox.Api.TeamLog.AdminRole.Other
  - Dropbox.Api.TeamLog.AdminRole.ReportingAdmin
  - Dropbox.Api.TeamLog.AdminRole.SecurityAdmin
  - Dropbox.Api.TeamLog.AdminRole.SupportAdmin
  - Dropbox.Api.TeamLog.AdminRole.TeamAdmin
  - Dropbox.Api.TeamLog.AdminRole.UserManagementAdmin
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.TeamLog.AdminRole.#ctor
  commentId: M:Dropbox.Api.TeamLog.AdminRole.#ctor
  id: '#ctor'
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: AdminRole()
  nameWithType: AdminRole.AdminRole()
  fullName: Dropbox.Api.TeamLog.AdminRole.AdminRole()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 32
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamLog.AdminRole\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public AdminRole()
    content.vb: Public Sub New
  overload: Dropbox.Api.TeamLog.AdminRole.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.TeamLog.AdminRole.IsBillingAdmin
  commentId: P:Dropbox.Api.TeamLog.AdminRole.IsBillingAdmin
  id: IsBillingAdmin
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: IsBillingAdmin
  nameWithType: AdminRole.IsBillingAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.IsBillingAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsBillingAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 39
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is BillingAdmin</p>\n"
  example: []
  syntax:
    content: public bool IsBillingAdmin { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsBillingAdmin As Boolean
  overload: Dropbox.Api.TeamLog.AdminRole.IsBillingAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.AsBillingAdmin
  commentId: P:Dropbox.Api.TeamLog.AdminRole.AsBillingAdmin
  id: AsBillingAdmin
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: AsBillingAdmin
  nameWithType: AdminRole.AsBillingAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.AsBillingAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsBillingAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 50
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a BillingAdmin, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AdminRole.BillingAdmin AsBillingAdmin { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AdminRole.BillingAdmin
    content.vb: Public ReadOnly Property AsBillingAdmin As AdminRole.BillingAdmin
  overload: Dropbox.Api.TeamLog.AdminRole.AsBillingAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.IsComplianceAdmin
  commentId: P:Dropbox.Api.TeamLog.AdminRole.IsComplianceAdmin
  id: IsComplianceAdmin
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: IsComplianceAdmin
  nameWithType: AdminRole.IsComplianceAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.IsComplianceAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsComplianceAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 61
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is ComplianceAdmin</p>\n"
  example: []
  syntax:
    content: public bool IsComplianceAdmin { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsComplianceAdmin As Boolean
  overload: Dropbox.Api.TeamLog.AdminRole.IsComplianceAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.AsComplianceAdmin
  commentId: P:Dropbox.Api.TeamLog.AdminRole.AsComplianceAdmin
  id: AsComplianceAdmin
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: AsComplianceAdmin
  nameWithType: AdminRole.AsComplianceAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.AsComplianceAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsComplianceAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 72
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a ComplianceAdmin, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AdminRole.ComplianceAdmin AsComplianceAdmin { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AdminRole.ComplianceAdmin
    content.vb: Public ReadOnly Property AsComplianceAdmin As AdminRole.ComplianceAdmin
  overload: Dropbox.Api.TeamLog.AdminRole.AsComplianceAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.IsContentAdmin
  commentId: P:Dropbox.Api.TeamLog.AdminRole.IsContentAdmin
  id: IsContentAdmin
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: IsContentAdmin
  nameWithType: AdminRole.IsContentAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.IsContentAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsContentAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 83
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is ContentAdmin</p>\n"
  example: []
  syntax:
    content: public bool IsContentAdmin { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsContentAdmin As Boolean
  overload: Dropbox.Api.TeamLog.AdminRole.IsContentAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.AsContentAdmin
  commentId: P:Dropbox.Api.TeamLog.AdminRole.AsContentAdmin
  id: AsContentAdmin
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: AsContentAdmin
  nameWithType: AdminRole.AsContentAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.AsContentAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsContentAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 94
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a ContentAdmin, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AdminRole.ContentAdmin AsContentAdmin { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AdminRole.ContentAdmin
    content.vb: Public ReadOnly Property AsContentAdmin As AdminRole.ContentAdmin
  overload: Dropbox.Api.TeamLog.AdminRole.AsContentAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.IsLimitedAdmin
  commentId: P:Dropbox.Api.TeamLog.AdminRole.IsLimitedAdmin
  id: IsLimitedAdmin
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: IsLimitedAdmin
  nameWithType: AdminRole.IsLimitedAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.IsLimitedAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsLimitedAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 105
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is LimitedAdmin</p>\n"
  example: []
  syntax:
    content: public bool IsLimitedAdmin { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLimitedAdmin As Boolean
  overload: Dropbox.Api.TeamLog.AdminRole.IsLimitedAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.AsLimitedAdmin
  commentId: P:Dropbox.Api.TeamLog.AdminRole.AsLimitedAdmin
  id: AsLimitedAdmin
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: AsLimitedAdmin
  nameWithType: AdminRole.AsLimitedAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.AsLimitedAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsLimitedAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 116
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a LimitedAdmin, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AdminRole.LimitedAdmin AsLimitedAdmin { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AdminRole.LimitedAdmin
    content.vb: Public ReadOnly Property AsLimitedAdmin As AdminRole.LimitedAdmin
  overload: Dropbox.Api.TeamLog.AdminRole.AsLimitedAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.IsMemberOnly
  commentId: P:Dropbox.Api.TeamLog.AdminRole.IsMemberOnly
  id: IsMemberOnly
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: IsMemberOnly
  nameWithType: AdminRole.IsMemberOnly
  fullName: Dropbox.Api.TeamLog.AdminRole.IsMemberOnly
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsMemberOnly
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 127
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is MemberOnly</p>\n"
  example: []
  syntax:
    content: public bool IsMemberOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMemberOnly As Boolean
  overload: Dropbox.Api.TeamLog.AdminRole.IsMemberOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.AsMemberOnly
  commentId: P:Dropbox.Api.TeamLog.AdminRole.AsMemberOnly
  id: AsMemberOnly
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: AsMemberOnly
  nameWithType: AdminRole.AsMemberOnly
  fullName: Dropbox.Api.TeamLog.AdminRole.AsMemberOnly
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsMemberOnly
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 138
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a MemberOnly, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AdminRole.MemberOnly AsMemberOnly { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AdminRole.MemberOnly
    content.vb: Public ReadOnly Property AsMemberOnly As AdminRole.MemberOnly
  overload: Dropbox.Api.TeamLog.AdminRole.AsMemberOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.IsReportingAdmin
  commentId: P:Dropbox.Api.TeamLog.AdminRole.IsReportingAdmin
  id: IsReportingAdmin
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: IsReportingAdmin
  nameWithType: AdminRole.IsReportingAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.IsReportingAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsReportingAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 149
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is ReportingAdmin</p>\n"
  example: []
  syntax:
    content: public bool IsReportingAdmin { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReportingAdmin As Boolean
  overload: Dropbox.Api.TeamLog.AdminRole.IsReportingAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.AsReportingAdmin
  commentId: P:Dropbox.Api.TeamLog.AdminRole.AsReportingAdmin
  id: AsReportingAdmin
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: AsReportingAdmin
  nameWithType: AdminRole.AsReportingAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.AsReportingAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsReportingAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 160
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a ReportingAdmin, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AdminRole.ReportingAdmin AsReportingAdmin { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AdminRole.ReportingAdmin
    content.vb: Public ReadOnly Property AsReportingAdmin As AdminRole.ReportingAdmin
  overload: Dropbox.Api.TeamLog.AdminRole.AsReportingAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.IsSecurityAdmin
  commentId: P:Dropbox.Api.TeamLog.AdminRole.IsSecurityAdmin
  id: IsSecurityAdmin
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: IsSecurityAdmin
  nameWithType: AdminRole.IsSecurityAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.IsSecurityAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsSecurityAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 171
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is SecurityAdmin</p>\n"
  example: []
  syntax:
    content: public bool IsSecurityAdmin { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSecurityAdmin As Boolean
  overload: Dropbox.Api.TeamLog.AdminRole.IsSecurityAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.AsSecurityAdmin
  commentId: P:Dropbox.Api.TeamLog.AdminRole.AsSecurityAdmin
  id: AsSecurityAdmin
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: AsSecurityAdmin
  nameWithType: AdminRole.AsSecurityAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.AsSecurityAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsSecurityAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 182
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a SecurityAdmin, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AdminRole.SecurityAdmin AsSecurityAdmin { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AdminRole.SecurityAdmin
    content.vb: Public ReadOnly Property AsSecurityAdmin As AdminRole.SecurityAdmin
  overload: Dropbox.Api.TeamLog.AdminRole.AsSecurityAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.IsSupportAdmin
  commentId: P:Dropbox.Api.TeamLog.AdminRole.IsSupportAdmin
  id: IsSupportAdmin
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: IsSupportAdmin
  nameWithType: AdminRole.IsSupportAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.IsSupportAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsSupportAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 193
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is SupportAdmin</p>\n"
  example: []
  syntax:
    content: public bool IsSupportAdmin { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSupportAdmin As Boolean
  overload: Dropbox.Api.TeamLog.AdminRole.IsSupportAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.AsSupportAdmin
  commentId: P:Dropbox.Api.TeamLog.AdminRole.AsSupportAdmin
  id: AsSupportAdmin
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: AsSupportAdmin
  nameWithType: AdminRole.AsSupportAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.AsSupportAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsSupportAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 204
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a SupportAdmin, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AdminRole.SupportAdmin AsSupportAdmin { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AdminRole.SupportAdmin
    content.vb: Public ReadOnly Property AsSupportAdmin As AdminRole.SupportAdmin
  overload: Dropbox.Api.TeamLog.AdminRole.AsSupportAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.IsTeamAdmin
  commentId: P:Dropbox.Api.TeamLog.AdminRole.IsTeamAdmin
  id: IsTeamAdmin
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: IsTeamAdmin
  nameWithType: AdminRole.IsTeamAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.IsTeamAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsTeamAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 215
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is TeamAdmin</p>\n"
  example: []
  syntax:
    content: public bool IsTeamAdmin { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTeamAdmin As Boolean
  overload: Dropbox.Api.TeamLog.AdminRole.IsTeamAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.AsTeamAdmin
  commentId: P:Dropbox.Api.TeamLog.AdminRole.AsTeamAdmin
  id: AsTeamAdmin
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: AsTeamAdmin
  nameWithType: AdminRole.AsTeamAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.AsTeamAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsTeamAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 226
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a TeamAdmin, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AdminRole.TeamAdmin AsTeamAdmin { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AdminRole.TeamAdmin
    content.vb: Public ReadOnly Property AsTeamAdmin As AdminRole.TeamAdmin
  overload: Dropbox.Api.TeamLog.AdminRole.AsTeamAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.IsUserManagementAdmin
  commentId: P:Dropbox.Api.TeamLog.AdminRole.IsUserManagementAdmin
  id: IsUserManagementAdmin
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: IsUserManagementAdmin
  nameWithType: AdminRole.IsUserManagementAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.IsUserManagementAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsUserManagementAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 237
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is UserManagementAdmin</p>\n"
  example: []
  syntax:
    content: public bool IsUserManagementAdmin { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUserManagementAdmin As Boolean
  overload: Dropbox.Api.TeamLog.AdminRole.IsUserManagementAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.AsUserManagementAdmin
  commentId: P:Dropbox.Api.TeamLog.AdminRole.AsUserManagementAdmin
  id: AsUserManagementAdmin
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: AsUserManagementAdmin
  nameWithType: AdminRole.AsUserManagementAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.AsUserManagementAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsUserManagementAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 248
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a UserManagementAdmin, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AdminRole.UserManagementAdmin AsUserManagementAdmin { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AdminRole.UserManagementAdmin
    content.vb: Public ReadOnly Property AsUserManagementAdmin As AdminRole.UserManagementAdmin
  overload: Dropbox.Api.TeamLog.AdminRole.AsUserManagementAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.IsOther
  commentId: P:Dropbox.Api.TeamLog.AdminRole.IsOther
  id: IsOther
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: AdminRole.IsOther
  fullName: Dropbox.Api.TeamLog.AdminRole.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 259
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.TeamLog.AdminRole.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminRole.AsOther
  commentId: P:Dropbox.Api.TeamLog.AdminRole.AsOther
  id: AsOther
  parent: Dropbox.Api.TeamLog.AdminRole
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: AdminRole.AsOther
  fullName: Dropbox.Api.TeamLog.AdminRole.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminRole.cs
    startLine: 270
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AdminRole.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AdminRole.Other
    content.vb: Public ReadOnly Property AsOther As AdminRole.Other
  overload: Dropbox.Api.TeamLog.AdminRole.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.TeamLog
  commentId: N:Dropbox.Api.TeamLog
  name: Dropbox.Api.TeamLog
  nameWithType: Dropbox.Api.TeamLog
  fullName: Dropbox.Api.TeamLog
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.TeamLog.AdminRole
  commentId: T:Dropbox.Api.TeamLog.AdminRole
  parent: Dropbox.Api.TeamLog
  name: AdminRole
  nameWithType: AdminRole
  fullName: Dropbox.Api.TeamLog.AdminRole
- uid: Dropbox.Api.TeamLog.AdminRole.#ctor*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.#ctor
  name: AdminRole
  nameWithType: AdminRole.AdminRole
  fullName: Dropbox.Api.TeamLog.AdminRole.AdminRole
- uid: Dropbox.Api.TeamLog.AdminRole.IsBillingAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.IsBillingAdmin
  name: IsBillingAdmin
  nameWithType: AdminRole.IsBillingAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.IsBillingAdmin
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.TeamLog.AdminRole.AsBillingAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.AsBillingAdmin
  name: AsBillingAdmin
  nameWithType: AdminRole.AsBillingAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.AsBillingAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.BillingAdmin
  commentId: T:Dropbox.Api.TeamLog.AdminRole.BillingAdmin
  parent: Dropbox.Api.TeamLog
  name: AdminRole.BillingAdmin
  nameWithType: AdminRole.BillingAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.BillingAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.IsComplianceAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.IsComplianceAdmin
  name: IsComplianceAdmin
  nameWithType: AdminRole.IsComplianceAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.IsComplianceAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.AsComplianceAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.AsComplianceAdmin
  name: AsComplianceAdmin
  nameWithType: AdminRole.AsComplianceAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.AsComplianceAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.ComplianceAdmin
  commentId: T:Dropbox.Api.TeamLog.AdminRole.ComplianceAdmin
  parent: Dropbox.Api.TeamLog
  name: AdminRole.ComplianceAdmin
  nameWithType: AdminRole.ComplianceAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.ComplianceAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.IsContentAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.IsContentAdmin
  name: IsContentAdmin
  nameWithType: AdminRole.IsContentAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.IsContentAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.AsContentAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.AsContentAdmin
  name: AsContentAdmin
  nameWithType: AdminRole.AsContentAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.AsContentAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.ContentAdmin
  commentId: T:Dropbox.Api.TeamLog.AdminRole.ContentAdmin
  parent: Dropbox.Api.TeamLog
  name: AdminRole.ContentAdmin
  nameWithType: AdminRole.ContentAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.ContentAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.IsLimitedAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.IsLimitedAdmin
  name: IsLimitedAdmin
  nameWithType: AdminRole.IsLimitedAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.IsLimitedAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.AsLimitedAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.AsLimitedAdmin
  name: AsLimitedAdmin
  nameWithType: AdminRole.AsLimitedAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.AsLimitedAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.LimitedAdmin
  commentId: T:Dropbox.Api.TeamLog.AdminRole.LimitedAdmin
  parent: Dropbox.Api.TeamLog
  name: AdminRole.LimitedAdmin
  nameWithType: AdminRole.LimitedAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.LimitedAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.IsMemberOnly*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.IsMemberOnly
  name: IsMemberOnly
  nameWithType: AdminRole.IsMemberOnly
  fullName: Dropbox.Api.TeamLog.AdminRole.IsMemberOnly
- uid: Dropbox.Api.TeamLog.AdminRole.AsMemberOnly*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.AsMemberOnly
  name: AsMemberOnly
  nameWithType: AdminRole.AsMemberOnly
  fullName: Dropbox.Api.TeamLog.AdminRole.AsMemberOnly
- uid: Dropbox.Api.TeamLog.AdminRole.MemberOnly
  commentId: T:Dropbox.Api.TeamLog.AdminRole.MemberOnly
  parent: Dropbox.Api.TeamLog
  name: AdminRole.MemberOnly
  nameWithType: AdminRole.MemberOnly
  fullName: Dropbox.Api.TeamLog.AdminRole.MemberOnly
- uid: Dropbox.Api.TeamLog.AdminRole.IsReportingAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.IsReportingAdmin
  name: IsReportingAdmin
  nameWithType: AdminRole.IsReportingAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.IsReportingAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.AsReportingAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.AsReportingAdmin
  name: AsReportingAdmin
  nameWithType: AdminRole.AsReportingAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.AsReportingAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.ReportingAdmin
  commentId: T:Dropbox.Api.TeamLog.AdminRole.ReportingAdmin
  parent: Dropbox.Api.TeamLog
  name: AdminRole.ReportingAdmin
  nameWithType: AdminRole.ReportingAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.ReportingAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.IsSecurityAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.IsSecurityAdmin
  name: IsSecurityAdmin
  nameWithType: AdminRole.IsSecurityAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.IsSecurityAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.AsSecurityAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.AsSecurityAdmin
  name: AsSecurityAdmin
  nameWithType: AdminRole.AsSecurityAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.AsSecurityAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.SecurityAdmin
  commentId: T:Dropbox.Api.TeamLog.AdminRole.SecurityAdmin
  parent: Dropbox.Api.TeamLog
  name: AdminRole.SecurityAdmin
  nameWithType: AdminRole.SecurityAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.SecurityAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.IsSupportAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.IsSupportAdmin
  name: IsSupportAdmin
  nameWithType: AdminRole.IsSupportAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.IsSupportAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.AsSupportAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.AsSupportAdmin
  name: AsSupportAdmin
  nameWithType: AdminRole.AsSupportAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.AsSupportAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.SupportAdmin
  commentId: T:Dropbox.Api.TeamLog.AdminRole.SupportAdmin
  parent: Dropbox.Api.TeamLog
  name: AdminRole.SupportAdmin
  nameWithType: AdminRole.SupportAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.SupportAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.IsTeamAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.IsTeamAdmin
  name: IsTeamAdmin
  nameWithType: AdminRole.IsTeamAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.IsTeamAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.AsTeamAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.AsTeamAdmin
  name: AsTeamAdmin
  nameWithType: AdminRole.AsTeamAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.AsTeamAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.TeamAdmin
  commentId: T:Dropbox.Api.TeamLog.AdminRole.TeamAdmin
  parent: Dropbox.Api.TeamLog
  name: AdminRole.TeamAdmin
  nameWithType: AdminRole.TeamAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.TeamAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.IsUserManagementAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.IsUserManagementAdmin
  name: IsUserManagementAdmin
  nameWithType: AdminRole.IsUserManagementAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.IsUserManagementAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.AsUserManagementAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.AsUserManagementAdmin
  name: AsUserManagementAdmin
  nameWithType: AdminRole.AsUserManagementAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.AsUserManagementAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.UserManagementAdmin
  commentId: T:Dropbox.Api.TeamLog.AdminRole.UserManagementAdmin
  parent: Dropbox.Api.TeamLog
  name: AdminRole.UserManagementAdmin
  nameWithType: AdminRole.UserManagementAdmin
  fullName: Dropbox.Api.TeamLog.AdminRole.UserManagementAdmin
- uid: Dropbox.Api.TeamLog.AdminRole.IsOther*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.IsOther
  name: IsOther
  nameWithType: AdminRole.IsOther
  fullName: Dropbox.Api.TeamLog.AdminRole.IsOther
- uid: Dropbox.Api.TeamLog.AdminRole.AsOther*
  commentId: Overload:Dropbox.Api.TeamLog.AdminRole.AsOther
  name: AsOther
  nameWithType: AdminRole.AsOther
  fullName: Dropbox.Api.TeamLog.AdminRole.AsOther
- uid: Dropbox.Api.TeamLog.AdminRole.Other
  commentId: T:Dropbox.Api.TeamLog.AdminRole.Other
  parent: Dropbox.Api.TeamLog
  name: AdminRole.Other
  nameWithType: AdminRole.Other
  fullName: Dropbox.Api.TeamLog.AdminRole.Other
shouldSkipMarkup: true
