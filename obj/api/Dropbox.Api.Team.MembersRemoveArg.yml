### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Team.MembersRemoveArg
  commentId: T:Dropbox.Api.Team.MembersRemoveArg
  id: MembersRemoveArg
  parent: Dropbox.Api.Team
  children:
  - Dropbox.Api.Team.MembersRemoveArg.#ctor(Dropbox.Api.Team.UserSelectorArg,System.Boolean,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,System.Boolean,System.Boolean)
  - Dropbox.Api.Team.MembersRemoveArg.KeepAccount
  - Dropbox.Api.Team.MembersRemoveArg.RetainTeamShares
  - Dropbox.Api.Team.MembersRemoveArg.TransferAdminId
  - Dropbox.Api.Team.MembersRemoveArg.TransferDestId
  langs:
  - csharp
  - vb
  name: MembersRemoveArg
  nameWithType: MembersRemoveArg
  fullName: Dropbox.Api.Team.MembersRemoveArg
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/MembersRemoveArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersRemoveArg
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/MembersRemoveArg.cs
    startLine: 16
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>The members remove arg object</p>\n"
  example: []
  syntax:
    content: 'public class MembersRemoveArg : MembersDeactivateArg'
    content.vb: >-
      Public Class MembersRemoveArg
          Inherits MembersDeactivateArg
  inheritance:
  - System.Object
  - Dropbox.Api.Team.MembersDeactivateBaseArg
  - Dropbox.Api.Team.MembersDeactivateArg
  inheritedMembers:
  - Dropbox.Api.Team.MembersDeactivateArg.WipeData
  - Dropbox.Api.Team.MembersDeactivateBaseArg.User
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Team.MembersRemoveArg.#ctor(Dropbox.Api.Team.UserSelectorArg,System.Boolean,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,System.Boolean,System.Boolean)
  commentId: M:Dropbox.Api.Team.MembersRemoveArg.#ctor(Dropbox.Api.Team.UserSelectorArg,System.Boolean,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,System.Boolean,System.Boolean)
  id: '#ctor(Dropbox.Api.Team.UserSelectorArg,System.Boolean,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,System.Boolean,System.Boolean)'
  parent: Dropbox.Api.Team.MembersRemoveArg
  langs:
  - csharp
  - vb
  name: MembersRemoveArg(UserSelectorArg, Boolean, UserSelectorArg, UserSelectorArg, Boolean, Boolean)
  nameWithType: MembersRemoveArg.MembersRemoveArg(UserSelectorArg, Boolean, UserSelectorArg, UserSelectorArg, Boolean, Boolean)
  fullName: Dropbox.Api.Team.MembersRemoveArg.MembersRemoveArg(Dropbox.Api.Team.UserSelectorArg, System.Boolean, Dropbox.Api.Team.UserSelectorArg, Dropbox.Api.Team.UserSelectorArg, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/MembersRemoveArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/MembersRemoveArg.cs
    startLine: 54
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Team.MembersRemoveArg\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public MembersRemoveArg(UserSelectorArg user, bool wipeData = true, UserSelectorArg transferDestId = null, UserSelectorArg transferAdminId = null, bool keepAccount = false, bool retainTeamShares = false)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        Identity of user to remove/suspend/have their files

        moved.
    - id: wipeData
      type: System.Boolean
      description: >-
        If provided, controls if the user&apos;s data will be deleted on

        their linked devices.
    - id: transferDestId
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        If provided, files from the deleted member account

        will be transferred to this user.
    - id: transferAdminId
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        If provided, errors during the transfer process will

        be sent via email to this user. If the transfer_dest_id argument was provided, then

        this argument must be provided as well.
    - id: keepAccount
      type: System.Boolean
      description: >-
        Downgrade the member to a Basic account. The user will

        retain the email address associated with their Dropbox  account and data in their

        account that is not restricted to team members. In order to keep the account the

        argument <code data-dev-comment-type="paramref" class="paramref">wipeData</code> should be set to <code>false</code>.
    - id: retainTeamShares
      type: System.Boolean
      description: >-
        If provided, allows removed users to keep access to

        Dropbox folders (not Dropbox Paper folders) already explicitly shared with them

        (not via a group) when they are downgraded to a Basic account. Users will not

        retain access to folders that do not allow external sharing. In order to keep the

        sharing relationships, the arguments <code data-dev-comment-type="paramref" class="paramref">wipeData</code> should be set to

        <code>false</code> and <code data-dev-comment-type="paramref" class="paramref">keepAccount</code> should be set to

        <code>true</code>.
    content.vb: Public Sub New(user As UserSelectorArg, wipeData As Boolean = True, transferDestId As UserSelectorArg = Nothing, transferAdminId As UserSelectorArg = Nothing, keepAccount As Boolean = False, retainTeamShares As Boolean = False)
  overload: Dropbox.Api.Team.MembersRemoveArg.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.MembersRemoveArg.TransferDestId
  commentId: P:Dropbox.Api.Team.MembersRemoveArg.TransferDestId
  id: TransferDestId
  parent: Dropbox.Api.Team.MembersRemoveArg
  langs:
  - csharp
  - vb
  name: TransferDestId
  nameWithType: MembersRemoveArg.TransferDestId
  fullName: Dropbox.Api.Team.MembersRemoveArg.TransferDestId
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/MembersRemoveArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TransferDestId
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/MembersRemoveArg.cs
    startLine: 85
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>If provided, files from the deleted member account will be transferred to\nthis user.</p>\n"
  example: []
  syntax:
    content: public UserSelectorArg TransferDestId { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Team.UserSelectorArg
    content.vb: Public Property TransferDestId As UserSelectorArg
  overload: Dropbox.Api.Team.MembersRemoveArg.TransferDestId*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Team.MembersRemoveArg.TransferAdminId
  commentId: P:Dropbox.Api.Team.MembersRemoveArg.TransferAdminId
  id: TransferAdminId
  parent: Dropbox.Api.Team.MembersRemoveArg
  langs:
  - csharp
  - vb
  name: TransferAdminId
  nameWithType: MembersRemoveArg.TransferAdminId
  fullName: Dropbox.Api.Team.MembersRemoveArg.TransferAdminId
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/MembersRemoveArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TransferAdminId
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/MembersRemoveArg.cs
    startLine: 92
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>If provided, errors during the transfer process will be sent via email to\nthis user. If the transfer_dest_id argument was provided, then this argument must\nbe provided as well.</p>\n"
  example: []
  syntax:
    content: public UserSelectorArg TransferAdminId { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Team.UserSelectorArg
    content.vb: Public Property TransferAdminId As UserSelectorArg
  overload: Dropbox.Api.Team.MembersRemoveArg.TransferAdminId*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Team.MembersRemoveArg.KeepAccount
  commentId: P:Dropbox.Api.Team.MembersRemoveArg.KeepAccount
  id: KeepAccount
  parent: Dropbox.Api.Team.MembersRemoveArg
  langs:
  - csharp
  - vb
  name: KeepAccount
  nameWithType: MembersRemoveArg.KeepAccount
  fullName: Dropbox.Api.Team.MembersRemoveArg.KeepAccount
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/MembersRemoveArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: KeepAccount
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/MembersRemoveArg.cs
    startLine: 100
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Downgrade the member to a Basic account. The user will retain the email\naddress associated with their Dropbox  account and data in their account that is\nnot restricted to team members. In order to keep the account the argument <see cref=\"!:WipeData\"></see> should be set to <code>false</code>.</p>\n"
  example: []
  syntax:
    content: public bool KeepAccount { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property KeepAccount As Boolean
  overload: Dropbox.Api.Team.MembersRemoveArg.KeepAccount*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Team.MembersRemoveArg.RetainTeamShares
  commentId: P:Dropbox.Api.Team.MembersRemoveArg.RetainTeamShares
  id: RetainTeamShares
  parent: Dropbox.Api.Team.MembersRemoveArg
  langs:
  - csharp
  - vb
  name: RetainTeamShares
  nameWithType: MembersRemoveArg.RetainTeamShares
  fullName: Dropbox.Api.Team.MembersRemoveArg.RetainTeamShares
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/MembersRemoveArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: RetainTeamShares
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/MembersRemoveArg.cs
    startLine: 110
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>If provided, allows removed users to keep access to Dropbox folders (not\nDropbox Paper folders) already explicitly shared with them (not via a group) when\nthey are downgraded to a Basic account. Users will not retain access to folders\nthat do not allow external sharing. In order to keep the sharing relationships, the\narguments <see cref=\"!:WipeData\"></see> should be set to <code>false</code> and <xref href=\"Dropbox.Api.Team.MembersRemoveArg.KeepAccount\" data-throw-if-not-resolved=\"false\"></xref> should be set to <code>true</code>.</p>\n"
  example: []
  syntax:
    content: public bool RetainTeamShares { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RetainTeamShares As Boolean
  overload: Dropbox.Api.Team.MembersRemoveArg.RetainTeamShares*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Team
  commentId: N:Dropbox.Api.Team
  name: Dropbox.Api.Team
  nameWithType: Dropbox.Api.Team
  fullName: Dropbox.Api.Team
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Team.MembersDeactivateBaseArg
  commentId: T:Dropbox.Api.Team.MembersDeactivateBaseArg
  parent: Dropbox.Api.Team
  name: MembersDeactivateBaseArg
  nameWithType: MembersDeactivateBaseArg
  fullName: Dropbox.Api.Team.MembersDeactivateBaseArg
- uid: Dropbox.Api.Team.MembersDeactivateArg
  commentId: T:Dropbox.Api.Team.MembersDeactivateArg
  parent: Dropbox.Api.Team
  name: MembersDeactivateArg
  nameWithType: MembersDeactivateArg
  fullName: Dropbox.Api.Team.MembersDeactivateArg
- uid: Dropbox.Api.Team.MembersDeactivateArg.WipeData
  commentId: P:Dropbox.Api.Team.MembersDeactivateArg.WipeData
  parent: Dropbox.Api.Team.MembersDeactivateArg
  name: WipeData
  nameWithType: MembersDeactivateArg.WipeData
  fullName: Dropbox.Api.Team.MembersDeactivateArg.WipeData
- uid: Dropbox.Api.Team.MembersDeactivateBaseArg.User
  commentId: P:Dropbox.Api.Team.MembersDeactivateBaseArg.User
  parent: Dropbox.Api.Team.MembersDeactivateBaseArg
  name: User
  nameWithType: MembersDeactivateBaseArg.User
  fullName: Dropbox.Api.Team.MembersDeactivateBaseArg.User
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Team.MembersRemoveArg
  commentId: T:Dropbox.Api.Team.MembersRemoveArg
  parent: Dropbox.Api.Team
  name: MembersRemoveArg
  nameWithType: MembersRemoveArg
  fullName: Dropbox.Api.Team.MembersRemoveArg
- uid: Dropbox.Api.Team.MembersRemoveArg.#ctor*
  commentId: Overload:Dropbox.Api.Team.MembersRemoveArg.#ctor
  name: MembersRemoveArg
  nameWithType: MembersRemoveArg.MembersRemoveArg
  fullName: Dropbox.Api.Team.MembersRemoveArg.MembersRemoveArg
- uid: Dropbox.Api.Team.UserSelectorArg
  commentId: T:Dropbox.Api.Team.UserSelectorArg
  parent: Dropbox.Api.Team
  name: UserSelectorArg
  nameWithType: UserSelectorArg
  fullName: Dropbox.Api.Team.UserSelectorArg
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Team.MembersRemoveArg.TransferDestId*
  commentId: Overload:Dropbox.Api.Team.MembersRemoveArg.TransferDestId
  name: TransferDestId
  nameWithType: MembersRemoveArg.TransferDestId
  fullName: Dropbox.Api.Team.MembersRemoveArg.TransferDestId
- uid: Dropbox.Api.Team.MembersRemoveArg.TransferAdminId*
  commentId: Overload:Dropbox.Api.Team.MembersRemoveArg.TransferAdminId
  name: TransferAdminId
  nameWithType: MembersRemoveArg.TransferAdminId
  fullName: Dropbox.Api.Team.MembersRemoveArg.TransferAdminId
- uid: Dropbox.Api.Team.MembersRemoveArg.KeepAccount*
  commentId: Overload:Dropbox.Api.Team.MembersRemoveArg.KeepAccount
  name: KeepAccount
  nameWithType: MembersRemoveArg.KeepAccount
  fullName: Dropbox.Api.Team.MembersRemoveArg.KeepAccount
- uid: Dropbox.Api.Team.MembersRemoveArg.KeepAccount
  commentId: P:Dropbox.Api.Team.MembersRemoveArg.KeepAccount
  isExternal: true
- uid: Dropbox.Api.Team.MembersRemoveArg.RetainTeamShares*
  commentId: Overload:Dropbox.Api.Team.MembersRemoveArg.RetainTeamShares
  name: RetainTeamShares
  nameWithType: MembersRemoveArg.RetainTeamShares
  fullName: Dropbox.Api.Team.MembersRemoveArg.RetainTeamShares
