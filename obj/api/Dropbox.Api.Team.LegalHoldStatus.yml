### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Team.LegalHoldStatus
  commentId: T:Dropbox.Api.Team.LegalHoldStatus
  id: LegalHoldStatus
  parent: Dropbox.Api.Team
  children:
  - Dropbox.Api.Team.LegalHoldStatus.#ctor
  - Dropbox.Api.Team.LegalHoldStatus.AsActivating
  - Dropbox.Api.Team.LegalHoldStatus.AsActive
  - Dropbox.Api.Team.LegalHoldStatus.AsExporting
  - Dropbox.Api.Team.LegalHoldStatus.AsOther
  - Dropbox.Api.Team.LegalHoldStatus.AsReleased
  - Dropbox.Api.Team.LegalHoldStatus.AsReleasing
  - Dropbox.Api.Team.LegalHoldStatus.AsUpdating
  - Dropbox.Api.Team.LegalHoldStatus.IsActivating
  - Dropbox.Api.Team.LegalHoldStatus.IsActive
  - Dropbox.Api.Team.LegalHoldStatus.IsExporting
  - Dropbox.Api.Team.LegalHoldStatus.IsOther
  - Dropbox.Api.Team.LegalHoldStatus.IsReleased
  - Dropbox.Api.Team.LegalHoldStatus.IsReleasing
  - Dropbox.Api.Team.LegalHoldStatus.IsUpdating
  langs:
  - csharp
  - vb
  name: LegalHoldStatus
  nameWithType: LegalHoldStatus
  fullName: Dropbox.Api.Team.LegalHoldStatus
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LegalHoldStatus
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>The legal hold status object</p>\n"
  example: []
  syntax:
    content: public class LegalHoldStatus
    content.vb: Public Class LegalHoldStatus
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Team.LegalHoldStatus.Activating
  - Dropbox.Api.Team.LegalHoldStatus.Active
  - Dropbox.Api.Team.LegalHoldStatus.Exporting
  - Dropbox.Api.Team.LegalHoldStatus.Other
  - Dropbox.Api.Team.LegalHoldStatus.Released
  - Dropbox.Api.Team.LegalHoldStatus.Releasing
  - Dropbox.Api.Team.LegalHoldStatus.Updating
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Team.LegalHoldStatus.#ctor
  commentId: M:Dropbox.Api.Team.LegalHoldStatus.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Team.LegalHoldStatus
  langs:
  - csharp
  - vb
  name: LegalHoldStatus()
  nameWithType: LegalHoldStatus.LegalHoldStatus()
  fullName: Dropbox.Api.Team.LegalHoldStatus.LegalHoldStatus()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Team.LegalHoldStatus\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public LegalHoldStatus()
    content.vb: Public Sub New
  overload: Dropbox.Api.Team.LegalHoldStatus.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.LegalHoldStatus.IsActive
  commentId: P:Dropbox.Api.Team.LegalHoldStatus.IsActive
  id: IsActive
  parent: Dropbox.Api.Team.LegalHoldStatus
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: LegalHoldStatus.IsActive
  fullName: Dropbox.Api.Team.LegalHoldStatus.IsActive
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsActive
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is Active</p>\n"
  example: []
  syntax:
    content: public bool IsActive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsActive As Boolean
  overload: Dropbox.Api.Team.LegalHoldStatus.IsActive*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldStatus.AsActive
  commentId: P:Dropbox.Api.Team.LegalHoldStatus.AsActive
  id: AsActive
  parent: Dropbox.Api.Team.LegalHoldStatus
  langs:
  - csharp
  - vb
  name: AsActive
  nameWithType: LegalHoldStatus.AsActive
  fullName: Dropbox.Api.Team.LegalHoldStatus.AsActive
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsActive
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
    startLine: 51
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a Active, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldStatus.Active AsActive { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldStatus.Active
    content.vb: Public ReadOnly Property AsActive As LegalHoldStatus.Active
  overload: Dropbox.Api.Team.LegalHoldStatus.AsActive*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldStatus.IsReleased
  commentId: P:Dropbox.Api.Team.LegalHoldStatus.IsReleased
  id: IsReleased
  parent: Dropbox.Api.Team.LegalHoldStatus
  langs:
  - csharp
  - vb
  name: IsReleased
  nameWithType: LegalHoldStatus.IsReleased
  fullName: Dropbox.Api.Team.LegalHoldStatus.IsReleased
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsReleased
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is Released</p>\n"
  example: []
  syntax:
    content: public bool IsReleased { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReleased As Boolean
  overload: Dropbox.Api.Team.LegalHoldStatus.IsReleased*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldStatus.AsReleased
  commentId: P:Dropbox.Api.Team.LegalHoldStatus.AsReleased
  id: AsReleased
  parent: Dropbox.Api.Team.LegalHoldStatus
  langs:
  - csharp
  - vb
  name: AsReleased
  nameWithType: LegalHoldStatus.AsReleased
  fullName: Dropbox.Api.Team.LegalHoldStatus.AsReleased
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsReleased
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a Released, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldStatus.Released AsReleased { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldStatus.Released
    content.vb: Public ReadOnly Property AsReleased As LegalHoldStatus.Released
  overload: Dropbox.Api.Team.LegalHoldStatus.AsReleased*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldStatus.IsActivating
  commentId: P:Dropbox.Api.Team.LegalHoldStatus.IsActivating
  id: IsActivating
  parent: Dropbox.Api.Team.LegalHoldStatus
  langs:
  - csharp
  - vb
  name: IsActivating
  nameWithType: LegalHoldStatus.IsActivating
  fullName: Dropbox.Api.Team.LegalHoldStatus.IsActivating
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsActivating
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is Activating</p>\n"
  example: []
  syntax:
    content: public bool IsActivating { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsActivating As Boolean
  overload: Dropbox.Api.Team.LegalHoldStatus.IsActivating*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldStatus.AsActivating
  commentId: P:Dropbox.Api.Team.LegalHoldStatus.AsActivating
  id: AsActivating
  parent: Dropbox.Api.Team.LegalHoldStatus
  langs:
  - csharp
  - vb
  name: AsActivating
  nameWithType: LegalHoldStatus.AsActivating
  fullName: Dropbox.Api.Team.LegalHoldStatus.AsActivating
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsActivating
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
    startLine: 95
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a Activating, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldStatus.Activating AsActivating { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldStatus.Activating
    content.vb: Public ReadOnly Property AsActivating As LegalHoldStatus.Activating
  overload: Dropbox.Api.Team.LegalHoldStatus.AsActivating*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldStatus.IsUpdating
  commentId: P:Dropbox.Api.Team.LegalHoldStatus.IsUpdating
  id: IsUpdating
  parent: Dropbox.Api.Team.LegalHoldStatus
  langs:
  - csharp
  - vb
  name: IsUpdating
  nameWithType: LegalHoldStatus.IsUpdating
  fullName: Dropbox.Api.Team.LegalHoldStatus.IsUpdating
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsUpdating
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
    startLine: 106
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is Updating</p>\n"
  example: []
  syntax:
    content: public bool IsUpdating { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUpdating As Boolean
  overload: Dropbox.Api.Team.LegalHoldStatus.IsUpdating*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldStatus.AsUpdating
  commentId: P:Dropbox.Api.Team.LegalHoldStatus.AsUpdating
  id: AsUpdating
  parent: Dropbox.Api.Team.LegalHoldStatus
  langs:
  - csharp
  - vb
  name: AsUpdating
  nameWithType: LegalHoldStatus.AsUpdating
  fullName: Dropbox.Api.Team.LegalHoldStatus.AsUpdating
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsUpdating
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
    startLine: 117
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a Updating, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldStatus.Updating AsUpdating { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldStatus.Updating
    content.vb: Public ReadOnly Property AsUpdating As LegalHoldStatus.Updating
  overload: Dropbox.Api.Team.LegalHoldStatus.AsUpdating*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldStatus.IsExporting
  commentId: P:Dropbox.Api.Team.LegalHoldStatus.IsExporting
  id: IsExporting
  parent: Dropbox.Api.Team.LegalHoldStatus
  langs:
  - csharp
  - vb
  name: IsExporting
  nameWithType: LegalHoldStatus.IsExporting
  fullName: Dropbox.Api.Team.LegalHoldStatus.IsExporting
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsExporting
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
    startLine: 128
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is Exporting</p>\n"
  example: []
  syntax:
    content: public bool IsExporting { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsExporting As Boolean
  overload: Dropbox.Api.Team.LegalHoldStatus.IsExporting*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldStatus.AsExporting
  commentId: P:Dropbox.Api.Team.LegalHoldStatus.AsExporting
  id: AsExporting
  parent: Dropbox.Api.Team.LegalHoldStatus
  langs:
  - csharp
  - vb
  name: AsExporting
  nameWithType: LegalHoldStatus.AsExporting
  fullName: Dropbox.Api.Team.LegalHoldStatus.AsExporting
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsExporting
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
    startLine: 139
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a Exporting, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldStatus.Exporting AsExporting { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldStatus.Exporting
    content.vb: Public ReadOnly Property AsExporting As LegalHoldStatus.Exporting
  overload: Dropbox.Api.Team.LegalHoldStatus.AsExporting*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldStatus.IsReleasing
  commentId: P:Dropbox.Api.Team.LegalHoldStatus.IsReleasing
  id: IsReleasing
  parent: Dropbox.Api.Team.LegalHoldStatus
  langs:
  - csharp
  - vb
  name: IsReleasing
  nameWithType: LegalHoldStatus.IsReleasing
  fullName: Dropbox.Api.Team.LegalHoldStatus.IsReleasing
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsReleasing
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
    startLine: 150
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is Releasing</p>\n"
  example: []
  syntax:
    content: public bool IsReleasing { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReleasing As Boolean
  overload: Dropbox.Api.Team.LegalHoldStatus.IsReleasing*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldStatus.AsReleasing
  commentId: P:Dropbox.Api.Team.LegalHoldStatus.AsReleasing
  id: AsReleasing
  parent: Dropbox.Api.Team.LegalHoldStatus
  langs:
  - csharp
  - vb
  name: AsReleasing
  nameWithType: LegalHoldStatus.AsReleasing
  fullName: Dropbox.Api.Team.LegalHoldStatus.AsReleasing
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsReleasing
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
    startLine: 161
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a Releasing, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldStatus.Releasing AsReleasing { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldStatus.Releasing
    content.vb: Public ReadOnly Property AsReleasing As LegalHoldStatus.Releasing
  overload: Dropbox.Api.Team.LegalHoldStatus.AsReleasing*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldStatus.IsOther
  commentId: P:Dropbox.Api.Team.LegalHoldStatus.IsOther
  id: IsOther
  parent: Dropbox.Api.Team.LegalHoldStatus
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: LegalHoldStatus.IsOther
  fullName: Dropbox.Api.Team.LegalHoldStatus.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
    startLine: 172
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.Team.LegalHoldStatus.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldStatus.AsOther
  commentId: P:Dropbox.Api.Team.LegalHoldStatus.AsOther
  id: AsOther
  parent: Dropbox.Api.Team.LegalHoldStatus
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: LegalHoldStatus.AsOther
  fullName: Dropbox.Api.Team.LegalHoldStatus.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldStatus.cs
    startLine: 183
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldStatus.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldStatus.Other
    content.vb: Public ReadOnly Property AsOther As LegalHoldStatus.Other
  overload: Dropbox.Api.Team.LegalHoldStatus.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Team
  commentId: N:Dropbox.Api.Team
  name: Dropbox.Api.Team
  nameWithType: Dropbox.Api.Team
  fullName: Dropbox.Api.Team
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Team.LegalHoldStatus
  commentId: T:Dropbox.Api.Team.LegalHoldStatus
  parent: Dropbox.Api.Team
  name: LegalHoldStatus
  nameWithType: LegalHoldStatus
  fullName: Dropbox.Api.Team.LegalHoldStatus
- uid: Dropbox.Api.Team.LegalHoldStatus.#ctor*
  commentId: Overload:Dropbox.Api.Team.LegalHoldStatus.#ctor
  name: LegalHoldStatus
  nameWithType: LegalHoldStatus.LegalHoldStatus
  fullName: Dropbox.Api.Team.LegalHoldStatus.LegalHoldStatus
- uid: Dropbox.Api.Team.LegalHoldStatus.IsActive*
  commentId: Overload:Dropbox.Api.Team.LegalHoldStatus.IsActive
  name: IsActive
  nameWithType: LegalHoldStatus.IsActive
  fullName: Dropbox.Api.Team.LegalHoldStatus.IsActive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Team.LegalHoldStatus.AsActive*
  commentId: Overload:Dropbox.Api.Team.LegalHoldStatus.AsActive
  name: AsActive
  nameWithType: LegalHoldStatus.AsActive
  fullName: Dropbox.Api.Team.LegalHoldStatus.AsActive
- uid: Dropbox.Api.Team.LegalHoldStatus.Active
  commentId: T:Dropbox.Api.Team.LegalHoldStatus.Active
  parent: Dropbox.Api.Team
  name: LegalHoldStatus.Active
  nameWithType: LegalHoldStatus.Active
  fullName: Dropbox.Api.Team.LegalHoldStatus.Active
- uid: Dropbox.Api.Team.LegalHoldStatus.IsReleased*
  commentId: Overload:Dropbox.Api.Team.LegalHoldStatus.IsReleased
  name: IsReleased
  nameWithType: LegalHoldStatus.IsReleased
  fullName: Dropbox.Api.Team.LegalHoldStatus.IsReleased
- uid: Dropbox.Api.Team.LegalHoldStatus.AsReleased*
  commentId: Overload:Dropbox.Api.Team.LegalHoldStatus.AsReleased
  name: AsReleased
  nameWithType: LegalHoldStatus.AsReleased
  fullName: Dropbox.Api.Team.LegalHoldStatus.AsReleased
- uid: Dropbox.Api.Team.LegalHoldStatus.Released
  commentId: T:Dropbox.Api.Team.LegalHoldStatus.Released
  parent: Dropbox.Api.Team
  name: LegalHoldStatus.Released
  nameWithType: LegalHoldStatus.Released
  fullName: Dropbox.Api.Team.LegalHoldStatus.Released
- uid: Dropbox.Api.Team.LegalHoldStatus.IsActivating*
  commentId: Overload:Dropbox.Api.Team.LegalHoldStatus.IsActivating
  name: IsActivating
  nameWithType: LegalHoldStatus.IsActivating
  fullName: Dropbox.Api.Team.LegalHoldStatus.IsActivating
- uid: Dropbox.Api.Team.LegalHoldStatus.AsActivating*
  commentId: Overload:Dropbox.Api.Team.LegalHoldStatus.AsActivating
  name: AsActivating
  nameWithType: LegalHoldStatus.AsActivating
  fullName: Dropbox.Api.Team.LegalHoldStatus.AsActivating
- uid: Dropbox.Api.Team.LegalHoldStatus.Activating
  commentId: T:Dropbox.Api.Team.LegalHoldStatus.Activating
  parent: Dropbox.Api.Team
  name: LegalHoldStatus.Activating
  nameWithType: LegalHoldStatus.Activating
  fullName: Dropbox.Api.Team.LegalHoldStatus.Activating
- uid: Dropbox.Api.Team.LegalHoldStatus.IsUpdating*
  commentId: Overload:Dropbox.Api.Team.LegalHoldStatus.IsUpdating
  name: IsUpdating
  nameWithType: LegalHoldStatus.IsUpdating
  fullName: Dropbox.Api.Team.LegalHoldStatus.IsUpdating
- uid: Dropbox.Api.Team.LegalHoldStatus.AsUpdating*
  commentId: Overload:Dropbox.Api.Team.LegalHoldStatus.AsUpdating
  name: AsUpdating
  nameWithType: LegalHoldStatus.AsUpdating
  fullName: Dropbox.Api.Team.LegalHoldStatus.AsUpdating
- uid: Dropbox.Api.Team.LegalHoldStatus.Updating
  commentId: T:Dropbox.Api.Team.LegalHoldStatus.Updating
  parent: Dropbox.Api.Team
  name: LegalHoldStatus.Updating
  nameWithType: LegalHoldStatus.Updating
  fullName: Dropbox.Api.Team.LegalHoldStatus.Updating
- uid: Dropbox.Api.Team.LegalHoldStatus.IsExporting*
  commentId: Overload:Dropbox.Api.Team.LegalHoldStatus.IsExporting
  name: IsExporting
  nameWithType: LegalHoldStatus.IsExporting
  fullName: Dropbox.Api.Team.LegalHoldStatus.IsExporting
- uid: Dropbox.Api.Team.LegalHoldStatus.AsExporting*
  commentId: Overload:Dropbox.Api.Team.LegalHoldStatus.AsExporting
  name: AsExporting
  nameWithType: LegalHoldStatus.AsExporting
  fullName: Dropbox.Api.Team.LegalHoldStatus.AsExporting
- uid: Dropbox.Api.Team.LegalHoldStatus.Exporting
  commentId: T:Dropbox.Api.Team.LegalHoldStatus.Exporting
  parent: Dropbox.Api.Team
  name: LegalHoldStatus.Exporting
  nameWithType: LegalHoldStatus.Exporting
  fullName: Dropbox.Api.Team.LegalHoldStatus.Exporting
- uid: Dropbox.Api.Team.LegalHoldStatus.IsReleasing*
  commentId: Overload:Dropbox.Api.Team.LegalHoldStatus.IsReleasing
  name: IsReleasing
  nameWithType: LegalHoldStatus.IsReleasing
  fullName: Dropbox.Api.Team.LegalHoldStatus.IsReleasing
- uid: Dropbox.Api.Team.LegalHoldStatus.AsReleasing*
  commentId: Overload:Dropbox.Api.Team.LegalHoldStatus.AsReleasing
  name: AsReleasing
  nameWithType: LegalHoldStatus.AsReleasing
  fullName: Dropbox.Api.Team.LegalHoldStatus.AsReleasing
- uid: Dropbox.Api.Team.LegalHoldStatus.Releasing
  commentId: T:Dropbox.Api.Team.LegalHoldStatus.Releasing
  parent: Dropbox.Api.Team
  name: LegalHoldStatus.Releasing
  nameWithType: LegalHoldStatus.Releasing
  fullName: Dropbox.Api.Team.LegalHoldStatus.Releasing
- uid: Dropbox.Api.Team.LegalHoldStatus.IsOther*
  commentId: Overload:Dropbox.Api.Team.LegalHoldStatus.IsOther
  name: IsOther
  nameWithType: LegalHoldStatus.IsOther
  fullName: Dropbox.Api.Team.LegalHoldStatus.IsOther
- uid: Dropbox.Api.Team.LegalHoldStatus.AsOther*
  commentId: Overload:Dropbox.Api.Team.LegalHoldStatus.AsOther
  name: AsOther
  nameWithType: LegalHoldStatus.AsOther
  fullName: Dropbox.Api.Team.LegalHoldStatus.AsOther
- uid: Dropbox.Api.Team.LegalHoldStatus.Other
  commentId: T:Dropbox.Api.Team.LegalHoldStatus.Other
  parent: Dropbox.Api.Team
  name: LegalHoldStatus.Other
  nameWithType: LegalHoldStatus.Other
  fullName: Dropbox.Api.Team.LegalHoldStatus.Other
