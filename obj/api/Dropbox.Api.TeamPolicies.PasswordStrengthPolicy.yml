### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy
  commentId: T:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy
  id: PasswordStrengthPolicy
  parent: Dropbox.Api.TeamPolicies
  children:
  - Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.#ctor
  - Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsMinimalRequirements
  - Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsModeratePassword
  - Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsOther
  - Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsStrongPassword
  - Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsMinimalRequirements
  - Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsModeratePassword
  - Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsOther
  - Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsStrongPassword
  langs:
  - csharp
  - vb
  name: PasswordStrengthPolicy
  nameWithType: PasswordStrengthPolicy
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/PasswordStrengthPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: PasswordStrengthPolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/PasswordStrengthPolicy.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamPolicies
  summary: "\n<p>The password strength policy object</p>\n"
  example: []
  syntax:
    content: public class PasswordStrengthPolicy
    content.vb: Public Class PasswordStrengthPolicy
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.MinimalRequirements
  - Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.ModeratePassword
  - Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.Other
  - Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.StrongPassword
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.#ctor
  commentId: M:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.#ctor
  id: '#ctor'
  parent: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy
  langs:
  - csharp
  - vb
  name: PasswordStrengthPolicy()
  nameWithType: PasswordStrengthPolicy.PasswordStrengthPolicy()
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.PasswordStrengthPolicy()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/PasswordStrengthPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/PasswordStrengthPolicy.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamPolicies
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamPolicies.PasswordStrengthPolicy\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public PasswordStrengthPolicy()
    content.vb: Public Sub New
  overload: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsMinimalRequirements
  commentId: P:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsMinimalRequirements
  id: IsMinimalRequirements
  parent: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy
  langs:
  - csharp
  - vb
  name: IsMinimalRequirements
  nameWithType: PasswordStrengthPolicy.IsMinimalRequirements
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsMinimalRequirements
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/PasswordStrengthPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsMinimalRequirements
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/PasswordStrengthPolicy.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamPolicies
  summary: "\n<p>Gets a value indicating whether this instance is MinimalRequirements</p>\n"
  example: []
  syntax:
    content: public bool IsMinimalRequirements { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMinimalRequirements As Boolean
  overload: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsMinimalRequirements*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsMinimalRequirements
  commentId: P:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsMinimalRequirements
  id: AsMinimalRequirements
  parent: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy
  langs:
  - csharp
  - vb
  name: AsMinimalRequirements
  nameWithType: PasswordStrengthPolicy.AsMinimalRequirements
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsMinimalRequirements
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/PasswordStrengthPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsMinimalRequirements
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/PasswordStrengthPolicy.cs
    startLine: 51
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamPolicies
  summary: "\n<p>Gets this instance as a MinimalRequirements, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PasswordStrengthPolicy.MinimalRequirements AsMinimalRequirements { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.MinimalRequirements
    content.vb: Public ReadOnly Property AsMinimalRequirements As PasswordStrengthPolicy.MinimalRequirements
  overload: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsMinimalRequirements*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsModeratePassword
  commentId: P:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsModeratePassword
  id: IsModeratePassword
  parent: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy
  langs:
  - csharp
  - vb
  name: IsModeratePassword
  nameWithType: PasswordStrengthPolicy.IsModeratePassword
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsModeratePassword
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/PasswordStrengthPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsModeratePassword
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/PasswordStrengthPolicy.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamPolicies
  summary: "\n<p>Gets a value indicating whether this instance is ModeratePassword</p>\n"
  example: []
  syntax:
    content: public bool IsModeratePassword { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsModeratePassword As Boolean
  overload: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsModeratePassword*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsModeratePassword
  commentId: P:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsModeratePassword
  id: AsModeratePassword
  parent: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy
  langs:
  - csharp
  - vb
  name: AsModeratePassword
  nameWithType: PasswordStrengthPolicy.AsModeratePassword
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsModeratePassword
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/PasswordStrengthPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsModeratePassword
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/PasswordStrengthPolicy.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamPolicies
  summary: "\n<p>Gets this instance as a ModeratePassword, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PasswordStrengthPolicy.ModeratePassword AsModeratePassword { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.ModeratePassword
    content.vb: Public ReadOnly Property AsModeratePassword As PasswordStrengthPolicy.ModeratePassword
  overload: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsModeratePassword*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsStrongPassword
  commentId: P:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsStrongPassword
  id: IsStrongPassword
  parent: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy
  langs:
  - csharp
  - vb
  name: IsStrongPassword
  nameWithType: PasswordStrengthPolicy.IsStrongPassword
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsStrongPassword
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/PasswordStrengthPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsStrongPassword
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/PasswordStrengthPolicy.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamPolicies
  summary: "\n<p>Gets a value indicating whether this instance is StrongPassword</p>\n"
  example: []
  syntax:
    content: public bool IsStrongPassword { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsStrongPassword As Boolean
  overload: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsStrongPassword*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsStrongPassword
  commentId: P:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsStrongPassword
  id: AsStrongPassword
  parent: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy
  langs:
  - csharp
  - vb
  name: AsStrongPassword
  nameWithType: PasswordStrengthPolicy.AsStrongPassword
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsStrongPassword
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/PasswordStrengthPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsStrongPassword
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/PasswordStrengthPolicy.cs
    startLine: 95
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamPolicies
  summary: "\n<p>Gets this instance as a StrongPassword, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PasswordStrengthPolicy.StrongPassword AsStrongPassword { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.StrongPassword
    content.vb: Public ReadOnly Property AsStrongPassword As PasswordStrengthPolicy.StrongPassword
  overload: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsStrongPassword*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsOther
  commentId: P:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsOther
  id: IsOther
  parent: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: PasswordStrengthPolicy.IsOther
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/PasswordStrengthPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/PasswordStrengthPolicy.cs
    startLine: 106
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamPolicies
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsOther
  commentId: P:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsOther
  id: AsOther
  parent: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: PasswordStrengthPolicy.AsOther
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/PasswordStrengthPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/PasswordStrengthPolicy.cs
    startLine: 117
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamPolicies
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PasswordStrengthPolicy.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.Other
    content.vb: Public ReadOnly Property AsOther As PasswordStrengthPolicy.Other
  overload: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.TeamPolicies
  commentId: N:Dropbox.Api.TeamPolicies
  name: Dropbox.Api.TeamPolicies
  nameWithType: Dropbox.Api.TeamPolicies
  fullName: Dropbox.Api.TeamPolicies
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy
  commentId: T:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy
  parent: Dropbox.Api.TeamPolicies
  name: PasswordStrengthPolicy
  nameWithType: PasswordStrengthPolicy
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.#ctor*
  commentId: Overload:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.#ctor
  name: PasswordStrengthPolicy
  nameWithType: PasswordStrengthPolicy.PasswordStrengthPolicy
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.PasswordStrengthPolicy
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsMinimalRequirements*
  commentId: Overload:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsMinimalRequirements
  name: IsMinimalRequirements
  nameWithType: PasswordStrengthPolicy.IsMinimalRequirements
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsMinimalRequirements
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsMinimalRequirements*
  commentId: Overload:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsMinimalRequirements
  name: AsMinimalRequirements
  nameWithType: PasswordStrengthPolicy.AsMinimalRequirements
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsMinimalRequirements
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.MinimalRequirements
  commentId: T:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.MinimalRequirements
  parent: Dropbox.Api.TeamPolicies
  name: PasswordStrengthPolicy.MinimalRequirements
  nameWithType: PasswordStrengthPolicy.MinimalRequirements
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.MinimalRequirements
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsModeratePassword*
  commentId: Overload:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsModeratePassword
  name: IsModeratePassword
  nameWithType: PasswordStrengthPolicy.IsModeratePassword
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsModeratePassword
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsModeratePassword*
  commentId: Overload:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsModeratePassword
  name: AsModeratePassword
  nameWithType: PasswordStrengthPolicy.AsModeratePassword
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsModeratePassword
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.ModeratePassword
  commentId: T:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.ModeratePassword
  parent: Dropbox.Api.TeamPolicies
  name: PasswordStrengthPolicy.ModeratePassword
  nameWithType: PasswordStrengthPolicy.ModeratePassword
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.ModeratePassword
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsStrongPassword*
  commentId: Overload:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsStrongPassword
  name: IsStrongPassword
  nameWithType: PasswordStrengthPolicy.IsStrongPassword
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsStrongPassword
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsStrongPassword*
  commentId: Overload:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsStrongPassword
  name: AsStrongPassword
  nameWithType: PasswordStrengthPolicy.AsStrongPassword
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsStrongPassword
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.StrongPassword
  commentId: T:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.StrongPassword
  parent: Dropbox.Api.TeamPolicies
  name: PasswordStrengthPolicy.StrongPassword
  nameWithType: PasswordStrengthPolicy.StrongPassword
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.StrongPassword
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsOther*
  commentId: Overload:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsOther
  name: IsOther
  nameWithType: PasswordStrengthPolicy.IsOther
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.IsOther
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsOther*
  commentId: Overload:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsOther
  name: AsOther
  nameWithType: PasswordStrengthPolicy.AsOther
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.AsOther
- uid: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.Other
  commentId: T:Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.Other
  parent: Dropbox.Api.TeamPolicies
  name: PasswordStrengthPolicy.Other
  nameWithType: PasswordStrengthPolicy.Other
  fullName: Dropbox.Api.TeamPolicies.PasswordStrengthPolicy.Other
