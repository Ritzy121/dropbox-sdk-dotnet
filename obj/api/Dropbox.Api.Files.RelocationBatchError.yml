### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.RelocationBatchError
  commentId: T:Dropbox.Api.Files.RelocationBatchError
  id: RelocationBatchError
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.RelocationBatchError.#ctor
  - Dropbox.Api.Files.RelocationBatchError.AsCantCopySharedFolder
  - Dropbox.Api.Files.RelocationBatchError.AsCantMoveFolderIntoItself
  - Dropbox.Api.Files.RelocationBatchError.AsCantMoveIntoFamily
  - Dropbox.Api.Files.RelocationBatchError.AsCantMoveIntoVault
  - Dropbox.Api.Files.RelocationBatchError.AsCantMoveSharedFolder
  - Dropbox.Api.Files.RelocationBatchError.AsCantNestSharedFolder
  - Dropbox.Api.Files.RelocationBatchError.AsCantTransferOwnership
  - Dropbox.Api.Files.RelocationBatchError.AsDuplicatedOrNestedPaths
  - Dropbox.Api.Files.RelocationBatchError.AsFromLookup
  - Dropbox.Api.Files.RelocationBatchError.AsFromWrite
  - Dropbox.Api.Files.RelocationBatchError.AsInsufficientQuota
  - Dropbox.Api.Files.RelocationBatchError.AsInternalError
  - Dropbox.Api.Files.RelocationBatchError.AsOther
  - Dropbox.Api.Files.RelocationBatchError.AsTo
  - Dropbox.Api.Files.RelocationBatchError.AsTooManyFiles
  - Dropbox.Api.Files.RelocationBatchError.AsTooManyWriteOperations
  - Dropbox.Api.Files.RelocationBatchError.IsCantCopySharedFolder
  - Dropbox.Api.Files.RelocationBatchError.IsCantMoveFolderIntoItself
  - Dropbox.Api.Files.RelocationBatchError.IsCantMoveIntoFamily
  - Dropbox.Api.Files.RelocationBatchError.IsCantMoveIntoVault
  - Dropbox.Api.Files.RelocationBatchError.IsCantMoveSharedFolder
  - Dropbox.Api.Files.RelocationBatchError.IsCantNestSharedFolder
  - Dropbox.Api.Files.RelocationBatchError.IsCantTransferOwnership
  - Dropbox.Api.Files.RelocationBatchError.IsDuplicatedOrNestedPaths
  - Dropbox.Api.Files.RelocationBatchError.IsFromLookup
  - Dropbox.Api.Files.RelocationBatchError.IsFromWrite
  - Dropbox.Api.Files.RelocationBatchError.IsInsufficientQuota
  - Dropbox.Api.Files.RelocationBatchError.IsInternalError
  - Dropbox.Api.Files.RelocationBatchError.IsOther
  - Dropbox.Api.Files.RelocationBatchError.IsTo
  - Dropbox.Api.Files.RelocationBatchError.IsTooManyFiles
  - Dropbox.Api.Files.RelocationBatchError.IsTooManyWriteOperations
  langs:
  - csharp
  - vb
  name: RelocationBatchError
  nameWithType: RelocationBatchError
  fullName: Dropbox.Api.Files.RelocationBatchError
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: RelocationBatchError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The relocation batch error object</p>\n"
  example: []
  syntax:
    content: public class RelocationBatchError
    content.vb: Public Class RelocationBatchError
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Files.RelocationBatchError.CantCopySharedFolder
  - Dropbox.Api.Files.RelocationBatchError.CantMoveFolderIntoItself
  - Dropbox.Api.Files.RelocationBatchError.CantMoveIntoFamily
  - Dropbox.Api.Files.RelocationBatchError.CantMoveIntoVault
  - Dropbox.Api.Files.RelocationBatchError.CantMoveSharedFolder
  - Dropbox.Api.Files.RelocationBatchError.CantNestSharedFolder
  - Dropbox.Api.Files.RelocationBatchError.CantTransferOwnership
  - Dropbox.Api.Files.RelocationBatchError.DuplicatedOrNestedPaths
  - Dropbox.Api.Files.RelocationBatchError.FromLookup
  - Dropbox.Api.Files.RelocationBatchError.FromWrite
  - Dropbox.Api.Files.RelocationBatchError.InsufficientQuota
  - Dropbox.Api.Files.RelocationBatchError.InternalError
  - Dropbox.Api.Files.RelocationBatchError.Other
  - Dropbox.Api.Files.RelocationBatchError.To
  - Dropbox.Api.Files.RelocationBatchError.TooManyFiles
  - Dropbox.Api.Files.RelocationBatchError.TooManyWriteOperations
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.RelocationBatchError.#ctor
  commentId: M:Dropbox.Api.Files.RelocationBatchError.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: RelocationBatchError()
  nameWithType: RelocationBatchError.RelocationBatchError()
  fullName: Dropbox.Api.Files.RelocationBatchError.RelocationBatchError()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.RelocationBatchError\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public RelocationBatchError()
    content.vb: Public Sub New
  overload: Dropbox.Api.Files.RelocationBatchError.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.RelocationBatchError.IsTooManyWriteOperations
  commentId: P:Dropbox.Api.Files.RelocationBatchError.IsTooManyWriteOperations
  id: IsTooManyWriteOperations
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: IsTooManyWriteOperations
  nameWithType: RelocationBatchError.IsTooManyWriteOperations
  fullName: Dropbox.Api.Files.RelocationBatchError.IsTooManyWriteOperations
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsTooManyWriteOperations
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 41
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is\nTooManyWriteOperations</p>\n"
  example: []
  syntax:
    content: public bool IsTooManyWriteOperations { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTooManyWriteOperations As Boolean
  overload: Dropbox.Api.Files.RelocationBatchError.IsTooManyWriteOperations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.AsTooManyWriteOperations
  commentId: P:Dropbox.Api.Files.RelocationBatchError.AsTooManyWriteOperations
  id: AsTooManyWriteOperations
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: AsTooManyWriteOperations
  nameWithType: RelocationBatchError.AsTooManyWriteOperations
  fullName: Dropbox.Api.Files.RelocationBatchError.AsTooManyWriteOperations
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsTooManyWriteOperations
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 52
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a TooManyWriteOperations, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public RelocationBatchError.TooManyWriteOperations AsTooManyWriteOperations { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.RelocationBatchError.TooManyWriteOperations
    content.vb: Public ReadOnly Property AsTooManyWriteOperations As RelocationBatchError.TooManyWriteOperations
  overload: Dropbox.Api.Files.RelocationBatchError.AsTooManyWriteOperations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.IsFromLookup
  commentId: P:Dropbox.Api.Files.RelocationBatchError.IsFromLookup
  id: IsFromLookup
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: IsFromLookup
  nameWithType: RelocationBatchError.IsFromLookup
  fullName: Dropbox.Api.Files.RelocationBatchError.IsFromLookup
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsFromLookup
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 63
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is FromLookup</p>\n"
  example: []
  syntax:
    content: public bool IsFromLookup { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFromLookup As Boolean
  overload: Dropbox.Api.Files.RelocationBatchError.IsFromLookup*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.AsFromLookup
  commentId: P:Dropbox.Api.Files.RelocationBatchError.AsFromLookup
  id: AsFromLookup
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: AsFromLookup
  nameWithType: RelocationBatchError.AsFromLookup
  fullName: Dropbox.Api.Files.RelocationBatchError.AsFromLookup
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsFromLookup
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 74
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a FromLookup, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public RelocationBatchError.FromLookup AsFromLookup { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.RelocationBatchError.FromLookup
    content.vb: Public ReadOnly Property AsFromLookup As RelocationBatchError.FromLookup
  overload: Dropbox.Api.Files.RelocationBatchError.AsFromLookup*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.IsFromWrite
  commentId: P:Dropbox.Api.Files.RelocationBatchError.IsFromWrite
  id: IsFromWrite
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: IsFromWrite
  nameWithType: RelocationBatchError.IsFromWrite
  fullName: Dropbox.Api.Files.RelocationBatchError.IsFromWrite
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsFromWrite
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 85
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is FromWrite</p>\n"
  example: []
  syntax:
    content: public bool IsFromWrite { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFromWrite As Boolean
  overload: Dropbox.Api.Files.RelocationBatchError.IsFromWrite*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.AsFromWrite
  commentId: P:Dropbox.Api.Files.RelocationBatchError.AsFromWrite
  id: AsFromWrite
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: AsFromWrite
  nameWithType: RelocationBatchError.AsFromWrite
  fullName: Dropbox.Api.Files.RelocationBatchError.AsFromWrite
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsFromWrite
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 96
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a FromWrite, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public RelocationBatchError.FromWrite AsFromWrite { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.RelocationBatchError.FromWrite
    content.vb: Public ReadOnly Property AsFromWrite As RelocationBatchError.FromWrite
  overload: Dropbox.Api.Files.RelocationBatchError.AsFromWrite*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.IsTo
  commentId: P:Dropbox.Api.Files.RelocationBatchError.IsTo
  id: IsTo
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: IsTo
  nameWithType: RelocationBatchError.IsTo
  fullName: Dropbox.Api.Files.RelocationBatchError.IsTo
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsTo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 107
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is To</p>\n"
  example: []
  syntax:
    content: public bool IsTo { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTo As Boolean
  overload: Dropbox.Api.Files.RelocationBatchError.IsTo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.AsTo
  commentId: P:Dropbox.Api.Files.RelocationBatchError.AsTo
  id: AsTo
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: AsTo
  nameWithType: RelocationBatchError.AsTo
  fullName: Dropbox.Api.Files.RelocationBatchError.AsTo
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsTo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 118
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a To, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public RelocationBatchError.To AsTo { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.RelocationBatchError.To
    content.vb: Public ReadOnly Property AsTo As RelocationBatchError.To
  overload: Dropbox.Api.Files.RelocationBatchError.AsTo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.IsCantCopySharedFolder
  commentId: P:Dropbox.Api.Files.RelocationBatchError.IsCantCopySharedFolder
  id: IsCantCopySharedFolder
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: IsCantCopySharedFolder
  nameWithType: RelocationBatchError.IsCantCopySharedFolder
  fullName: Dropbox.Api.Files.RelocationBatchError.IsCantCopySharedFolder
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsCantCopySharedFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 129
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is CantCopySharedFolder</p>\n"
  example: []
  syntax:
    content: public bool IsCantCopySharedFolder { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCantCopySharedFolder As Boolean
  overload: Dropbox.Api.Files.RelocationBatchError.IsCantCopySharedFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.AsCantCopySharedFolder
  commentId: P:Dropbox.Api.Files.RelocationBatchError.AsCantCopySharedFolder
  id: AsCantCopySharedFolder
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: AsCantCopySharedFolder
  nameWithType: RelocationBatchError.AsCantCopySharedFolder
  fullName: Dropbox.Api.Files.RelocationBatchError.AsCantCopySharedFolder
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsCantCopySharedFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 140
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a CantCopySharedFolder, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public RelocationBatchError.CantCopySharedFolder AsCantCopySharedFolder { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.RelocationBatchError.CantCopySharedFolder
    content.vb: Public ReadOnly Property AsCantCopySharedFolder As RelocationBatchError.CantCopySharedFolder
  overload: Dropbox.Api.Files.RelocationBatchError.AsCantCopySharedFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.IsCantNestSharedFolder
  commentId: P:Dropbox.Api.Files.RelocationBatchError.IsCantNestSharedFolder
  id: IsCantNestSharedFolder
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: IsCantNestSharedFolder
  nameWithType: RelocationBatchError.IsCantNestSharedFolder
  fullName: Dropbox.Api.Files.RelocationBatchError.IsCantNestSharedFolder
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsCantNestSharedFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 151
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is CantNestSharedFolder</p>\n"
  example: []
  syntax:
    content: public bool IsCantNestSharedFolder { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCantNestSharedFolder As Boolean
  overload: Dropbox.Api.Files.RelocationBatchError.IsCantNestSharedFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.AsCantNestSharedFolder
  commentId: P:Dropbox.Api.Files.RelocationBatchError.AsCantNestSharedFolder
  id: AsCantNestSharedFolder
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: AsCantNestSharedFolder
  nameWithType: RelocationBatchError.AsCantNestSharedFolder
  fullName: Dropbox.Api.Files.RelocationBatchError.AsCantNestSharedFolder
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsCantNestSharedFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 162
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a CantNestSharedFolder, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public RelocationBatchError.CantNestSharedFolder AsCantNestSharedFolder { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.RelocationBatchError.CantNestSharedFolder
    content.vb: Public ReadOnly Property AsCantNestSharedFolder As RelocationBatchError.CantNestSharedFolder
  overload: Dropbox.Api.Files.RelocationBatchError.AsCantNestSharedFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.IsCantMoveFolderIntoItself
  commentId: P:Dropbox.Api.Files.RelocationBatchError.IsCantMoveFolderIntoItself
  id: IsCantMoveFolderIntoItself
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: IsCantMoveFolderIntoItself
  nameWithType: RelocationBatchError.IsCantMoveFolderIntoItself
  fullName: Dropbox.Api.Files.RelocationBatchError.IsCantMoveFolderIntoItself
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsCantMoveFolderIntoItself
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 174
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is\nCantMoveFolderIntoItself</p>\n"
  example: []
  syntax:
    content: public bool IsCantMoveFolderIntoItself { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCantMoveFolderIntoItself As Boolean
  overload: Dropbox.Api.Files.RelocationBatchError.IsCantMoveFolderIntoItself*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.AsCantMoveFolderIntoItself
  commentId: P:Dropbox.Api.Files.RelocationBatchError.AsCantMoveFolderIntoItself
  id: AsCantMoveFolderIntoItself
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: AsCantMoveFolderIntoItself
  nameWithType: RelocationBatchError.AsCantMoveFolderIntoItself
  fullName: Dropbox.Api.Files.RelocationBatchError.AsCantMoveFolderIntoItself
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsCantMoveFolderIntoItself
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 185
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a CantMoveFolderIntoItself, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public RelocationBatchError.CantMoveFolderIntoItself AsCantMoveFolderIntoItself { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.RelocationBatchError.CantMoveFolderIntoItself
    content.vb: Public ReadOnly Property AsCantMoveFolderIntoItself As RelocationBatchError.CantMoveFolderIntoItself
  overload: Dropbox.Api.Files.RelocationBatchError.AsCantMoveFolderIntoItself*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.IsTooManyFiles
  commentId: P:Dropbox.Api.Files.RelocationBatchError.IsTooManyFiles
  id: IsTooManyFiles
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: IsTooManyFiles
  nameWithType: RelocationBatchError.IsTooManyFiles
  fullName: Dropbox.Api.Files.RelocationBatchError.IsTooManyFiles
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsTooManyFiles
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 196
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is TooManyFiles</p>\n"
  example: []
  syntax:
    content: public bool IsTooManyFiles { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTooManyFiles As Boolean
  overload: Dropbox.Api.Files.RelocationBatchError.IsTooManyFiles*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.AsTooManyFiles
  commentId: P:Dropbox.Api.Files.RelocationBatchError.AsTooManyFiles
  id: AsTooManyFiles
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: AsTooManyFiles
  nameWithType: RelocationBatchError.AsTooManyFiles
  fullName: Dropbox.Api.Files.RelocationBatchError.AsTooManyFiles
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsTooManyFiles
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 207
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a TooManyFiles, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public RelocationBatchError.TooManyFiles AsTooManyFiles { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.RelocationBatchError.TooManyFiles
    content.vb: Public ReadOnly Property AsTooManyFiles As RelocationBatchError.TooManyFiles
  overload: Dropbox.Api.Files.RelocationBatchError.AsTooManyFiles*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.IsDuplicatedOrNestedPaths
  commentId: P:Dropbox.Api.Files.RelocationBatchError.IsDuplicatedOrNestedPaths
  id: IsDuplicatedOrNestedPaths
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: IsDuplicatedOrNestedPaths
  nameWithType: RelocationBatchError.IsDuplicatedOrNestedPaths
  fullName: Dropbox.Api.Files.RelocationBatchError.IsDuplicatedOrNestedPaths
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsDuplicatedOrNestedPaths
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 219
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is\nDuplicatedOrNestedPaths</p>\n"
  example: []
  syntax:
    content: public bool IsDuplicatedOrNestedPaths { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDuplicatedOrNestedPaths As Boolean
  overload: Dropbox.Api.Files.RelocationBatchError.IsDuplicatedOrNestedPaths*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.AsDuplicatedOrNestedPaths
  commentId: P:Dropbox.Api.Files.RelocationBatchError.AsDuplicatedOrNestedPaths
  id: AsDuplicatedOrNestedPaths
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: AsDuplicatedOrNestedPaths
  nameWithType: RelocationBatchError.AsDuplicatedOrNestedPaths
  fullName: Dropbox.Api.Files.RelocationBatchError.AsDuplicatedOrNestedPaths
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsDuplicatedOrNestedPaths
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 230
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a DuplicatedOrNestedPaths, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public RelocationBatchError.DuplicatedOrNestedPaths AsDuplicatedOrNestedPaths { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.RelocationBatchError.DuplicatedOrNestedPaths
    content.vb: Public ReadOnly Property AsDuplicatedOrNestedPaths As RelocationBatchError.DuplicatedOrNestedPaths
  overload: Dropbox.Api.Files.RelocationBatchError.AsDuplicatedOrNestedPaths*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.IsCantTransferOwnership
  commentId: P:Dropbox.Api.Files.RelocationBatchError.IsCantTransferOwnership
  id: IsCantTransferOwnership
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: IsCantTransferOwnership
  nameWithType: RelocationBatchError.IsCantTransferOwnership
  fullName: Dropbox.Api.Files.RelocationBatchError.IsCantTransferOwnership
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsCantTransferOwnership
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 241
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is CantTransferOwnership</p>\n"
  example: []
  syntax:
    content: public bool IsCantTransferOwnership { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCantTransferOwnership As Boolean
  overload: Dropbox.Api.Files.RelocationBatchError.IsCantTransferOwnership*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.AsCantTransferOwnership
  commentId: P:Dropbox.Api.Files.RelocationBatchError.AsCantTransferOwnership
  id: AsCantTransferOwnership
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: AsCantTransferOwnership
  nameWithType: RelocationBatchError.AsCantTransferOwnership
  fullName: Dropbox.Api.Files.RelocationBatchError.AsCantTransferOwnership
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsCantTransferOwnership
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 252
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a CantTransferOwnership, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public RelocationBatchError.CantTransferOwnership AsCantTransferOwnership { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.RelocationBatchError.CantTransferOwnership
    content.vb: Public ReadOnly Property AsCantTransferOwnership As RelocationBatchError.CantTransferOwnership
  overload: Dropbox.Api.Files.RelocationBatchError.AsCantTransferOwnership*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.IsInsufficientQuota
  commentId: P:Dropbox.Api.Files.RelocationBatchError.IsInsufficientQuota
  id: IsInsufficientQuota
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: IsInsufficientQuota
  nameWithType: RelocationBatchError.IsInsufficientQuota
  fullName: Dropbox.Api.Files.RelocationBatchError.IsInsufficientQuota
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsInsufficientQuota
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 263
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is InsufficientQuota</p>\n"
  example: []
  syntax:
    content: public bool IsInsufficientQuota { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInsufficientQuota As Boolean
  overload: Dropbox.Api.Files.RelocationBatchError.IsInsufficientQuota*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.AsInsufficientQuota
  commentId: P:Dropbox.Api.Files.RelocationBatchError.AsInsufficientQuota
  id: AsInsufficientQuota
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: AsInsufficientQuota
  nameWithType: RelocationBatchError.AsInsufficientQuota
  fullName: Dropbox.Api.Files.RelocationBatchError.AsInsufficientQuota
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsInsufficientQuota
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 274
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a InsufficientQuota, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public RelocationBatchError.InsufficientQuota AsInsufficientQuota { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.RelocationBatchError.InsufficientQuota
    content.vb: Public ReadOnly Property AsInsufficientQuota As RelocationBatchError.InsufficientQuota
  overload: Dropbox.Api.Files.RelocationBatchError.AsInsufficientQuota*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.IsInternalError
  commentId: P:Dropbox.Api.Files.RelocationBatchError.IsInternalError
  id: IsInternalError
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: IsInternalError
  nameWithType: RelocationBatchError.IsInternalError
  fullName: Dropbox.Api.Files.RelocationBatchError.IsInternalError
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsInternalError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 285
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is InternalError</p>\n"
  example: []
  syntax:
    content: public bool IsInternalError { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInternalError As Boolean
  overload: Dropbox.Api.Files.RelocationBatchError.IsInternalError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.AsInternalError
  commentId: P:Dropbox.Api.Files.RelocationBatchError.AsInternalError
  id: AsInternalError
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: AsInternalError
  nameWithType: RelocationBatchError.AsInternalError
  fullName: Dropbox.Api.Files.RelocationBatchError.AsInternalError
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsInternalError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 296
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a InternalError, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public RelocationBatchError.InternalError AsInternalError { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.RelocationBatchError.InternalError
    content.vb: Public ReadOnly Property AsInternalError As RelocationBatchError.InternalError
  overload: Dropbox.Api.Files.RelocationBatchError.AsInternalError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.IsCantMoveSharedFolder
  commentId: P:Dropbox.Api.Files.RelocationBatchError.IsCantMoveSharedFolder
  id: IsCantMoveSharedFolder
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: IsCantMoveSharedFolder
  nameWithType: RelocationBatchError.IsCantMoveSharedFolder
  fullName: Dropbox.Api.Files.RelocationBatchError.IsCantMoveSharedFolder
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsCantMoveSharedFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 307
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is CantMoveSharedFolder</p>\n"
  example: []
  syntax:
    content: public bool IsCantMoveSharedFolder { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCantMoveSharedFolder As Boolean
  overload: Dropbox.Api.Files.RelocationBatchError.IsCantMoveSharedFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.AsCantMoveSharedFolder
  commentId: P:Dropbox.Api.Files.RelocationBatchError.AsCantMoveSharedFolder
  id: AsCantMoveSharedFolder
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: AsCantMoveSharedFolder
  nameWithType: RelocationBatchError.AsCantMoveSharedFolder
  fullName: Dropbox.Api.Files.RelocationBatchError.AsCantMoveSharedFolder
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsCantMoveSharedFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 318
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a CantMoveSharedFolder, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public RelocationBatchError.CantMoveSharedFolder AsCantMoveSharedFolder { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.RelocationBatchError.CantMoveSharedFolder
    content.vb: Public ReadOnly Property AsCantMoveSharedFolder As RelocationBatchError.CantMoveSharedFolder
  overload: Dropbox.Api.Files.RelocationBatchError.AsCantMoveSharedFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.IsCantMoveIntoVault
  commentId: P:Dropbox.Api.Files.RelocationBatchError.IsCantMoveIntoVault
  id: IsCantMoveIntoVault
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: IsCantMoveIntoVault
  nameWithType: RelocationBatchError.IsCantMoveIntoVault
  fullName: Dropbox.Api.Files.RelocationBatchError.IsCantMoveIntoVault
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsCantMoveIntoVault
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 329
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is CantMoveIntoVault</p>\n"
  example: []
  syntax:
    content: public bool IsCantMoveIntoVault { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCantMoveIntoVault As Boolean
  overload: Dropbox.Api.Files.RelocationBatchError.IsCantMoveIntoVault*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.AsCantMoveIntoVault
  commentId: P:Dropbox.Api.Files.RelocationBatchError.AsCantMoveIntoVault
  id: AsCantMoveIntoVault
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: AsCantMoveIntoVault
  nameWithType: RelocationBatchError.AsCantMoveIntoVault
  fullName: Dropbox.Api.Files.RelocationBatchError.AsCantMoveIntoVault
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsCantMoveIntoVault
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 340
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a CantMoveIntoVault, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public RelocationBatchError.CantMoveIntoVault AsCantMoveIntoVault { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.RelocationBatchError.CantMoveIntoVault
    content.vb: Public ReadOnly Property AsCantMoveIntoVault As RelocationBatchError.CantMoveIntoVault
  overload: Dropbox.Api.Files.RelocationBatchError.AsCantMoveIntoVault*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.IsCantMoveIntoFamily
  commentId: P:Dropbox.Api.Files.RelocationBatchError.IsCantMoveIntoFamily
  id: IsCantMoveIntoFamily
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: IsCantMoveIntoFamily
  nameWithType: RelocationBatchError.IsCantMoveIntoFamily
  fullName: Dropbox.Api.Files.RelocationBatchError.IsCantMoveIntoFamily
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsCantMoveIntoFamily
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 351
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is CantMoveIntoFamily</p>\n"
  example: []
  syntax:
    content: public bool IsCantMoveIntoFamily { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCantMoveIntoFamily As Boolean
  overload: Dropbox.Api.Files.RelocationBatchError.IsCantMoveIntoFamily*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.AsCantMoveIntoFamily
  commentId: P:Dropbox.Api.Files.RelocationBatchError.AsCantMoveIntoFamily
  id: AsCantMoveIntoFamily
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: AsCantMoveIntoFamily
  nameWithType: RelocationBatchError.AsCantMoveIntoFamily
  fullName: Dropbox.Api.Files.RelocationBatchError.AsCantMoveIntoFamily
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsCantMoveIntoFamily
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 362
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a CantMoveIntoFamily, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public RelocationBatchError.CantMoveIntoFamily AsCantMoveIntoFamily { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.RelocationBatchError.CantMoveIntoFamily
    content.vb: Public ReadOnly Property AsCantMoveIntoFamily As RelocationBatchError.CantMoveIntoFamily
  overload: Dropbox.Api.Files.RelocationBatchError.AsCantMoveIntoFamily*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.IsOther
  commentId: P:Dropbox.Api.Files.RelocationBatchError.IsOther
  id: IsOther
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: RelocationBatchError.IsOther
  fullName: Dropbox.Api.Files.RelocationBatchError.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 373
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.Files.RelocationBatchError.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchError.AsOther
  commentId: P:Dropbox.Api.Files.RelocationBatchError.AsOther
  id: AsOther
  parent: Dropbox.Api.Files.RelocationBatchError
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: RelocationBatchError.AsOther
  fullName: Dropbox.Api.Files.RelocationBatchError.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchError.cs
    startLine: 384
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public RelocationBatchError.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.RelocationBatchError.Other
    content.vb: Public ReadOnly Property AsOther As RelocationBatchError.Other
  overload: Dropbox.Api.Files.RelocationBatchError.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Files.RelocationBatchError
  commentId: T:Dropbox.Api.Files.RelocationBatchError
  parent: Dropbox.Api.Files
  name: RelocationBatchError
  nameWithType: RelocationBatchError
  fullName: Dropbox.Api.Files.RelocationBatchError
- uid: Dropbox.Api.Files.RelocationBatchError.#ctor*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.#ctor
  name: RelocationBatchError
  nameWithType: RelocationBatchError.RelocationBatchError
  fullName: Dropbox.Api.Files.RelocationBatchError.RelocationBatchError
- uid: Dropbox.Api.Files.RelocationBatchError.IsTooManyWriteOperations*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.IsTooManyWriteOperations
  name: IsTooManyWriteOperations
  nameWithType: RelocationBatchError.IsTooManyWriteOperations
  fullName: Dropbox.Api.Files.RelocationBatchError.IsTooManyWriteOperations
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Files.RelocationBatchError.AsTooManyWriteOperations*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.AsTooManyWriteOperations
  name: AsTooManyWriteOperations
  nameWithType: RelocationBatchError.AsTooManyWriteOperations
  fullName: Dropbox.Api.Files.RelocationBatchError.AsTooManyWriteOperations
- uid: Dropbox.Api.Files.RelocationBatchError.TooManyWriteOperations
  commentId: T:Dropbox.Api.Files.RelocationBatchError.TooManyWriteOperations
  parent: Dropbox.Api.Files
  name: RelocationBatchError.TooManyWriteOperations
  nameWithType: RelocationBatchError.TooManyWriteOperations
  fullName: Dropbox.Api.Files.RelocationBatchError.TooManyWriteOperations
- uid: Dropbox.Api.Files.RelocationBatchError.IsFromLookup*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.IsFromLookup
  name: IsFromLookup
  nameWithType: RelocationBatchError.IsFromLookup
  fullName: Dropbox.Api.Files.RelocationBatchError.IsFromLookup
- uid: Dropbox.Api.Files.RelocationBatchError.AsFromLookup*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.AsFromLookup
  name: AsFromLookup
  nameWithType: RelocationBatchError.AsFromLookup
  fullName: Dropbox.Api.Files.RelocationBatchError.AsFromLookup
- uid: Dropbox.Api.Files.RelocationBatchError.FromLookup
  commentId: T:Dropbox.Api.Files.RelocationBatchError.FromLookup
  parent: Dropbox.Api.Files
  name: RelocationBatchError.FromLookup
  nameWithType: RelocationBatchError.FromLookup
  fullName: Dropbox.Api.Files.RelocationBatchError.FromLookup
- uid: Dropbox.Api.Files.RelocationBatchError.IsFromWrite*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.IsFromWrite
  name: IsFromWrite
  nameWithType: RelocationBatchError.IsFromWrite
  fullName: Dropbox.Api.Files.RelocationBatchError.IsFromWrite
- uid: Dropbox.Api.Files.RelocationBatchError.AsFromWrite*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.AsFromWrite
  name: AsFromWrite
  nameWithType: RelocationBatchError.AsFromWrite
  fullName: Dropbox.Api.Files.RelocationBatchError.AsFromWrite
- uid: Dropbox.Api.Files.RelocationBatchError.FromWrite
  commentId: T:Dropbox.Api.Files.RelocationBatchError.FromWrite
  parent: Dropbox.Api.Files
  name: RelocationBatchError.FromWrite
  nameWithType: RelocationBatchError.FromWrite
  fullName: Dropbox.Api.Files.RelocationBatchError.FromWrite
- uid: Dropbox.Api.Files.RelocationBatchError.IsTo*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.IsTo
  name: IsTo
  nameWithType: RelocationBatchError.IsTo
  fullName: Dropbox.Api.Files.RelocationBatchError.IsTo
- uid: Dropbox.Api.Files.RelocationBatchError.AsTo*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.AsTo
  name: AsTo
  nameWithType: RelocationBatchError.AsTo
  fullName: Dropbox.Api.Files.RelocationBatchError.AsTo
- uid: Dropbox.Api.Files.RelocationBatchError.To
  commentId: T:Dropbox.Api.Files.RelocationBatchError.To
  parent: Dropbox.Api.Files
  name: RelocationBatchError.To
  nameWithType: RelocationBatchError.To
  fullName: Dropbox.Api.Files.RelocationBatchError.To
- uid: Dropbox.Api.Files.RelocationBatchError.IsCantCopySharedFolder*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.IsCantCopySharedFolder
  name: IsCantCopySharedFolder
  nameWithType: RelocationBatchError.IsCantCopySharedFolder
  fullName: Dropbox.Api.Files.RelocationBatchError.IsCantCopySharedFolder
- uid: Dropbox.Api.Files.RelocationBatchError.AsCantCopySharedFolder*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.AsCantCopySharedFolder
  name: AsCantCopySharedFolder
  nameWithType: RelocationBatchError.AsCantCopySharedFolder
  fullName: Dropbox.Api.Files.RelocationBatchError.AsCantCopySharedFolder
- uid: Dropbox.Api.Files.RelocationBatchError.CantCopySharedFolder
  commentId: T:Dropbox.Api.Files.RelocationBatchError.CantCopySharedFolder
  parent: Dropbox.Api.Files
  name: RelocationBatchError.CantCopySharedFolder
  nameWithType: RelocationBatchError.CantCopySharedFolder
  fullName: Dropbox.Api.Files.RelocationBatchError.CantCopySharedFolder
- uid: Dropbox.Api.Files.RelocationBatchError.IsCantNestSharedFolder*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.IsCantNestSharedFolder
  name: IsCantNestSharedFolder
  nameWithType: RelocationBatchError.IsCantNestSharedFolder
  fullName: Dropbox.Api.Files.RelocationBatchError.IsCantNestSharedFolder
- uid: Dropbox.Api.Files.RelocationBatchError.AsCantNestSharedFolder*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.AsCantNestSharedFolder
  name: AsCantNestSharedFolder
  nameWithType: RelocationBatchError.AsCantNestSharedFolder
  fullName: Dropbox.Api.Files.RelocationBatchError.AsCantNestSharedFolder
- uid: Dropbox.Api.Files.RelocationBatchError.CantNestSharedFolder
  commentId: T:Dropbox.Api.Files.RelocationBatchError.CantNestSharedFolder
  parent: Dropbox.Api.Files
  name: RelocationBatchError.CantNestSharedFolder
  nameWithType: RelocationBatchError.CantNestSharedFolder
  fullName: Dropbox.Api.Files.RelocationBatchError.CantNestSharedFolder
- uid: Dropbox.Api.Files.RelocationBatchError.IsCantMoveFolderIntoItself*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.IsCantMoveFolderIntoItself
  name: IsCantMoveFolderIntoItself
  nameWithType: RelocationBatchError.IsCantMoveFolderIntoItself
  fullName: Dropbox.Api.Files.RelocationBatchError.IsCantMoveFolderIntoItself
- uid: Dropbox.Api.Files.RelocationBatchError.AsCantMoveFolderIntoItself*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.AsCantMoveFolderIntoItself
  name: AsCantMoveFolderIntoItself
  nameWithType: RelocationBatchError.AsCantMoveFolderIntoItself
  fullName: Dropbox.Api.Files.RelocationBatchError.AsCantMoveFolderIntoItself
- uid: Dropbox.Api.Files.RelocationBatchError.CantMoveFolderIntoItself
  commentId: T:Dropbox.Api.Files.RelocationBatchError.CantMoveFolderIntoItself
  parent: Dropbox.Api.Files
  name: RelocationBatchError.CantMoveFolderIntoItself
  nameWithType: RelocationBatchError.CantMoveFolderIntoItself
  fullName: Dropbox.Api.Files.RelocationBatchError.CantMoveFolderIntoItself
- uid: Dropbox.Api.Files.RelocationBatchError.IsTooManyFiles*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.IsTooManyFiles
  name: IsTooManyFiles
  nameWithType: RelocationBatchError.IsTooManyFiles
  fullName: Dropbox.Api.Files.RelocationBatchError.IsTooManyFiles
- uid: Dropbox.Api.Files.RelocationBatchError.AsTooManyFiles*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.AsTooManyFiles
  name: AsTooManyFiles
  nameWithType: RelocationBatchError.AsTooManyFiles
  fullName: Dropbox.Api.Files.RelocationBatchError.AsTooManyFiles
- uid: Dropbox.Api.Files.RelocationBatchError.TooManyFiles
  commentId: T:Dropbox.Api.Files.RelocationBatchError.TooManyFiles
  parent: Dropbox.Api.Files
  name: RelocationBatchError.TooManyFiles
  nameWithType: RelocationBatchError.TooManyFiles
  fullName: Dropbox.Api.Files.RelocationBatchError.TooManyFiles
- uid: Dropbox.Api.Files.RelocationBatchError.IsDuplicatedOrNestedPaths*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.IsDuplicatedOrNestedPaths
  name: IsDuplicatedOrNestedPaths
  nameWithType: RelocationBatchError.IsDuplicatedOrNestedPaths
  fullName: Dropbox.Api.Files.RelocationBatchError.IsDuplicatedOrNestedPaths
- uid: Dropbox.Api.Files.RelocationBatchError.AsDuplicatedOrNestedPaths*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.AsDuplicatedOrNestedPaths
  name: AsDuplicatedOrNestedPaths
  nameWithType: RelocationBatchError.AsDuplicatedOrNestedPaths
  fullName: Dropbox.Api.Files.RelocationBatchError.AsDuplicatedOrNestedPaths
- uid: Dropbox.Api.Files.RelocationBatchError.DuplicatedOrNestedPaths
  commentId: T:Dropbox.Api.Files.RelocationBatchError.DuplicatedOrNestedPaths
  parent: Dropbox.Api.Files
  name: RelocationBatchError.DuplicatedOrNestedPaths
  nameWithType: RelocationBatchError.DuplicatedOrNestedPaths
  fullName: Dropbox.Api.Files.RelocationBatchError.DuplicatedOrNestedPaths
- uid: Dropbox.Api.Files.RelocationBatchError.IsCantTransferOwnership*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.IsCantTransferOwnership
  name: IsCantTransferOwnership
  nameWithType: RelocationBatchError.IsCantTransferOwnership
  fullName: Dropbox.Api.Files.RelocationBatchError.IsCantTransferOwnership
- uid: Dropbox.Api.Files.RelocationBatchError.AsCantTransferOwnership*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.AsCantTransferOwnership
  name: AsCantTransferOwnership
  nameWithType: RelocationBatchError.AsCantTransferOwnership
  fullName: Dropbox.Api.Files.RelocationBatchError.AsCantTransferOwnership
- uid: Dropbox.Api.Files.RelocationBatchError.CantTransferOwnership
  commentId: T:Dropbox.Api.Files.RelocationBatchError.CantTransferOwnership
  parent: Dropbox.Api.Files
  name: RelocationBatchError.CantTransferOwnership
  nameWithType: RelocationBatchError.CantTransferOwnership
  fullName: Dropbox.Api.Files.RelocationBatchError.CantTransferOwnership
- uid: Dropbox.Api.Files.RelocationBatchError.IsInsufficientQuota*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.IsInsufficientQuota
  name: IsInsufficientQuota
  nameWithType: RelocationBatchError.IsInsufficientQuota
  fullName: Dropbox.Api.Files.RelocationBatchError.IsInsufficientQuota
- uid: Dropbox.Api.Files.RelocationBatchError.AsInsufficientQuota*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.AsInsufficientQuota
  name: AsInsufficientQuota
  nameWithType: RelocationBatchError.AsInsufficientQuota
  fullName: Dropbox.Api.Files.RelocationBatchError.AsInsufficientQuota
- uid: Dropbox.Api.Files.RelocationBatchError.InsufficientQuota
  commentId: T:Dropbox.Api.Files.RelocationBatchError.InsufficientQuota
  parent: Dropbox.Api.Files
  name: RelocationBatchError.InsufficientQuota
  nameWithType: RelocationBatchError.InsufficientQuota
  fullName: Dropbox.Api.Files.RelocationBatchError.InsufficientQuota
- uid: Dropbox.Api.Files.RelocationBatchError.IsInternalError*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.IsInternalError
  name: IsInternalError
  nameWithType: RelocationBatchError.IsInternalError
  fullName: Dropbox.Api.Files.RelocationBatchError.IsInternalError
- uid: Dropbox.Api.Files.RelocationBatchError.AsInternalError*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.AsInternalError
  name: AsInternalError
  nameWithType: RelocationBatchError.AsInternalError
  fullName: Dropbox.Api.Files.RelocationBatchError.AsInternalError
- uid: Dropbox.Api.Files.RelocationBatchError.InternalError
  commentId: T:Dropbox.Api.Files.RelocationBatchError.InternalError
  parent: Dropbox.Api.Files
  name: RelocationBatchError.InternalError
  nameWithType: RelocationBatchError.InternalError
  fullName: Dropbox.Api.Files.RelocationBatchError.InternalError
- uid: Dropbox.Api.Files.RelocationBatchError.IsCantMoveSharedFolder*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.IsCantMoveSharedFolder
  name: IsCantMoveSharedFolder
  nameWithType: RelocationBatchError.IsCantMoveSharedFolder
  fullName: Dropbox.Api.Files.RelocationBatchError.IsCantMoveSharedFolder
- uid: Dropbox.Api.Files.RelocationBatchError.AsCantMoveSharedFolder*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.AsCantMoveSharedFolder
  name: AsCantMoveSharedFolder
  nameWithType: RelocationBatchError.AsCantMoveSharedFolder
  fullName: Dropbox.Api.Files.RelocationBatchError.AsCantMoveSharedFolder
- uid: Dropbox.Api.Files.RelocationBatchError.CantMoveSharedFolder
  commentId: T:Dropbox.Api.Files.RelocationBatchError.CantMoveSharedFolder
  parent: Dropbox.Api.Files
  name: RelocationBatchError.CantMoveSharedFolder
  nameWithType: RelocationBatchError.CantMoveSharedFolder
  fullName: Dropbox.Api.Files.RelocationBatchError.CantMoveSharedFolder
- uid: Dropbox.Api.Files.RelocationBatchError.IsCantMoveIntoVault*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.IsCantMoveIntoVault
  name: IsCantMoveIntoVault
  nameWithType: RelocationBatchError.IsCantMoveIntoVault
  fullName: Dropbox.Api.Files.RelocationBatchError.IsCantMoveIntoVault
- uid: Dropbox.Api.Files.RelocationBatchError.AsCantMoveIntoVault*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.AsCantMoveIntoVault
  name: AsCantMoveIntoVault
  nameWithType: RelocationBatchError.AsCantMoveIntoVault
  fullName: Dropbox.Api.Files.RelocationBatchError.AsCantMoveIntoVault
- uid: Dropbox.Api.Files.RelocationBatchError.CantMoveIntoVault
  commentId: T:Dropbox.Api.Files.RelocationBatchError.CantMoveIntoVault
  parent: Dropbox.Api.Files
  name: RelocationBatchError.CantMoveIntoVault
  nameWithType: RelocationBatchError.CantMoveIntoVault
  fullName: Dropbox.Api.Files.RelocationBatchError.CantMoveIntoVault
- uid: Dropbox.Api.Files.RelocationBatchError.IsCantMoveIntoFamily*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.IsCantMoveIntoFamily
  name: IsCantMoveIntoFamily
  nameWithType: RelocationBatchError.IsCantMoveIntoFamily
  fullName: Dropbox.Api.Files.RelocationBatchError.IsCantMoveIntoFamily
- uid: Dropbox.Api.Files.RelocationBatchError.AsCantMoveIntoFamily*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.AsCantMoveIntoFamily
  name: AsCantMoveIntoFamily
  nameWithType: RelocationBatchError.AsCantMoveIntoFamily
  fullName: Dropbox.Api.Files.RelocationBatchError.AsCantMoveIntoFamily
- uid: Dropbox.Api.Files.RelocationBatchError.CantMoveIntoFamily
  commentId: T:Dropbox.Api.Files.RelocationBatchError.CantMoveIntoFamily
  parent: Dropbox.Api.Files
  name: RelocationBatchError.CantMoveIntoFamily
  nameWithType: RelocationBatchError.CantMoveIntoFamily
  fullName: Dropbox.Api.Files.RelocationBatchError.CantMoveIntoFamily
- uid: Dropbox.Api.Files.RelocationBatchError.IsOther*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.IsOther
  name: IsOther
  nameWithType: RelocationBatchError.IsOther
  fullName: Dropbox.Api.Files.RelocationBatchError.IsOther
- uid: Dropbox.Api.Files.RelocationBatchError.AsOther*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchError.AsOther
  name: AsOther
  nameWithType: RelocationBatchError.AsOther
  fullName: Dropbox.Api.Files.RelocationBatchError.AsOther
- uid: Dropbox.Api.Files.RelocationBatchError.Other
  commentId: T:Dropbox.Api.Files.RelocationBatchError.Other
  parent: Dropbox.Api.Files
  name: RelocationBatchError.Other
  nameWithType: RelocationBatchError.Other
  fullName: Dropbox.Api.Files.RelocationBatchError.Other
