### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamLog.AssetLogInfo
  commentId: T:Dropbox.Api.TeamLog.AssetLogInfo
  id: AssetLogInfo
  parent: Dropbox.Api.TeamLog
  children:
  - Dropbox.Api.TeamLog.AssetLogInfo.#ctor
  - Dropbox.Api.TeamLog.AssetLogInfo.AsFile
  - Dropbox.Api.TeamLog.AssetLogInfo.AsFolder
  - Dropbox.Api.TeamLog.AssetLogInfo.AsOther
  - Dropbox.Api.TeamLog.AssetLogInfo.AsPaperDocument
  - Dropbox.Api.TeamLog.AssetLogInfo.AsPaperFolder
  - Dropbox.Api.TeamLog.AssetLogInfo.AsShowcaseDocument
  - Dropbox.Api.TeamLog.AssetLogInfo.IsFile
  - Dropbox.Api.TeamLog.AssetLogInfo.IsFolder
  - Dropbox.Api.TeamLog.AssetLogInfo.IsOther
  - Dropbox.Api.TeamLog.AssetLogInfo.IsPaperDocument
  - Dropbox.Api.TeamLog.AssetLogInfo.IsPaperFolder
  - Dropbox.Api.TeamLog.AssetLogInfo.IsShowcaseDocument
  langs:
  - csharp
  - vb
  name: AssetLogInfo
  nameWithType: AssetLogInfo
  fullName: Dropbox.Api.TeamLog.AssetLogInfo
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AssetLogInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Asset details.</p>\n"
  example: []
  syntax:
    content: public class AssetLogInfo
    content.vb: Public Class AssetLogInfo
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.TeamLog.AssetLogInfo.File
  - Dropbox.Api.TeamLog.AssetLogInfo.Folder
  - Dropbox.Api.TeamLog.AssetLogInfo.Other
  - Dropbox.Api.TeamLog.AssetLogInfo.PaperDocument
  - Dropbox.Api.TeamLog.AssetLogInfo.PaperFolder
  - Dropbox.Api.TeamLog.AssetLogInfo.ShowcaseDocument
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.TeamLog.AssetLogInfo.#ctor
  commentId: M:Dropbox.Api.TeamLog.AssetLogInfo.#ctor
  id: '#ctor'
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  langs:
  - csharp
  - vb
  name: AssetLogInfo()
  nameWithType: AssetLogInfo.AssetLogInfo()
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.AssetLogInfo()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
    startLine: 32
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamLog.AssetLogInfo\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public AssetLogInfo()
    content.vb: Public Sub New
  overload: Dropbox.Api.TeamLog.AssetLogInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.TeamLog.AssetLogInfo.IsFile
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.IsFile
  id: IsFile
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  langs:
  - csharp
  - vb
  name: IsFile
  nameWithType: AssetLogInfo.IsFile
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.IsFile
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsFile
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
    startLine: 39
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is File</p>\n"
  example: []
  syntax:
    content: public bool IsFile { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFile As Boolean
  overload: Dropbox.Api.TeamLog.AssetLogInfo.IsFile*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AssetLogInfo.AsFile
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.AsFile
  id: AsFile
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  langs:
  - csharp
  - vb
  name: AsFile
  nameWithType: AssetLogInfo.AsFile
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.AsFile
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsFile
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
    startLine: 50
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a File, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AssetLogInfo.File AsFile { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AssetLogInfo.File
    content.vb: Public ReadOnly Property AsFile As AssetLogInfo.File
  overload: Dropbox.Api.TeamLog.AssetLogInfo.AsFile*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AssetLogInfo.IsFolder
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.IsFolder
  id: IsFolder
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  langs:
  - csharp
  - vb
  name: IsFolder
  nameWithType: AssetLogInfo.IsFolder
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.IsFolder
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
    startLine: 61
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Folder</p>\n"
  example: []
  syntax:
    content: public bool IsFolder { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFolder As Boolean
  overload: Dropbox.Api.TeamLog.AssetLogInfo.IsFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AssetLogInfo.AsFolder
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.AsFolder
  id: AsFolder
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  langs:
  - csharp
  - vb
  name: AsFolder
  nameWithType: AssetLogInfo.AsFolder
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.AsFolder
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
    startLine: 72
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Folder, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AssetLogInfo.Folder AsFolder { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AssetLogInfo.Folder
    content.vb: Public ReadOnly Property AsFolder As AssetLogInfo.Folder
  overload: Dropbox.Api.TeamLog.AssetLogInfo.AsFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AssetLogInfo.IsPaperDocument
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.IsPaperDocument
  id: IsPaperDocument
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  langs:
  - csharp
  - vb
  name: IsPaperDocument
  nameWithType: AssetLogInfo.IsPaperDocument
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.IsPaperDocument
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsPaperDocument
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
    startLine: 83
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is PaperDocument</p>\n"
  example: []
  syntax:
    content: public bool IsPaperDocument { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPaperDocument As Boolean
  overload: Dropbox.Api.TeamLog.AssetLogInfo.IsPaperDocument*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AssetLogInfo.AsPaperDocument
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.AsPaperDocument
  id: AsPaperDocument
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  langs:
  - csharp
  - vb
  name: AsPaperDocument
  nameWithType: AssetLogInfo.AsPaperDocument
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.AsPaperDocument
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsPaperDocument
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
    startLine: 94
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a PaperDocument, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AssetLogInfo.PaperDocument AsPaperDocument { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AssetLogInfo.PaperDocument
    content.vb: Public ReadOnly Property AsPaperDocument As AssetLogInfo.PaperDocument
  overload: Dropbox.Api.TeamLog.AssetLogInfo.AsPaperDocument*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AssetLogInfo.IsPaperFolder
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.IsPaperFolder
  id: IsPaperFolder
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  langs:
  - csharp
  - vb
  name: IsPaperFolder
  nameWithType: AssetLogInfo.IsPaperFolder
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.IsPaperFolder
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsPaperFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
    startLine: 105
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is PaperFolder</p>\n"
  example: []
  syntax:
    content: public bool IsPaperFolder { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPaperFolder As Boolean
  overload: Dropbox.Api.TeamLog.AssetLogInfo.IsPaperFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AssetLogInfo.AsPaperFolder
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.AsPaperFolder
  id: AsPaperFolder
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  langs:
  - csharp
  - vb
  name: AsPaperFolder
  nameWithType: AssetLogInfo.AsPaperFolder
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.AsPaperFolder
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsPaperFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
    startLine: 116
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a PaperFolder, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AssetLogInfo.PaperFolder AsPaperFolder { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AssetLogInfo.PaperFolder
    content.vb: Public ReadOnly Property AsPaperFolder As AssetLogInfo.PaperFolder
  overload: Dropbox.Api.TeamLog.AssetLogInfo.AsPaperFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AssetLogInfo.IsShowcaseDocument
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.IsShowcaseDocument
  id: IsShowcaseDocument
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  langs:
  - csharp
  - vb
  name: IsShowcaseDocument
  nameWithType: AssetLogInfo.IsShowcaseDocument
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.IsShowcaseDocument
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsShowcaseDocument
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
    startLine: 127
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is ShowcaseDocument</p>\n"
  example: []
  syntax:
    content: public bool IsShowcaseDocument { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsShowcaseDocument As Boolean
  overload: Dropbox.Api.TeamLog.AssetLogInfo.IsShowcaseDocument*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AssetLogInfo.AsShowcaseDocument
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.AsShowcaseDocument
  id: AsShowcaseDocument
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  langs:
  - csharp
  - vb
  name: AsShowcaseDocument
  nameWithType: AssetLogInfo.AsShowcaseDocument
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.AsShowcaseDocument
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsShowcaseDocument
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
    startLine: 138
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a ShowcaseDocument, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AssetLogInfo.ShowcaseDocument AsShowcaseDocument { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AssetLogInfo.ShowcaseDocument
    content.vb: Public ReadOnly Property AsShowcaseDocument As AssetLogInfo.ShowcaseDocument
  overload: Dropbox.Api.TeamLog.AssetLogInfo.AsShowcaseDocument*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AssetLogInfo.IsOther
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.IsOther
  id: IsOther
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: AssetLogInfo.IsOther
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
    startLine: 149
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.TeamLog.AssetLogInfo.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AssetLogInfo.AsOther
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.AsOther
  id: AsOther
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: AssetLogInfo.AsOther
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
    startLine: 160
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AssetLogInfo.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AssetLogInfo.Other
    content.vb: Public ReadOnly Property AsOther As AssetLogInfo.Other
  overload: Dropbox.Api.TeamLog.AssetLogInfo.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.TeamLog
  commentId: N:Dropbox.Api.TeamLog
  name: Dropbox.Api.TeamLog
  nameWithType: Dropbox.Api.TeamLog
  fullName: Dropbox.Api.TeamLog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.TeamLog.AssetLogInfo
  commentId: T:Dropbox.Api.TeamLog.AssetLogInfo
  parent: Dropbox.Api.TeamLog
  name: AssetLogInfo
  nameWithType: AssetLogInfo
  fullName: Dropbox.Api.TeamLog.AssetLogInfo
- uid: Dropbox.Api.TeamLog.AssetLogInfo.#ctor*
  commentId: Overload:Dropbox.Api.TeamLog.AssetLogInfo.#ctor
  name: AssetLogInfo
  nameWithType: AssetLogInfo.AssetLogInfo
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.AssetLogInfo
- uid: Dropbox.Api.TeamLog.AssetLogInfo.IsFile*
  commentId: Overload:Dropbox.Api.TeamLog.AssetLogInfo.IsFile
  name: IsFile
  nameWithType: AssetLogInfo.IsFile
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.IsFile
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.TeamLog.AssetLogInfo.AsFile*
  commentId: Overload:Dropbox.Api.TeamLog.AssetLogInfo.AsFile
  name: AsFile
  nameWithType: AssetLogInfo.AsFile
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.AsFile
- uid: Dropbox.Api.TeamLog.AssetLogInfo.File
  commentId: T:Dropbox.Api.TeamLog.AssetLogInfo.File
  parent: Dropbox.Api.TeamLog
  name: AssetLogInfo.File
  nameWithType: AssetLogInfo.File
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.File
- uid: Dropbox.Api.TeamLog.AssetLogInfo.IsFolder*
  commentId: Overload:Dropbox.Api.TeamLog.AssetLogInfo.IsFolder
  name: IsFolder
  nameWithType: AssetLogInfo.IsFolder
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.IsFolder
- uid: Dropbox.Api.TeamLog.AssetLogInfo.AsFolder*
  commentId: Overload:Dropbox.Api.TeamLog.AssetLogInfo.AsFolder
  name: AsFolder
  nameWithType: AssetLogInfo.AsFolder
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.AsFolder
- uid: Dropbox.Api.TeamLog.AssetLogInfo.Folder
  commentId: T:Dropbox.Api.TeamLog.AssetLogInfo.Folder
  parent: Dropbox.Api.TeamLog
  name: AssetLogInfo.Folder
  nameWithType: AssetLogInfo.Folder
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.Folder
- uid: Dropbox.Api.TeamLog.AssetLogInfo.IsPaperDocument*
  commentId: Overload:Dropbox.Api.TeamLog.AssetLogInfo.IsPaperDocument
  name: IsPaperDocument
  nameWithType: AssetLogInfo.IsPaperDocument
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.IsPaperDocument
- uid: Dropbox.Api.TeamLog.AssetLogInfo.AsPaperDocument*
  commentId: Overload:Dropbox.Api.TeamLog.AssetLogInfo.AsPaperDocument
  name: AsPaperDocument
  nameWithType: AssetLogInfo.AsPaperDocument
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.AsPaperDocument
- uid: Dropbox.Api.TeamLog.AssetLogInfo.PaperDocument
  commentId: T:Dropbox.Api.TeamLog.AssetLogInfo.PaperDocument
  parent: Dropbox.Api.TeamLog
  name: AssetLogInfo.PaperDocument
  nameWithType: AssetLogInfo.PaperDocument
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.PaperDocument
- uid: Dropbox.Api.TeamLog.AssetLogInfo.IsPaperFolder*
  commentId: Overload:Dropbox.Api.TeamLog.AssetLogInfo.IsPaperFolder
  name: IsPaperFolder
  nameWithType: AssetLogInfo.IsPaperFolder
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.IsPaperFolder
- uid: Dropbox.Api.TeamLog.AssetLogInfo.AsPaperFolder*
  commentId: Overload:Dropbox.Api.TeamLog.AssetLogInfo.AsPaperFolder
  name: AsPaperFolder
  nameWithType: AssetLogInfo.AsPaperFolder
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.AsPaperFolder
- uid: Dropbox.Api.TeamLog.AssetLogInfo.PaperFolder
  commentId: T:Dropbox.Api.TeamLog.AssetLogInfo.PaperFolder
  parent: Dropbox.Api.TeamLog
  name: AssetLogInfo.PaperFolder
  nameWithType: AssetLogInfo.PaperFolder
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.PaperFolder
- uid: Dropbox.Api.TeamLog.AssetLogInfo.IsShowcaseDocument*
  commentId: Overload:Dropbox.Api.TeamLog.AssetLogInfo.IsShowcaseDocument
  name: IsShowcaseDocument
  nameWithType: AssetLogInfo.IsShowcaseDocument
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.IsShowcaseDocument
- uid: Dropbox.Api.TeamLog.AssetLogInfo.AsShowcaseDocument*
  commentId: Overload:Dropbox.Api.TeamLog.AssetLogInfo.AsShowcaseDocument
  name: AsShowcaseDocument
  nameWithType: AssetLogInfo.AsShowcaseDocument
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.AsShowcaseDocument
- uid: Dropbox.Api.TeamLog.AssetLogInfo.ShowcaseDocument
  commentId: T:Dropbox.Api.TeamLog.AssetLogInfo.ShowcaseDocument
  parent: Dropbox.Api.TeamLog
  name: AssetLogInfo.ShowcaseDocument
  nameWithType: AssetLogInfo.ShowcaseDocument
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.ShowcaseDocument
- uid: Dropbox.Api.TeamLog.AssetLogInfo.IsOther*
  commentId: Overload:Dropbox.Api.TeamLog.AssetLogInfo.IsOther
  name: IsOther
  nameWithType: AssetLogInfo.IsOther
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.IsOther
- uid: Dropbox.Api.TeamLog.AssetLogInfo.AsOther*
  commentId: Overload:Dropbox.Api.TeamLog.AssetLogInfo.AsOther
  name: AsOther
  nameWithType: AssetLogInfo.AsOther
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.AsOther
- uid: Dropbox.Api.TeamLog.AssetLogInfo.Other
  commentId: T:Dropbox.Api.TeamLog.AssetLogInfo.Other
  parent: Dropbox.Api.TeamLog
  name: AssetLogInfo.Other
  nameWithType: AssetLogInfo.Other
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.Other
