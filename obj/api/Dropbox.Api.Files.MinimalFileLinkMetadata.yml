### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.MinimalFileLinkMetadata
  commentId: T:Dropbox.Api.Files.MinimalFileLinkMetadata
  id: MinimalFileLinkMetadata
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.MinimalFileLinkMetadata.#ctor(System.String,System.String,System.String,System.String)
  - Dropbox.Api.Files.MinimalFileLinkMetadata.Id
  - Dropbox.Api.Files.MinimalFileLinkMetadata.Path
  - Dropbox.Api.Files.MinimalFileLinkMetadata.Rev
  - Dropbox.Api.Files.MinimalFileLinkMetadata.Url
  langs:
  - csharp
  - vb
  name: MinimalFileLinkMetadata
  nameWithType: MinimalFileLinkMetadata
  fullName: Dropbox.Api.Files.MinimalFileLinkMetadata
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MinimalFileLinkMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MinimalFileLinkMetadata
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MinimalFileLinkMetadata.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The minimal file link metadata object</p>\n"
  example: []
  syntax:
    content: public class MinimalFileLinkMetadata
    content.vb: Public Class MinimalFileLinkMetadata
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.MinimalFileLinkMetadata.#ctor(System.String,System.String,System.String,System.String)
  commentId: M:Dropbox.Api.Files.MinimalFileLinkMetadata.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: Dropbox.Api.Files.MinimalFileLinkMetadata
  langs:
  - csharp
  - vb
  name: MinimalFileLinkMetadata(String, String, String, String)
  nameWithType: MinimalFileLinkMetadata.MinimalFileLinkMetadata(String, String, String, String)
  fullName: Dropbox.Api.Files.MinimalFileLinkMetadata.MinimalFileLinkMetadata(System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MinimalFileLinkMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MinimalFileLinkMetadata.cs
    startLine: 41
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.MinimalFileLinkMetadata\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public MinimalFileLinkMetadata(string url, string rev, string id = null, string path = null)
    parameters:
    - id: url
      type: System.String
      description: URL of the shared link.
    - id: rev
      type: System.String
      description: >-
        A unique identifier for the current revision of a file. This

        field is the same rev as elsewhere in the API and can be used to detect changes and

        avoid conflicts.
    - id: id
      type: System.String
      description: Unique identifier for the linked file.
    - id: path
      type: System.String
      description: >-
        Full path in the user&apos;s Dropbox. This always starts with a

        slash. This field will only be present only if the linked file is in the

        authenticated user&apos;s Dropbox.
    content.vb: Public Sub New(url As String, rev As String, id As String = Nothing, path As String = Nothing)
  overload: Dropbox.Api.Files.MinimalFileLinkMetadata.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.MinimalFileLinkMetadata.Url
  commentId: P:Dropbox.Api.Files.MinimalFileLinkMetadata.Url
  id: Url
  parent: Dropbox.Api.Files.MinimalFileLinkMetadata
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: MinimalFileLinkMetadata.Url
  fullName: Dropbox.Api.Files.MinimalFileLinkMetadata.Url
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MinimalFileLinkMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Url
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MinimalFileLinkMetadata.cs
    startLine: 92
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>URL of the shared link.</p>\n"
  example: []
  syntax:
    content: public string Url { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Url As String
  overload: Dropbox.Api.Files.MinimalFileLinkMetadata.Url*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.MinimalFileLinkMetadata.Rev
  commentId: P:Dropbox.Api.Files.MinimalFileLinkMetadata.Rev
  id: Rev
  parent: Dropbox.Api.Files.MinimalFileLinkMetadata
  langs:
  - csharp
  - vb
  name: Rev
  nameWithType: MinimalFileLinkMetadata.Rev
  fullName: Dropbox.Api.Files.MinimalFileLinkMetadata.Rev
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MinimalFileLinkMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Rev
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MinimalFileLinkMetadata.cs
    startLine: 99
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>A unique identifier for the current revision of a file. This field is the\nsame rev as elsewhere in the API and can be used to detect changes and avoid\nconflicts.</p>\n"
  example: []
  syntax:
    content: public string Rev { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Rev As String
  overload: Dropbox.Api.Files.MinimalFileLinkMetadata.Rev*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.MinimalFileLinkMetadata.Id
  commentId: P:Dropbox.Api.Files.MinimalFileLinkMetadata.Id
  id: Id
  parent: Dropbox.Api.Files.MinimalFileLinkMetadata
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MinimalFileLinkMetadata.Id
  fullName: Dropbox.Api.Files.MinimalFileLinkMetadata.Id
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MinimalFileLinkMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Id
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MinimalFileLinkMetadata.cs
    startLine: 104
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Unique identifier for the linked file.</p>\n"
  example: []
  syntax:
    content: public string Id { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: Dropbox.Api.Files.MinimalFileLinkMetadata.Id*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.MinimalFileLinkMetadata.Path
  commentId: P:Dropbox.Api.Files.MinimalFileLinkMetadata.Path
  id: Path
  parent: Dropbox.Api.Files.MinimalFileLinkMetadata
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: MinimalFileLinkMetadata.Path
  fullName: Dropbox.Api.Files.MinimalFileLinkMetadata.Path
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MinimalFileLinkMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Path
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MinimalFileLinkMetadata.cs
    startLine: 111
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Full path in the user&apos;s Dropbox. This always starts with a slash. This field\nwill only be present only if the linked file is in the authenticated user&apos;s\nDropbox.</p>\n"
  example: []
  syntax:
    content: public string Path { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Path As String
  overload: Dropbox.Api.Files.MinimalFileLinkMetadata.Path*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Files.MinimalFileLinkMetadata
  commentId: T:Dropbox.Api.Files.MinimalFileLinkMetadata
  parent: Dropbox.Api.Files
  name: MinimalFileLinkMetadata
  nameWithType: MinimalFileLinkMetadata
  fullName: Dropbox.Api.Files.MinimalFileLinkMetadata
- uid: Dropbox.Api.Files.MinimalFileLinkMetadata.#ctor*
  commentId: Overload:Dropbox.Api.Files.MinimalFileLinkMetadata.#ctor
  name: MinimalFileLinkMetadata
  nameWithType: MinimalFileLinkMetadata.MinimalFileLinkMetadata
  fullName: Dropbox.Api.Files.MinimalFileLinkMetadata.MinimalFileLinkMetadata
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dropbox.Api.Files.MinimalFileLinkMetadata.Url*
  commentId: Overload:Dropbox.Api.Files.MinimalFileLinkMetadata.Url
  name: Url
  nameWithType: MinimalFileLinkMetadata.Url
  fullName: Dropbox.Api.Files.MinimalFileLinkMetadata.Url
- uid: Dropbox.Api.Files.MinimalFileLinkMetadata.Rev*
  commentId: Overload:Dropbox.Api.Files.MinimalFileLinkMetadata.Rev
  name: Rev
  nameWithType: MinimalFileLinkMetadata.Rev
  fullName: Dropbox.Api.Files.MinimalFileLinkMetadata.Rev
- uid: Dropbox.Api.Files.MinimalFileLinkMetadata.Id*
  commentId: Overload:Dropbox.Api.Files.MinimalFileLinkMetadata.Id
  name: Id
  nameWithType: MinimalFileLinkMetadata.Id
  fullName: Dropbox.Api.Files.MinimalFileLinkMetadata.Id
- uid: Dropbox.Api.Files.MinimalFileLinkMetadata.Path*
  commentId: Overload:Dropbox.Api.Files.MinimalFileLinkMetadata.Path
  name: Path
  nameWithType: MinimalFileLinkMetadata.Path
  fullName: Dropbox.Api.Files.MinimalFileLinkMetadata.Path
