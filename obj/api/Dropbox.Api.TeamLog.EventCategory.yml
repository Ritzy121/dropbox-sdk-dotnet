### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamLog.EventCategory
  commentId: T:Dropbox.Api.TeamLog.EventCategory
  id: EventCategory
  parent: Dropbox.Api.TeamLog
  children:
  - Dropbox.Api.TeamLog.EventCategory.#ctor
  - Dropbox.Api.TeamLog.EventCategory.AsAdminAlerting
  - Dropbox.Api.TeamLog.EventCategory.AsApps
  - Dropbox.Api.TeamLog.EventCategory.AsComments
  - Dropbox.Api.TeamLog.EventCategory.AsDataGovernance
  - Dropbox.Api.TeamLog.EventCategory.AsDevices
  - Dropbox.Api.TeamLog.EventCategory.AsDomains
  - Dropbox.Api.TeamLog.EventCategory.AsFileOperations
  - Dropbox.Api.TeamLog.EventCategory.AsFileRequests
  - Dropbox.Api.TeamLog.EventCategory.AsGroups
  - Dropbox.Api.TeamLog.EventCategory.AsLogins
  - Dropbox.Api.TeamLog.EventCategory.AsMembers
  - Dropbox.Api.TeamLog.EventCategory.AsOther
  - Dropbox.Api.TeamLog.EventCategory.AsPaper
  - Dropbox.Api.TeamLog.EventCategory.AsPasswords
  - Dropbox.Api.TeamLog.EventCategory.AsReports
  - Dropbox.Api.TeamLog.EventCategory.AsSharing
  - Dropbox.Api.TeamLog.EventCategory.AsShowcase
  - Dropbox.Api.TeamLog.EventCategory.AsSso
  - Dropbox.Api.TeamLog.EventCategory.AsTeamFolders
  - Dropbox.Api.TeamLog.EventCategory.AsTeamPolicies
  - Dropbox.Api.TeamLog.EventCategory.AsTeamProfile
  - Dropbox.Api.TeamLog.EventCategory.AsTfa
  - Dropbox.Api.TeamLog.EventCategory.AsTrustedTeams
  - Dropbox.Api.TeamLog.EventCategory.IsAdminAlerting
  - Dropbox.Api.TeamLog.EventCategory.IsApps
  - Dropbox.Api.TeamLog.EventCategory.IsComments
  - Dropbox.Api.TeamLog.EventCategory.IsDataGovernance
  - Dropbox.Api.TeamLog.EventCategory.IsDevices
  - Dropbox.Api.TeamLog.EventCategory.IsDomains
  - Dropbox.Api.TeamLog.EventCategory.IsFileOperations
  - Dropbox.Api.TeamLog.EventCategory.IsFileRequests
  - Dropbox.Api.TeamLog.EventCategory.IsGroups
  - Dropbox.Api.TeamLog.EventCategory.IsLogins
  - Dropbox.Api.TeamLog.EventCategory.IsMembers
  - Dropbox.Api.TeamLog.EventCategory.IsOther
  - Dropbox.Api.TeamLog.EventCategory.IsPaper
  - Dropbox.Api.TeamLog.EventCategory.IsPasswords
  - Dropbox.Api.TeamLog.EventCategory.IsReports
  - Dropbox.Api.TeamLog.EventCategory.IsSharing
  - Dropbox.Api.TeamLog.EventCategory.IsShowcase
  - Dropbox.Api.TeamLog.EventCategory.IsSso
  - Dropbox.Api.TeamLog.EventCategory.IsTeamFolders
  - Dropbox.Api.TeamLog.EventCategory.IsTeamPolicies
  - Dropbox.Api.TeamLog.EventCategory.IsTeamProfile
  - Dropbox.Api.TeamLog.EventCategory.IsTfa
  - Dropbox.Api.TeamLog.EventCategory.IsTrustedTeams
  langs:
  - csharp
  - vb
  name: EventCategory
  nameWithType: EventCategory
  fullName: Dropbox.Api.TeamLog.EventCategory
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EventCategory
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Category of events in event audit log.</p>\n"
  example: []
  syntax:
    content: public class EventCategory
    content.vb: Public Class EventCategory
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.TeamLog.EventCategory.AdminAlerting
  - Dropbox.Api.TeamLog.EventCategory.Apps
  - Dropbox.Api.TeamLog.EventCategory.Comments
  - Dropbox.Api.TeamLog.EventCategory.DataGovernance
  - Dropbox.Api.TeamLog.EventCategory.Devices
  - Dropbox.Api.TeamLog.EventCategory.Domains
  - Dropbox.Api.TeamLog.EventCategory.FileOperations
  - Dropbox.Api.TeamLog.EventCategory.FileRequests
  - Dropbox.Api.TeamLog.EventCategory.Groups
  - Dropbox.Api.TeamLog.EventCategory.Logins
  - Dropbox.Api.TeamLog.EventCategory.Members
  - Dropbox.Api.TeamLog.EventCategory.Other
  - Dropbox.Api.TeamLog.EventCategory.Paper
  - Dropbox.Api.TeamLog.EventCategory.Passwords
  - Dropbox.Api.TeamLog.EventCategory.Reports
  - Dropbox.Api.TeamLog.EventCategory.Sharing
  - Dropbox.Api.TeamLog.EventCategory.Showcase
  - Dropbox.Api.TeamLog.EventCategory.Sso
  - Dropbox.Api.TeamLog.EventCategory.TeamFolders
  - Dropbox.Api.TeamLog.EventCategory.TeamPolicies
  - Dropbox.Api.TeamLog.EventCategory.TeamProfile
  - Dropbox.Api.TeamLog.EventCategory.Tfa
  - Dropbox.Api.TeamLog.EventCategory.TrustedTeams
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.TeamLog.EventCategory.#ctor
  commentId: M:Dropbox.Api.TeamLog.EventCategory.#ctor
  id: '#ctor'
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: EventCategory()
  nameWithType: EventCategory.EventCategory()
  fullName: Dropbox.Api.TeamLog.EventCategory.EventCategory()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 32
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamLog.EventCategory\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public EventCategory()
    content.vb: Public Sub New
  overload: Dropbox.Api.TeamLog.EventCategory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.TeamLog.EventCategory.IsAdminAlerting
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsAdminAlerting
  id: IsAdminAlerting
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsAdminAlerting
  nameWithType: EventCategory.IsAdminAlerting
  fullName: Dropbox.Api.TeamLog.EventCategory.IsAdminAlerting
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsAdminAlerting
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 39
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is AdminAlerting</p>\n"
  example: []
  syntax:
    content: public bool IsAdminAlerting { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAdminAlerting As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsAdminAlerting*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsAdminAlerting
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsAdminAlerting
  id: AsAdminAlerting
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsAdminAlerting
  nameWithType: EventCategory.AsAdminAlerting
  fullName: Dropbox.Api.TeamLog.EventCategory.AsAdminAlerting
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsAdminAlerting
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 50
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a AdminAlerting, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.AdminAlerting AsAdminAlerting { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.AdminAlerting
    content.vb: Public ReadOnly Property AsAdminAlerting As EventCategory.AdminAlerting
  overload: Dropbox.Api.TeamLog.EventCategory.AsAdminAlerting*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsApps
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsApps
  id: IsApps
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsApps
  nameWithType: EventCategory.IsApps
  fullName: Dropbox.Api.TeamLog.EventCategory.IsApps
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsApps
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 61
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Apps</p>\n"
  example: []
  syntax:
    content: public bool IsApps { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsApps As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsApps*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsApps
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsApps
  id: AsApps
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsApps
  nameWithType: EventCategory.AsApps
  fullName: Dropbox.Api.TeamLog.EventCategory.AsApps
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsApps
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 72
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Apps, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.Apps AsApps { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.Apps
    content.vb: Public ReadOnly Property AsApps As EventCategory.Apps
  overload: Dropbox.Api.TeamLog.EventCategory.AsApps*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsComments
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsComments
  id: IsComments
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsComments
  nameWithType: EventCategory.IsComments
  fullName: Dropbox.Api.TeamLog.EventCategory.IsComments
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsComments
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 83
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Comments</p>\n"
  example: []
  syntax:
    content: public bool IsComments { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsComments As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsComments*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsComments
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsComments
  id: AsComments
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsComments
  nameWithType: EventCategory.AsComments
  fullName: Dropbox.Api.TeamLog.EventCategory.AsComments
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsComments
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 94
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Comments, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.Comments AsComments { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.Comments
    content.vb: Public ReadOnly Property AsComments As EventCategory.Comments
  overload: Dropbox.Api.TeamLog.EventCategory.AsComments*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsDataGovernance
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsDataGovernance
  id: IsDataGovernance
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsDataGovernance
  nameWithType: EventCategory.IsDataGovernance
  fullName: Dropbox.Api.TeamLog.EventCategory.IsDataGovernance
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsDataGovernance
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 105
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is DataGovernance</p>\n"
  example: []
  syntax:
    content: public bool IsDataGovernance { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDataGovernance As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsDataGovernance*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsDataGovernance
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsDataGovernance
  id: AsDataGovernance
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsDataGovernance
  nameWithType: EventCategory.AsDataGovernance
  fullName: Dropbox.Api.TeamLog.EventCategory.AsDataGovernance
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsDataGovernance
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 116
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a DataGovernance, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.DataGovernance AsDataGovernance { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.DataGovernance
    content.vb: Public ReadOnly Property AsDataGovernance As EventCategory.DataGovernance
  overload: Dropbox.Api.TeamLog.EventCategory.AsDataGovernance*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsDevices
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsDevices
  id: IsDevices
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsDevices
  nameWithType: EventCategory.IsDevices
  fullName: Dropbox.Api.TeamLog.EventCategory.IsDevices
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsDevices
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 127
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Devices</p>\n"
  example: []
  syntax:
    content: public bool IsDevices { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDevices As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsDevices*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsDevices
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsDevices
  id: AsDevices
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsDevices
  nameWithType: EventCategory.AsDevices
  fullName: Dropbox.Api.TeamLog.EventCategory.AsDevices
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsDevices
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 138
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Devices, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.Devices AsDevices { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.Devices
    content.vb: Public ReadOnly Property AsDevices As EventCategory.Devices
  overload: Dropbox.Api.TeamLog.EventCategory.AsDevices*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsDomains
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsDomains
  id: IsDomains
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsDomains
  nameWithType: EventCategory.IsDomains
  fullName: Dropbox.Api.TeamLog.EventCategory.IsDomains
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsDomains
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 149
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Domains</p>\n"
  example: []
  syntax:
    content: public bool IsDomains { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDomains As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsDomains*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsDomains
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsDomains
  id: AsDomains
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsDomains
  nameWithType: EventCategory.AsDomains
  fullName: Dropbox.Api.TeamLog.EventCategory.AsDomains
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsDomains
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 160
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Domains, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.Domains AsDomains { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.Domains
    content.vb: Public ReadOnly Property AsDomains As EventCategory.Domains
  overload: Dropbox.Api.TeamLog.EventCategory.AsDomains*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsFileOperations
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsFileOperations
  id: IsFileOperations
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsFileOperations
  nameWithType: EventCategory.IsFileOperations
  fullName: Dropbox.Api.TeamLog.EventCategory.IsFileOperations
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsFileOperations
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 171
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is FileOperations</p>\n"
  example: []
  syntax:
    content: public bool IsFileOperations { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFileOperations As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsFileOperations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsFileOperations
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsFileOperations
  id: AsFileOperations
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsFileOperations
  nameWithType: EventCategory.AsFileOperations
  fullName: Dropbox.Api.TeamLog.EventCategory.AsFileOperations
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsFileOperations
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 182
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a FileOperations, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.FileOperations AsFileOperations { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.FileOperations
    content.vb: Public ReadOnly Property AsFileOperations As EventCategory.FileOperations
  overload: Dropbox.Api.TeamLog.EventCategory.AsFileOperations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsFileRequests
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsFileRequests
  id: IsFileRequests
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsFileRequests
  nameWithType: EventCategory.IsFileRequests
  fullName: Dropbox.Api.TeamLog.EventCategory.IsFileRequests
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsFileRequests
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 193
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is FileRequests</p>\n"
  example: []
  syntax:
    content: public bool IsFileRequests { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFileRequests As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsFileRequests*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsFileRequests
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsFileRequests
  id: AsFileRequests
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsFileRequests
  nameWithType: EventCategory.AsFileRequests
  fullName: Dropbox.Api.TeamLog.EventCategory.AsFileRequests
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsFileRequests
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 204
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a FileRequests, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.FileRequests AsFileRequests { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.FileRequests
    content.vb: Public ReadOnly Property AsFileRequests As EventCategory.FileRequests
  overload: Dropbox.Api.TeamLog.EventCategory.AsFileRequests*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsGroups
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsGroups
  id: IsGroups
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsGroups
  nameWithType: EventCategory.IsGroups
  fullName: Dropbox.Api.TeamLog.EventCategory.IsGroups
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsGroups
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 215
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Groups</p>\n"
  example: []
  syntax:
    content: public bool IsGroups { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsGroups As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsGroups*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsGroups
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsGroups
  id: AsGroups
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsGroups
  nameWithType: EventCategory.AsGroups
  fullName: Dropbox.Api.TeamLog.EventCategory.AsGroups
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsGroups
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 226
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Groups, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.Groups AsGroups { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.Groups
    content.vb: Public ReadOnly Property AsGroups As EventCategory.Groups
  overload: Dropbox.Api.TeamLog.EventCategory.AsGroups*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsLogins
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsLogins
  id: IsLogins
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsLogins
  nameWithType: EventCategory.IsLogins
  fullName: Dropbox.Api.TeamLog.EventCategory.IsLogins
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsLogins
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 237
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Logins</p>\n"
  example: []
  syntax:
    content: public bool IsLogins { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLogins As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsLogins*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsLogins
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsLogins
  id: AsLogins
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsLogins
  nameWithType: EventCategory.AsLogins
  fullName: Dropbox.Api.TeamLog.EventCategory.AsLogins
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsLogins
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 248
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Logins, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.Logins AsLogins { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.Logins
    content.vb: Public ReadOnly Property AsLogins As EventCategory.Logins
  overload: Dropbox.Api.TeamLog.EventCategory.AsLogins*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsMembers
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsMembers
  id: IsMembers
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsMembers
  nameWithType: EventCategory.IsMembers
  fullName: Dropbox.Api.TeamLog.EventCategory.IsMembers
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsMembers
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 259
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Members</p>\n"
  example: []
  syntax:
    content: public bool IsMembers { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMembers As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsMembers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsMembers
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsMembers
  id: AsMembers
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsMembers
  nameWithType: EventCategory.AsMembers
  fullName: Dropbox.Api.TeamLog.EventCategory.AsMembers
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsMembers
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 270
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Members, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.Members AsMembers { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.Members
    content.vb: Public ReadOnly Property AsMembers As EventCategory.Members
  overload: Dropbox.Api.TeamLog.EventCategory.AsMembers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsPaper
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsPaper
  id: IsPaper
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsPaper
  nameWithType: EventCategory.IsPaper
  fullName: Dropbox.Api.TeamLog.EventCategory.IsPaper
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsPaper
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 281
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Paper</p>\n"
  example: []
  syntax:
    content: public bool IsPaper { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPaper As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsPaper*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsPaper
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsPaper
  id: AsPaper
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsPaper
  nameWithType: EventCategory.AsPaper
  fullName: Dropbox.Api.TeamLog.EventCategory.AsPaper
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsPaper
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 292
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Paper, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.Paper AsPaper { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.Paper
    content.vb: Public ReadOnly Property AsPaper As EventCategory.Paper
  overload: Dropbox.Api.TeamLog.EventCategory.AsPaper*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsPasswords
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsPasswords
  id: IsPasswords
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsPasswords
  nameWithType: EventCategory.IsPasswords
  fullName: Dropbox.Api.TeamLog.EventCategory.IsPasswords
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsPasswords
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 303
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Passwords</p>\n"
  example: []
  syntax:
    content: public bool IsPasswords { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPasswords As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsPasswords*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsPasswords
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsPasswords
  id: AsPasswords
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsPasswords
  nameWithType: EventCategory.AsPasswords
  fullName: Dropbox.Api.TeamLog.EventCategory.AsPasswords
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsPasswords
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 314
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Passwords, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.Passwords AsPasswords { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.Passwords
    content.vb: Public ReadOnly Property AsPasswords As EventCategory.Passwords
  overload: Dropbox.Api.TeamLog.EventCategory.AsPasswords*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsReports
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsReports
  id: IsReports
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsReports
  nameWithType: EventCategory.IsReports
  fullName: Dropbox.Api.TeamLog.EventCategory.IsReports
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsReports
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 325
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Reports</p>\n"
  example: []
  syntax:
    content: public bool IsReports { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReports As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsReports*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsReports
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsReports
  id: AsReports
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsReports
  nameWithType: EventCategory.AsReports
  fullName: Dropbox.Api.TeamLog.EventCategory.AsReports
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsReports
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 336
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Reports, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.Reports AsReports { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.Reports
    content.vb: Public ReadOnly Property AsReports As EventCategory.Reports
  overload: Dropbox.Api.TeamLog.EventCategory.AsReports*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsSharing
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsSharing
  id: IsSharing
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsSharing
  nameWithType: EventCategory.IsSharing
  fullName: Dropbox.Api.TeamLog.EventCategory.IsSharing
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsSharing
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 347
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Sharing</p>\n"
  example: []
  syntax:
    content: public bool IsSharing { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSharing As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsSharing*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsSharing
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsSharing
  id: AsSharing
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsSharing
  nameWithType: EventCategory.AsSharing
  fullName: Dropbox.Api.TeamLog.EventCategory.AsSharing
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsSharing
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 358
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Sharing, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.Sharing AsSharing { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.Sharing
    content.vb: Public ReadOnly Property AsSharing As EventCategory.Sharing
  overload: Dropbox.Api.TeamLog.EventCategory.AsSharing*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsShowcase
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsShowcase
  id: IsShowcase
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsShowcase
  nameWithType: EventCategory.IsShowcase
  fullName: Dropbox.Api.TeamLog.EventCategory.IsShowcase
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsShowcase
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 369
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Showcase</p>\n"
  example: []
  syntax:
    content: public bool IsShowcase { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsShowcase As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsShowcase*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsShowcase
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsShowcase
  id: AsShowcase
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsShowcase
  nameWithType: EventCategory.AsShowcase
  fullName: Dropbox.Api.TeamLog.EventCategory.AsShowcase
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsShowcase
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 380
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Showcase, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.Showcase AsShowcase { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.Showcase
    content.vb: Public ReadOnly Property AsShowcase As EventCategory.Showcase
  overload: Dropbox.Api.TeamLog.EventCategory.AsShowcase*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsSso
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsSso
  id: IsSso
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsSso
  nameWithType: EventCategory.IsSso
  fullName: Dropbox.Api.TeamLog.EventCategory.IsSso
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsSso
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 391
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Sso</p>\n"
  example: []
  syntax:
    content: public bool IsSso { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSso As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsSso*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsSso
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsSso
  id: AsSso
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsSso
  nameWithType: EventCategory.AsSso
  fullName: Dropbox.Api.TeamLog.EventCategory.AsSso
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsSso
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 402
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Sso, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.Sso AsSso { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.Sso
    content.vb: Public ReadOnly Property AsSso As EventCategory.Sso
  overload: Dropbox.Api.TeamLog.EventCategory.AsSso*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsTeamFolders
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsTeamFolders
  id: IsTeamFolders
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsTeamFolders
  nameWithType: EventCategory.IsTeamFolders
  fullName: Dropbox.Api.TeamLog.EventCategory.IsTeamFolders
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsTeamFolders
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 413
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is TeamFolders</p>\n"
  example: []
  syntax:
    content: public bool IsTeamFolders { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTeamFolders As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsTeamFolders*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsTeamFolders
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsTeamFolders
  id: AsTeamFolders
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsTeamFolders
  nameWithType: EventCategory.AsTeamFolders
  fullName: Dropbox.Api.TeamLog.EventCategory.AsTeamFolders
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsTeamFolders
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 424
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a TeamFolders, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.TeamFolders AsTeamFolders { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.TeamFolders
    content.vb: Public ReadOnly Property AsTeamFolders As EventCategory.TeamFolders
  overload: Dropbox.Api.TeamLog.EventCategory.AsTeamFolders*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsTeamPolicies
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsTeamPolicies
  id: IsTeamPolicies
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsTeamPolicies
  nameWithType: EventCategory.IsTeamPolicies
  fullName: Dropbox.Api.TeamLog.EventCategory.IsTeamPolicies
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsTeamPolicies
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 435
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is TeamPolicies</p>\n"
  example: []
  syntax:
    content: public bool IsTeamPolicies { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTeamPolicies As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsTeamPolicies*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsTeamPolicies
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsTeamPolicies
  id: AsTeamPolicies
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsTeamPolicies
  nameWithType: EventCategory.AsTeamPolicies
  fullName: Dropbox.Api.TeamLog.EventCategory.AsTeamPolicies
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsTeamPolicies
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 446
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a TeamPolicies, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.TeamPolicies AsTeamPolicies { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.TeamPolicies
    content.vb: Public ReadOnly Property AsTeamPolicies As EventCategory.TeamPolicies
  overload: Dropbox.Api.TeamLog.EventCategory.AsTeamPolicies*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsTeamProfile
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsTeamProfile
  id: IsTeamProfile
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsTeamProfile
  nameWithType: EventCategory.IsTeamProfile
  fullName: Dropbox.Api.TeamLog.EventCategory.IsTeamProfile
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsTeamProfile
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 457
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is TeamProfile</p>\n"
  example: []
  syntax:
    content: public bool IsTeamProfile { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTeamProfile As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsTeamProfile*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsTeamProfile
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsTeamProfile
  id: AsTeamProfile
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsTeamProfile
  nameWithType: EventCategory.AsTeamProfile
  fullName: Dropbox.Api.TeamLog.EventCategory.AsTeamProfile
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsTeamProfile
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 468
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a TeamProfile, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.TeamProfile AsTeamProfile { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.TeamProfile
    content.vb: Public ReadOnly Property AsTeamProfile As EventCategory.TeamProfile
  overload: Dropbox.Api.TeamLog.EventCategory.AsTeamProfile*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsTfa
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsTfa
  id: IsTfa
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsTfa
  nameWithType: EventCategory.IsTfa
  fullName: Dropbox.Api.TeamLog.EventCategory.IsTfa
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsTfa
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 479
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Tfa</p>\n"
  example: []
  syntax:
    content: public bool IsTfa { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTfa As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsTfa*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsTfa
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsTfa
  id: AsTfa
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsTfa
  nameWithType: EventCategory.AsTfa
  fullName: Dropbox.Api.TeamLog.EventCategory.AsTfa
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsTfa
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 490
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Tfa, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.Tfa AsTfa { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.Tfa
    content.vb: Public ReadOnly Property AsTfa As EventCategory.Tfa
  overload: Dropbox.Api.TeamLog.EventCategory.AsTfa*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsTrustedTeams
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsTrustedTeams
  id: IsTrustedTeams
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsTrustedTeams
  nameWithType: EventCategory.IsTrustedTeams
  fullName: Dropbox.Api.TeamLog.EventCategory.IsTrustedTeams
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsTrustedTeams
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 501
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is TrustedTeams</p>\n"
  example: []
  syntax:
    content: public bool IsTrustedTeams { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTrustedTeams As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsTrustedTeams*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsTrustedTeams
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsTrustedTeams
  id: AsTrustedTeams
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsTrustedTeams
  nameWithType: EventCategory.AsTrustedTeams
  fullName: Dropbox.Api.TeamLog.EventCategory.AsTrustedTeams
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsTrustedTeams
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 512
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a TrustedTeams, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.TrustedTeams AsTrustedTeams { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.TrustedTeams
    content.vb: Public ReadOnly Property AsTrustedTeams As EventCategory.TrustedTeams
  overload: Dropbox.Api.TeamLog.EventCategory.AsTrustedTeams*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.IsOther
  commentId: P:Dropbox.Api.TeamLog.EventCategory.IsOther
  id: IsOther
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: EventCategory.IsOther
  fullName: Dropbox.Api.TeamLog.EventCategory.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 523
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.TeamLog.EventCategory.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.EventCategory.AsOther
  commentId: P:Dropbox.Api.TeamLog.EventCategory.AsOther
  id: AsOther
  parent: Dropbox.Api.TeamLog.EventCategory
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: EventCategory.AsOther
  fullName: Dropbox.Api.TeamLog.EventCategory.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/EventCategory.cs
    startLine: 534
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public EventCategory.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory.Other
    content.vb: Public ReadOnly Property AsOther As EventCategory.Other
  overload: Dropbox.Api.TeamLog.EventCategory.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.TeamLog
  commentId: N:Dropbox.Api.TeamLog
  name: Dropbox.Api.TeamLog
  nameWithType: Dropbox.Api.TeamLog
  fullName: Dropbox.Api.TeamLog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.TeamLog.EventCategory
  commentId: T:Dropbox.Api.TeamLog.EventCategory
  parent: Dropbox.Api.TeamLog
  name: EventCategory
  nameWithType: EventCategory
  fullName: Dropbox.Api.TeamLog.EventCategory
- uid: Dropbox.Api.TeamLog.EventCategory.#ctor*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.#ctor
  name: EventCategory
  nameWithType: EventCategory.EventCategory
  fullName: Dropbox.Api.TeamLog.EventCategory.EventCategory
- uid: Dropbox.Api.TeamLog.EventCategory.IsAdminAlerting*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsAdminAlerting
  name: IsAdminAlerting
  nameWithType: EventCategory.IsAdminAlerting
  fullName: Dropbox.Api.TeamLog.EventCategory.IsAdminAlerting
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.TeamLog.EventCategory.AsAdminAlerting*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsAdminAlerting
  name: AsAdminAlerting
  nameWithType: EventCategory.AsAdminAlerting
  fullName: Dropbox.Api.TeamLog.EventCategory.AsAdminAlerting
- uid: Dropbox.Api.TeamLog.EventCategory.AdminAlerting
  commentId: T:Dropbox.Api.TeamLog.EventCategory.AdminAlerting
  parent: Dropbox.Api.TeamLog
  name: EventCategory.AdminAlerting
  nameWithType: EventCategory.AdminAlerting
  fullName: Dropbox.Api.TeamLog.EventCategory.AdminAlerting
- uid: Dropbox.Api.TeamLog.EventCategory.IsApps*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsApps
  name: IsApps
  nameWithType: EventCategory.IsApps
  fullName: Dropbox.Api.TeamLog.EventCategory.IsApps
- uid: Dropbox.Api.TeamLog.EventCategory.AsApps*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsApps
  name: AsApps
  nameWithType: EventCategory.AsApps
  fullName: Dropbox.Api.TeamLog.EventCategory.AsApps
- uid: Dropbox.Api.TeamLog.EventCategory.Apps
  commentId: T:Dropbox.Api.TeamLog.EventCategory.Apps
  parent: Dropbox.Api.TeamLog
  name: EventCategory.Apps
  nameWithType: EventCategory.Apps
  fullName: Dropbox.Api.TeamLog.EventCategory.Apps
- uid: Dropbox.Api.TeamLog.EventCategory.IsComments*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsComments
  name: IsComments
  nameWithType: EventCategory.IsComments
  fullName: Dropbox.Api.TeamLog.EventCategory.IsComments
- uid: Dropbox.Api.TeamLog.EventCategory.AsComments*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsComments
  name: AsComments
  nameWithType: EventCategory.AsComments
  fullName: Dropbox.Api.TeamLog.EventCategory.AsComments
- uid: Dropbox.Api.TeamLog.EventCategory.Comments
  commentId: T:Dropbox.Api.TeamLog.EventCategory.Comments
  parent: Dropbox.Api.TeamLog
  name: EventCategory.Comments
  nameWithType: EventCategory.Comments
  fullName: Dropbox.Api.TeamLog.EventCategory.Comments
- uid: Dropbox.Api.TeamLog.EventCategory.IsDataGovernance*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsDataGovernance
  name: IsDataGovernance
  nameWithType: EventCategory.IsDataGovernance
  fullName: Dropbox.Api.TeamLog.EventCategory.IsDataGovernance
- uid: Dropbox.Api.TeamLog.EventCategory.AsDataGovernance*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsDataGovernance
  name: AsDataGovernance
  nameWithType: EventCategory.AsDataGovernance
  fullName: Dropbox.Api.TeamLog.EventCategory.AsDataGovernance
- uid: Dropbox.Api.TeamLog.EventCategory.DataGovernance
  commentId: T:Dropbox.Api.TeamLog.EventCategory.DataGovernance
  parent: Dropbox.Api.TeamLog
  name: EventCategory.DataGovernance
  nameWithType: EventCategory.DataGovernance
  fullName: Dropbox.Api.TeamLog.EventCategory.DataGovernance
- uid: Dropbox.Api.TeamLog.EventCategory.IsDevices*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsDevices
  name: IsDevices
  nameWithType: EventCategory.IsDevices
  fullName: Dropbox.Api.TeamLog.EventCategory.IsDevices
- uid: Dropbox.Api.TeamLog.EventCategory.AsDevices*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsDevices
  name: AsDevices
  nameWithType: EventCategory.AsDevices
  fullName: Dropbox.Api.TeamLog.EventCategory.AsDevices
- uid: Dropbox.Api.TeamLog.EventCategory.Devices
  commentId: T:Dropbox.Api.TeamLog.EventCategory.Devices
  parent: Dropbox.Api.TeamLog
  name: EventCategory.Devices
  nameWithType: EventCategory.Devices
  fullName: Dropbox.Api.TeamLog.EventCategory.Devices
- uid: Dropbox.Api.TeamLog.EventCategory.IsDomains*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsDomains
  name: IsDomains
  nameWithType: EventCategory.IsDomains
  fullName: Dropbox.Api.TeamLog.EventCategory.IsDomains
- uid: Dropbox.Api.TeamLog.EventCategory.AsDomains*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsDomains
  name: AsDomains
  nameWithType: EventCategory.AsDomains
  fullName: Dropbox.Api.TeamLog.EventCategory.AsDomains
- uid: Dropbox.Api.TeamLog.EventCategory.Domains
  commentId: T:Dropbox.Api.TeamLog.EventCategory.Domains
  parent: Dropbox.Api.TeamLog
  name: EventCategory.Domains
  nameWithType: EventCategory.Domains
  fullName: Dropbox.Api.TeamLog.EventCategory.Domains
- uid: Dropbox.Api.TeamLog.EventCategory.IsFileOperations*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsFileOperations
  name: IsFileOperations
  nameWithType: EventCategory.IsFileOperations
  fullName: Dropbox.Api.TeamLog.EventCategory.IsFileOperations
- uid: Dropbox.Api.TeamLog.EventCategory.AsFileOperations*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsFileOperations
  name: AsFileOperations
  nameWithType: EventCategory.AsFileOperations
  fullName: Dropbox.Api.TeamLog.EventCategory.AsFileOperations
- uid: Dropbox.Api.TeamLog.EventCategory.FileOperations
  commentId: T:Dropbox.Api.TeamLog.EventCategory.FileOperations
  parent: Dropbox.Api.TeamLog
  name: EventCategory.FileOperations
  nameWithType: EventCategory.FileOperations
  fullName: Dropbox.Api.TeamLog.EventCategory.FileOperations
- uid: Dropbox.Api.TeamLog.EventCategory.IsFileRequests*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsFileRequests
  name: IsFileRequests
  nameWithType: EventCategory.IsFileRequests
  fullName: Dropbox.Api.TeamLog.EventCategory.IsFileRequests
- uid: Dropbox.Api.TeamLog.EventCategory.AsFileRequests*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsFileRequests
  name: AsFileRequests
  nameWithType: EventCategory.AsFileRequests
  fullName: Dropbox.Api.TeamLog.EventCategory.AsFileRequests
- uid: Dropbox.Api.TeamLog.EventCategory.FileRequests
  commentId: T:Dropbox.Api.TeamLog.EventCategory.FileRequests
  parent: Dropbox.Api.TeamLog
  name: EventCategory.FileRequests
  nameWithType: EventCategory.FileRequests
  fullName: Dropbox.Api.TeamLog.EventCategory.FileRequests
- uid: Dropbox.Api.TeamLog.EventCategory.IsGroups*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsGroups
  name: IsGroups
  nameWithType: EventCategory.IsGroups
  fullName: Dropbox.Api.TeamLog.EventCategory.IsGroups
- uid: Dropbox.Api.TeamLog.EventCategory.AsGroups*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsGroups
  name: AsGroups
  nameWithType: EventCategory.AsGroups
  fullName: Dropbox.Api.TeamLog.EventCategory.AsGroups
- uid: Dropbox.Api.TeamLog.EventCategory.Groups
  commentId: T:Dropbox.Api.TeamLog.EventCategory.Groups
  parent: Dropbox.Api.TeamLog
  name: EventCategory.Groups
  nameWithType: EventCategory.Groups
  fullName: Dropbox.Api.TeamLog.EventCategory.Groups
- uid: Dropbox.Api.TeamLog.EventCategory.IsLogins*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsLogins
  name: IsLogins
  nameWithType: EventCategory.IsLogins
  fullName: Dropbox.Api.TeamLog.EventCategory.IsLogins
- uid: Dropbox.Api.TeamLog.EventCategory.AsLogins*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsLogins
  name: AsLogins
  nameWithType: EventCategory.AsLogins
  fullName: Dropbox.Api.TeamLog.EventCategory.AsLogins
- uid: Dropbox.Api.TeamLog.EventCategory.Logins
  commentId: T:Dropbox.Api.TeamLog.EventCategory.Logins
  parent: Dropbox.Api.TeamLog
  name: EventCategory.Logins
  nameWithType: EventCategory.Logins
  fullName: Dropbox.Api.TeamLog.EventCategory.Logins
- uid: Dropbox.Api.TeamLog.EventCategory.IsMembers*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsMembers
  name: IsMembers
  nameWithType: EventCategory.IsMembers
  fullName: Dropbox.Api.TeamLog.EventCategory.IsMembers
- uid: Dropbox.Api.TeamLog.EventCategory.AsMembers*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsMembers
  name: AsMembers
  nameWithType: EventCategory.AsMembers
  fullName: Dropbox.Api.TeamLog.EventCategory.AsMembers
- uid: Dropbox.Api.TeamLog.EventCategory.Members
  commentId: T:Dropbox.Api.TeamLog.EventCategory.Members
  parent: Dropbox.Api.TeamLog
  name: EventCategory.Members
  nameWithType: EventCategory.Members
  fullName: Dropbox.Api.TeamLog.EventCategory.Members
- uid: Dropbox.Api.TeamLog.EventCategory.IsPaper*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsPaper
  name: IsPaper
  nameWithType: EventCategory.IsPaper
  fullName: Dropbox.Api.TeamLog.EventCategory.IsPaper
- uid: Dropbox.Api.TeamLog.EventCategory.AsPaper*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsPaper
  name: AsPaper
  nameWithType: EventCategory.AsPaper
  fullName: Dropbox.Api.TeamLog.EventCategory.AsPaper
- uid: Dropbox.Api.TeamLog.EventCategory.Paper
  commentId: T:Dropbox.Api.TeamLog.EventCategory.Paper
  parent: Dropbox.Api.TeamLog
  name: EventCategory.Paper
  nameWithType: EventCategory.Paper
  fullName: Dropbox.Api.TeamLog.EventCategory.Paper
- uid: Dropbox.Api.TeamLog.EventCategory.IsPasswords*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsPasswords
  name: IsPasswords
  nameWithType: EventCategory.IsPasswords
  fullName: Dropbox.Api.TeamLog.EventCategory.IsPasswords
- uid: Dropbox.Api.TeamLog.EventCategory.AsPasswords*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsPasswords
  name: AsPasswords
  nameWithType: EventCategory.AsPasswords
  fullName: Dropbox.Api.TeamLog.EventCategory.AsPasswords
- uid: Dropbox.Api.TeamLog.EventCategory.Passwords
  commentId: T:Dropbox.Api.TeamLog.EventCategory.Passwords
  parent: Dropbox.Api.TeamLog
  name: EventCategory.Passwords
  nameWithType: EventCategory.Passwords
  fullName: Dropbox.Api.TeamLog.EventCategory.Passwords
- uid: Dropbox.Api.TeamLog.EventCategory.IsReports*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsReports
  name: IsReports
  nameWithType: EventCategory.IsReports
  fullName: Dropbox.Api.TeamLog.EventCategory.IsReports
- uid: Dropbox.Api.TeamLog.EventCategory.AsReports*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsReports
  name: AsReports
  nameWithType: EventCategory.AsReports
  fullName: Dropbox.Api.TeamLog.EventCategory.AsReports
- uid: Dropbox.Api.TeamLog.EventCategory.Reports
  commentId: T:Dropbox.Api.TeamLog.EventCategory.Reports
  parent: Dropbox.Api.TeamLog
  name: EventCategory.Reports
  nameWithType: EventCategory.Reports
  fullName: Dropbox.Api.TeamLog.EventCategory.Reports
- uid: Dropbox.Api.TeamLog.EventCategory.IsSharing*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsSharing
  name: IsSharing
  nameWithType: EventCategory.IsSharing
  fullName: Dropbox.Api.TeamLog.EventCategory.IsSharing
- uid: Dropbox.Api.TeamLog.EventCategory.AsSharing*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsSharing
  name: AsSharing
  nameWithType: EventCategory.AsSharing
  fullName: Dropbox.Api.TeamLog.EventCategory.AsSharing
- uid: Dropbox.Api.TeamLog.EventCategory.Sharing
  commentId: T:Dropbox.Api.TeamLog.EventCategory.Sharing
  parent: Dropbox.Api.TeamLog
  name: EventCategory.Sharing
  nameWithType: EventCategory.Sharing
  fullName: Dropbox.Api.TeamLog.EventCategory.Sharing
- uid: Dropbox.Api.TeamLog.EventCategory.IsShowcase*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsShowcase
  name: IsShowcase
  nameWithType: EventCategory.IsShowcase
  fullName: Dropbox.Api.TeamLog.EventCategory.IsShowcase
- uid: Dropbox.Api.TeamLog.EventCategory.AsShowcase*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsShowcase
  name: AsShowcase
  nameWithType: EventCategory.AsShowcase
  fullName: Dropbox.Api.TeamLog.EventCategory.AsShowcase
- uid: Dropbox.Api.TeamLog.EventCategory.Showcase
  commentId: T:Dropbox.Api.TeamLog.EventCategory.Showcase
  parent: Dropbox.Api.TeamLog
  name: EventCategory.Showcase
  nameWithType: EventCategory.Showcase
  fullName: Dropbox.Api.TeamLog.EventCategory.Showcase
- uid: Dropbox.Api.TeamLog.EventCategory.IsSso*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsSso
  name: IsSso
  nameWithType: EventCategory.IsSso
  fullName: Dropbox.Api.TeamLog.EventCategory.IsSso
- uid: Dropbox.Api.TeamLog.EventCategory.AsSso*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsSso
  name: AsSso
  nameWithType: EventCategory.AsSso
  fullName: Dropbox.Api.TeamLog.EventCategory.AsSso
- uid: Dropbox.Api.TeamLog.EventCategory.Sso
  commentId: T:Dropbox.Api.TeamLog.EventCategory.Sso
  parent: Dropbox.Api.TeamLog
  name: EventCategory.Sso
  nameWithType: EventCategory.Sso
  fullName: Dropbox.Api.TeamLog.EventCategory.Sso
- uid: Dropbox.Api.TeamLog.EventCategory.IsTeamFolders*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsTeamFolders
  name: IsTeamFolders
  nameWithType: EventCategory.IsTeamFolders
  fullName: Dropbox.Api.TeamLog.EventCategory.IsTeamFolders
- uid: Dropbox.Api.TeamLog.EventCategory.AsTeamFolders*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsTeamFolders
  name: AsTeamFolders
  nameWithType: EventCategory.AsTeamFolders
  fullName: Dropbox.Api.TeamLog.EventCategory.AsTeamFolders
- uid: Dropbox.Api.TeamLog.EventCategory.TeamFolders
  commentId: T:Dropbox.Api.TeamLog.EventCategory.TeamFolders
  parent: Dropbox.Api.TeamLog
  name: EventCategory.TeamFolders
  nameWithType: EventCategory.TeamFolders
  fullName: Dropbox.Api.TeamLog.EventCategory.TeamFolders
- uid: Dropbox.Api.TeamLog.EventCategory.IsTeamPolicies*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsTeamPolicies
  name: IsTeamPolicies
  nameWithType: EventCategory.IsTeamPolicies
  fullName: Dropbox.Api.TeamLog.EventCategory.IsTeamPolicies
- uid: Dropbox.Api.TeamLog.EventCategory.AsTeamPolicies*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsTeamPolicies
  name: AsTeamPolicies
  nameWithType: EventCategory.AsTeamPolicies
  fullName: Dropbox.Api.TeamLog.EventCategory.AsTeamPolicies
- uid: Dropbox.Api.TeamLog.EventCategory.TeamPolicies
  commentId: T:Dropbox.Api.TeamLog.EventCategory.TeamPolicies
  parent: Dropbox.Api.TeamLog
  name: EventCategory.TeamPolicies
  nameWithType: EventCategory.TeamPolicies
  fullName: Dropbox.Api.TeamLog.EventCategory.TeamPolicies
- uid: Dropbox.Api.TeamLog.EventCategory.IsTeamProfile*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsTeamProfile
  name: IsTeamProfile
  nameWithType: EventCategory.IsTeamProfile
  fullName: Dropbox.Api.TeamLog.EventCategory.IsTeamProfile
- uid: Dropbox.Api.TeamLog.EventCategory.AsTeamProfile*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsTeamProfile
  name: AsTeamProfile
  nameWithType: EventCategory.AsTeamProfile
  fullName: Dropbox.Api.TeamLog.EventCategory.AsTeamProfile
- uid: Dropbox.Api.TeamLog.EventCategory.TeamProfile
  commentId: T:Dropbox.Api.TeamLog.EventCategory.TeamProfile
  parent: Dropbox.Api.TeamLog
  name: EventCategory.TeamProfile
  nameWithType: EventCategory.TeamProfile
  fullName: Dropbox.Api.TeamLog.EventCategory.TeamProfile
- uid: Dropbox.Api.TeamLog.EventCategory.IsTfa*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsTfa
  name: IsTfa
  nameWithType: EventCategory.IsTfa
  fullName: Dropbox.Api.TeamLog.EventCategory.IsTfa
- uid: Dropbox.Api.TeamLog.EventCategory.AsTfa*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsTfa
  name: AsTfa
  nameWithType: EventCategory.AsTfa
  fullName: Dropbox.Api.TeamLog.EventCategory.AsTfa
- uid: Dropbox.Api.TeamLog.EventCategory.Tfa
  commentId: T:Dropbox.Api.TeamLog.EventCategory.Tfa
  parent: Dropbox.Api.TeamLog
  name: EventCategory.Tfa
  nameWithType: EventCategory.Tfa
  fullName: Dropbox.Api.TeamLog.EventCategory.Tfa
- uid: Dropbox.Api.TeamLog.EventCategory.IsTrustedTeams*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsTrustedTeams
  name: IsTrustedTeams
  nameWithType: EventCategory.IsTrustedTeams
  fullName: Dropbox.Api.TeamLog.EventCategory.IsTrustedTeams
- uid: Dropbox.Api.TeamLog.EventCategory.AsTrustedTeams*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsTrustedTeams
  name: AsTrustedTeams
  nameWithType: EventCategory.AsTrustedTeams
  fullName: Dropbox.Api.TeamLog.EventCategory.AsTrustedTeams
- uid: Dropbox.Api.TeamLog.EventCategory.TrustedTeams
  commentId: T:Dropbox.Api.TeamLog.EventCategory.TrustedTeams
  parent: Dropbox.Api.TeamLog
  name: EventCategory.TrustedTeams
  nameWithType: EventCategory.TrustedTeams
  fullName: Dropbox.Api.TeamLog.EventCategory.TrustedTeams
- uid: Dropbox.Api.TeamLog.EventCategory.IsOther*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.IsOther
  name: IsOther
  nameWithType: EventCategory.IsOther
  fullName: Dropbox.Api.TeamLog.EventCategory.IsOther
- uid: Dropbox.Api.TeamLog.EventCategory.AsOther*
  commentId: Overload:Dropbox.Api.TeamLog.EventCategory.AsOther
  name: AsOther
  nameWithType: EventCategory.AsOther
  fullName: Dropbox.Api.TeamLog.EventCategory.AsOther
- uid: Dropbox.Api.TeamLog.EventCategory.Other
  commentId: T:Dropbox.Api.TeamLog.EventCategory.Other
  parent: Dropbox.Api.TeamLog
  name: EventCategory.Other
  nameWithType: EventCategory.Other
  fullName: Dropbox.Api.TeamLog.EventCategory.Other
