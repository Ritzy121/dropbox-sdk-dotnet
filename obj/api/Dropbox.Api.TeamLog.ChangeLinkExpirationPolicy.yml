### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy
  commentId: T:Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy
  id: ChangeLinkExpirationPolicy
  parent: Dropbox.Api.TeamLog
  children:
  - Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.#ctor
  - Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsAllowed
  - Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsNotAllowed
  - Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsOther
  - Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsAllowed
  - Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsNotAllowed
  - Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsOther
  langs:
  - csharp
  - vb
  name: ChangeLinkExpirationPolicy
  nameWithType: ChangeLinkExpirationPolicy
  fullName: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ChangeLinkExpirationPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ChangeLinkExpirationPolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ChangeLinkExpirationPolicy.cs
    startLine: 16
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Policy for deciding whether the team&apos;s default expiration days policy must be\nenforced when an externally shared link is updated</p>\n"
  example: []
  syntax:
    content: public class ChangeLinkExpirationPolicy
    content.vb: Public Class ChangeLinkExpirationPolicy
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.Allowed
  - Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.NotAllowed
  - Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.Other
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.#ctor
  commentId: M:Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.#ctor
  id: '#ctor'
  parent: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy
  langs:
  - csharp
  - vb
  name: ChangeLinkExpirationPolicy()
  nameWithType: ChangeLinkExpirationPolicy.ChangeLinkExpirationPolicy()
  fullName: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.ChangeLinkExpirationPolicy()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ChangeLinkExpirationPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ChangeLinkExpirationPolicy.cs
    startLine: 34
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public ChangeLinkExpirationPolicy()
    content.vb: Public Sub New
  overload: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsAllowed
  commentId: P:Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsAllowed
  id: IsAllowed
  parent: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy
  langs:
  - csharp
  - vb
  name: IsAllowed
  nameWithType: ChangeLinkExpirationPolicy.IsAllowed
  fullName: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsAllowed
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ChangeLinkExpirationPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsAllowed
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ChangeLinkExpirationPolicy.cs
    startLine: 41
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Allowed</p>\n"
  example: []
  syntax:
    content: public bool IsAllowed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAllowed As Boolean
  overload: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsAllowed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsAllowed
  commentId: P:Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsAllowed
  id: AsAllowed
  parent: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy
  langs:
  - csharp
  - vb
  name: AsAllowed
  nameWithType: ChangeLinkExpirationPolicy.AsAllowed
  fullName: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsAllowed
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ChangeLinkExpirationPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsAllowed
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ChangeLinkExpirationPolicy.cs
    startLine: 52
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Allowed, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public ChangeLinkExpirationPolicy.Allowed AsAllowed { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.Allowed
    content.vb: Public ReadOnly Property AsAllowed As ChangeLinkExpirationPolicy.Allowed
  overload: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsAllowed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsNotAllowed
  commentId: P:Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsNotAllowed
  id: IsNotAllowed
  parent: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy
  langs:
  - csharp
  - vb
  name: IsNotAllowed
  nameWithType: ChangeLinkExpirationPolicy.IsNotAllowed
  fullName: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsNotAllowed
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ChangeLinkExpirationPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsNotAllowed
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ChangeLinkExpirationPolicy.cs
    startLine: 63
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is NotAllowed</p>\n"
  example: []
  syntax:
    content: public bool IsNotAllowed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNotAllowed As Boolean
  overload: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsNotAllowed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsNotAllowed
  commentId: P:Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsNotAllowed
  id: AsNotAllowed
  parent: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy
  langs:
  - csharp
  - vb
  name: AsNotAllowed
  nameWithType: ChangeLinkExpirationPolicy.AsNotAllowed
  fullName: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsNotAllowed
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ChangeLinkExpirationPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsNotAllowed
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ChangeLinkExpirationPolicy.cs
    startLine: 74
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a NotAllowed, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public ChangeLinkExpirationPolicy.NotAllowed AsNotAllowed { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.NotAllowed
    content.vb: Public ReadOnly Property AsNotAllowed As ChangeLinkExpirationPolicy.NotAllowed
  overload: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsNotAllowed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsOther
  commentId: P:Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsOther
  id: IsOther
  parent: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: ChangeLinkExpirationPolicy.IsOther
  fullName: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ChangeLinkExpirationPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ChangeLinkExpirationPolicy.cs
    startLine: 85
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsOther
  commentId: P:Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsOther
  id: AsOther
  parent: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: ChangeLinkExpirationPolicy.AsOther
  fullName: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ChangeLinkExpirationPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ChangeLinkExpirationPolicy.cs
    startLine: 96
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public ChangeLinkExpirationPolicy.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.Other
    content.vb: Public ReadOnly Property AsOther As ChangeLinkExpirationPolicy.Other
  overload: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.TeamLog
  commentId: N:Dropbox.Api.TeamLog
  name: Dropbox.Api.TeamLog
  nameWithType: Dropbox.Api.TeamLog
  fullName: Dropbox.Api.TeamLog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy
  commentId: T:Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy
  parent: Dropbox.Api.TeamLog
  name: ChangeLinkExpirationPolicy
  nameWithType: ChangeLinkExpirationPolicy
  fullName: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy
- uid: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.#ctor*
  commentId: Overload:Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.#ctor
  name: ChangeLinkExpirationPolicy
  nameWithType: ChangeLinkExpirationPolicy.ChangeLinkExpirationPolicy
  fullName: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.ChangeLinkExpirationPolicy
- uid: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsAllowed*
  commentId: Overload:Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsAllowed
  name: IsAllowed
  nameWithType: ChangeLinkExpirationPolicy.IsAllowed
  fullName: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsAllowed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsAllowed*
  commentId: Overload:Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsAllowed
  name: AsAllowed
  nameWithType: ChangeLinkExpirationPolicy.AsAllowed
  fullName: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsAllowed
- uid: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.Allowed
  commentId: T:Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.Allowed
  parent: Dropbox.Api.TeamLog
  name: ChangeLinkExpirationPolicy.Allowed
  nameWithType: ChangeLinkExpirationPolicy.Allowed
  fullName: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.Allowed
- uid: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsNotAllowed*
  commentId: Overload:Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsNotAllowed
  name: IsNotAllowed
  nameWithType: ChangeLinkExpirationPolicy.IsNotAllowed
  fullName: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsNotAllowed
- uid: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsNotAllowed*
  commentId: Overload:Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsNotAllowed
  name: AsNotAllowed
  nameWithType: ChangeLinkExpirationPolicy.AsNotAllowed
  fullName: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsNotAllowed
- uid: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.NotAllowed
  commentId: T:Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.NotAllowed
  parent: Dropbox.Api.TeamLog
  name: ChangeLinkExpirationPolicy.NotAllowed
  nameWithType: ChangeLinkExpirationPolicy.NotAllowed
  fullName: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.NotAllowed
- uid: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsOther*
  commentId: Overload:Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsOther
  name: IsOther
  nameWithType: ChangeLinkExpirationPolicy.IsOther
  fullName: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.IsOther
- uid: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsOther*
  commentId: Overload:Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsOther
  name: AsOther
  nameWithType: ChangeLinkExpirationPolicy.AsOther
  fullName: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.AsOther
- uid: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.Other
  commentId: T:Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.Other
  parent: Dropbox.Api.TeamLog
  name: ChangeLinkExpirationPolicy.Other
  nameWithType: ChangeLinkExpirationPolicy.Other
  fullName: Dropbox.Api.TeamLog.ChangeLinkExpirationPolicy.Other
