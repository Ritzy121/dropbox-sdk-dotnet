### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.SingleUserLock
  commentId: T:Dropbox.Api.Files.SingleUserLock
  id: SingleUserLock
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.SingleUserLock.#ctor(System.DateTime,System.String,System.String)
  - Dropbox.Api.Files.SingleUserLock.Created
  - Dropbox.Api.Files.SingleUserLock.LockHolderAccountId
  - Dropbox.Api.Files.SingleUserLock.LockHolderTeamId
  langs:
  - csharp
  - vb
  name: SingleUserLock
  nameWithType: SingleUserLock
  fullName: Dropbox.Api.Files.SingleUserLock
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SingleUserLock.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: SingleUserLock
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SingleUserLock.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The single user lock object</p>\n"
  example: []
  syntax:
    content: public class SingleUserLock
    content.vb: Public Class SingleUserLock
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.SingleUserLock.#ctor(System.DateTime,System.String,System.String)
  commentId: M:Dropbox.Api.Files.SingleUserLock.#ctor(System.DateTime,System.String,System.String)
  id: '#ctor(System.DateTime,System.String,System.String)'
  parent: Dropbox.Api.Files.SingleUserLock
  langs:
  - csharp
  - vb
  name: SingleUserLock(DateTime, String, String)
  nameWithType: SingleUserLock.SingleUserLock(DateTime, String, String)
  fullName: Dropbox.Api.Files.SingleUserLock.SingleUserLock(System.DateTime, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SingleUserLock.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SingleUserLock.cs
    startLine: 37
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.SingleUserLock\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public SingleUserLock(DateTime created, string lockHolderAccountId, string lockHolderTeamId = null)
    parameters:
    - id: created
      type: System.DateTime
      description: The time the lock was created.
    - id: lockHolderAccountId
      type: System.String
      description: >-
        The account ID of the lock holder if

        known.
    - id: lockHolderTeamId
      type: System.String
      description: >-
        The id of the team of the account holder if it

        exists.
    content.vb: Public Sub New(created As Date, lockHolderAccountId As String, lockHolderTeamId As String = Nothing)
  overload: Dropbox.Api.Files.SingleUserLock.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.SingleUserLock.Created
  commentId: P:Dropbox.Api.Files.SingleUserLock.Created
  id: Created
  parent: Dropbox.Api.Files.SingleUserLock
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: SingleUserLock.Created
  fullName: Dropbox.Api.Files.SingleUserLock.Created
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SingleUserLock.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Created
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SingleUserLock.cs
    startLine: 72
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The time the lock was created.</p>\n"
  example: []
  syntax:
    content: public DateTime Created { get; protected set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property Created As Date
  overload: Dropbox.Api.Files.SingleUserLock.Created*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.SingleUserLock.LockHolderAccountId
  commentId: P:Dropbox.Api.Files.SingleUserLock.LockHolderAccountId
  id: LockHolderAccountId
  parent: Dropbox.Api.Files.SingleUserLock
  langs:
  - csharp
  - vb
  name: LockHolderAccountId
  nameWithType: SingleUserLock.LockHolderAccountId
  fullName: Dropbox.Api.Files.SingleUserLock.LockHolderAccountId
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SingleUserLock.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LockHolderAccountId
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SingleUserLock.cs
    startLine: 77
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The account ID of the lock holder if known.</p>\n"
  example: []
  syntax:
    content: public string LockHolderAccountId { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LockHolderAccountId As String
  overload: Dropbox.Api.Files.SingleUserLock.LockHolderAccountId*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.SingleUserLock.LockHolderTeamId
  commentId: P:Dropbox.Api.Files.SingleUserLock.LockHolderTeamId
  id: LockHolderTeamId
  parent: Dropbox.Api.Files.SingleUserLock
  langs:
  - csharp
  - vb
  name: LockHolderTeamId
  nameWithType: SingleUserLock.LockHolderTeamId
  fullName: Dropbox.Api.Files.SingleUserLock.LockHolderTeamId
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SingleUserLock.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LockHolderTeamId
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SingleUserLock.cs
    startLine: 82
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The id of the team of the account holder if it exists.</p>\n"
  example: []
  syntax:
    content: public string LockHolderTeamId { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LockHolderTeamId As String
  overload: Dropbox.Api.Files.SingleUserLock.LockHolderTeamId*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Files.SingleUserLock
  commentId: T:Dropbox.Api.Files.SingleUserLock
  parent: Dropbox.Api.Files
  name: SingleUserLock
  nameWithType: SingleUserLock
  fullName: Dropbox.Api.Files.SingleUserLock
- uid: Dropbox.Api.Files.SingleUserLock.#ctor*
  commentId: Overload:Dropbox.Api.Files.SingleUserLock.#ctor
  name: SingleUserLock
  nameWithType: SingleUserLock.SingleUserLock
  fullName: Dropbox.Api.Files.SingleUserLock.SingleUserLock
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dropbox.Api.Files.SingleUserLock.Created*
  commentId: Overload:Dropbox.Api.Files.SingleUserLock.Created
  name: Created
  nameWithType: SingleUserLock.Created
  fullName: Dropbox.Api.Files.SingleUserLock.Created
- uid: Dropbox.Api.Files.SingleUserLock.LockHolderAccountId*
  commentId: Overload:Dropbox.Api.Files.SingleUserLock.LockHolderAccountId
  name: LockHolderAccountId
  nameWithType: SingleUserLock.LockHolderAccountId
  fullName: Dropbox.Api.Files.SingleUserLock.LockHolderAccountId
- uid: Dropbox.Api.Files.SingleUserLock.LockHolderTeamId*
  commentId: Overload:Dropbox.Api.Files.SingleUserLock.LockHolderTeamId
  name: LockHolderTeamId
  nameWithType: SingleUserLock.LockHolderTeamId
  fullName: Dropbox.Api.Files.SingleUserLock.LockHolderTeamId
