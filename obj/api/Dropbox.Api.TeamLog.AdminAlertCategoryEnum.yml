### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  commentId: T:Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  id: AdminAlertCategoryEnum
  parent: Dropbox.Api.TeamLog
  children:
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.#ctor
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsAccountTakeover
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsDataLossProtection
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsInformationGovernance
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsMalwareSharing
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsMassiveFileOperation
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsNa
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsOther
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsThreatManagement
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsAccountTakeover
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsDataLossProtection
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsInformationGovernance
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsMalwareSharing
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsMassiveFileOperation
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsNa
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsOther
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsThreatManagement
  langs:
  - csharp
  - vb
  name: AdminAlertCategoryEnum
  nameWithType: AdminAlertCategoryEnum
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AdminAlertCategoryEnum
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Alert category</p>\n"
  example: []
  syntax:
    content: public class AdminAlertCategoryEnum
    content.vb: Public Class AdminAlertCategoryEnum
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AccountTakeover
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.DataLossProtection
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.InformationGovernance
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.MalwareSharing
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.MassiveFileOperation
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.Na
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.Other
  - Dropbox.Api.TeamLog.AdminAlertCategoryEnum.ThreatManagement
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.#ctor
  commentId: M:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.#ctor
  id: '#ctor'
  parent: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  langs:
  - csharp
  - vb
  name: AdminAlertCategoryEnum()
  nameWithType: AdminAlertCategoryEnum.AdminAlertCategoryEnum()
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AdminAlertCategoryEnum()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamLog.AdminAlertCategoryEnum\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public AdminAlertCategoryEnum()
    content.vb: Public Sub New
  overload: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsAccountTakeover
  commentId: P:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsAccountTakeover
  id: IsAccountTakeover
  parent: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  langs:
  - csharp
  - vb
  name: IsAccountTakeover
  nameWithType: AdminAlertCategoryEnum.IsAccountTakeover
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsAccountTakeover
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsAccountTakeover
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is AccountTakeover</p>\n"
  example: []
  syntax:
    content: public bool IsAccountTakeover { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAccountTakeover As Boolean
  overload: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsAccountTakeover*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsAccountTakeover
  commentId: P:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsAccountTakeover
  id: AsAccountTakeover
  parent: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  langs:
  - csharp
  - vb
  name: AsAccountTakeover
  nameWithType: AdminAlertCategoryEnum.AsAccountTakeover
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsAccountTakeover
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsAccountTakeover
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
    startLine: 51
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a AccountTakeover, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AdminAlertCategoryEnum.AccountTakeover AsAccountTakeover { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AccountTakeover
    content.vb: Public ReadOnly Property AsAccountTakeover As AdminAlertCategoryEnum.AccountTakeover
  overload: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsAccountTakeover*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsDataLossProtection
  commentId: P:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsDataLossProtection
  id: IsDataLossProtection
  parent: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  langs:
  - csharp
  - vb
  name: IsDataLossProtection
  nameWithType: AdminAlertCategoryEnum.IsDataLossProtection
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsDataLossProtection
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsDataLossProtection
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is DataLossProtection</p>\n"
  example: []
  syntax:
    content: public bool IsDataLossProtection { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDataLossProtection As Boolean
  overload: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsDataLossProtection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsDataLossProtection
  commentId: P:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsDataLossProtection
  id: AsDataLossProtection
  parent: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  langs:
  - csharp
  - vb
  name: AsDataLossProtection
  nameWithType: AdminAlertCategoryEnum.AsDataLossProtection
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsDataLossProtection
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsDataLossProtection
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a DataLossProtection, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AdminAlertCategoryEnum.DataLossProtection AsDataLossProtection { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.DataLossProtection
    content.vb: Public ReadOnly Property AsDataLossProtection As AdminAlertCategoryEnum.DataLossProtection
  overload: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsDataLossProtection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsInformationGovernance
  commentId: P:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsInformationGovernance
  id: IsInformationGovernance
  parent: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  langs:
  - csharp
  - vb
  name: IsInformationGovernance
  nameWithType: AdminAlertCategoryEnum.IsInformationGovernance
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsInformationGovernance
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsInformationGovernance
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is InformationGovernance</p>\n"
  example: []
  syntax:
    content: public bool IsInformationGovernance { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInformationGovernance As Boolean
  overload: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsInformationGovernance*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsInformationGovernance
  commentId: P:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsInformationGovernance
  id: AsInformationGovernance
  parent: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  langs:
  - csharp
  - vb
  name: AsInformationGovernance
  nameWithType: AdminAlertCategoryEnum.AsInformationGovernance
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsInformationGovernance
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsInformationGovernance
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
    startLine: 95
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a InformationGovernance, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AdminAlertCategoryEnum.InformationGovernance AsInformationGovernance { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.InformationGovernance
    content.vb: Public ReadOnly Property AsInformationGovernance As AdminAlertCategoryEnum.InformationGovernance
  overload: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsInformationGovernance*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsMalwareSharing
  commentId: P:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsMalwareSharing
  id: IsMalwareSharing
  parent: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  langs:
  - csharp
  - vb
  name: IsMalwareSharing
  nameWithType: AdminAlertCategoryEnum.IsMalwareSharing
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsMalwareSharing
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsMalwareSharing
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
    startLine: 106
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is MalwareSharing</p>\n"
  example: []
  syntax:
    content: public bool IsMalwareSharing { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMalwareSharing As Boolean
  overload: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsMalwareSharing*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsMalwareSharing
  commentId: P:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsMalwareSharing
  id: AsMalwareSharing
  parent: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  langs:
  - csharp
  - vb
  name: AsMalwareSharing
  nameWithType: AdminAlertCategoryEnum.AsMalwareSharing
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsMalwareSharing
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsMalwareSharing
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
    startLine: 117
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a MalwareSharing, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AdminAlertCategoryEnum.MalwareSharing AsMalwareSharing { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.MalwareSharing
    content.vb: Public ReadOnly Property AsMalwareSharing As AdminAlertCategoryEnum.MalwareSharing
  overload: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsMalwareSharing*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsMassiveFileOperation
  commentId: P:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsMassiveFileOperation
  id: IsMassiveFileOperation
  parent: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  langs:
  - csharp
  - vb
  name: IsMassiveFileOperation
  nameWithType: AdminAlertCategoryEnum.IsMassiveFileOperation
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsMassiveFileOperation
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsMassiveFileOperation
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
    startLine: 128
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is MassiveFileOperation</p>\n"
  example: []
  syntax:
    content: public bool IsMassiveFileOperation { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMassiveFileOperation As Boolean
  overload: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsMassiveFileOperation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsMassiveFileOperation
  commentId: P:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsMassiveFileOperation
  id: AsMassiveFileOperation
  parent: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  langs:
  - csharp
  - vb
  name: AsMassiveFileOperation
  nameWithType: AdminAlertCategoryEnum.AsMassiveFileOperation
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsMassiveFileOperation
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsMassiveFileOperation
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
    startLine: 139
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a MassiveFileOperation, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AdminAlertCategoryEnum.MassiveFileOperation AsMassiveFileOperation { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.MassiveFileOperation
    content.vb: Public ReadOnly Property AsMassiveFileOperation As AdminAlertCategoryEnum.MassiveFileOperation
  overload: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsMassiveFileOperation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsNa
  commentId: P:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsNa
  id: IsNa
  parent: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  langs:
  - csharp
  - vb
  name: IsNa
  nameWithType: AdminAlertCategoryEnum.IsNa
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsNa
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsNa
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
    startLine: 150
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Na</p>\n"
  example: []
  syntax:
    content: public bool IsNa { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNa As Boolean
  overload: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsNa*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsNa
  commentId: P:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsNa
  id: AsNa
  parent: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  langs:
  - csharp
  - vb
  name: AsNa
  nameWithType: AdminAlertCategoryEnum.AsNa
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsNa
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsNa
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
    startLine: 161
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Na, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AdminAlertCategoryEnum.Na AsNa { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.Na
    content.vb: Public ReadOnly Property AsNa As AdminAlertCategoryEnum.Na
  overload: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsNa*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsThreatManagement
  commentId: P:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsThreatManagement
  id: IsThreatManagement
  parent: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  langs:
  - csharp
  - vb
  name: IsThreatManagement
  nameWithType: AdminAlertCategoryEnum.IsThreatManagement
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsThreatManagement
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsThreatManagement
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
    startLine: 172
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is ThreatManagement</p>\n"
  example: []
  syntax:
    content: public bool IsThreatManagement { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsThreatManagement As Boolean
  overload: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsThreatManagement*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsThreatManagement
  commentId: P:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsThreatManagement
  id: AsThreatManagement
  parent: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  langs:
  - csharp
  - vb
  name: AsThreatManagement
  nameWithType: AdminAlertCategoryEnum.AsThreatManagement
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsThreatManagement
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsThreatManagement
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
    startLine: 183
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a ThreatManagement, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AdminAlertCategoryEnum.ThreatManagement AsThreatManagement { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.ThreatManagement
    content.vb: Public ReadOnly Property AsThreatManagement As AdminAlertCategoryEnum.ThreatManagement
  overload: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsThreatManagement*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsOther
  commentId: P:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsOther
  id: IsOther
  parent: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: AdminAlertCategoryEnum.IsOther
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
    startLine: 194
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsOther
  commentId: P:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsOther
  id: AsOther
  parent: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: AdminAlertCategoryEnum.AsOther
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AdminAlertCategoryEnum.cs
    startLine: 205
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AdminAlertCategoryEnum.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.Other
    content.vb: Public ReadOnly Property AsOther As AdminAlertCategoryEnum.Other
  overload: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.TeamLog
  commentId: N:Dropbox.Api.TeamLog
  name: Dropbox.Api.TeamLog
  nameWithType: Dropbox.Api.TeamLog
  fullName: Dropbox.Api.TeamLog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  commentId: T:Dropbox.Api.TeamLog.AdminAlertCategoryEnum
  parent: Dropbox.Api.TeamLog
  name: AdminAlertCategoryEnum
  nameWithType: AdminAlertCategoryEnum
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.#ctor*
  commentId: Overload:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.#ctor
  name: AdminAlertCategoryEnum
  nameWithType: AdminAlertCategoryEnum.AdminAlertCategoryEnum
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AdminAlertCategoryEnum
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsAccountTakeover*
  commentId: Overload:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsAccountTakeover
  name: IsAccountTakeover
  nameWithType: AdminAlertCategoryEnum.IsAccountTakeover
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsAccountTakeover
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsAccountTakeover*
  commentId: Overload:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsAccountTakeover
  name: AsAccountTakeover
  nameWithType: AdminAlertCategoryEnum.AsAccountTakeover
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsAccountTakeover
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AccountTakeover
  commentId: T:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AccountTakeover
  parent: Dropbox.Api.TeamLog
  name: AdminAlertCategoryEnum.AccountTakeover
  nameWithType: AdminAlertCategoryEnum.AccountTakeover
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AccountTakeover
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsDataLossProtection*
  commentId: Overload:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsDataLossProtection
  name: IsDataLossProtection
  nameWithType: AdminAlertCategoryEnum.IsDataLossProtection
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsDataLossProtection
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsDataLossProtection*
  commentId: Overload:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsDataLossProtection
  name: AsDataLossProtection
  nameWithType: AdminAlertCategoryEnum.AsDataLossProtection
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsDataLossProtection
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.DataLossProtection
  commentId: T:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.DataLossProtection
  parent: Dropbox.Api.TeamLog
  name: AdminAlertCategoryEnum.DataLossProtection
  nameWithType: AdminAlertCategoryEnum.DataLossProtection
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.DataLossProtection
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsInformationGovernance*
  commentId: Overload:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsInformationGovernance
  name: IsInformationGovernance
  nameWithType: AdminAlertCategoryEnum.IsInformationGovernance
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsInformationGovernance
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsInformationGovernance*
  commentId: Overload:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsInformationGovernance
  name: AsInformationGovernance
  nameWithType: AdminAlertCategoryEnum.AsInformationGovernance
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsInformationGovernance
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.InformationGovernance
  commentId: T:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.InformationGovernance
  parent: Dropbox.Api.TeamLog
  name: AdminAlertCategoryEnum.InformationGovernance
  nameWithType: AdminAlertCategoryEnum.InformationGovernance
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.InformationGovernance
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsMalwareSharing*
  commentId: Overload:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsMalwareSharing
  name: IsMalwareSharing
  nameWithType: AdminAlertCategoryEnum.IsMalwareSharing
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsMalwareSharing
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsMalwareSharing*
  commentId: Overload:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsMalwareSharing
  name: AsMalwareSharing
  nameWithType: AdminAlertCategoryEnum.AsMalwareSharing
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsMalwareSharing
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.MalwareSharing
  commentId: T:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.MalwareSharing
  parent: Dropbox.Api.TeamLog
  name: AdminAlertCategoryEnum.MalwareSharing
  nameWithType: AdminAlertCategoryEnum.MalwareSharing
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.MalwareSharing
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsMassiveFileOperation*
  commentId: Overload:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsMassiveFileOperation
  name: IsMassiveFileOperation
  nameWithType: AdminAlertCategoryEnum.IsMassiveFileOperation
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsMassiveFileOperation
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsMassiveFileOperation*
  commentId: Overload:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsMassiveFileOperation
  name: AsMassiveFileOperation
  nameWithType: AdminAlertCategoryEnum.AsMassiveFileOperation
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsMassiveFileOperation
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.MassiveFileOperation
  commentId: T:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.MassiveFileOperation
  parent: Dropbox.Api.TeamLog
  name: AdminAlertCategoryEnum.MassiveFileOperation
  nameWithType: AdminAlertCategoryEnum.MassiveFileOperation
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.MassiveFileOperation
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsNa*
  commentId: Overload:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsNa
  name: IsNa
  nameWithType: AdminAlertCategoryEnum.IsNa
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsNa
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsNa*
  commentId: Overload:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsNa
  name: AsNa
  nameWithType: AdminAlertCategoryEnum.AsNa
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsNa
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.Na
  commentId: T:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.Na
  parent: Dropbox.Api.TeamLog
  name: AdminAlertCategoryEnum.Na
  nameWithType: AdminAlertCategoryEnum.Na
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.Na
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsThreatManagement*
  commentId: Overload:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsThreatManagement
  name: IsThreatManagement
  nameWithType: AdminAlertCategoryEnum.IsThreatManagement
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsThreatManagement
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsThreatManagement*
  commentId: Overload:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsThreatManagement
  name: AsThreatManagement
  nameWithType: AdminAlertCategoryEnum.AsThreatManagement
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsThreatManagement
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.ThreatManagement
  commentId: T:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.ThreatManagement
  parent: Dropbox.Api.TeamLog
  name: AdminAlertCategoryEnum.ThreatManagement
  nameWithType: AdminAlertCategoryEnum.ThreatManagement
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.ThreatManagement
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsOther*
  commentId: Overload:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsOther
  name: IsOther
  nameWithType: AdminAlertCategoryEnum.IsOther
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.IsOther
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsOther*
  commentId: Overload:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsOther
  name: AsOther
  nameWithType: AdminAlertCategoryEnum.AsOther
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.AsOther
- uid: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.Other
  commentId: T:Dropbox.Api.TeamLog.AdminAlertCategoryEnum.Other
  parent: Dropbox.Api.TeamLog
  name: AdminAlertCategoryEnum.Other
  nameWithType: AdminAlertCategoryEnum.Other
  fullName: Dropbox.Api.TeamLog.AdminAlertCategoryEnum.Other
