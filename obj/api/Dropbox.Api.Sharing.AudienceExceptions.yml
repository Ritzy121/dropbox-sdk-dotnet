### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Sharing.AudienceExceptions
  commentId: T:Dropbox.Api.Sharing.AudienceExceptions
  id: AudienceExceptions
  parent: Dropbox.Api.Sharing
  children:
  - Dropbox.Api.Sharing.AudienceExceptions.#ctor(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.AudienceExceptionContentInfo})
  - Dropbox.Api.Sharing.AudienceExceptions.Count
  - Dropbox.Api.Sharing.AudienceExceptions.Exceptions
  langs:
  - csharp
  - vb
  name: AudienceExceptions
  nameWithType: AudienceExceptions
  fullName: Dropbox.Api.Sharing.AudienceExceptions
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/AudienceExceptions.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AudienceExceptions
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/AudienceExceptions.cs
    startLine: 17
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>The total count and truncated list of information of content inside this folder\nthat has a different audience than the link on this folder. This is only returned for\nfolders.</p>\n"
  example: []
  syntax:
    content: public class AudienceExceptions
    content.vb: Public Class AudienceExceptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Sharing.AudienceExceptions.#ctor(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.AudienceExceptionContentInfo})
  commentId: M:Dropbox.Api.Sharing.AudienceExceptions.#ctor(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.AudienceExceptionContentInfo})
  id: '#ctor(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.AudienceExceptionContentInfo})'
  parent: Dropbox.Api.Sharing.AudienceExceptions
  langs:
  - csharp
  - vb
  name: AudienceExceptions(UInt32, IEnumerable<AudienceExceptionContentInfo>)
  nameWithType: AudienceExceptions.AudienceExceptions(UInt32, IEnumerable<AudienceExceptionContentInfo>)
  fullName: Dropbox.Api.Sharing.AudienceExceptions.AudienceExceptions(System.UInt32, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.AudienceExceptionContentInfo>)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/AudienceExceptions.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/AudienceExceptions.cs
    startLine: 39
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Sharing.AudienceExceptions\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public AudienceExceptions(uint count, IEnumerable<AudienceExceptionContentInfo> exceptions)
    parameters:
    - id: count
      type: System.UInt32
      description: The count
    - id: exceptions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.AudienceExceptionContentInfo}
      description: >-
        A truncated list of some of the content that is an

        exception. The length of this list could be smaller than the count since it is only

        a sample but will not be empty as long as count is not 0.
    content.vb: Public Sub New(count As UInteger, exceptions As IEnumerable(Of AudienceExceptionContentInfo))
  overload: Dropbox.Api.Sharing.AudienceExceptions.#ctor*
  nameWithType.vb: AudienceExceptions.AudienceExceptions(UInt32, IEnumerable(Of AudienceExceptionContentInfo))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.AudienceExceptions.AudienceExceptions(System.UInt32, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.AudienceExceptionContentInfo))
  name.vb: AudienceExceptions(UInt32, IEnumerable(Of AudienceExceptionContentInfo))
- uid: Dropbox.Api.Sharing.AudienceExceptions.Count
  commentId: P:Dropbox.Api.Sharing.AudienceExceptions.Count
  id: Count
  parent: Dropbox.Api.Sharing.AudienceExceptions
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: AudienceExceptions.Count
  fullName: Dropbox.Api.Sharing.AudienceExceptions.Count
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/AudienceExceptions.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Count
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/AudienceExceptions.cs
    startLine: 67
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Gets the count of the audience exceptions</p>\n"
  example: []
  syntax:
    content: public uint Count { get; protected set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property Count As UInteger
  overload: Dropbox.Api.Sharing.AudienceExceptions.Count*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Sharing.AudienceExceptions.Exceptions
  commentId: P:Dropbox.Api.Sharing.AudienceExceptions.Exceptions
  id: Exceptions
  parent: Dropbox.Api.Sharing.AudienceExceptions
  langs:
  - csharp
  - vb
  name: Exceptions
  nameWithType: AudienceExceptions.Exceptions
  fullName: Dropbox.Api.Sharing.AudienceExceptions.Exceptions
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/AudienceExceptions.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Exceptions
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/AudienceExceptions.cs
    startLine: 74
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>A truncated list of some of the content that is an exception. The length of\nthis list could be smaller than the count since it is only a sample but will not be\nempty as long as count is not 0.</p>\n"
  example: []
  syntax:
    content: public IList<AudienceExceptionContentInfo> Exceptions { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Dropbox.Api.Sharing.AudienceExceptionContentInfo}
    content.vb: Public Property Exceptions As IList(Of AudienceExceptionContentInfo)
  overload: Dropbox.Api.Sharing.AudienceExceptions.Exceptions*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Sharing
  commentId: N:Dropbox.Api.Sharing
  name: Dropbox.Api.Sharing
  nameWithType: Dropbox.Api.Sharing
  fullName: Dropbox.Api.Sharing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Sharing.AudienceExceptions
  commentId: T:Dropbox.Api.Sharing.AudienceExceptions
  parent: Dropbox.Api.Sharing
  name: AudienceExceptions
  nameWithType: AudienceExceptions
  fullName: Dropbox.Api.Sharing.AudienceExceptions
- uid: Dropbox.Api.Sharing.AudienceExceptions.#ctor*
  commentId: Overload:Dropbox.Api.Sharing.AudienceExceptions.#ctor
  name: AudienceExceptions
  nameWithType: AudienceExceptions.AudienceExceptions
  fullName: Dropbox.Api.Sharing.AudienceExceptions.AudienceExceptions
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.AudienceExceptionContentInfo}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.AudienceExceptionContentInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<AudienceExceptionContentInfo>
  nameWithType: IEnumerable<AudienceExceptionContentInfo>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.AudienceExceptionContentInfo>
  nameWithType.vb: IEnumerable(Of AudienceExceptionContentInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.AudienceExceptionContentInfo)
  name.vb: IEnumerable(Of AudienceExceptionContentInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.AudienceExceptionContentInfo
    name: AudienceExceptionContentInfo
    nameWithType: AudienceExceptionContentInfo
    fullName: Dropbox.Api.Sharing.AudienceExceptionContentInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.AudienceExceptionContentInfo
    name: AudienceExceptionContentInfo
    nameWithType: AudienceExceptionContentInfo
    fullName: Dropbox.Api.Sharing.AudienceExceptionContentInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Dropbox.Api.Sharing.AudienceExceptions.Count*
  commentId: Overload:Dropbox.Api.Sharing.AudienceExceptions.Count
  name: Count
  nameWithType: AudienceExceptions.Count
  fullName: Dropbox.Api.Sharing.AudienceExceptions.Count
- uid: Dropbox.Api.Sharing.AudienceExceptions.Exceptions*
  commentId: Overload:Dropbox.Api.Sharing.AudienceExceptions.Exceptions
  name: Exceptions
  nameWithType: AudienceExceptions.Exceptions
  fullName: Dropbox.Api.Sharing.AudienceExceptions.Exceptions
- uid: System.Collections.Generic.IList{Dropbox.Api.Sharing.AudienceExceptionContentInfo}
  commentId: T:System.Collections.Generic.IList{Dropbox.Api.Sharing.AudienceExceptionContentInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<AudienceExceptionContentInfo>
  nameWithType: IList<AudienceExceptionContentInfo>
  fullName: System.Collections.Generic.IList<Dropbox.Api.Sharing.AudienceExceptionContentInfo>
  nameWithType.vb: IList(Of AudienceExceptionContentInfo)
  fullName.vb: System.Collections.Generic.IList(Of Dropbox.Api.Sharing.AudienceExceptionContentInfo)
  name.vb: IList(Of AudienceExceptionContentInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.AudienceExceptionContentInfo
    name: AudienceExceptionContentInfo
    nameWithType: AudienceExceptionContentInfo
    fullName: Dropbox.Api.Sharing.AudienceExceptionContentInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.AudienceExceptionContentInfo
    name: AudienceExceptionContentInfo
    nameWithType: AudienceExceptionContentInfo
    fullName: Dropbox.Api.Sharing.AudienceExceptionContentInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
