### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.FileProperties.PropertiesSearchMatch
  commentId: T:Dropbox.Api.FileProperties.PropertiesSearchMatch
  id: PropertiesSearchMatch
  parent: Dropbox.Api.FileProperties
  children:
  - Dropbox.Api.FileProperties.PropertiesSearchMatch.#ctor(System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyGroup})
  - Dropbox.Api.FileProperties.PropertiesSearchMatch.Id
  - Dropbox.Api.FileProperties.PropertiesSearchMatch.IsDeleted
  - Dropbox.Api.FileProperties.PropertiesSearchMatch.Path
  - Dropbox.Api.FileProperties.PropertiesSearchMatch.PropertyGroups
  langs:
  - csharp
  - vb
  name: PropertiesSearchMatch
  nameWithType: PropertiesSearchMatch
  fullName: Dropbox.Api.FileProperties.PropertiesSearchMatch
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchMatch.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: PropertiesSearchMatch
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchMatch.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.FileProperties
  summary: "\n<p>The properties search match object</p>\n"
  example: []
  syntax:
    content: public class PropertiesSearchMatch
    content.vb: Public Class PropertiesSearchMatch
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.FileProperties.PropertiesSearchMatch.#ctor(System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyGroup})
  commentId: M:Dropbox.Api.FileProperties.PropertiesSearchMatch.#ctor(System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyGroup})
  id: '#ctor(System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyGroup})'
  parent: Dropbox.Api.FileProperties.PropertiesSearchMatch
  langs:
  - csharp
  - vb
  name: PropertiesSearchMatch(String, String, Boolean, IEnumerable<PropertyGroup>)
  nameWithType: PropertiesSearchMatch.PropertiesSearchMatch(String, String, Boolean, IEnumerable<PropertyGroup>)
  fullName: Dropbox.Api.FileProperties.PropertiesSearchMatch.PropertiesSearchMatch(System.String, System.String, System.Boolean, System.Collections.Generic.IEnumerable<Dropbox.Api.FileProperties.PropertyGroup>)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchMatch.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchMatch.cs
    startLine: 38
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.FileProperties
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.FileProperties.PropertiesSearchMatch\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public PropertiesSearchMatch(string id, string path, bool isDeleted, IEnumerable<PropertyGroup> propertyGroups)
    parameters:
    - id: id
      type: System.String
      description: The ID for the matched file or folder.
    - id: path
      type: System.String
      description: The path for the matched file or folder.
    - id: isDeleted
      type: System.Boolean
      description: Whether the file or folder is deleted.
    - id: propertyGroups
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyGroup}
      description: >-
        List of custom property groups associated with the

        file.
    content.vb: Public Sub New(id As String, path As String, isDeleted As Boolean, propertyGroups As IEnumerable(Of PropertyGroup))
  overload: Dropbox.Api.FileProperties.PropertiesSearchMatch.#ctor*
  nameWithType.vb: PropertiesSearchMatch.PropertiesSearchMatch(String, String, Boolean, IEnumerable(Of PropertyGroup))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.FileProperties.PropertiesSearchMatch.PropertiesSearchMatch(System.String, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of Dropbox.Api.FileProperties.PropertyGroup))
  name.vb: PropertiesSearchMatch(String, String, Boolean, IEnumerable(Of PropertyGroup))
- uid: Dropbox.Api.FileProperties.PropertiesSearchMatch.Id
  commentId: P:Dropbox.Api.FileProperties.PropertiesSearchMatch.Id
  id: Id
  parent: Dropbox.Api.FileProperties.PropertiesSearchMatch
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: PropertiesSearchMatch.Id
  fullName: Dropbox.Api.FileProperties.PropertiesSearchMatch.Id
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchMatch.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Id
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchMatch.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.FileProperties
  summary: "\n<p>The ID for the matched file or folder.</p>\n"
  example: []
  syntax:
    content: public string Id { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: Dropbox.Api.FileProperties.PropertiesSearchMatch.Id*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.FileProperties.PropertiesSearchMatch.Path
  commentId: P:Dropbox.Api.FileProperties.PropertiesSearchMatch.Path
  id: Path
  parent: Dropbox.Api.FileProperties.PropertiesSearchMatch
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: PropertiesSearchMatch.Path
  fullName: Dropbox.Api.FileProperties.PropertiesSearchMatch.Path
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchMatch.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Path
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchMatch.cs
    startLine: 89
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.FileProperties
  summary: "\n<p>The path for the matched file or folder.</p>\n"
  example: []
  syntax:
    content: public string Path { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Path As String
  overload: Dropbox.Api.FileProperties.PropertiesSearchMatch.Path*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.FileProperties.PropertiesSearchMatch.IsDeleted
  commentId: P:Dropbox.Api.FileProperties.PropertiesSearchMatch.IsDeleted
  id: IsDeleted
  parent: Dropbox.Api.FileProperties.PropertiesSearchMatch
  langs:
  - csharp
  - vb
  name: IsDeleted
  nameWithType: PropertiesSearchMatch.IsDeleted
  fullName: Dropbox.Api.FileProperties.PropertiesSearchMatch.IsDeleted
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchMatch.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsDeleted
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchMatch.cs
    startLine: 94
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.FileProperties
  summary: "\n<p>Whether the file or folder is deleted.</p>\n"
  example: []
  syntax:
    content: public bool IsDeleted { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsDeleted As Boolean
  overload: Dropbox.Api.FileProperties.PropertiesSearchMatch.IsDeleted*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.FileProperties.PropertiesSearchMatch.PropertyGroups
  commentId: P:Dropbox.Api.FileProperties.PropertiesSearchMatch.PropertyGroups
  id: PropertyGroups
  parent: Dropbox.Api.FileProperties.PropertiesSearchMatch
  langs:
  - csharp
  - vb
  name: PropertyGroups
  nameWithType: PropertiesSearchMatch.PropertyGroups
  fullName: Dropbox.Api.FileProperties.PropertiesSearchMatch.PropertyGroups
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchMatch.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: PropertyGroups
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchMatch.cs
    startLine: 99
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.FileProperties
  summary: "\n<p>List of custom property groups associated with the file.</p>\n"
  example: []
  syntax:
    content: public IList<PropertyGroup> PropertyGroups { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Dropbox.Api.FileProperties.PropertyGroup}
    content.vb: Public Property PropertyGroups As IList(Of PropertyGroup)
  overload: Dropbox.Api.FileProperties.PropertiesSearchMatch.PropertyGroups*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.FileProperties
  commentId: N:Dropbox.Api.FileProperties
  name: Dropbox.Api.FileProperties
  nameWithType: Dropbox.Api.FileProperties
  fullName: Dropbox.Api.FileProperties
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.FileProperties.PropertiesSearchMatch
  commentId: T:Dropbox.Api.FileProperties.PropertiesSearchMatch
  name: PropertiesSearchMatch
  nameWithType: PropertiesSearchMatch
  fullName: Dropbox.Api.FileProperties.PropertiesSearchMatch
- uid: Dropbox.Api.FileProperties.PropertiesSearchMatch.#ctor*
  commentId: Overload:Dropbox.Api.FileProperties.PropertiesSearchMatch.#ctor
  name: PropertiesSearchMatch
  nameWithType: PropertiesSearchMatch.PropertiesSearchMatch
  fullName: Dropbox.Api.FileProperties.PropertiesSearchMatch.PropertiesSearchMatch
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyGroup}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PropertyGroup>
  nameWithType: IEnumerable<PropertyGroup>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.FileProperties.PropertyGroup>
  nameWithType.vb: IEnumerable(Of PropertyGroup)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.FileProperties.PropertyGroup)
  name.vb: IEnumerable(Of PropertyGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.FileProperties.PropertyGroup
    name: PropertyGroup
    nameWithType: PropertyGroup
    fullName: Dropbox.Api.FileProperties.PropertyGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.FileProperties.PropertyGroup
    name: PropertyGroup
    nameWithType: PropertyGroup
    fullName: Dropbox.Api.FileProperties.PropertyGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Dropbox.Api.FileProperties.PropertiesSearchMatch.Id*
  commentId: Overload:Dropbox.Api.FileProperties.PropertiesSearchMatch.Id
  name: Id
  nameWithType: PropertiesSearchMatch.Id
  fullName: Dropbox.Api.FileProperties.PropertiesSearchMatch.Id
- uid: Dropbox.Api.FileProperties.PropertiesSearchMatch.Path*
  commentId: Overload:Dropbox.Api.FileProperties.PropertiesSearchMatch.Path
  name: Path
  nameWithType: PropertiesSearchMatch.Path
  fullName: Dropbox.Api.FileProperties.PropertiesSearchMatch.Path
- uid: Dropbox.Api.FileProperties.PropertiesSearchMatch.IsDeleted*
  commentId: Overload:Dropbox.Api.FileProperties.PropertiesSearchMatch.IsDeleted
  name: IsDeleted
  nameWithType: PropertiesSearchMatch.IsDeleted
  fullName: Dropbox.Api.FileProperties.PropertiesSearchMatch.IsDeleted
- uid: Dropbox.Api.FileProperties.PropertiesSearchMatch.PropertyGroups*
  commentId: Overload:Dropbox.Api.FileProperties.PropertiesSearchMatch.PropertyGroups
  name: PropertyGroups
  nameWithType: PropertiesSearchMatch.PropertyGroups
  fullName: Dropbox.Api.FileProperties.PropertiesSearchMatch.PropertyGroups
- uid: System.Collections.Generic.IList{Dropbox.Api.FileProperties.PropertyGroup}
  commentId: T:System.Collections.Generic.IList{Dropbox.Api.FileProperties.PropertyGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<PropertyGroup>
  nameWithType: IList<PropertyGroup>
  fullName: System.Collections.Generic.IList<Dropbox.Api.FileProperties.PropertyGroup>
  nameWithType.vb: IList(Of PropertyGroup)
  fullName.vb: System.Collections.Generic.IList(Of Dropbox.Api.FileProperties.PropertyGroup)
  name.vb: IList(Of PropertyGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.FileProperties.PropertyGroup
    name: PropertyGroup
    nameWithType: PropertyGroup
    fullName: Dropbox.Api.FileProperties.PropertyGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.FileProperties.PropertyGroup
    name: PropertyGroup
    nameWithType: PropertyGroup
    fullName: Dropbox.Api.FileProperties.PropertyGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
