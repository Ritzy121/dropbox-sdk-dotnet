### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamLog.AssetLogInfo.Folder
  commentId: T:Dropbox.Api.TeamLog.AssetLogInfo.Folder
  id: AssetLogInfo.Folder
  parent: Dropbox.Api.TeamLog
  children:
  - Dropbox.Api.TeamLog.AssetLogInfo.Folder.#ctor(Dropbox.Api.TeamLog.FolderLogInfo)
  - Dropbox.Api.TeamLog.AssetLogInfo.Folder.Value
  langs:
  - csharp
  - vb
  name: AssetLogInfo.Folder
  nameWithType: AssetLogInfo.Folder
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.Folder
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Folder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
    startLine: 358
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Folder&apos;s details.</p>\n"
  example: []
  syntax:
    content: 'public sealed class Folder : AssetLogInfo'
    content.vb: >-
      Public NotInheritable Class Folder
          Inherits AssetLogInfo
  inheritance:
  - System.Object
  - Dropbox.Api.TeamLog.AssetLogInfo
  inheritedMembers:
  - Dropbox.Api.TeamLog.AssetLogInfo.IsFile
  - Dropbox.Api.TeamLog.AssetLogInfo.AsFile
  - Dropbox.Api.TeamLog.AssetLogInfo.IsFolder
  - Dropbox.Api.TeamLog.AssetLogInfo.AsFolder
  - Dropbox.Api.TeamLog.AssetLogInfo.IsPaperDocument
  - Dropbox.Api.TeamLog.AssetLogInfo.AsPaperDocument
  - Dropbox.Api.TeamLog.AssetLogInfo.IsPaperFolder
  - Dropbox.Api.TeamLog.AssetLogInfo.AsPaperFolder
  - Dropbox.Api.TeamLog.AssetLogInfo.IsShowcaseDocument
  - Dropbox.Api.TeamLog.AssetLogInfo.AsShowcaseDocument
  - Dropbox.Api.TeamLog.AssetLogInfo.IsOther
  - Dropbox.Api.TeamLog.AssetLogInfo.AsOther
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Dropbox.Api.TeamLog.AssetLogInfo.Folder.#ctor(Dropbox.Api.TeamLog.FolderLogInfo)
  commentId: M:Dropbox.Api.TeamLog.AssetLogInfo.Folder.#ctor(Dropbox.Api.TeamLog.FolderLogInfo)
  id: '#ctor(Dropbox.Api.TeamLog.FolderLogInfo)'
  parent: Dropbox.Api.TeamLog.AssetLogInfo.Folder
  langs:
  - csharp
  - vb
  name: Folder(FolderLogInfo)
  nameWithType: AssetLogInfo.Folder.Folder(FolderLogInfo)
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.Folder.Folder(Dropbox.Api.TeamLog.FolderLogInfo)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
    startLine: 376
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamLog.AssetLogInfo.Folder\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public Folder(FolderLogInfo value)
    parameters:
    - id: value
      type: Dropbox.Api.TeamLog.FolderLogInfo
      description: The value
    content.vb: Public Sub New(value As FolderLogInfo)
  overload: Dropbox.Api.TeamLog.AssetLogInfo.Folder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.TeamLog.AssetLogInfo.Folder.Value
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.Folder.Value
  id: Value
  parent: Dropbox.Api.TeamLog.AssetLogInfo.Folder
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: AssetLogInfo.Folder.Value
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.Folder.Value
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Value
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AssetLogInfo.cs
    startLine: 390
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets the value of this instance.</p>\n"
  example: []
  syntax:
    content: public FolderLogInfo Value { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.FolderLogInfo
    content.vb: Public ReadOnly Property Value As FolderLogInfo
  overload: Dropbox.Api.TeamLog.AssetLogInfo.Folder.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.TeamLog
  commentId: N:Dropbox.Api.TeamLog
  name: Dropbox.Api.TeamLog
  nameWithType: Dropbox.Api.TeamLog
  fullName: Dropbox.Api.TeamLog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.TeamLog.AssetLogInfo
  commentId: T:Dropbox.Api.TeamLog.AssetLogInfo
  parent: Dropbox.Api.TeamLog
  name: AssetLogInfo
  nameWithType: AssetLogInfo
  fullName: Dropbox.Api.TeamLog.AssetLogInfo
- uid: Dropbox.Api.TeamLog.AssetLogInfo.IsFile
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.IsFile
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  name: IsFile
  nameWithType: AssetLogInfo.IsFile
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.IsFile
- uid: Dropbox.Api.TeamLog.AssetLogInfo.AsFile
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.AsFile
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  name: AsFile
  nameWithType: AssetLogInfo.AsFile
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.AsFile
- uid: Dropbox.Api.TeamLog.AssetLogInfo.IsFolder
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.IsFolder
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  name: IsFolder
  nameWithType: AssetLogInfo.IsFolder
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.IsFolder
- uid: Dropbox.Api.TeamLog.AssetLogInfo.AsFolder
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.AsFolder
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  name: AsFolder
  nameWithType: AssetLogInfo.AsFolder
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.AsFolder
- uid: Dropbox.Api.TeamLog.AssetLogInfo.IsPaperDocument
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.IsPaperDocument
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  name: IsPaperDocument
  nameWithType: AssetLogInfo.IsPaperDocument
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.IsPaperDocument
- uid: Dropbox.Api.TeamLog.AssetLogInfo.AsPaperDocument
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.AsPaperDocument
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  name: AsPaperDocument
  nameWithType: AssetLogInfo.AsPaperDocument
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.AsPaperDocument
- uid: Dropbox.Api.TeamLog.AssetLogInfo.IsPaperFolder
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.IsPaperFolder
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  name: IsPaperFolder
  nameWithType: AssetLogInfo.IsPaperFolder
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.IsPaperFolder
- uid: Dropbox.Api.TeamLog.AssetLogInfo.AsPaperFolder
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.AsPaperFolder
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  name: AsPaperFolder
  nameWithType: AssetLogInfo.AsPaperFolder
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.AsPaperFolder
- uid: Dropbox.Api.TeamLog.AssetLogInfo.IsShowcaseDocument
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.IsShowcaseDocument
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  name: IsShowcaseDocument
  nameWithType: AssetLogInfo.IsShowcaseDocument
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.IsShowcaseDocument
- uid: Dropbox.Api.TeamLog.AssetLogInfo.AsShowcaseDocument
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.AsShowcaseDocument
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  name: AsShowcaseDocument
  nameWithType: AssetLogInfo.AsShowcaseDocument
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.AsShowcaseDocument
- uid: Dropbox.Api.TeamLog.AssetLogInfo.IsOther
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.IsOther
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  name: IsOther
  nameWithType: AssetLogInfo.IsOther
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.IsOther
- uid: Dropbox.Api.TeamLog.AssetLogInfo.AsOther
  commentId: P:Dropbox.Api.TeamLog.AssetLogInfo.AsOther
  parent: Dropbox.Api.TeamLog.AssetLogInfo
  name: AsOther
  nameWithType: AssetLogInfo.AsOther
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.AsOther
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.TeamLog.AssetLogInfo.Folder
  commentId: T:Dropbox.Api.TeamLog.AssetLogInfo.Folder
  parent: Dropbox.Api.TeamLog
  name: AssetLogInfo.Folder
  nameWithType: AssetLogInfo.Folder
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.Folder
- uid: Dropbox.Api.TeamLog.AssetLogInfo.Folder.#ctor*
  commentId: Overload:Dropbox.Api.TeamLog.AssetLogInfo.Folder.#ctor
  name: Folder
  nameWithType: AssetLogInfo.Folder.Folder
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.Folder.Folder
- uid: Dropbox.Api.TeamLog.FolderLogInfo
  commentId: T:Dropbox.Api.TeamLog.FolderLogInfo
  parent: Dropbox.Api.TeamLog
  name: FolderLogInfo
  nameWithType: FolderLogInfo
  fullName: Dropbox.Api.TeamLog.FolderLogInfo
- uid: Dropbox.Api.TeamLog.AssetLogInfo.Folder.Value*
  commentId: Overload:Dropbox.Api.TeamLog.AssetLogInfo.Folder.Value
  name: Value
  nameWithType: AssetLogInfo.Folder.Value
  fullName: Dropbox.Api.TeamLog.AssetLogInfo.Folder.Value
