### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy
  commentId: T:Dropbox.Api.TeamLog.SharingLinkPolicy
  id: SharingLinkPolicy
  parent: Dropbox.Api.TeamLog
  children:
  - Dropbox.Api.TeamLog.SharingLinkPolicy.#ctor
  - Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultNoOne
  - Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultPrivate
  - Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultPublic
  - Dropbox.Api.TeamLog.SharingLinkPolicy.AsOnlyPrivate
  - Dropbox.Api.TeamLog.SharingLinkPolicy.AsOther
  - Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultNoOne
  - Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultPrivate
  - Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultPublic
  - Dropbox.Api.TeamLog.SharingLinkPolicy.IsOnlyPrivate
  - Dropbox.Api.TeamLog.SharingLinkPolicy.IsOther
  langs:
  - csharp
  - vb
  name: SharingLinkPolicy
  nameWithType: SharingLinkPolicy
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: SharingLinkPolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Policy for controlling if team members can share links externally</p>\n"
  example: []
  syntax:
    content: public class SharingLinkPolicy
    content.vb: Public Class SharingLinkPolicy
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.TeamLog.SharingLinkPolicy.DefaultNoOne
  - Dropbox.Api.TeamLog.SharingLinkPolicy.DefaultPrivate
  - Dropbox.Api.TeamLog.SharingLinkPolicy.DefaultPublic
  - Dropbox.Api.TeamLog.SharingLinkPolicy.OnlyPrivate
  - Dropbox.Api.TeamLog.SharingLinkPolicy.Other
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.#ctor
  commentId: M:Dropbox.Api.TeamLog.SharingLinkPolicy.#ctor
  id: '#ctor'
  parent: Dropbox.Api.TeamLog.SharingLinkPolicy
  langs:
  - csharp
  - vb
  name: SharingLinkPolicy()
  nameWithType: SharingLinkPolicy.SharingLinkPolicy()
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.SharingLinkPolicy()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamLog.SharingLinkPolicy\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public SharingLinkPolicy()
    content.vb: Public Sub New
  overload: Dropbox.Api.TeamLog.SharingLinkPolicy.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultNoOne
  commentId: P:Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultNoOne
  id: IsDefaultNoOne
  parent: Dropbox.Api.TeamLog.SharingLinkPolicy
  langs:
  - csharp
  - vb
  name: IsDefaultNoOne
  nameWithType: SharingLinkPolicy.IsDefaultNoOne
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultNoOne
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsDefaultNoOne
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is DefaultNoOne</p>\n"
  example: []
  syntax:
    content: public bool IsDefaultNoOne { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDefaultNoOne As Boolean
  overload: Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultNoOne*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultNoOne
  commentId: P:Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultNoOne
  id: AsDefaultNoOne
  parent: Dropbox.Api.TeamLog.SharingLinkPolicy
  langs:
  - csharp
  - vb
  name: AsDefaultNoOne
  nameWithType: SharingLinkPolicy.AsDefaultNoOne
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultNoOne
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsDefaultNoOne
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
    startLine: 51
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a DefaultNoOne, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public SharingLinkPolicy.DefaultNoOne AsDefaultNoOne { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.SharingLinkPolicy.DefaultNoOne
    content.vb: Public ReadOnly Property AsDefaultNoOne As SharingLinkPolicy.DefaultNoOne
  overload: Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultNoOne*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultPrivate
  commentId: P:Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultPrivate
  id: IsDefaultPrivate
  parent: Dropbox.Api.TeamLog.SharingLinkPolicy
  langs:
  - csharp
  - vb
  name: IsDefaultPrivate
  nameWithType: SharingLinkPolicy.IsDefaultPrivate
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultPrivate
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsDefaultPrivate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is DefaultPrivate</p>\n"
  example: []
  syntax:
    content: public bool IsDefaultPrivate { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDefaultPrivate As Boolean
  overload: Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultPrivate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultPrivate
  commentId: P:Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultPrivate
  id: AsDefaultPrivate
  parent: Dropbox.Api.TeamLog.SharingLinkPolicy
  langs:
  - csharp
  - vb
  name: AsDefaultPrivate
  nameWithType: SharingLinkPolicy.AsDefaultPrivate
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultPrivate
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsDefaultPrivate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a DefaultPrivate, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public SharingLinkPolicy.DefaultPrivate AsDefaultPrivate { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.SharingLinkPolicy.DefaultPrivate
    content.vb: Public ReadOnly Property AsDefaultPrivate As SharingLinkPolicy.DefaultPrivate
  overload: Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultPrivate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultPublic
  commentId: P:Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultPublic
  id: IsDefaultPublic
  parent: Dropbox.Api.TeamLog.SharingLinkPolicy
  langs:
  - csharp
  - vb
  name: IsDefaultPublic
  nameWithType: SharingLinkPolicy.IsDefaultPublic
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultPublic
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsDefaultPublic
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is DefaultPublic</p>\n"
  example: []
  syntax:
    content: public bool IsDefaultPublic { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDefaultPublic As Boolean
  overload: Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultPublic*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultPublic
  commentId: P:Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultPublic
  id: AsDefaultPublic
  parent: Dropbox.Api.TeamLog.SharingLinkPolicy
  langs:
  - csharp
  - vb
  name: AsDefaultPublic
  nameWithType: SharingLinkPolicy.AsDefaultPublic
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultPublic
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsDefaultPublic
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
    startLine: 95
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a DefaultPublic, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public SharingLinkPolicy.DefaultPublic AsDefaultPublic { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.SharingLinkPolicy.DefaultPublic
    content.vb: Public ReadOnly Property AsDefaultPublic As SharingLinkPolicy.DefaultPublic
  overload: Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultPublic*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.IsOnlyPrivate
  commentId: P:Dropbox.Api.TeamLog.SharingLinkPolicy.IsOnlyPrivate
  id: IsOnlyPrivate
  parent: Dropbox.Api.TeamLog.SharingLinkPolicy
  langs:
  - csharp
  - vb
  name: IsOnlyPrivate
  nameWithType: SharingLinkPolicy.IsOnlyPrivate
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.IsOnlyPrivate
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOnlyPrivate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
    startLine: 106
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is OnlyPrivate</p>\n"
  example: []
  syntax:
    content: public bool IsOnlyPrivate { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOnlyPrivate As Boolean
  overload: Dropbox.Api.TeamLog.SharingLinkPolicy.IsOnlyPrivate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.AsOnlyPrivate
  commentId: P:Dropbox.Api.TeamLog.SharingLinkPolicy.AsOnlyPrivate
  id: AsOnlyPrivate
  parent: Dropbox.Api.TeamLog.SharingLinkPolicy
  langs:
  - csharp
  - vb
  name: AsOnlyPrivate
  nameWithType: SharingLinkPolicy.AsOnlyPrivate
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.AsOnlyPrivate
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOnlyPrivate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
    startLine: 117
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a OnlyPrivate, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public SharingLinkPolicy.OnlyPrivate AsOnlyPrivate { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.SharingLinkPolicy.OnlyPrivate
    content.vb: Public ReadOnly Property AsOnlyPrivate As SharingLinkPolicy.OnlyPrivate
  overload: Dropbox.Api.TeamLog.SharingLinkPolicy.AsOnlyPrivate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.IsOther
  commentId: P:Dropbox.Api.TeamLog.SharingLinkPolicy.IsOther
  id: IsOther
  parent: Dropbox.Api.TeamLog.SharingLinkPolicy
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: SharingLinkPolicy.IsOther
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
    startLine: 128
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.TeamLog.SharingLinkPolicy.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.AsOther
  commentId: P:Dropbox.Api.TeamLog.SharingLinkPolicy.AsOther
  id: AsOther
  parent: Dropbox.Api.TeamLog.SharingLinkPolicy
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: SharingLinkPolicy.AsOther
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/SharingLinkPolicy.cs
    startLine: 139
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public SharingLinkPolicy.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.SharingLinkPolicy.Other
    content.vb: Public ReadOnly Property AsOther As SharingLinkPolicy.Other
  overload: Dropbox.Api.TeamLog.SharingLinkPolicy.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.TeamLog
  commentId: N:Dropbox.Api.TeamLog
  name: Dropbox.Api.TeamLog
  nameWithType: Dropbox.Api.TeamLog
  fullName: Dropbox.Api.TeamLog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy
  commentId: T:Dropbox.Api.TeamLog.SharingLinkPolicy
  parent: Dropbox.Api.TeamLog
  name: SharingLinkPolicy
  nameWithType: SharingLinkPolicy
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.#ctor*
  commentId: Overload:Dropbox.Api.TeamLog.SharingLinkPolicy.#ctor
  name: SharingLinkPolicy
  nameWithType: SharingLinkPolicy.SharingLinkPolicy
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.SharingLinkPolicy
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultNoOne*
  commentId: Overload:Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultNoOne
  name: IsDefaultNoOne
  nameWithType: SharingLinkPolicy.IsDefaultNoOne
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultNoOne
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultNoOne*
  commentId: Overload:Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultNoOne
  name: AsDefaultNoOne
  nameWithType: SharingLinkPolicy.AsDefaultNoOne
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultNoOne
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.DefaultNoOne
  commentId: T:Dropbox.Api.TeamLog.SharingLinkPolicy.DefaultNoOne
  parent: Dropbox.Api.TeamLog
  name: SharingLinkPolicy.DefaultNoOne
  nameWithType: SharingLinkPolicy.DefaultNoOne
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.DefaultNoOne
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultPrivate*
  commentId: Overload:Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultPrivate
  name: IsDefaultPrivate
  nameWithType: SharingLinkPolicy.IsDefaultPrivate
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultPrivate
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultPrivate*
  commentId: Overload:Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultPrivate
  name: AsDefaultPrivate
  nameWithType: SharingLinkPolicy.AsDefaultPrivate
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultPrivate
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.DefaultPrivate
  commentId: T:Dropbox.Api.TeamLog.SharingLinkPolicy.DefaultPrivate
  parent: Dropbox.Api.TeamLog
  name: SharingLinkPolicy.DefaultPrivate
  nameWithType: SharingLinkPolicy.DefaultPrivate
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.DefaultPrivate
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultPublic*
  commentId: Overload:Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultPublic
  name: IsDefaultPublic
  nameWithType: SharingLinkPolicy.IsDefaultPublic
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.IsDefaultPublic
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultPublic*
  commentId: Overload:Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultPublic
  name: AsDefaultPublic
  nameWithType: SharingLinkPolicy.AsDefaultPublic
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.AsDefaultPublic
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.DefaultPublic
  commentId: T:Dropbox.Api.TeamLog.SharingLinkPolicy.DefaultPublic
  parent: Dropbox.Api.TeamLog
  name: SharingLinkPolicy.DefaultPublic
  nameWithType: SharingLinkPolicy.DefaultPublic
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.DefaultPublic
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.IsOnlyPrivate*
  commentId: Overload:Dropbox.Api.TeamLog.SharingLinkPolicy.IsOnlyPrivate
  name: IsOnlyPrivate
  nameWithType: SharingLinkPolicy.IsOnlyPrivate
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.IsOnlyPrivate
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.AsOnlyPrivate*
  commentId: Overload:Dropbox.Api.TeamLog.SharingLinkPolicy.AsOnlyPrivate
  name: AsOnlyPrivate
  nameWithType: SharingLinkPolicy.AsOnlyPrivate
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.AsOnlyPrivate
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.OnlyPrivate
  commentId: T:Dropbox.Api.TeamLog.SharingLinkPolicy.OnlyPrivate
  parent: Dropbox.Api.TeamLog
  name: SharingLinkPolicy.OnlyPrivate
  nameWithType: SharingLinkPolicy.OnlyPrivate
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.OnlyPrivate
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.IsOther*
  commentId: Overload:Dropbox.Api.TeamLog.SharingLinkPolicy.IsOther
  name: IsOther
  nameWithType: SharingLinkPolicy.IsOther
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.IsOther
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.AsOther*
  commentId: Overload:Dropbox.Api.TeamLog.SharingLinkPolicy.AsOther
  name: AsOther
  nameWithType: SharingLinkPolicy.AsOther
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.AsOther
- uid: Dropbox.Api.TeamLog.SharingLinkPolicy.Other
  commentId: T:Dropbox.Api.TeamLog.SharingLinkPolicy.Other
  parent: Dropbox.Api.TeamLog
  name: SharingLinkPolicy.Other
  nameWithType: SharingLinkPolicy.Other
  fullName: Dropbox.Api.TeamLog.SharingLinkPolicy.Other
