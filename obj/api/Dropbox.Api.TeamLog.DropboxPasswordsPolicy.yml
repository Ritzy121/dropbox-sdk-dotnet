### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy
  commentId: T:Dropbox.Api.TeamLog.DropboxPasswordsPolicy
  id: DropboxPasswordsPolicy
  parent: Dropbox.Api.TeamLog
  children:
  - Dropbox.Api.TeamLog.DropboxPasswordsPolicy.#ctor
  - Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsDefault
  - Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsDisabled
  - Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsEnabled
  - Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsOther
  - Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsDefault
  - Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsDisabled
  - Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsEnabled
  - Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsOther
  langs:
  - csharp
  - vb
  name: DropboxPasswordsPolicy
  nameWithType: DropboxPasswordsPolicy
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/DropboxPasswordsPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: DropboxPasswordsPolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/DropboxPasswordsPolicy.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Policy for deciding whether team users can use Dropbox Passwords</p>\n"
  example: []
  syntax:
    content: public class DropboxPasswordsPolicy
    content.vb: Public Class DropboxPasswordsPolicy
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.TeamLog.DropboxPasswordsPolicy.Default
  - Dropbox.Api.TeamLog.DropboxPasswordsPolicy.Disabled
  - Dropbox.Api.TeamLog.DropboxPasswordsPolicy.Enabled
  - Dropbox.Api.TeamLog.DropboxPasswordsPolicy.Other
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.#ctor
  commentId: M:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.#ctor
  id: '#ctor'
  parent: Dropbox.Api.TeamLog.DropboxPasswordsPolicy
  langs:
  - csharp
  - vb
  name: DropboxPasswordsPolicy()
  nameWithType: DropboxPasswordsPolicy.DropboxPasswordsPolicy()
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.DropboxPasswordsPolicy()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/DropboxPasswordsPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/DropboxPasswordsPolicy.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamLog.DropboxPasswordsPolicy\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public DropboxPasswordsPolicy()
    content.vb: Public Sub New
  overload: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsDefault
  commentId: P:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsDefault
  id: IsDefault
  parent: Dropbox.Api.TeamLog.DropboxPasswordsPolicy
  langs:
  - csharp
  - vb
  name: IsDefault
  nameWithType: DropboxPasswordsPolicy.IsDefault
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsDefault
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/DropboxPasswordsPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsDefault
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/DropboxPasswordsPolicy.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Default</p>\n"
  example: []
  syntax:
    content: public bool IsDefault { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDefault As Boolean
  overload: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsDefault*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsDefault
  commentId: P:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsDefault
  id: AsDefault
  parent: Dropbox.Api.TeamLog.DropboxPasswordsPolicy
  langs:
  - csharp
  - vb
  name: AsDefault
  nameWithType: DropboxPasswordsPolicy.AsDefault
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsDefault
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/DropboxPasswordsPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsDefault
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/DropboxPasswordsPolicy.cs
    startLine: 51
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Default, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public DropboxPasswordsPolicy.Default AsDefault { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.Default
    content.vb: Public ReadOnly Property AsDefault As DropboxPasswordsPolicy.Default
  overload: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsDefault*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsDisabled
  commentId: P:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsDisabled
  id: IsDisabled
  parent: Dropbox.Api.TeamLog.DropboxPasswordsPolicy
  langs:
  - csharp
  - vb
  name: IsDisabled
  nameWithType: DropboxPasswordsPolicy.IsDisabled
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsDisabled
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/DropboxPasswordsPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsDisabled
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/DropboxPasswordsPolicy.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Disabled</p>\n"
  example: []
  syntax:
    content: public bool IsDisabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDisabled As Boolean
  overload: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsDisabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsDisabled
  commentId: P:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsDisabled
  id: AsDisabled
  parent: Dropbox.Api.TeamLog.DropboxPasswordsPolicy
  langs:
  - csharp
  - vb
  name: AsDisabled
  nameWithType: DropboxPasswordsPolicy.AsDisabled
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsDisabled
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/DropboxPasswordsPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsDisabled
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/DropboxPasswordsPolicy.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Disabled, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public DropboxPasswordsPolicy.Disabled AsDisabled { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.Disabled
    content.vb: Public ReadOnly Property AsDisabled As DropboxPasswordsPolicy.Disabled
  overload: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsDisabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsEnabled
  commentId: P:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsEnabled
  id: IsEnabled
  parent: Dropbox.Api.TeamLog.DropboxPasswordsPolicy
  langs:
  - csharp
  - vb
  name: IsEnabled
  nameWithType: DropboxPasswordsPolicy.IsEnabled
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsEnabled
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/DropboxPasswordsPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsEnabled
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/DropboxPasswordsPolicy.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Enabled</p>\n"
  example: []
  syntax:
    content: public bool IsEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEnabled As Boolean
  overload: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsEnabled
  commentId: P:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsEnabled
  id: AsEnabled
  parent: Dropbox.Api.TeamLog.DropboxPasswordsPolicy
  langs:
  - csharp
  - vb
  name: AsEnabled
  nameWithType: DropboxPasswordsPolicy.AsEnabled
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsEnabled
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/DropboxPasswordsPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsEnabled
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/DropboxPasswordsPolicy.cs
    startLine: 95
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Enabled, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public DropboxPasswordsPolicy.Enabled AsEnabled { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.Enabled
    content.vb: Public ReadOnly Property AsEnabled As DropboxPasswordsPolicy.Enabled
  overload: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsOther
  commentId: P:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsOther
  id: IsOther
  parent: Dropbox.Api.TeamLog.DropboxPasswordsPolicy
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: DropboxPasswordsPolicy.IsOther
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/DropboxPasswordsPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/DropboxPasswordsPolicy.cs
    startLine: 106
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsOther
  commentId: P:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsOther
  id: AsOther
  parent: Dropbox.Api.TeamLog.DropboxPasswordsPolicy
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: DropboxPasswordsPolicy.AsOther
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/DropboxPasswordsPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/DropboxPasswordsPolicy.cs
    startLine: 117
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public DropboxPasswordsPolicy.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.Other
    content.vb: Public ReadOnly Property AsOther As DropboxPasswordsPolicy.Other
  overload: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.TeamLog
  commentId: N:Dropbox.Api.TeamLog
  name: Dropbox.Api.TeamLog
  nameWithType: Dropbox.Api.TeamLog
  fullName: Dropbox.Api.TeamLog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy
  commentId: T:Dropbox.Api.TeamLog.DropboxPasswordsPolicy
  parent: Dropbox.Api.TeamLog
  name: DropboxPasswordsPolicy
  nameWithType: DropboxPasswordsPolicy
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.#ctor*
  commentId: Overload:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.#ctor
  name: DropboxPasswordsPolicy
  nameWithType: DropboxPasswordsPolicy.DropboxPasswordsPolicy
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.DropboxPasswordsPolicy
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsDefault*
  commentId: Overload:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsDefault
  name: IsDefault
  nameWithType: DropboxPasswordsPolicy.IsDefault
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsDefault
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsDefault*
  commentId: Overload:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsDefault
  name: AsDefault
  nameWithType: DropboxPasswordsPolicy.AsDefault
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsDefault
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.Default
  commentId: T:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.Default
  parent: Dropbox.Api.TeamLog
  name: DropboxPasswordsPolicy.Default
  nameWithType: DropboxPasswordsPolicy.Default
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.Default
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsDisabled*
  commentId: Overload:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsDisabled
  name: IsDisabled
  nameWithType: DropboxPasswordsPolicy.IsDisabled
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsDisabled
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsDisabled*
  commentId: Overload:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsDisabled
  name: AsDisabled
  nameWithType: DropboxPasswordsPolicy.AsDisabled
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsDisabled
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.Disabled
  commentId: T:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.Disabled
  parent: Dropbox.Api.TeamLog
  name: DropboxPasswordsPolicy.Disabled
  nameWithType: DropboxPasswordsPolicy.Disabled
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.Disabled
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsEnabled*
  commentId: Overload:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsEnabled
  name: IsEnabled
  nameWithType: DropboxPasswordsPolicy.IsEnabled
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsEnabled
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsEnabled*
  commentId: Overload:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsEnabled
  name: AsEnabled
  nameWithType: DropboxPasswordsPolicy.AsEnabled
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsEnabled
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.Enabled
  commentId: T:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.Enabled
  parent: Dropbox.Api.TeamLog
  name: DropboxPasswordsPolicy.Enabled
  nameWithType: DropboxPasswordsPolicy.Enabled
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.Enabled
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsOther*
  commentId: Overload:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsOther
  name: IsOther
  nameWithType: DropboxPasswordsPolicy.IsOther
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.IsOther
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsOther*
  commentId: Overload:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsOther
  name: AsOther
  nameWithType: DropboxPasswordsPolicy.AsOther
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.AsOther
- uid: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.Other
  commentId: T:Dropbox.Api.TeamLog.DropboxPasswordsPolicy.Other
  parent: Dropbox.Api.TeamLog
  name: DropboxPasswordsPolicy.Other
  nameWithType: DropboxPasswordsPolicy.Other
  fullName: Dropbox.Api.TeamLog.DropboxPasswordsPolicy.Other
