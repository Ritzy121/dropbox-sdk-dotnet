### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.SearchMatchType
  commentId: T:Dropbox.Api.Files.SearchMatchType
  id: SearchMatchType
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.SearchMatchType.#ctor
  - Dropbox.Api.Files.SearchMatchType.AsBoth
  - Dropbox.Api.Files.SearchMatchType.AsContent
  - Dropbox.Api.Files.SearchMatchType.AsFilename
  - Dropbox.Api.Files.SearchMatchType.IsBoth
  - Dropbox.Api.Files.SearchMatchType.IsContent
  - Dropbox.Api.Files.SearchMatchType.IsFilename
  langs:
  - csharp
  - vb
  name: SearchMatchType
  nameWithType: SearchMatchType
  fullName: Dropbox.Api.Files.SearchMatchType
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchMatchType.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: SearchMatchType
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchMatchType.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Indicates what type of match was found for a given item.</p>\n"
  example: []
  syntax:
    content: public class SearchMatchType
    content.vb: Public Class SearchMatchType
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Files.SearchMatchType.Both
  - Dropbox.Api.Files.SearchMatchType.Content
  - Dropbox.Api.Files.SearchMatchType.Filename
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.SearchMatchType.#ctor
  commentId: M:Dropbox.Api.Files.SearchMatchType.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Files.SearchMatchType
  langs:
  - csharp
  - vb
  name: SearchMatchType()
  nameWithType: SearchMatchType.SearchMatchType()
  fullName: Dropbox.Api.Files.SearchMatchType.SearchMatchType()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchMatchType.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchMatchType.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.SearchMatchType\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public SearchMatchType()
    content.vb: Public Sub New
  overload: Dropbox.Api.Files.SearchMatchType.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.SearchMatchType.IsFilename
  commentId: P:Dropbox.Api.Files.SearchMatchType.IsFilename
  id: IsFilename
  parent: Dropbox.Api.Files.SearchMatchType
  langs:
  - csharp
  - vb
  name: IsFilename
  nameWithType: SearchMatchType.IsFilename
  fullName: Dropbox.Api.Files.SearchMatchType.IsFilename
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchMatchType.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsFilename
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchMatchType.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Filename</p>\n"
  example: []
  syntax:
    content: public bool IsFilename { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFilename As Boolean
  overload: Dropbox.Api.Files.SearchMatchType.IsFilename*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.SearchMatchType.AsFilename
  commentId: P:Dropbox.Api.Files.SearchMatchType.AsFilename
  id: AsFilename
  parent: Dropbox.Api.Files.SearchMatchType
  langs:
  - csharp
  - vb
  name: AsFilename
  nameWithType: SearchMatchType.AsFilename
  fullName: Dropbox.Api.Files.SearchMatchType.AsFilename
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchMatchType.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsFilename
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchMatchType.cs
    startLine: 51
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Filename, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public SearchMatchType.Filename AsFilename { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.SearchMatchType.Filename
    content.vb: Public ReadOnly Property AsFilename As SearchMatchType.Filename
  overload: Dropbox.Api.Files.SearchMatchType.AsFilename*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.SearchMatchType.IsContent
  commentId: P:Dropbox.Api.Files.SearchMatchType.IsContent
  id: IsContent
  parent: Dropbox.Api.Files.SearchMatchType
  langs:
  - csharp
  - vb
  name: IsContent
  nameWithType: SearchMatchType.IsContent
  fullName: Dropbox.Api.Files.SearchMatchType.IsContent
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchMatchType.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsContent
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchMatchType.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Content</p>\n"
  example: []
  syntax:
    content: public bool IsContent { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsContent As Boolean
  overload: Dropbox.Api.Files.SearchMatchType.IsContent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.SearchMatchType.AsContent
  commentId: P:Dropbox.Api.Files.SearchMatchType.AsContent
  id: AsContent
  parent: Dropbox.Api.Files.SearchMatchType
  langs:
  - csharp
  - vb
  name: AsContent
  nameWithType: SearchMatchType.AsContent
  fullName: Dropbox.Api.Files.SearchMatchType.AsContent
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchMatchType.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsContent
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchMatchType.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Content, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public SearchMatchType.Content AsContent { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.SearchMatchType.Content
    content.vb: Public ReadOnly Property AsContent As SearchMatchType.Content
  overload: Dropbox.Api.Files.SearchMatchType.AsContent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.SearchMatchType.IsBoth
  commentId: P:Dropbox.Api.Files.SearchMatchType.IsBoth
  id: IsBoth
  parent: Dropbox.Api.Files.SearchMatchType
  langs:
  - csharp
  - vb
  name: IsBoth
  nameWithType: SearchMatchType.IsBoth
  fullName: Dropbox.Api.Files.SearchMatchType.IsBoth
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchMatchType.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsBoth
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchMatchType.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Both</p>\n"
  example: []
  syntax:
    content: public bool IsBoth { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsBoth As Boolean
  overload: Dropbox.Api.Files.SearchMatchType.IsBoth*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.SearchMatchType.AsBoth
  commentId: P:Dropbox.Api.Files.SearchMatchType.AsBoth
  id: AsBoth
  parent: Dropbox.Api.Files.SearchMatchType
  langs:
  - csharp
  - vb
  name: AsBoth
  nameWithType: SearchMatchType.AsBoth
  fullName: Dropbox.Api.Files.SearchMatchType.AsBoth
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchMatchType.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsBoth
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchMatchType.cs
    startLine: 95
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Both, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public SearchMatchType.Both AsBoth { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.SearchMatchType.Both
    content.vb: Public ReadOnly Property AsBoth As SearchMatchType.Both
  overload: Dropbox.Api.Files.SearchMatchType.AsBoth*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Files.SearchMatchType
  commentId: T:Dropbox.Api.Files.SearchMatchType
  parent: Dropbox.Api.Files
  name: SearchMatchType
  nameWithType: SearchMatchType
  fullName: Dropbox.Api.Files.SearchMatchType
- uid: Dropbox.Api.Files.SearchMatchType.#ctor*
  commentId: Overload:Dropbox.Api.Files.SearchMatchType.#ctor
  name: SearchMatchType
  nameWithType: SearchMatchType.SearchMatchType
  fullName: Dropbox.Api.Files.SearchMatchType.SearchMatchType
- uid: Dropbox.Api.Files.SearchMatchType.IsFilename*
  commentId: Overload:Dropbox.Api.Files.SearchMatchType.IsFilename
  name: IsFilename
  nameWithType: SearchMatchType.IsFilename
  fullName: Dropbox.Api.Files.SearchMatchType.IsFilename
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Files.SearchMatchType.AsFilename*
  commentId: Overload:Dropbox.Api.Files.SearchMatchType.AsFilename
  name: AsFilename
  nameWithType: SearchMatchType.AsFilename
  fullName: Dropbox.Api.Files.SearchMatchType.AsFilename
- uid: Dropbox.Api.Files.SearchMatchType.Filename
  commentId: T:Dropbox.Api.Files.SearchMatchType.Filename
  parent: Dropbox.Api.Files
  name: SearchMatchType.Filename
  nameWithType: SearchMatchType.Filename
  fullName: Dropbox.Api.Files.SearchMatchType.Filename
- uid: Dropbox.Api.Files.SearchMatchType.IsContent*
  commentId: Overload:Dropbox.Api.Files.SearchMatchType.IsContent
  name: IsContent
  nameWithType: SearchMatchType.IsContent
  fullName: Dropbox.Api.Files.SearchMatchType.IsContent
- uid: Dropbox.Api.Files.SearchMatchType.AsContent*
  commentId: Overload:Dropbox.Api.Files.SearchMatchType.AsContent
  name: AsContent
  nameWithType: SearchMatchType.AsContent
  fullName: Dropbox.Api.Files.SearchMatchType.AsContent
- uid: Dropbox.Api.Files.SearchMatchType.Content
  commentId: T:Dropbox.Api.Files.SearchMatchType.Content
  parent: Dropbox.Api.Files
  name: SearchMatchType.Content
  nameWithType: SearchMatchType.Content
  fullName: Dropbox.Api.Files.SearchMatchType.Content
- uid: Dropbox.Api.Files.SearchMatchType.IsBoth*
  commentId: Overload:Dropbox.Api.Files.SearchMatchType.IsBoth
  name: IsBoth
  nameWithType: SearchMatchType.IsBoth
  fullName: Dropbox.Api.Files.SearchMatchType.IsBoth
- uid: Dropbox.Api.Files.SearchMatchType.AsBoth*
  commentId: Overload:Dropbox.Api.Files.SearchMatchType.AsBoth
  name: AsBoth
  nameWithType: SearchMatchType.AsBoth
  fullName: Dropbox.Api.Files.SearchMatchType.AsBoth
- uid: Dropbox.Api.Files.SearchMatchType.Both
  commentId: T:Dropbox.Api.Files.SearchMatchType.Both
  parent: Dropbox.Api.Files
  name: SearchMatchType.Both
  nameWithType: SearchMatchType.Both
  fullName: Dropbox.Api.Files.SearchMatchType.Both
