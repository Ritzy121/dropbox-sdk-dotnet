### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamLog.ResellerRole
  commentId: T:Dropbox.Api.TeamLog.ResellerRole
  id: ResellerRole
  parent: Dropbox.Api.TeamLog
  children:
  - Dropbox.Api.TeamLog.ResellerRole.#ctor
  - Dropbox.Api.TeamLog.ResellerRole.AsNotReseller
  - Dropbox.Api.TeamLog.ResellerRole.AsOther
  - Dropbox.Api.TeamLog.ResellerRole.AsResellerAdmin
  - Dropbox.Api.TeamLog.ResellerRole.IsNotReseller
  - Dropbox.Api.TeamLog.ResellerRole.IsOther
  - Dropbox.Api.TeamLog.ResellerRole.IsResellerAdmin
  langs:
  - csharp
  - vb
  name: ResellerRole
  nameWithType: ResellerRole
  fullName: Dropbox.Api.TeamLog.ResellerRole
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ResellerRole.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ResellerRole
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ResellerRole.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>The reseller role object</p>\n"
  example: []
  syntax:
    content: public class ResellerRole
    content.vb: Public Class ResellerRole
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.TeamLog.ResellerRole.NotReseller
  - Dropbox.Api.TeamLog.ResellerRole.Other
  - Dropbox.Api.TeamLog.ResellerRole.ResellerAdmin
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.TeamLog.ResellerRole.#ctor
  commentId: M:Dropbox.Api.TeamLog.ResellerRole.#ctor
  id: '#ctor'
  parent: Dropbox.Api.TeamLog.ResellerRole
  langs:
  - csharp
  - vb
  name: ResellerRole()
  nameWithType: ResellerRole.ResellerRole()
  fullName: Dropbox.Api.TeamLog.ResellerRole.ResellerRole()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ResellerRole.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ResellerRole.cs
    startLine: 32
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamLog.ResellerRole\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public ResellerRole()
    content.vb: Public Sub New
  overload: Dropbox.Api.TeamLog.ResellerRole.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.TeamLog.ResellerRole.IsNotReseller
  commentId: P:Dropbox.Api.TeamLog.ResellerRole.IsNotReseller
  id: IsNotReseller
  parent: Dropbox.Api.TeamLog.ResellerRole
  langs:
  - csharp
  - vb
  name: IsNotReseller
  nameWithType: ResellerRole.IsNotReseller
  fullName: Dropbox.Api.TeamLog.ResellerRole.IsNotReseller
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ResellerRole.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsNotReseller
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ResellerRole.cs
    startLine: 39
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is NotReseller</p>\n"
  example: []
  syntax:
    content: public bool IsNotReseller { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNotReseller As Boolean
  overload: Dropbox.Api.TeamLog.ResellerRole.IsNotReseller*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ResellerRole.AsNotReseller
  commentId: P:Dropbox.Api.TeamLog.ResellerRole.AsNotReseller
  id: AsNotReseller
  parent: Dropbox.Api.TeamLog.ResellerRole
  langs:
  - csharp
  - vb
  name: AsNotReseller
  nameWithType: ResellerRole.AsNotReseller
  fullName: Dropbox.Api.TeamLog.ResellerRole.AsNotReseller
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ResellerRole.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsNotReseller
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ResellerRole.cs
    startLine: 50
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a NotReseller, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public ResellerRole.NotReseller AsNotReseller { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.ResellerRole.NotReseller
    content.vb: Public ReadOnly Property AsNotReseller As ResellerRole.NotReseller
  overload: Dropbox.Api.TeamLog.ResellerRole.AsNotReseller*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ResellerRole.IsResellerAdmin
  commentId: P:Dropbox.Api.TeamLog.ResellerRole.IsResellerAdmin
  id: IsResellerAdmin
  parent: Dropbox.Api.TeamLog.ResellerRole
  langs:
  - csharp
  - vb
  name: IsResellerAdmin
  nameWithType: ResellerRole.IsResellerAdmin
  fullName: Dropbox.Api.TeamLog.ResellerRole.IsResellerAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ResellerRole.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsResellerAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ResellerRole.cs
    startLine: 61
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is ResellerAdmin</p>\n"
  example: []
  syntax:
    content: public bool IsResellerAdmin { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsResellerAdmin As Boolean
  overload: Dropbox.Api.TeamLog.ResellerRole.IsResellerAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ResellerRole.AsResellerAdmin
  commentId: P:Dropbox.Api.TeamLog.ResellerRole.AsResellerAdmin
  id: AsResellerAdmin
  parent: Dropbox.Api.TeamLog.ResellerRole
  langs:
  - csharp
  - vb
  name: AsResellerAdmin
  nameWithType: ResellerRole.AsResellerAdmin
  fullName: Dropbox.Api.TeamLog.ResellerRole.AsResellerAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ResellerRole.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsResellerAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ResellerRole.cs
    startLine: 72
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a ResellerAdmin, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public ResellerRole.ResellerAdmin AsResellerAdmin { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.ResellerRole.ResellerAdmin
    content.vb: Public ReadOnly Property AsResellerAdmin As ResellerRole.ResellerAdmin
  overload: Dropbox.Api.TeamLog.ResellerRole.AsResellerAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ResellerRole.IsOther
  commentId: P:Dropbox.Api.TeamLog.ResellerRole.IsOther
  id: IsOther
  parent: Dropbox.Api.TeamLog.ResellerRole
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: ResellerRole.IsOther
  fullName: Dropbox.Api.TeamLog.ResellerRole.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ResellerRole.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ResellerRole.cs
    startLine: 83
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.TeamLog.ResellerRole.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ResellerRole.AsOther
  commentId: P:Dropbox.Api.TeamLog.ResellerRole.AsOther
  id: AsOther
  parent: Dropbox.Api.TeamLog.ResellerRole
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: ResellerRole.AsOther
  fullName: Dropbox.Api.TeamLog.ResellerRole.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ResellerRole.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ResellerRole.cs
    startLine: 94
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public ResellerRole.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.ResellerRole.Other
    content.vb: Public ReadOnly Property AsOther As ResellerRole.Other
  overload: Dropbox.Api.TeamLog.ResellerRole.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.TeamLog
  commentId: N:Dropbox.Api.TeamLog
  name: Dropbox.Api.TeamLog
  nameWithType: Dropbox.Api.TeamLog
  fullName: Dropbox.Api.TeamLog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.TeamLog.ResellerRole
  commentId: T:Dropbox.Api.TeamLog.ResellerRole
  parent: Dropbox.Api.TeamLog
  name: ResellerRole
  nameWithType: ResellerRole
  fullName: Dropbox.Api.TeamLog.ResellerRole
- uid: Dropbox.Api.TeamLog.ResellerRole.#ctor*
  commentId: Overload:Dropbox.Api.TeamLog.ResellerRole.#ctor
  name: ResellerRole
  nameWithType: ResellerRole.ResellerRole
  fullName: Dropbox.Api.TeamLog.ResellerRole.ResellerRole
- uid: Dropbox.Api.TeamLog.ResellerRole.IsNotReseller*
  commentId: Overload:Dropbox.Api.TeamLog.ResellerRole.IsNotReseller
  name: IsNotReseller
  nameWithType: ResellerRole.IsNotReseller
  fullName: Dropbox.Api.TeamLog.ResellerRole.IsNotReseller
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.TeamLog.ResellerRole.AsNotReseller*
  commentId: Overload:Dropbox.Api.TeamLog.ResellerRole.AsNotReseller
  name: AsNotReseller
  nameWithType: ResellerRole.AsNotReseller
  fullName: Dropbox.Api.TeamLog.ResellerRole.AsNotReseller
- uid: Dropbox.Api.TeamLog.ResellerRole.NotReseller
  commentId: T:Dropbox.Api.TeamLog.ResellerRole.NotReseller
  parent: Dropbox.Api.TeamLog
  name: ResellerRole.NotReseller
  nameWithType: ResellerRole.NotReseller
  fullName: Dropbox.Api.TeamLog.ResellerRole.NotReseller
- uid: Dropbox.Api.TeamLog.ResellerRole.IsResellerAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.ResellerRole.IsResellerAdmin
  name: IsResellerAdmin
  nameWithType: ResellerRole.IsResellerAdmin
  fullName: Dropbox.Api.TeamLog.ResellerRole.IsResellerAdmin
- uid: Dropbox.Api.TeamLog.ResellerRole.AsResellerAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.ResellerRole.AsResellerAdmin
  name: AsResellerAdmin
  nameWithType: ResellerRole.AsResellerAdmin
  fullName: Dropbox.Api.TeamLog.ResellerRole.AsResellerAdmin
- uid: Dropbox.Api.TeamLog.ResellerRole.ResellerAdmin
  commentId: T:Dropbox.Api.TeamLog.ResellerRole.ResellerAdmin
  parent: Dropbox.Api.TeamLog
  name: ResellerRole.ResellerAdmin
  nameWithType: ResellerRole.ResellerAdmin
  fullName: Dropbox.Api.TeamLog.ResellerRole.ResellerAdmin
- uid: Dropbox.Api.TeamLog.ResellerRole.IsOther*
  commentId: Overload:Dropbox.Api.TeamLog.ResellerRole.IsOther
  name: IsOther
  nameWithType: ResellerRole.IsOther
  fullName: Dropbox.Api.TeamLog.ResellerRole.IsOther
- uid: Dropbox.Api.TeamLog.ResellerRole.AsOther*
  commentId: Overload:Dropbox.Api.TeamLog.ResellerRole.AsOther
  name: AsOther
  nameWithType: ResellerRole.AsOther
  fullName: Dropbox.Api.TeamLog.ResellerRole.AsOther
- uid: Dropbox.Api.TeamLog.ResellerRole.Other
  commentId: T:Dropbox.Api.TeamLog.ResellerRole.Other
  parent: Dropbox.Api.TeamLog
  name: ResellerRole.Other
  nameWithType: ResellerRole.Other
  fullName: Dropbox.Api.TeamLog.ResellerRole.Other
