### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Sharing.VisibilityPolicy
  commentId: T:Dropbox.Api.Sharing.VisibilityPolicy
  id: VisibilityPolicy
  parent: Dropbox.Api.Sharing
  children:
  - Dropbox.Api.Sharing.VisibilityPolicy.#ctor(Dropbox.Api.Sharing.RequestedVisibility,Dropbox.Api.Sharing.AlphaResolvedVisibility,System.Boolean,Dropbox.Api.Sharing.VisibilityPolicyDisallowedReason)
  - Dropbox.Api.Sharing.VisibilityPolicy.Allowed
  - Dropbox.Api.Sharing.VisibilityPolicy.DisallowedReason
  - Dropbox.Api.Sharing.VisibilityPolicy.Policy
  - Dropbox.Api.Sharing.VisibilityPolicy.ResolvedPolicy
  langs:
  - csharp
  - vb
  name: VisibilityPolicy
  nameWithType: VisibilityPolicy
  fullName: Dropbox.Api.Sharing.VisibilityPolicy
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/VisibilityPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: VisibilityPolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/VisibilityPolicy.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>The visibility policy object</p>\n"
  example: []
  syntax:
    content: public class VisibilityPolicy
    content.vb: Public Class VisibilityPolicy
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Sharing.VisibilityPolicy.#ctor(Dropbox.Api.Sharing.RequestedVisibility,Dropbox.Api.Sharing.AlphaResolvedVisibility,System.Boolean,Dropbox.Api.Sharing.VisibilityPolicyDisallowedReason)
  commentId: M:Dropbox.Api.Sharing.VisibilityPolicy.#ctor(Dropbox.Api.Sharing.RequestedVisibility,Dropbox.Api.Sharing.AlphaResolvedVisibility,System.Boolean,Dropbox.Api.Sharing.VisibilityPolicyDisallowedReason)
  id: '#ctor(Dropbox.Api.Sharing.RequestedVisibility,Dropbox.Api.Sharing.AlphaResolvedVisibility,System.Boolean,Dropbox.Api.Sharing.VisibilityPolicyDisallowedReason)'
  parent: Dropbox.Api.Sharing.VisibilityPolicy
  langs:
  - csharp
  - vb
  name: VisibilityPolicy(RequestedVisibility, AlphaResolvedVisibility, Boolean, VisibilityPolicyDisallowedReason)
  nameWithType: VisibilityPolicy.VisibilityPolicy(RequestedVisibility, AlphaResolvedVisibility, Boolean, VisibilityPolicyDisallowedReason)
  fullName: Dropbox.Api.Sharing.VisibilityPolicy.VisibilityPolicy(Dropbox.Api.Sharing.RequestedVisibility, Dropbox.Api.Sharing.AlphaResolvedVisibility, System.Boolean, Dropbox.Api.Sharing.VisibilityPolicyDisallowedReason)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/VisibilityPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/VisibilityPolicy.cs
    startLine: 44
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Sharing.VisibilityPolicy\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public VisibilityPolicy(RequestedVisibility policy, AlphaResolvedVisibility resolvedPolicy, bool allowed, VisibilityPolicyDisallowedReason disallowedReason = null)
    parameters:
    - id: policy
      type: Dropbox.Api.Sharing.RequestedVisibility
      description: >-
        This is the value to submit when saving the visibility

        setting.
    - id: resolvedPolicy
      type: Dropbox.Api.Sharing.AlphaResolvedVisibility
      description: >-
        This is what the effective policy would be, if you

        selected this option. The resolved policy is obtained after considering external

        effects such as shared folder settings and team policy. This value is guaranteed to

        be provided.
    - id: allowed
      type: System.Boolean
      description: >-
        Whether the user is permitted to set the visibility to this

        policy.
    - id: disallowedReason
      type: Dropbox.Api.Sharing.VisibilityPolicyDisallowedReason
      description: >-
        If <code data-dev-comment-type="paramref" class="paramref">allowed</code> is <code>false</code>, this

        will provide the reason that the user is not permitted to set the visibility to

        this policy.
    content.vb: Public Sub New(policy As RequestedVisibility, resolvedPolicy As AlphaResolvedVisibility, allowed As Boolean, disallowedReason As VisibilityPolicyDisallowedReason = Nothing)
  overload: Dropbox.Api.Sharing.VisibilityPolicy.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.VisibilityPolicy.Policy
  commentId: P:Dropbox.Api.Sharing.VisibilityPolicy.Policy
  id: Policy
  parent: Dropbox.Api.Sharing.VisibilityPolicy
  langs:
  - csharp
  - vb
  name: Policy
  nameWithType: VisibilityPolicy.Policy
  fullName: Dropbox.Api.Sharing.VisibilityPolicy.Policy
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/VisibilityPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Policy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/VisibilityPolicy.cs
    startLine: 79
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>This is the value to submit when saving the visibility setting.</p>\n"
  example: []
  syntax:
    content: public RequestedVisibility Policy { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Sharing.RequestedVisibility
    content.vb: Public Property Policy As RequestedVisibility
  overload: Dropbox.Api.Sharing.VisibilityPolicy.Policy*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Sharing.VisibilityPolicy.ResolvedPolicy
  commentId: P:Dropbox.Api.Sharing.VisibilityPolicy.ResolvedPolicy
  id: ResolvedPolicy
  parent: Dropbox.Api.Sharing.VisibilityPolicy
  langs:
  - csharp
  - vb
  name: ResolvedPolicy
  nameWithType: VisibilityPolicy.ResolvedPolicy
  fullName: Dropbox.Api.Sharing.VisibilityPolicy.ResolvedPolicy
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/VisibilityPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ResolvedPolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/VisibilityPolicy.cs
    startLine: 86
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>This is what the effective policy would be, if you selected this option. The\nresolved policy is obtained after considering external effects such as shared\nfolder settings and team policy. This value is guaranteed to be provided.</p>\n"
  example: []
  syntax:
    content: public AlphaResolvedVisibility ResolvedPolicy { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Sharing.AlphaResolvedVisibility
    content.vb: Public Property ResolvedPolicy As AlphaResolvedVisibility
  overload: Dropbox.Api.Sharing.VisibilityPolicy.ResolvedPolicy*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Sharing.VisibilityPolicy.Allowed
  commentId: P:Dropbox.Api.Sharing.VisibilityPolicy.Allowed
  id: Allowed
  parent: Dropbox.Api.Sharing.VisibilityPolicy
  langs:
  - csharp
  - vb
  name: Allowed
  nameWithType: VisibilityPolicy.Allowed
  fullName: Dropbox.Api.Sharing.VisibilityPolicy.Allowed
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/VisibilityPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Allowed
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/VisibilityPolicy.cs
    startLine: 91
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Whether the user is permitted to set the visibility to this policy.</p>\n"
  example: []
  syntax:
    content: public bool Allowed { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Allowed As Boolean
  overload: Dropbox.Api.Sharing.VisibilityPolicy.Allowed*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Sharing.VisibilityPolicy.DisallowedReason
  commentId: P:Dropbox.Api.Sharing.VisibilityPolicy.DisallowedReason
  id: DisallowedReason
  parent: Dropbox.Api.Sharing.VisibilityPolicy
  langs:
  - csharp
  - vb
  name: DisallowedReason
  nameWithType: VisibilityPolicy.DisallowedReason
  fullName: Dropbox.Api.Sharing.VisibilityPolicy.DisallowedReason
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/VisibilityPolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: DisallowedReason
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/VisibilityPolicy.cs
    startLine: 97
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>If <xref href=\"Dropbox.Api.Sharing.VisibilityPolicy.Allowed\" data-throw-if-not-resolved=\"false\"></xref> is <code>false</code>, this will provide the reason that\nthe user is not permitted to set the visibility to this policy.</p>\n"
  example: []
  syntax:
    content: public VisibilityPolicyDisallowedReason DisallowedReason { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Sharing.VisibilityPolicyDisallowedReason
    content.vb: Public Property DisallowedReason As VisibilityPolicyDisallowedReason
  overload: Dropbox.Api.Sharing.VisibilityPolicy.DisallowedReason*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Sharing
  commentId: N:Dropbox.Api.Sharing
  name: Dropbox.Api.Sharing
  nameWithType: Dropbox.Api.Sharing
  fullName: Dropbox.Api.Sharing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Sharing.VisibilityPolicy
  commentId: T:Dropbox.Api.Sharing.VisibilityPolicy
  name: VisibilityPolicy
  nameWithType: VisibilityPolicy
  fullName: Dropbox.Api.Sharing.VisibilityPolicy
- uid: Dropbox.Api.Sharing.VisibilityPolicy.#ctor*
  commentId: Overload:Dropbox.Api.Sharing.VisibilityPolicy.#ctor
  name: VisibilityPolicy
  nameWithType: VisibilityPolicy.VisibilityPolicy
  fullName: Dropbox.Api.Sharing.VisibilityPolicy.VisibilityPolicy
- uid: Dropbox.Api.Sharing.RequestedVisibility
  commentId: T:Dropbox.Api.Sharing.RequestedVisibility
  parent: Dropbox.Api.Sharing
  name: RequestedVisibility
  nameWithType: RequestedVisibility
  fullName: Dropbox.Api.Sharing.RequestedVisibility
- uid: Dropbox.Api.Sharing.AlphaResolvedVisibility
  commentId: T:Dropbox.Api.Sharing.AlphaResolvedVisibility
  parent: Dropbox.Api.Sharing
  name: AlphaResolvedVisibility
  nameWithType: AlphaResolvedVisibility
  fullName: Dropbox.Api.Sharing.AlphaResolvedVisibility
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Sharing.VisibilityPolicyDisallowedReason
  commentId: T:Dropbox.Api.Sharing.VisibilityPolicyDisallowedReason
  parent: Dropbox.Api.Sharing
  name: VisibilityPolicyDisallowedReason
  nameWithType: VisibilityPolicyDisallowedReason
  fullName: Dropbox.Api.Sharing.VisibilityPolicyDisallowedReason
- uid: Dropbox.Api.Sharing.VisibilityPolicy.Policy*
  commentId: Overload:Dropbox.Api.Sharing.VisibilityPolicy.Policy
  name: Policy
  nameWithType: VisibilityPolicy.Policy
  fullName: Dropbox.Api.Sharing.VisibilityPolicy.Policy
- uid: Dropbox.Api.Sharing.VisibilityPolicy.ResolvedPolicy*
  commentId: Overload:Dropbox.Api.Sharing.VisibilityPolicy.ResolvedPolicy
  name: ResolvedPolicy
  nameWithType: VisibilityPolicy.ResolvedPolicy
  fullName: Dropbox.Api.Sharing.VisibilityPolicy.ResolvedPolicy
- uid: Dropbox.Api.Sharing.VisibilityPolicy.Allowed*
  commentId: Overload:Dropbox.Api.Sharing.VisibilityPolicy.Allowed
  name: Allowed
  nameWithType: VisibilityPolicy.Allowed
  fullName: Dropbox.Api.Sharing.VisibilityPolicy.Allowed
- uid: Dropbox.Api.Sharing.VisibilityPolicy.Allowed
  commentId: P:Dropbox.Api.Sharing.VisibilityPolicy.Allowed
  isExternal: true
- uid: Dropbox.Api.Sharing.VisibilityPolicy.DisallowedReason*
  commentId: Overload:Dropbox.Api.Sharing.VisibilityPolicy.DisallowedReason
  name: DisallowedReason
  nameWithType: VisibilityPolicy.DisallowedReason
  fullName: Dropbox.Api.Sharing.VisibilityPolicy.DisallowedReason
