### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Team.TeamFolderArchiveArg
  commentId: T:Dropbox.Api.Team.TeamFolderArchiveArg
  id: TeamFolderArchiveArg
  parent: Dropbox.Api.Team
  children:
  - Dropbox.Api.Team.TeamFolderArchiveArg.#ctor(System.String,System.Boolean)
  - Dropbox.Api.Team.TeamFolderArchiveArg.ForceAsyncOff
  langs:
  - csharp
  - vb
  name: TeamFolderArchiveArg
  nameWithType: TeamFolderArchiveArg
  fullName: Dropbox.Api.Team.TeamFolderArchiveArg
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderArchiveArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderArchiveArg
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderArchiveArg.cs
    startLine: 16
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>The team folder archive arg object</p>\n"
  example: []
  syntax:
    content: 'public class TeamFolderArchiveArg : TeamFolderIdArg'
    content.vb: >-
      Public Class TeamFolderArchiveArg
          Inherits TeamFolderIdArg
  inheritance:
  - System.Object
  - Dropbox.Api.Team.TeamFolderIdArg
  inheritedMembers:
  - Dropbox.Api.Team.TeamFolderIdArg.TeamFolderId
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Team.TeamFolderArchiveArg.#ctor(System.String,System.Boolean)
  commentId: M:Dropbox.Api.Team.TeamFolderArchiveArg.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: Dropbox.Api.Team.TeamFolderArchiveArg
  langs:
  - csharp
  - vb
  name: TeamFolderArchiveArg(String, Boolean)
  nameWithType: TeamFolderArchiveArg.TeamFolderArchiveArg(String, Boolean)
  fullName: Dropbox.Api.Team.TeamFolderArchiveArg.TeamFolderArchiveArg(System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderArchiveArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderArchiveArg.cs
    startLine: 37
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Team.TeamFolderArchiveArg\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public TeamFolderArchiveArg(string teamFolderId, bool forceAsyncOff = false)
    parameters:
    - id: teamFolderId
      type: System.String
      description: The ID of the team folder.
    - id: forceAsyncOff
      type: System.Boolean
      description: >-
        Whether to force the archive to happen

        synchronously.
    content.vb: Public Sub New(teamFolderId As String, forceAsyncOff As Boolean = False)
  overload: Dropbox.Api.Team.TeamFolderArchiveArg.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.TeamFolderArchiveArg.ForceAsyncOff
  commentId: P:Dropbox.Api.Team.TeamFolderArchiveArg.ForceAsyncOff
  id: ForceAsyncOff
  parent: Dropbox.Api.Team.TeamFolderArchiveArg
  langs:
  - csharp
  - vb
  name: ForceAsyncOff
  nameWithType: TeamFolderArchiveArg.ForceAsyncOff
  fullName: Dropbox.Api.Team.TeamFolderArchiveArg.ForceAsyncOff
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderArchiveArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ForceAsyncOff
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderArchiveArg.cs
    startLine: 59
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Whether to force the archive to happen synchronously.</p>\n"
  example: []
  syntax:
    content: public bool ForceAsyncOff { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ForceAsyncOff As Boolean
  overload: Dropbox.Api.Team.TeamFolderArchiveArg.ForceAsyncOff*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Team
  commentId: N:Dropbox.Api.Team
  name: Dropbox.Api.Team
  nameWithType: Dropbox.Api.Team
  fullName: Dropbox.Api.Team
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Team.TeamFolderIdArg
  commentId: T:Dropbox.Api.Team.TeamFolderIdArg
  parent: Dropbox.Api.Team
  name: TeamFolderIdArg
  nameWithType: TeamFolderIdArg
  fullName: Dropbox.Api.Team.TeamFolderIdArg
- uid: Dropbox.Api.Team.TeamFolderIdArg.TeamFolderId
  commentId: P:Dropbox.Api.Team.TeamFolderIdArg.TeamFolderId
  parent: Dropbox.Api.Team.TeamFolderIdArg
  name: TeamFolderId
  nameWithType: TeamFolderIdArg.TeamFolderId
  fullName: Dropbox.Api.Team.TeamFolderIdArg.TeamFolderId
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Team.TeamFolderArchiveArg
  commentId: T:Dropbox.Api.Team.TeamFolderArchiveArg
  parent: Dropbox.Api.Team
  name: TeamFolderArchiveArg
  nameWithType: TeamFolderArchiveArg
  fullName: Dropbox.Api.Team.TeamFolderArchiveArg
- uid: Dropbox.Api.Team.TeamFolderArchiveArg.#ctor*
  commentId: Overload:Dropbox.Api.Team.TeamFolderArchiveArg.#ctor
  name: TeamFolderArchiveArg
  nameWithType: TeamFolderArchiveArg.TeamFolderArchiveArg
  fullName: Dropbox.Api.Team.TeamFolderArchiveArg.TeamFolderArchiveArg
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Team.TeamFolderArchiveArg.ForceAsyncOff*
  commentId: Overload:Dropbox.Api.Team.TeamFolderArchiveArg.ForceAsyncOff
  name: ForceAsyncOff
  nameWithType: TeamFolderArchiveArg.ForceAsyncOff
  fullName: Dropbox.Api.Team.TeamFolderArchiveArg.ForceAsyncOff
