### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.GetTemporaryUploadLinkArg
  commentId: T:Dropbox.Api.Files.GetTemporaryUploadLinkArg
  id: GetTemporaryUploadLinkArg
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.GetTemporaryUploadLinkArg.#ctor(Dropbox.Api.Files.CommitInfo,System.Double)
  - Dropbox.Api.Files.GetTemporaryUploadLinkArg.CommitInfo
  - Dropbox.Api.Files.GetTemporaryUploadLinkArg.Duration
  langs:
  - csharp
  - vb
  name: GetTemporaryUploadLinkArg
  nameWithType: GetTemporaryUploadLinkArg
  fullName: Dropbox.Api.Files.GetTemporaryUploadLinkArg
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/GetTemporaryUploadLinkArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GetTemporaryUploadLinkArg
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/GetTemporaryUploadLinkArg.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The get temporary upload link arg object</p>\n"
  example: []
  syntax:
    content: public class GetTemporaryUploadLinkArg
    content.vb: Public Class GetTemporaryUploadLinkArg
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.GetTemporaryUploadLinkArg.#ctor(Dropbox.Api.Files.CommitInfo,System.Double)
  commentId: M:Dropbox.Api.Files.GetTemporaryUploadLinkArg.#ctor(Dropbox.Api.Files.CommitInfo,System.Double)
  id: '#ctor(Dropbox.Api.Files.CommitInfo,System.Double)'
  parent: Dropbox.Api.Files.GetTemporaryUploadLinkArg
  langs:
  - csharp
  - vb
  name: GetTemporaryUploadLinkArg(CommitInfo, Double)
  nameWithType: GetTemporaryUploadLinkArg.GetTemporaryUploadLinkArg(CommitInfo, Double)
  fullName: Dropbox.Api.Files.GetTemporaryUploadLinkArg.GetTemporaryUploadLinkArg(Dropbox.Api.Files.CommitInfo, System.Double)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/GetTemporaryUploadLinkArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/GetTemporaryUploadLinkArg.cs
    startLine: 39
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.GetTemporaryUploadLinkArg\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public GetTemporaryUploadLinkArg(CommitInfo commitInfo, double duration = 14400)
    parameters:
    - id: commitInfo
      type: Dropbox.Api.Files.CommitInfo
      description: >-
        Contains the path and other optional modifiers for the

        future upload commit. Equivalent to the parameters provided to <xref href="Dropbox.Api.Files.Routes.FilesUserRoutes.UploadAsync(Dropbox.Api.Files.UploadArg%2cSystem.IO.Stream)" data-throw-if-not-resolved="false"></xref>.
    - id: duration
      type: System.Double
      description: >-
        How long before this link expires, in seconds.  Attempting

        to start an upload with this link longer than this period  of time after link

        creation will result in an error.
    content.vb: Public Sub New(commitInfo As CommitInfo, duration As Double = 14400)
  overload: Dropbox.Api.Files.GetTemporaryUploadLinkArg.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.GetTemporaryUploadLinkArg.CommitInfo
  commentId: P:Dropbox.Api.Files.GetTemporaryUploadLinkArg.CommitInfo
  id: CommitInfo
  parent: Dropbox.Api.Files.GetTemporaryUploadLinkArg
  langs:
  - csharp
  - vb
  name: CommitInfo
  nameWithType: GetTemporaryUploadLinkArg.CommitInfo
  fullName: Dropbox.Api.Files.GetTemporaryUploadLinkArg.CommitInfo
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/GetTemporaryUploadLinkArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: CommitInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/GetTemporaryUploadLinkArg.cs
    startLine: 77
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Contains the path and other optional modifiers for the future upload commit.\nEquivalent to the parameters provided to <xref href=\"Dropbox.Api.Files.Routes.FilesUserRoutes.UploadAsync(Dropbox.Api.Files.UploadArg%2cSystem.IO.Stream)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public CommitInfo CommitInfo { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Files.CommitInfo
    content.vb: Public Property CommitInfo As CommitInfo
  overload: Dropbox.Api.Files.GetTemporaryUploadLinkArg.CommitInfo*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.GetTemporaryUploadLinkArg.Duration
  commentId: P:Dropbox.Api.Files.GetTemporaryUploadLinkArg.Duration
  id: Duration
  parent: Dropbox.Api.Files.GetTemporaryUploadLinkArg
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: GetTemporaryUploadLinkArg.Duration
  fullName: Dropbox.Api.Files.GetTemporaryUploadLinkArg.Duration
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/GetTemporaryUploadLinkArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Duration
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/GetTemporaryUploadLinkArg.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>How long before this link expires, in seconds.  Attempting to start an upload\nwith this link longer than this period  of time after link creation will result in\nan error.</p>\n"
  example: []
  syntax:
    content: public double Duration { get; protected set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Duration As Double
  overload: Dropbox.Api.Files.GetTemporaryUploadLinkArg.Duration*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Files.GetTemporaryUploadLinkArg
  commentId: T:Dropbox.Api.Files.GetTemporaryUploadLinkArg
  parent: Dropbox.Api.Files
  name: GetTemporaryUploadLinkArg
  nameWithType: GetTemporaryUploadLinkArg
  fullName: Dropbox.Api.Files.GetTemporaryUploadLinkArg
- uid: Dropbox.Api.Files.Routes.FilesUserRoutes.UploadAsync(Dropbox.Api.Files.UploadArg,System.IO.Stream)
  commentId: M:Dropbox.Api.Files.Routes.FilesUserRoutes.UploadAsync(Dropbox.Api.Files.UploadArg,System.IO.Stream)
  isExternal: true
- uid: Dropbox.Api.Files.GetTemporaryUploadLinkArg.#ctor*
  commentId: Overload:Dropbox.Api.Files.GetTemporaryUploadLinkArg.#ctor
  name: GetTemporaryUploadLinkArg
  nameWithType: GetTemporaryUploadLinkArg.GetTemporaryUploadLinkArg
  fullName: Dropbox.Api.Files.GetTemporaryUploadLinkArg.GetTemporaryUploadLinkArg
- uid: Dropbox.Api.Files.CommitInfo
  commentId: T:Dropbox.Api.Files.CommitInfo
  parent: Dropbox.Api.Files
  name: CommitInfo
  nameWithType: CommitInfo
  fullName: Dropbox.Api.Files.CommitInfo
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Dropbox.Api.Files.GetTemporaryUploadLinkArg.CommitInfo*
  commentId: Overload:Dropbox.Api.Files.GetTemporaryUploadLinkArg.CommitInfo
  name: CommitInfo
  nameWithType: GetTemporaryUploadLinkArg.CommitInfo
  fullName: Dropbox.Api.Files.GetTemporaryUploadLinkArg.CommitInfo
- uid: Dropbox.Api.Files.GetTemporaryUploadLinkArg.Duration*
  commentId: Overload:Dropbox.Api.Files.GetTemporaryUploadLinkArg.Duration
  name: Duration
  nameWithType: GetTemporaryUploadLinkArg.Duration
  fullName: Dropbox.Api.Files.GetTemporaryUploadLinkArg.Duration
