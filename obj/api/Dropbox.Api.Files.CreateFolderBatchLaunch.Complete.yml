### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.CreateFolderBatchLaunch.Complete
  commentId: T:Dropbox.Api.Files.CreateFolderBatchLaunch.Complete
  id: CreateFolderBatchLaunch.Complete
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.CreateFolderBatchLaunch.Complete.#ctor(Dropbox.Api.Files.CreateFolderBatchResult)
  - Dropbox.Api.Files.CreateFolderBatchLaunch.Complete.Value
  langs:
  - csharp
  - vb
  name: CreateFolderBatchLaunch.Complete
  nameWithType: CreateFolderBatchLaunch.Complete
  fullName: Dropbox.Api.Files.CreateFolderBatchLaunch.Complete
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/CreateFolderBatchLaunch.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Complete
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/CreateFolderBatchLaunch.cs
    startLine: 185
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The complete object</p>\n"
  example: []
  syntax:
    content: 'public sealed class Complete : CreateFolderBatchLaunch'
    content.vb: >-
      Public NotInheritable Class Complete
          Inherits CreateFolderBatchLaunch
  inheritance:
  - System.Object
  - Dropbox.Api.Files.CreateFolderBatchLaunch
  inheritedMembers:
  - Dropbox.Api.Files.CreateFolderBatchLaunch.IsComplete
  - Dropbox.Api.Files.CreateFolderBatchLaunch.AsComplete
  - Dropbox.Api.Files.CreateFolderBatchLaunch.IsOther
  - Dropbox.Api.Files.CreateFolderBatchLaunch.AsOther
  - Dropbox.Api.Files.CreateFolderBatchLaunch.IsAsyncJobId
  - Dropbox.Api.Files.CreateFolderBatchLaunch.AsAsyncJobId
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Dropbox.Api.Files.CreateFolderBatchLaunch.Complete.#ctor(Dropbox.Api.Files.CreateFolderBatchResult)
  commentId: M:Dropbox.Api.Files.CreateFolderBatchLaunch.Complete.#ctor(Dropbox.Api.Files.CreateFolderBatchResult)
  id: '#ctor(Dropbox.Api.Files.CreateFolderBatchResult)'
  parent: Dropbox.Api.Files.CreateFolderBatchLaunch.Complete
  langs:
  - csharp
  - vb
  name: Complete(CreateFolderBatchResult)
  nameWithType: CreateFolderBatchLaunch.Complete.Complete(CreateFolderBatchResult)
  fullName: Dropbox.Api.Files.CreateFolderBatchLaunch.Complete.Complete(Dropbox.Api.Files.CreateFolderBatchResult)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/CreateFolderBatchLaunch.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/CreateFolderBatchLaunch.cs
    startLine: 203
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.CreateFolderBatchLaunch.Complete\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public Complete(CreateFolderBatchResult value)
    parameters:
    - id: value
      type: Dropbox.Api.Files.CreateFolderBatchResult
      description: The value
    content.vb: Public Sub New(value As CreateFolderBatchResult)
  overload: Dropbox.Api.Files.CreateFolderBatchLaunch.Complete.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.CreateFolderBatchLaunch.Complete.Value
  commentId: P:Dropbox.Api.Files.CreateFolderBatchLaunch.Complete.Value
  id: Value
  parent: Dropbox.Api.Files.CreateFolderBatchLaunch.Complete
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: CreateFolderBatchLaunch.Complete.Value
  fullName: Dropbox.Api.Files.CreateFolderBatchLaunch.Complete.Value
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/CreateFolderBatchLaunch.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Value
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/CreateFolderBatchLaunch.cs
    startLine: 217
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets the value of this instance.</p>\n"
  example: []
  syntax:
    content: public CreateFolderBatchResult Value { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.CreateFolderBatchResult
    content.vb: Public ReadOnly Property Value As CreateFolderBatchResult
  overload: Dropbox.Api.Files.CreateFolderBatchLaunch.Complete.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Files.CreateFolderBatchLaunch
  commentId: T:Dropbox.Api.Files.CreateFolderBatchLaunch
  parent: Dropbox.Api.Files
  name: CreateFolderBatchLaunch
  nameWithType: CreateFolderBatchLaunch
  fullName: Dropbox.Api.Files.CreateFolderBatchLaunch
- uid: Dropbox.Api.Files.CreateFolderBatchLaunch.IsComplete
  commentId: P:Dropbox.Api.Files.CreateFolderBatchLaunch.IsComplete
  parent: Dropbox.Api.Files.CreateFolderBatchLaunch
  name: IsComplete
  nameWithType: CreateFolderBatchLaunch.IsComplete
  fullName: Dropbox.Api.Files.CreateFolderBatchLaunch.IsComplete
- uid: Dropbox.Api.Files.CreateFolderBatchLaunch.AsComplete
  commentId: P:Dropbox.Api.Files.CreateFolderBatchLaunch.AsComplete
  parent: Dropbox.Api.Files.CreateFolderBatchLaunch
  name: AsComplete
  nameWithType: CreateFolderBatchLaunch.AsComplete
  fullName: Dropbox.Api.Files.CreateFolderBatchLaunch.AsComplete
- uid: Dropbox.Api.Files.CreateFolderBatchLaunch.IsOther
  commentId: P:Dropbox.Api.Files.CreateFolderBatchLaunch.IsOther
  parent: Dropbox.Api.Files.CreateFolderBatchLaunch
  name: IsOther
  nameWithType: CreateFolderBatchLaunch.IsOther
  fullName: Dropbox.Api.Files.CreateFolderBatchLaunch.IsOther
- uid: Dropbox.Api.Files.CreateFolderBatchLaunch.AsOther
  commentId: P:Dropbox.Api.Files.CreateFolderBatchLaunch.AsOther
  parent: Dropbox.Api.Files.CreateFolderBatchLaunch
  name: AsOther
  nameWithType: CreateFolderBatchLaunch.AsOther
  fullName: Dropbox.Api.Files.CreateFolderBatchLaunch.AsOther
- uid: Dropbox.Api.Files.CreateFolderBatchLaunch.IsAsyncJobId
  commentId: P:Dropbox.Api.Files.CreateFolderBatchLaunch.IsAsyncJobId
  parent: Dropbox.Api.Files.CreateFolderBatchLaunch
  name: IsAsyncJobId
  nameWithType: CreateFolderBatchLaunch.IsAsyncJobId
  fullName: Dropbox.Api.Files.CreateFolderBatchLaunch.IsAsyncJobId
- uid: Dropbox.Api.Files.CreateFolderBatchLaunch.AsAsyncJobId
  commentId: P:Dropbox.Api.Files.CreateFolderBatchLaunch.AsAsyncJobId
  parent: Dropbox.Api.Files.CreateFolderBatchLaunch
  name: AsAsyncJobId
  nameWithType: CreateFolderBatchLaunch.AsAsyncJobId
  fullName: Dropbox.Api.Files.CreateFolderBatchLaunch.AsAsyncJobId
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Files.CreateFolderBatchLaunch.Complete
  commentId: T:Dropbox.Api.Files.CreateFolderBatchLaunch.Complete
  parent: Dropbox.Api.Files
  name: CreateFolderBatchLaunch.Complete
  nameWithType: CreateFolderBatchLaunch.Complete
  fullName: Dropbox.Api.Files.CreateFolderBatchLaunch.Complete
- uid: Dropbox.Api.Files.CreateFolderBatchLaunch.Complete.#ctor*
  commentId: Overload:Dropbox.Api.Files.CreateFolderBatchLaunch.Complete.#ctor
  name: Complete
  nameWithType: CreateFolderBatchLaunch.Complete.Complete
  fullName: Dropbox.Api.Files.CreateFolderBatchLaunch.Complete.Complete
- uid: Dropbox.Api.Files.CreateFolderBatchResult
  commentId: T:Dropbox.Api.Files.CreateFolderBatchResult
  parent: Dropbox.Api.Files
  name: CreateFolderBatchResult
  nameWithType: CreateFolderBatchResult
  fullName: Dropbox.Api.Files.CreateFolderBatchResult
- uid: Dropbox.Api.Files.CreateFolderBatchLaunch.Complete.Value*
  commentId: Overload:Dropbox.Api.Files.CreateFolderBatchLaunch.Complete.Value
  name: Value
  nameWithType: CreateFolderBatchLaunch.Complete.Value
  fullName: Dropbox.Api.Files.CreateFolderBatchLaunch.Complete.Value
