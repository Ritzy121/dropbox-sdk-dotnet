### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Team.GroupMembersSetAccessTypeArg
  commentId: T:Dropbox.Api.Team.GroupMembersSetAccessTypeArg
  id: GroupMembersSetAccessTypeArg
  parent: Dropbox.Api.Team
  children:
  - Dropbox.Api.Team.GroupMembersSetAccessTypeArg.#ctor(Dropbox.Api.Team.GroupSelector,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.GroupAccessType,System.Boolean)
  - Dropbox.Api.Team.GroupMembersSetAccessTypeArg.AccessType
  - Dropbox.Api.Team.GroupMembersSetAccessTypeArg.ReturnMembers
  langs:
  - csharp
  - vb
  name: GroupMembersSetAccessTypeArg
  nameWithType: GroupMembersSetAccessTypeArg
  fullName: Dropbox.Api.Team.GroupMembersSetAccessTypeArg
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSetAccessTypeArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupMembersSetAccessTypeArg
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSetAccessTypeArg.cs
    startLine: 16
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>The group members set access type arg object</p>\n"
  example: []
  syntax:
    content: 'public class GroupMembersSetAccessTypeArg : GroupMemberSelector'
    content.vb: >-
      Public Class GroupMembersSetAccessTypeArg
          Inherits GroupMemberSelector
  inheritance:
  - System.Object
  - Dropbox.Api.Team.GroupMemberSelector
  inheritedMembers:
  - Dropbox.Api.Team.GroupMemberSelector.Group
  - Dropbox.Api.Team.GroupMemberSelector.User
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Team.GroupMembersSetAccessTypeArg.#ctor(Dropbox.Api.Team.GroupSelector,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.GroupAccessType,System.Boolean)
  commentId: M:Dropbox.Api.Team.GroupMembersSetAccessTypeArg.#ctor(Dropbox.Api.Team.GroupSelector,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.GroupAccessType,System.Boolean)
  id: '#ctor(Dropbox.Api.Team.GroupSelector,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.GroupAccessType,System.Boolean)'
  parent: Dropbox.Api.Team.GroupMembersSetAccessTypeArg
  langs:
  - csharp
  - vb
  name: GroupMembersSetAccessTypeArg(GroupSelector, UserSelectorArg, GroupAccessType, Boolean)
  nameWithType: GroupMembersSetAccessTypeArg.GroupMembersSetAccessTypeArg(GroupSelector, UserSelectorArg, GroupAccessType, Boolean)
  fullName: Dropbox.Api.Team.GroupMembersSetAccessTypeArg.GroupMembersSetAccessTypeArg(Dropbox.Api.Team.GroupSelector, Dropbox.Api.Team.UserSelectorArg, Dropbox.Api.Team.GroupAccessType, System.Boolean)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSetAccessTypeArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSetAccessTypeArg.cs
    startLine: 41
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Team.GroupMembersSetAccessTypeArg\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public GroupMembersSetAccessTypeArg(GroupSelector group, UserSelectorArg user, GroupAccessType accessType, bool returnMembers = true)
    parameters:
    - id: group
      type: Dropbox.Api.Team.GroupSelector
      description: Specify a group.
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: Identity of a user that is a member of <code data-dev-comment-type="paramref" class="paramref">group</code>.
    - id: accessType
      type: Dropbox.Api.Team.GroupAccessType
      description: New group access type the user will have.
    - id: returnMembers
      type: System.Boolean
      description: >-
        Whether to return the list of members in the group.

        Note that the default value will cause all the group members  to be returned in the

        response. This may take a long time for large groups.
    content.vb: Public Sub New(group As GroupSelector, user As UserSelectorArg, accessType As GroupAccessType, returnMembers As Boolean = True)
  overload: Dropbox.Api.Team.GroupMembersSetAccessTypeArg.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.GroupMembersSetAccessTypeArg.AccessType
  commentId: P:Dropbox.Api.Team.GroupMembersSetAccessTypeArg.AccessType
  id: AccessType
  parent: Dropbox.Api.Team.GroupMembersSetAccessTypeArg
  langs:
  - csharp
  - vb
  name: AccessType
  nameWithType: GroupMembersSetAccessTypeArg.AccessType
  fullName: Dropbox.Api.Team.GroupMembersSetAccessTypeArg.AccessType
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSetAccessTypeArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AccessType
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSetAccessTypeArg.cs
    startLine: 71
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>New group access type the user will have.</p>\n"
  example: []
  syntax:
    content: public GroupAccessType AccessType { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Team.GroupAccessType
    content.vb: Public Property AccessType As GroupAccessType
  overload: Dropbox.Api.Team.GroupMembersSetAccessTypeArg.AccessType*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Team.GroupMembersSetAccessTypeArg.ReturnMembers
  commentId: P:Dropbox.Api.Team.GroupMembersSetAccessTypeArg.ReturnMembers
  id: ReturnMembers
  parent: Dropbox.Api.Team.GroupMembersSetAccessTypeArg
  langs:
  - csharp
  - vb
  name: ReturnMembers
  nameWithType: GroupMembersSetAccessTypeArg.ReturnMembers
  fullName: Dropbox.Api.Team.GroupMembersSetAccessTypeArg.ReturnMembers
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSetAccessTypeArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ReturnMembers
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSetAccessTypeArg.cs
    startLine: 78
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Whether to return the list of members in the group.  Note that the default\nvalue will cause all the group members  to be returned in the response. This may\ntake a long time for large groups.</p>\n"
  example: []
  syntax:
    content: public bool ReturnMembers { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ReturnMembers As Boolean
  overload: Dropbox.Api.Team.GroupMembersSetAccessTypeArg.ReturnMembers*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Team
  commentId: N:Dropbox.Api.Team
  name: Dropbox.Api.Team
  nameWithType: Dropbox.Api.Team
  fullName: Dropbox.Api.Team
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Team.GroupMemberSelector
  commentId: T:Dropbox.Api.Team.GroupMemberSelector
  parent: Dropbox.Api.Team
  name: GroupMemberSelector
  nameWithType: GroupMemberSelector
  fullName: Dropbox.Api.Team.GroupMemberSelector
- uid: Dropbox.Api.Team.GroupMemberSelector.Group
  commentId: P:Dropbox.Api.Team.GroupMemberSelector.Group
  parent: Dropbox.Api.Team.GroupMemberSelector
  name: Group
  nameWithType: GroupMemberSelector.Group
  fullName: Dropbox.Api.Team.GroupMemberSelector.Group
- uid: Dropbox.Api.Team.GroupMemberSelector.User
  commentId: P:Dropbox.Api.Team.GroupMemberSelector.User
  parent: Dropbox.Api.Team.GroupMemberSelector
  name: User
  nameWithType: GroupMemberSelector.User
  fullName: Dropbox.Api.Team.GroupMemberSelector.User
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Team.GroupMembersSetAccessTypeArg
  commentId: T:Dropbox.Api.Team.GroupMembersSetAccessTypeArg
  parent: Dropbox.Api.Team
  name: GroupMembersSetAccessTypeArg
  nameWithType: GroupMembersSetAccessTypeArg
  fullName: Dropbox.Api.Team.GroupMembersSetAccessTypeArg
- uid: Dropbox.Api.Team.GroupMembersSetAccessTypeArg.#ctor*
  commentId: Overload:Dropbox.Api.Team.GroupMembersSetAccessTypeArg.#ctor
  name: GroupMembersSetAccessTypeArg
  nameWithType: GroupMembersSetAccessTypeArg.GroupMembersSetAccessTypeArg
  fullName: Dropbox.Api.Team.GroupMembersSetAccessTypeArg.GroupMembersSetAccessTypeArg
- uid: Dropbox.Api.Team.GroupSelector
  commentId: T:Dropbox.Api.Team.GroupSelector
  parent: Dropbox.Api.Team
  name: GroupSelector
  nameWithType: GroupSelector
  fullName: Dropbox.Api.Team.GroupSelector
- uid: Dropbox.Api.Team.UserSelectorArg
  commentId: T:Dropbox.Api.Team.UserSelectorArg
  parent: Dropbox.Api.Team
  name: UserSelectorArg
  nameWithType: UserSelectorArg
  fullName: Dropbox.Api.Team.UserSelectorArg
- uid: Dropbox.Api.Team.GroupAccessType
  commentId: T:Dropbox.Api.Team.GroupAccessType
  parent: Dropbox.Api.Team
  name: GroupAccessType
  nameWithType: GroupAccessType
  fullName: Dropbox.Api.Team.GroupAccessType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Team.GroupMembersSetAccessTypeArg.AccessType*
  commentId: Overload:Dropbox.Api.Team.GroupMembersSetAccessTypeArg.AccessType
  name: AccessType
  nameWithType: GroupMembersSetAccessTypeArg.AccessType
  fullName: Dropbox.Api.Team.GroupMembersSetAccessTypeArg.AccessType
- uid: Dropbox.Api.Team.GroupMembersSetAccessTypeArg.ReturnMembers*
  commentId: Overload:Dropbox.Api.Team.GroupMembersSetAccessTypeArg.ReturnMembers
  name: ReturnMembers
  nameWithType: GroupMembersSetAccessTypeArg.ReturnMembers
  fullName: Dropbox.Api.Team.GroupMembersSetAccessTypeArg.ReturnMembers
