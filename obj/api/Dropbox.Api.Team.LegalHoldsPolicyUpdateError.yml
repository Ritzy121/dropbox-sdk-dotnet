### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  id: LegalHoldsPolicyUpdateError
  parent: Dropbox.Api.Team
  children:
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.#ctor
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsEmptyMembersList
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInactiveLegalHold
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInsufficientPermissions
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInvalidMembers
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsLegalHoldPerformingAnotherOperation
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsLegalHoldPolicyNotFound
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsNameMustBeUnique
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsOther
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsTransientError
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsUnknownLegalHoldError
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsEmptyMembersList
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInactiveLegalHold
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInsufficientPermissions
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInvalidMembers
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsLegalHoldPerformingAnotherOperation
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsLegalHoldPolicyNotFound
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsNameMustBeUnique
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsOther
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsTransientError
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsUnknownLegalHoldError
  langs:
  - csharp
  - vb
  name: LegalHoldsPolicyUpdateError
  nameWithType: LegalHoldsPolicyUpdateError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LegalHoldsPolicyUpdateError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>The legal holds policy update error object</p>\n"
  example: []
  syntax:
    content: public class LegalHoldsPolicyUpdateError
    content.vb: Public Class LegalHoldsPolicyUpdateError
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.EmptyMembersList
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.InactiveLegalHold
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.InsufficientPermissions
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.InvalidMembers
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.LegalHoldPerformingAnotherOperation
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.LegalHoldPolicyNotFound
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.NameMustBeUnique
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.NumberOfUsersOnHoldIsGreaterThanHoldLimitation
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.Other
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.TransientError
  - Dropbox.Api.Team.LegalHoldsPolicyUpdateError.UnknownLegalHoldError
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.#ctor
  commentId: M:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: LegalHoldsPolicyUpdateError()
  nameWithType: LegalHoldsPolicyUpdateError.LegalHoldsPolicyUpdateError()
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.LegalHoldsPolicyUpdateError()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Team.LegalHoldsPolicyUpdateError\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyUpdateError()
    content.vb: Public Sub New
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsTransientError
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsTransientError
  id: IsTransientError
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: IsTransientError
  nameWithType: LegalHoldsPolicyUpdateError.IsTransientError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsTransientError
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsTransientError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is TransientError</p>\n"
  example: []
  syntax:
    content: public bool IsTransientError { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTransientError As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsTransientError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsTransientError
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsTransientError
  id: AsTransientError
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: AsTransientError
  nameWithType: LegalHoldsPolicyUpdateError.AsTransientError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsTransientError
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsTransientError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 51
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a TransientError, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyUpdateError.TransientError AsTransientError { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.TransientError
    content.vb: Public ReadOnly Property AsTransientError As LegalHoldsPolicyUpdateError.TransientError
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsTransientError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInactiveLegalHold
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInactiveLegalHold
  id: IsInactiveLegalHold
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: IsInactiveLegalHold
  nameWithType: LegalHoldsPolicyUpdateError.IsInactiveLegalHold
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInactiveLegalHold
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsInactiveLegalHold
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is InactiveLegalHold</p>\n"
  example: []
  syntax:
    content: public bool IsInactiveLegalHold { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInactiveLegalHold As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInactiveLegalHold*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInactiveLegalHold
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInactiveLegalHold
  id: AsInactiveLegalHold
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: AsInactiveLegalHold
  nameWithType: LegalHoldsPolicyUpdateError.AsInactiveLegalHold
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInactiveLegalHold
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsInactiveLegalHold
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a InactiveLegalHold, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyUpdateError.InactiveLegalHold AsInactiveLegalHold { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.InactiveLegalHold
    content.vb: Public ReadOnly Property AsInactiveLegalHold As LegalHoldsPolicyUpdateError.InactiveLegalHold
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInactiveLegalHold*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsLegalHoldPerformingAnotherOperation
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsLegalHoldPerformingAnotherOperation
  id: IsLegalHoldPerformingAnotherOperation
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: IsLegalHoldPerformingAnotherOperation
  nameWithType: LegalHoldsPolicyUpdateError.IsLegalHoldPerformingAnotherOperation
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsLegalHoldPerformingAnotherOperation
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsLegalHoldPerformingAnotherOperation
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 85
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is\nLegalHoldPerformingAnotherOperation</p>\n"
  example: []
  syntax:
    content: public bool IsLegalHoldPerformingAnotherOperation { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLegalHoldPerformingAnotherOperation As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsLegalHoldPerformingAnotherOperation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsLegalHoldPerformingAnotherOperation
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsLegalHoldPerformingAnotherOperation
  id: AsLegalHoldPerformingAnotherOperation
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: AsLegalHoldPerformingAnotherOperation
  nameWithType: LegalHoldsPolicyUpdateError.AsLegalHoldPerformingAnotherOperation
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsLegalHoldPerformingAnotherOperation
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsLegalHoldPerformingAnotherOperation
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 97
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a LegalHoldPerformingAnotherOperation, or\n<code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyUpdateError.LegalHoldPerformingAnotherOperation AsLegalHoldPerformingAnotherOperation { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.LegalHoldPerformingAnotherOperation
    content.vb: Public ReadOnly Property AsLegalHoldPerformingAnotherOperation As LegalHoldsPolicyUpdateError.LegalHoldPerformingAnotherOperation
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsLegalHoldPerformingAnotherOperation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInvalidMembers
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInvalidMembers
  id: IsInvalidMembers
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: IsInvalidMembers
  nameWithType: LegalHoldsPolicyUpdateError.IsInvalidMembers
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInvalidMembers
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsInvalidMembers
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 108
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is InvalidMembers</p>\n"
  example: []
  syntax:
    content: public bool IsInvalidMembers { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInvalidMembers As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInvalidMembers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInvalidMembers
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInvalidMembers
  id: AsInvalidMembers
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: AsInvalidMembers
  nameWithType: LegalHoldsPolicyUpdateError.AsInvalidMembers
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInvalidMembers
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsInvalidMembers
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 119
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a InvalidMembers, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyUpdateError.InvalidMembers AsInvalidMembers { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.InvalidMembers
    content.vb: Public ReadOnly Property AsInvalidMembers As LegalHoldsPolicyUpdateError.InvalidMembers
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInvalidMembers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  id: IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  nameWithType: LegalHoldsPolicyUpdateError.IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 131
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is\nNumberOfUsersOnHoldIsGreaterThanHoldLimitation</p>\n"
  example: []
  syntax:
    content: public bool IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  id: AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  nameWithType: LegalHoldsPolicyUpdateError.AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 143
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a NumberOfUsersOnHoldIsGreaterThanHoldLimitation, or\n<code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyUpdateError.NumberOfUsersOnHoldIsGreaterThanHoldLimitation AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.NumberOfUsersOnHoldIsGreaterThanHoldLimitation
    content.vb: Public ReadOnly Property AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation As LegalHoldsPolicyUpdateError.NumberOfUsersOnHoldIsGreaterThanHoldLimitation
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsEmptyMembersList
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsEmptyMembersList
  id: IsEmptyMembersList
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: IsEmptyMembersList
  nameWithType: LegalHoldsPolicyUpdateError.IsEmptyMembersList
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsEmptyMembersList
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsEmptyMembersList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 154
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is EmptyMembersList</p>\n"
  example: []
  syntax:
    content: public bool IsEmptyMembersList { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmptyMembersList As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsEmptyMembersList*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsEmptyMembersList
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsEmptyMembersList
  id: AsEmptyMembersList
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: AsEmptyMembersList
  nameWithType: LegalHoldsPolicyUpdateError.AsEmptyMembersList
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsEmptyMembersList
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsEmptyMembersList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 165
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a EmptyMembersList, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyUpdateError.EmptyMembersList AsEmptyMembersList { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.EmptyMembersList
    content.vb: Public ReadOnly Property AsEmptyMembersList As LegalHoldsPolicyUpdateError.EmptyMembersList
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsEmptyMembersList*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsNameMustBeUnique
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsNameMustBeUnique
  id: IsNameMustBeUnique
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: IsNameMustBeUnique
  nameWithType: LegalHoldsPolicyUpdateError.IsNameMustBeUnique
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsNameMustBeUnique
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsNameMustBeUnique
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 176
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is NameMustBeUnique</p>\n"
  example: []
  syntax:
    content: public bool IsNameMustBeUnique { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNameMustBeUnique As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsNameMustBeUnique*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsNameMustBeUnique
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsNameMustBeUnique
  id: AsNameMustBeUnique
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: AsNameMustBeUnique
  nameWithType: LegalHoldsPolicyUpdateError.AsNameMustBeUnique
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsNameMustBeUnique
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsNameMustBeUnique
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 187
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a NameMustBeUnique, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyUpdateError.NameMustBeUnique AsNameMustBeUnique { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.NameMustBeUnique
    content.vb: Public ReadOnly Property AsNameMustBeUnique As LegalHoldsPolicyUpdateError.NameMustBeUnique
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsNameMustBeUnique*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsLegalHoldPolicyNotFound
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsLegalHoldPolicyNotFound
  id: IsLegalHoldPolicyNotFound
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: IsLegalHoldPolicyNotFound
  nameWithType: LegalHoldsPolicyUpdateError.IsLegalHoldPolicyNotFound
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsLegalHoldPolicyNotFound
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsLegalHoldPolicyNotFound
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 199
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is\nLegalHoldPolicyNotFound</p>\n"
  example: []
  syntax:
    content: public bool IsLegalHoldPolicyNotFound { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLegalHoldPolicyNotFound As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsLegalHoldPolicyNotFound*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsLegalHoldPolicyNotFound
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsLegalHoldPolicyNotFound
  id: AsLegalHoldPolicyNotFound
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: AsLegalHoldPolicyNotFound
  nameWithType: LegalHoldsPolicyUpdateError.AsLegalHoldPolicyNotFound
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsLegalHoldPolicyNotFound
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsLegalHoldPolicyNotFound
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 210
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a LegalHoldPolicyNotFound, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyUpdateError.LegalHoldPolicyNotFound AsLegalHoldPolicyNotFound { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.LegalHoldPolicyNotFound
    content.vb: Public ReadOnly Property AsLegalHoldPolicyNotFound As LegalHoldsPolicyUpdateError.LegalHoldPolicyNotFound
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsLegalHoldPolicyNotFound*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsUnknownLegalHoldError
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsUnknownLegalHoldError
  id: IsUnknownLegalHoldError
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: IsUnknownLegalHoldError
  nameWithType: LegalHoldsPolicyUpdateError.IsUnknownLegalHoldError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsUnknownLegalHoldError
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsUnknownLegalHoldError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 221
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is UnknownLegalHoldError</p>\n"
  example: []
  syntax:
    content: public bool IsUnknownLegalHoldError { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUnknownLegalHoldError As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsUnknownLegalHoldError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsUnknownLegalHoldError
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsUnknownLegalHoldError
  id: AsUnknownLegalHoldError
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: AsUnknownLegalHoldError
  nameWithType: LegalHoldsPolicyUpdateError.AsUnknownLegalHoldError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsUnknownLegalHoldError
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsUnknownLegalHoldError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 232
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a UnknownLegalHoldError, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyUpdateError.UnknownLegalHoldError AsUnknownLegalHoldError { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.UnknownLegalHoldError
    content.vb: Public ReadOnly Property AsUnknownLegalHoldError As LegalHoldsPolicyUpdateError.UnknownLegalHoldError
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsUnknownLegalHoldError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInsufficientPermissions
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInsufficientPermissions
  id: IsInsufficientPermissions
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: IsInsufficientPermissions
  nameWithType: LegalHoldsPolicyUpdateError.IsInsufficientPermissions
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInsufficientPermissions
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsInsufficientPermissions
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 244
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is\nInsufficientPermissions</p>\n"
  example: []
  syntax:
    content: public bool IsInsufficientPermissions { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInsufficientPermissions As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInsufficientPermissions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInsufficientPermissions
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInsufficientPermissions
  id: AsInsufficientPermissions
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: AsInsufficientPermissions
  nameWithType: LegalHoldsPolicyUpdateError.AsInsufficientPermissions
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInsufficientPermissions
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsInsufficientPermissions
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 255
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a InsufficientPermissions, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyUpdateError.InsufficientPermissions AsInsufficientPermissions { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.InsufficientPermissions
    content.vb: Public ReadOnly Property AsInsufficientPermissions As LegalHoldsPolicyUpdateError.InsufficientPermissions
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInsufficientPermissions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsOther
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsOther
  id: IsOther
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: LegalHoldsPolicyUpdateError.IsOther
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 266
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsOther
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsOther
  id: AsOther
  parent: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: LegalHoldsPolicyUpdateError.AsOther
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyUpdateError.cs
    startLine: 277
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyUpdateError.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.Other
    content.vb: Public ReadOnly Property AsOther As LegalHoldsPolicyUpdateError.Other
  overload: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Team
  commentId: N:Dropbox.Api.Team
  name: Dropbox.Api.Team
  nameWithType: Dropbox.Api.Team
  fullName: Dropbox.Api.Team
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyUpdateError
  nameWithType: LegalHoldsPolicyUpdateError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.#ctor*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.#ctor
  name: LegalHoldsPolicyUpdateError
  nameWithType: LegalHoldsPolicyUpdateError.LegalHoldsPolicyUpdateError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.LegalHoldsPolicyUpdateError
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsTransientError*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsTransientError
  name: IsTransientError
  nameWithType: LegalHoldsPolicyUpdateError.IsTransientError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsTransientError
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsTransientError*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsTransientError
  name: AsTransientError
  nameWithType: LegalHoldsPolicyUpdateError.AsTransientError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsTransientError
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.TransientError
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.TransientError
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyUpdateError.TransientError
  nameWithType: LegalHoldsPolicyUpdateError.TransientError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.TransientError
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInactiveLegalHold*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInactiveLegalHold
  name: IsInactiveLegalHold
  nameWithType: LegalHoldsPolicyUpdateError.IsInactiveLegalHold
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInactiveLegalHold
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInactiveLegalHold*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInactiveLegalHold
  name: AsInactiveLegalHold
  nameWithType: LegalHoldsPolicyUpdateError.AsInactiveLegalHold
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInactiveLegalHold
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.InactiveLegalHold
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.InactiveLegalHold
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyUpdateError.InactiveLegalHold
  nameWithType: LegalHoldsPolicyUpdateError.InactiveLegalHold
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.InactiveLegalHold
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsLegalHoldPerformingAnotherOperation*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsLegalHoldPerformingAnotherOperation
  name: IsLegalHoldPerformingAnotherOperation
  nameWithType: LegalHoldsPolicyUpdateError.IsLegalHoldPerformingAnotherOperation
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsLegalHoldPerformingAnotherOperation
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsLegalHoldPerformingAnotherOperation*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsLegalHoldPerformingAnotherOperation
  name: AsLegalHoldPerformingAnotherOperation
  nameWithType: LegalHoldsPolicyUpdateError.AsLegalHoldPerformingAnotherOperation
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsLegalHoldPerformingAnotherOperation
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.LegalHoldPerformingAnotherOperation
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.LegalHoldPerformingAnotherOperation
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyUpdateError.LegalHoldPerformingAnotherOperation
  nameWithType: LegalHoldsPolicyUpdateError.LegalHoldPerformingAnotherOperation
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.LegalHoldPerformingAnotherOperation
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInvalidMembers*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInvalidMembers
  name: IsInvalidMembers
  nameWithType: LegalHoldsPolicyUpdateError.IsInvalidMembers
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInvalidMembers
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInvalidMembers*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInvalidMembers
  name: AsInvalidMembers
  nameWithType: LegalHoldsPolicyUpdateError.AsInvalidMembers
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInvalidMembers
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.InvalidMembers
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.InvalidMembers
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyUpdateError.InvalidMembers
  nameWithType: LegalHoldsPolicyUpdateError.InvalidMembers
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.InvalidMembers
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  name: IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  nameWithType: LegalHoldsPolicyUpdateError.IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  name: AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  nameWithType: LegalHoldsPolicyUpdateError.AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.NumberOfUsersOnHoldIsGreaterThanHoldLimitation
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.NumberOfUsersOnHoldIsGreaterThanHoldLimitation
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyUpdateError.NumberOfUsersOnHoldIsGreaterThanHoldLimitation
  nameWithType: LegalHoldsPolicyUpdateError.NumberOfUsersOnHoldIsGreaterThanHoldLimitation
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.NumberOfUsersOnHoldIsGreaterThanHoldLimitation
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsEmptyMembersList*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsEmptyMembersList
  name: IsEmptyMembersList
  nameWithType: LegalHoldsPolicyUpdateError.IsEmptyMembersList
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsEmptyMembersList
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsEmptyMembersList*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsEmptyMembersList
  name: AsEmptyMembersList
  nameWithType: LegalHoldsPolicyUpdateError.AsEmptyMembersList
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsEmptyMembersList
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.EmptyMembersList
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.EmptyMembersList
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyUpdateError.EmptyMembersList
  nameWithType: LegalHoldsPolicyUpdateError.EmptyMembersList
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.EmptyMembersList
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsNameMustBeUnique*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsNameMustBeUnique
  name: IsNameMustBeUnique
  nameWithType: LegalHoldsPolicyUpdateError.IsNameMustBeUnique
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsNameMustBeUnique
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsNameMustBeUnique*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsNameMustBeUnique
  name: AsNameMustBeUnique
  nameWithType: LegalHoldsPolicyUpdateError.AsNameMustBeUnique
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsNameMustBeUnique
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.NameMustBeUnique
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.NameMustBeUnique
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyUpdateError.NameMustBeUnique
  nameWithType: LegalHoldsPolicyUpdateError.NameMustBeUnique
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.NameMustBeUnique
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsLegalHoldPolicyNotFound*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsLegalHoldPolicyNotFound
  name: IsLegalHoldPolicyNotFound
  nameWithType: LegalHoldsPolicyUpdateError.IsLegalHoldPolicyNotFound
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsLegalHoldPolicyNotFound
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsLegalHoldPolicyNotFound*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsLegalHoldPolicyNotFound
  name: AsLegalHoldPolicyNotFound
  nameWithType: LegalHoldsPolicyUpdateError.AsLegalHoldPolicyNotFound
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsLegalHoldPolicyNotFound
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.LegalHoldPolicyNotFound
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.LegalHoldPolicyNotFound
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyUpdateError.LegalHoldPolicyNotFound
  nameWithType: LegalHoldsPolicyUpdateError.LegalHoldPolicyNotFound
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.LegalHoldPolicyNotFound
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsUnknownLegalHoldError*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsUnknownLegalHoldError
  name: IsUnknownLegalHoldError
  nameWithType: LegalHoldsPolicyUpdateError.IsUnknownLegalHoldError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsUnknownLegalHoldError
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsUnknownLegalHoldError*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsUnknownLegalHoldError
  name: AsUnknownLegalHoldError
  nameWithType: LegalHoldsPolicyUpdateError.AsUnknownLegalHoldError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsUnknownLegalHoldError
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.UnknownLegalHoldError
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.UnknownLegalHoldError
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyUpdateError.UnknownLegalHoldError
  nameWithType: LegalHoldsPolicyUpdateError.UnknownLegalHoldError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.UnknownLegalHoldError
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInsufficientPermissions*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInsufficientPermissions
  name: IsInsufficientPermissions
  nameWithType: LegalHoldsPolicyUpdateError.IsInsufficientPermissions
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsInsufficientPermissions
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInsufficientPermissions*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInsufficientPermissions
  name: AsInsufficientPermissions
  nameWithType: LegalHoldsPolicyUpdateError.AsInsufficientPermissions
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsInsufficientPermissions
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.InsufficientPermissions
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.InsufficientPermissions
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyUpdateError.InsufficientPermissions
  nameWithType: LegalHoldsPolicyUpdateError.InsufficientPermissions
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.InsufficientPermissions
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsOther*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsOther
  name: IsOther
  nameWithType: LegalHoldsPolicyUpdateError.IsOther
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.IsOther
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsOther*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsOther
  name: AsOther
  nameWithType: LegalHoldsPolicyUpdateError.AsOther
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.AsOther
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.Other
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyUpdateError.Other
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyUpdateError.Other
  nameWithType: LegalHoldsPolicyUpdateError.Other
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError.Other
