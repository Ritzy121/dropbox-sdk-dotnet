### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Team.GroupMembersSelectorError
  commentId: T:Dropbox.Api.Team.GroupMembersSelectorError
  id: GroupMembersSelectorError
  parent: Dropbox.Api.Team
  children:
  - Dropbox.Api.Team.GroupMembersSelectorError.#ctor
  - Dropbox.Api.Team.GroupMembersSelectorError.AsGroupNotFound
  - Dropbox.Api.Team.GroupMembersSelectorError.AsMemberNotInGroup
  - Dropbox.Api.Team.GroupMembersSelectorError.AsOther
  - Dropbox.Api.Team.GroupMembersSelectorError.AsSystemManagedGroupDisallowed
  - Dropbox.Api.Team.GroupMembersSelectorError.IsGroupNotFound
  - Dropbox.Api.Team.GroupMembersSelectorError.IsMemberNotInGroup
  - Dropbox.Api.Team.GroupMembersSelectorError.IsOther
  - Dropbox.Api.Team.GroupMembersSelectorError.IsSystemManagedGroupDisallowed
  langs:
  - csharp
  - vb
  name: GroupMembersSelectorError
  nameWithType: GroupMembersSelectorError
  fullName: Dropbox.Api.Team.GroupMembersSelectorError
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSelectorError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupMembersSelectorError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSelectorError.cs
    startLine: 16
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Error that can be raised when <xref href=\"Dropbox.Api.Team.GroupMembersSelector\" data-throw-if-not-resolved=\"false\"></xref> is used, and\nthe users are required to be members of the specified group.</p>\n"
  example: []
  syntax:
    content: public class GroupMembersSelectorError
    content.vb: Public Class GroupMembersSelectorError
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Team.GroupMembersSelectorError.GroupNotFound
  - Dropbox.Api.Team.GroupMembersSelectorError.MemberNotInGroup
  - Dropbox.Api.Team.GroupMembersSelectorError.Other
  - Dropbox.Api.Team.GroupMembersSelectorError.SystemManagedGroupDisallowed
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Team.GroupMembersSelectorError.#ctor
  commentId: M:Dropbox.Api.Team.GroupMembersSelectorError.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Team.GroupMembersSelectorError
  langs:
  - csharp
  - vb
  name: GroupMembersSelectorError()
  nameWithType: GroupMembersSelectorError.GroupMembersSelectorError()
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.GroupMembersSelectorError()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSelectorError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSelectorError.cs
    startLine: 34
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Team.GroupMembersSelectorError\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public GroupMembersSelectorError()
    content.vb: Public Sub New
  overload: Dropbox.Api.Team.GroupMembersSelectorError.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.GroupMembersSelectorError.IsMemberNotInGroup
  commentId: P:Dropbox.Api.Team.GroupMembersSelectorError.IsMemberNotInGroup
  id: IsMemberNotInGroup
  parent: Dropbox.Api.Team.GroupMembersSelectorError
  langs:
  - csharp
  - vb
  name: IsMemberNotInGroup
  nameWithType: GroupMembersSelectorError.IsMemberNotInGroup
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.IsMemberNotInGroup
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSelectorError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsMemberNotInGroup
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSelectorError.cs
    startLine: 41
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is MemberNotInGroup</p>\n"
  example: []
  syntax:
    content: public bool IsMemberNotInGroup { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMemberNotInGroup As Boolean
  overload: Dropbox.Api.Team.GroupMembersSelectorError.IsMemberNotInGroup*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.GroupMembersSelectorError.AsMemberNotInGroup
  commentId: P:Dropbox.Api.Team.GroupMembersSelectorError.AsMemberNotInGroup
  id: AsMemberNotInGroup
  parent: Dropbox.Api.Team.GroupMembersSelectorError
  langs:
  - csharp
  - vb
  name: AsMemberNotInGroup
  nameWithType: GroupMembersSelectorError.AsMemberNotInGroup
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.AsMemberNotInGroup
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSelectorError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsMemberNotInGroup
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSelectorError.cs
    startLine: 52
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a MemberNotInGroup, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public GroupMembersSelectorError.MemberNotInGroup AsMemberNotInGroup { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.GroupMembersSelectorError.MemberNotInGroup
    content.vb: Public ReadOnly Property AsMemberNotInGroup As GroupMembersSelectorError.MemberNotInGroup
  overload: Dropbox.Api.Team.GroupMembersSelectorError.AsMemberNotInGroup*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.GroupMembersSelectorError.IsSystemManagedGroupDisallowed
  commentId: P:Dropbox.Api.Team.GroupMembersSelectorError.IsSystemManagedGroupDisallowed
  id: IsSystemManagedGroupDisallowed
  parent: Dropbox.Api.Team.GroupMembersSelectorError
  langs:
  - csharp
  - vb
  name: IsSystemManagedGroupDisallowed
  nameWithType: GroupMembersSelectorError.IsSystemManagedGroupDisallowed
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.IsSystemManagedGroupDisallowed
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSelectorError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsSystemManagedGroupDisallowed
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSelectorError.cs
    startLine: 64
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is\nSystemManagedGroupDisallowed</p>\n"
  example: []
  syntax:
    content: public bool IsSystemManagedGroupDisallowed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSystemManagedGroupDisallowed As Boolean
  overload: Dropbox.Api.Team.GroupMembersSelectorError.IsSystemManagedGroupDisallowed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.GroupMembersSelectorError.AsSystemManagedGroupDisallowed
  commentId: P:Dropbox.Api.Team.GroupMembersSelectorError.AsSystemManagedGroupDisallowed
  id: AsSystemManagedGroupDisallowed
  parent: Dropbox.Api.Team.GroupMembersSelectorError
  langs:
  - csharp
  - vb
  name: AsSystemManagedGroupDisallowed
  nameWithType: GroupMembersSelectorError.AsSystemManagedGroupDisallowed
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.AsSystemManagedGroupDisallowed
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSelectorError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsSystemManagedGroupDisallowed
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSelectorError.cs
    startLine: 75
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a SystemManagedGroupDisallowed, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public GroupMembersSelectorError.SystemManagedGroupDisallowed AsSystemManagedGroupDisallowed { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.GroupMembersSelectorError.SystemManagedGroupDisallowed
    content.vb: Public ReadOnly Property AsSystemManagedGroupDisallowed As GroupMembersSelectorError.SystemManagedGroupDisallowed
  overload: Dropbox.Api.Team.GroupMembersSelectorError.AsSystemManagedGroupDisallowed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.GroupMembersSelectorError.IsGroupNotFound
  commentId: P:Dropbox.Api.Team.GroupMembersSelectorError.IsGroupNotFound
  id: IsGroupNotFound
  parent: Dropbox.Api.Team.GroupMembersSelectorError
  langs:
  - csharp
  - vb
  name: IsGroupNotFound
  nameWithType: GroupMembersSelectorError.IsGroupNotFound
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.IsGroupNotFound
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSelectorError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsGroupNotFound
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSelectorError.cs
    startLine: 86
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is GroupNotFound</p>\n"
  example: []
  syntax:
    content: public bool IsGroupNotFound { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsGroupNotFound As Boolean
  overload: Dropbox.Api.Team.GroupMembersSelectorError.IsGroupNotFound*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.GroupMembersSelectorError.AsGroupNotFound
  commentId: P:Dropbox.Api.Team.GroupMembersSelectorError.AsGroupNotFound
  id: AsGroupNotFound
  parent: Dropbox.Api.Team.GroupMembersSelectorError
  langs:
  - csharp
  - vb
  name: AsGroupNotFound
  nameWithType: GroupMembersSelectorError.AsGroupNotFound
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.AsGroupNotFound
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSelectorError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsGroupNotFound
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSelectorError.cs
    startLine: 97
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a GroupNotFound, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public GroupMembersSelectorError.GroupNotFound AsGroupNotFound { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.GroupMembersSelectorError.GroupNotFound
    content.vb: Public ReadOnly Property AsGroupNotFound As GroupMembersSelectorError.GroupNotFound
  overload: Dropbox.Api.Team.GroupMembersSelectorError.AsGroupNotFound*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.GroupMembersSelectorError.IsOther
  commentId: P:Dropbox.Api.Team.GroupMembersSelectorError.IsOther
  id: IsOther
  parent: Dropbox.Api.Team.GroupMembersSelectorError
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: GroupMembersSelectorError.IsOther
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSelectorError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSelectorError.cs
    startLine: 108
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.Team.GroupMembersSelectorError.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.GroupMembersSelectorError.AsOther
  commentId: P:Dropbox.Api.Team.GroupMembersSelectorError.AsOther
  id: AsOther
  parent: Dropbox.Api.Team.GroupMembersSelectorError
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: GroupMembersSelectorError.AsOther
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSelectorError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersSelectorError.cs
    startLine: 119
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public GroupMembersSelectorError.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.GroupMembersSelectorError.Other
    content.vb: Public ReadOnly Property AsOther As GroupMembersSelectorError.Other
  overload: Dropbox.Api.Team.GroupMembersSelectorError.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Team.GroupMembersSelector
  commentId: T:Dropbox.Api.Team.GroupMembersSelector
  name: GroupMembersSelector
  nameWithType: GroupMembersSelector
  fullName: Dropbox.Api.Team.GroupMembersSelector
- uid: Dropbox.Api.Team
  commentId: N:Dropbox.Api.Team
  name: Dropbox.Api.Team
  nameWithType: Dropbox.Api.Team
  fullName: Dropbox.Api.Team
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Team.GroupMembersSelectorError
  commentId: T:Dropbox.Api.Team.GroupMembersSelectorError
  parent: Dropbox.Api.Team
  name: GroupMembersSelectorError
  nameWithType: GroupMembersSelectorError
  fullName: Dropbox.Api.Team.GroupMembersSelectorError
- uid: Dropbox.Api.Team.GroupMembersSelectorError.#ctor*
  commentId: Overload:Dropbox.Api.Team.GroupMembersSelectorError.#ctor
  name: GroupMembersSelectorError
  nameWithType: GroupMembersSelectorError.GroupMembersSelectorError
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.GroupMembersSelectorError
- uid: Dropbox.Api.Team.GroupMembersSelectorError.IsMemberNotInGroup*
  commentId: Overload:Dropbox.Api.Team.GroupMembersSelectorError.IsMemberNotInGroup
  name: IsMemberNotInGroup
  nameWithType: GroupMembersSelectorError.IsMemberNotInGroup
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.IsMemberNotInGroup
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Team.GroupMembersSelectorError.AsMemberNotInGroup*
  commentId: Overload:Dropbox.Api.Team.GroupMembersSelectorError.AsMemberNotInGroup
  name: AsMemberNotInGroup
  nameWithType: GroupMembersSelectorError.AsMemberNotInGroup
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.AsMemberNotInGroup
- uid: Dropbox.Api.Team.GroupMembersSelectorError.MemberNotInGroup
  commentId: T:Dropbox.Api.Team.GroupMembersSelectorError.MemberNotInGroup
  parent: Dropbox.Api.Team
  name: GroupMembersSelectorError.MemberNotInGroup
  nameWithType: GroupMembersSelectorError.MemberNotInGroup
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.MemberNotInGroup
- uid: Dropbox.Api.Team.GroupMembersSelectorError.IsSystemManagedGroupDisallowed*
  commentId: Overload:Dropbox.Api.Team.GroupMembersSelectorError.IsSystemManagedGroupDisallowed
  name: IsSystemManagedGroupDisallowed
  nameWithType: GroupMembersSelectorError.IsSystemManagedGroupDisallowed
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.IsSystemManagedGroupDisallowed
- uid: Dropbox.Api.Team.GroupMembersSelectorError.AsSystemManagedGroupDisallowed*
  commentId: Overload:Dropbox.Api.Team.GroupMembersSelectorError.AsSystemManagedGroupDisallowed
  name: AsSystemManagedGroupDisallowed
  nameWithType: GroupMembersSelectorError.AsSystemManagedGroupDisallowed
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.AsSystemManagedGroupDisallowed
- uid: Dropbox.Api.Team.GroupMembersSelectorError.SystemManagedGroupDisallowed
  commentId: T:Dropbox.Api.Team.GroupMembersSelectorError.SystemManagedGroupDisallowed
  parent: Dropbox.Api.Team
  name: GroupMembersSelectorError.SystemManagedGroupDisallowed
  nameWithType: GroupMembersSelectorError.SystemManagedGroupDisallowed
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.SystemManagedGroupDisallowed
- uid: Dropbox.Api.Team.GroupMembersSelectorError.IsGroupNotFound*
  commentId: Overload:Dropbox.Api.Team.GroupMembersSelectorError.IsGroupNotFound
  name: IsGroupNotFound
  nameWithType: GroupMembersSelectorError.IsGroupNotFound
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.IsGroupNotFound
- uid: Dropbox.Api.Team.GroupMembersSelectorError.AsGroupNotFound*
  commentId: Overload:Dropbox.Api.Team.GroupMembersSelectorError.AsGroupNotFound
  name: AsGroupNotFound
  nameWithType: GroupMembersSelectorError.AsGroupNotFound
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.AsGroupNotFound
- uid: Dropbox.Api.Team.GroupMembersSelectorError.GroupNotFound
  commentId: T:Dropbox.Api.Team.GroupMembersSelectorError.GroupNotFound
  parent: Dropbox.Api.Team
  name: GroupMembersSelectorError.GroupNotFound
  nameWithType: GroupMembersSelectorError.GroupNotFound
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.GroupNotFound
- uid: Dropbox.Api.Team.GroupMembersSelectorError.IsOther*
  commentId: Overload:Dropbox.Api.Team.GroupMembersSelectorError.IsOther
  name: IsOther
  nameWithType: GroupMembersSelectorError.IsOther
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.IsOther
- uid: Dropbox.Api.Team.GroupMembersSelectorError.AsOther*
  commentId: Overload:Dropbox.Api.Team.GroupMembersSelectorError.AsOther
  name: AsOther
  nameWithType: GroupMembersSelectorError.AsOther
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.AsOther
- uid: Dropbox.Api.Team.GroupMembersSelectorError.Other
  commentId: T:Dropbox.Api.Team.GroupMembersSelectorError.Other
  parent: Dropbox.Api.Team
  name: GroupMembersSelectorError.Other
  nameWithType: GroupMembersSelectorError.Other
  fullName: Dropbox.Api.Team.GroupMembersSelectorError.Other
