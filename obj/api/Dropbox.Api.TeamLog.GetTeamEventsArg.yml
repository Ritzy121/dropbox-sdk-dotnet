### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamLog.GetTeamEventsArg
  commentId: T:Dropbox.Api.TeamLog.GetTeamEventsArg
  id: GetTeamEventsArg
  parent: Dropbox.Api.TeamLog
  children:
  - Dropbox.Api.TeamLog.GetTeamEventsArg.#ctor(System.UInt32,System.String,Dropbox.Api.TeamCommon.TimeRange,Dropbox.Api.TeamLog.EventCategory,Dropbox.Api.TeamLog.EventTypeArg)
  - Dropbox.Api.TeamLog.GetTeamEventsArg.AccountId
  - Dropbox.Api.TeamLog.GetTeamEventsArg.Category
  - Dropbox.Api.TeamLog.GetTeamEventsArg.EventType
  - Dropbox.Api.TeamLog.GetTeamEventsArg.Limit
  - Dropbox.Api.TeamLog.GetTeamEventsArg.Time
  langs:
  - csharp
  - vb
  name: GetTeamEventsArg
  nameWithType: GetTeamEventsArg
  fullName: Dropbox.Api.TeamLog.GetTeamEventsArg
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GetTeamEventsArg
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsArg.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>The get team events arg object</p>\n"
  example: []
  syntax:
    content: public class GetTeamEventsArg
    content.vb: Public Class GetTeamEventsArg
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.TeamLog.GetTeamEventsArg.#ctor(System.UInt32,System.String,Dropbox.Api.TeamCommon.TimeRange,Dropbox.Api.TeamLog.EventCategory,Dropbox.Api.TeamLog.EventTypeArg)
  commentId: M:Dropbox.Api.TeamLog.GetTeamEventsArg.#ctor(System.UInt32,System.String,Dropbox.Api.TeamCommon.TimeRange,Dropbox.Api.TeamLog.EventCategory,Dropbox.Api.TeamLog.EventTypeArg)
  id: '#ctor(System.UInt32,System.String,Dropbox.Api.TeamCommon.TimeRange,Dropbox.Api.TeamLog.EventCategory,Dropbox.Api.TeamLog.EventTypeArg)'
  parent: Dropbox.Api.TeamLog.GetTeamEventsArg
  langs:
  - csharp
  - vb
  name: GetTeamEventsArg(UInt32, String, TimeRange, EventCategory, EventTypeArg)
  nameWithType: GetTeamEventsArg.GetTeamEventsArg(UInt32, String, TimeRange, EventCategory, EventTypeArg)
  fullName: Dropbox.Api.TeamLog.GetTeamEventsArg.GetTeamEventsArg(System.UInt32, System.String, Dropbox.Api.TeamCommon.TimeRange, Dropbox.Api.TeamLog.EventCategory, Dropbox.Api.TeamLog.EventTypeArg)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsArg.cs
    startLine: 46
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamLog.GetTeamEventsArg\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public GetTeamEventsArg(uint limit = 1000U, string accountId = null, TimeRange time = null, EventCategory category = null, EventTypeArg eventType = null)
    parameters:
    - id: limit
      type: System.UInt32
      description: >-
        The maximal number of results to return per call. Note that

        some calls may not return <code data-dev-comment-type="paramref" class="paramref">limit</code> number of events, and may even

        return no events, even with `has_more` set to true. In this case, callers should

        fetch again using <xref href="Dropbox.Api.TeamLog.Routes.TeamLogTeamRoutes.GetEventsContinueAsync(Dropbox.Api.TeamLog.GetTeamEventsContinueArg)" data-throw-if-not-resolved="false"></xref>.
    - id: accountId
      type: System.String
      description: >-
        Filter the events by account ID. Return only events with

        this account_id as either Actor, Context, or Participants.
    - id: time
      type: Dropbox.Api.TeamCommon.TimeRange
      description: Filter by time range.
    - id: category
      type: Dropbox.Api.TeamLog.EventCategory
      description: >-
        Filter the returned events to a single category. Note that

        category shouldn&apos;t be provided together with event_type.
    - id: eventType
      type: Dropbox.Api.TeamLog.EventTypeArg
      description: >-
        Filter the returned events to a single event type. Note

        that event_type shouldn&apos;t be provided together with category.
    content.vb: Public Sub New(limit As UInteger = 1000UI, accountId As String = Nothing, time As TimeRange = Nothing, category As EventCategory = Nothing, eventType As EventTypeArg = Nothing)
  overload: Dropbox.Api.TeamLog.GetTeamEventsArg.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.TeamLog.GetTeamEventsArg.Limit
  commentId: P:Dropbox.Api.TeamLog.GetTeamEventsArg.Limit
  id: Limit
  parent: Dropbox.Api.TeamLog.GetTeamEventsArg
  langs:
  - csharp
  - vb
  name: Limit
  nameWithType: GetTeamEventsArg.Limit
  fullName: Dropbox.Api.TeamLog.GetTeamEventsArg.Limit
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Limit
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsArg.cs
    startLine: 99
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>The maximal number of results to return per call. Note that some calls may\nnot return <xref href=\"Dropbox.Api.TeamLog.GetTeamEventsArg.Limit\" data-throw-if-not-resolved=\"false\"></xref> number of events, and may even return no events,\neven with `has_more` set to true. In this case, callers should fetch again using\n<xref href=\"Dropbox.Api.TeamLog.Routes.TeamLogTeamRoutes.GetEventsContinueAsync(Dropbox.Api.TeamLog.GetTeamEventsContinueArg)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public uint Limit { get; protected set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property Limit As UInteger
  overload: Dropbox.Api.TeamLog.GetTeamEventsArg.Limit*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.TeamLog.GetTeamEventsArg.AccountId
  commentId: P:Dropbox.Api.TeamLog.GetTeamEventsArg.AccountId
  id: AccountId
  parent: Dropbox.Api.TeamLog.GetTeamEventsArg
  langs:
  - csharp
  - vb
  name: AccountId
  nameWithType: GetTeamEventsArg.AccountId
  fullName: Dropbox.Api.TeamLog.GetTeamEventsArg.AccountId
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AccountId
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsArg.cs
    startLine: 105
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Filter the events by account ID. Return only events with this account_id as\neither Actor, Context, or Participants.</p>\n"
  example: []
  syntax:
    content: public string AccountId { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AccountId As String
  overload: Dropbox.Api.TeamLog.GetTeamEventsArg.AccountId*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.TeamLog.GetTeamEventsArg.Time
  commentId: P:Dropbox.Api.TeamLog.GetTeamEventsArg.Time
  id: Time
  parent: Dropbox.Api.TeamLog.GetTeamEventsArg
  langs:
  - csharp
  - vb
  name: Time
  nameWithType: GetTeamEventsArg.Time
  fullName: Dropbox.Api.TeamLog.GetTeamEventsArg.Time
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Time
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsArg.cs
    startLine: 110
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Filter by time range.</p>\n"
  example: []
  syntax:
    content: public TimeRange Time { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.TeamCommon.TimeRange
    content.vb: Public Property Time As TimeRange
  overload: Dropbox.Api.TeamLog.GetTeamEventsArg.Time*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.TeamLog.GetTeamEventsArg.Category
  commentId: P:Dropbox.Api.TeamLog.GetTeamEventsArg.Category
  id: Category
  parent: Dropbox.Api.TeamLog.GetTeamEventsArg
  langs:
  - csharp
  - vb
  name: Category
  nameWithType: GetTeamEventsArg.Category
  fullName: Dropbox.Api.TeamLog.GetTeamEventsArg.Category
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Category
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsArg.cs
    startLine: 116
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Filter the returned events to a single category. Note that category shouldn&apos;t\nbe provided together with event_type.</p>\n"
  example: []
  syntax:
    content: public EventCategory Category { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventCategory
    content.vb: Public Property Category As EventCategory
  overload: Dropbox.Api.TeamLog.GetTeamEventsArg.Category*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.TeamLog.GetTeamEventsArg.EventType
  commentId: P:Dropbox.Api.TeamLog.GetTeamEventsArg.EventType
  id: EventType
  parent: Dropbox.Api.TeamLog.GetTeamEventsArg
  langs:
  - csharp
  - vb
  name: EventType
  nameWithType: GetTeamEventsArg.EventType
  fullName: Dropbox.Api.TeamLog.GetTeamEventsArg.EventType
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EventType
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsArg.cs
    startLine: 122
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Filter the returned events to a single event type. Note that event_type\nshouldn&apos;t be provided together with category.</p>\n"
  example: []
  syntax:
    content: public EventTypeArg EventType { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.EventTypeArg
    content.vb: Public Property EventType As EventTypeArg
  overload: Dropbox.Api.TeamLog.GetTeamEventsArg.EventType*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.TeamLog
  commentId: N:Dropbox.Api.TeamLog
  name: Dropbox.Api.TeamLog
  nameWithType: Dropbox.Api.TeamLog
  fullName: Dropbox.Api.TeamLog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.TeamLog.GetTeamEventsArg
  commentId: T:Dropbox.Api.TeamLog.GetTeamEventsArg
  parent: Dropbox.Api.TeamLog
  name: GetTeamEventsArg
  nameWithType: GetTeamEventsArg
  fullName: Dropbox.Api.TeamLog.GetTeamEventsArg
- uid: Dropbox.Api.TeamLog.Routes.TeamLogTeamRoutes.GetEventsContinueAsync(Dropbox.Api.TeamLog.GetTeamEventsContinueArg)
  commentId: M:Dropbox.Api.TeamLog.Routes.TeamLogTeamRoutes.GetEventsContinueAsync(Dropbox.Api.TeamLog.GetTeamEventsContinueArg)
  isExternal: true
- uid: Dropbox.Api.TeamLog.GetTeamEventsArg.#ctor*
  commentId: Overload:Dropbox.Api.TeamLog.GetTeamEventsArg.#ctor
  name: GetTeamEventsArg
  nameWithType: GetTeamEventsArg.GetTeamEventsArg
  fullName: Dropbox.Api.TeamLog.GetTeamEventsArg.GetTeamEventsArg
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dropbox.Api.TeamCommon.TimeRange
  commentId: T:Dropbox.Api.TeamCommon.TimeRange
  parent: Dropbox.Api.TeamCommon
  name: TimeRange
  nameWithType: TimeRange
  fullName: Dropbox.Api.TeamCommon.TimeRange
- uid: Dropbox.Api.TeamLog.EventCategory
  commentId: T:Dropbox.Api.TeamLog.EventCategory
  parent: Dropbox.Api.TeamLog
  name: EventCategory
  nameWithType: EventCategory
  fullName: Dropbox.Api.TeamLog.EventCategory
- uid: Dropbox.Api.TeamLog.EventTypeArg
  commentId: T:Dropbox.Api.TeamLog.EventTypeArg
  parent: Dropbox.Api.TeamLog
  name: EventTypeArg
  nameWithType: EventTypeArg
  fullName: Dropbox.Api.TeamLog.EventTypeArg
- uid: Dropbox.Api.TeamCommon
  commentId: N:Dropbox.Api.TeamCommon
  name: Dropbox.Api.TeamCommon
  nameWithType: Dropbox.Api.TeamCommon
  fullName: Dropbox.Api.TeamCommon
- uid: Dropbox.Api.TeamLog.GetTeamEventsArg.Limit
  commentId: P:Dropbox.Api.TeamLog.GetTeamEventsArg.Limit
  isExternal: true
- uid: Dropbox.Api.TeamLog.GetTeamEventsArg.Limit*
  commentId: Overload:Dropbox.Api.TeamLog.GetTeamEventsArg.Limit
  name: Limit
  nameWithType: GetTeamEventsArg.Limit
  fullName: Dropbox.Api.TeamLog.GetTeamEventsArg.Limit
- uid: Dropbox.Api.TeamLog.GetTeamEventsArg.AccountId*
  commentId: Overload:Dropbox.Api.TeamLog.GetTeamEventsArg.AccountId
  name: AccountId
  nameWithType: GetTeamEventsArg.AccountId
  fullName: Dropbox.Api.TeamLog.GetTeamEventsArg.AccountId
- uid: Dropbox.Api.TeamLog.GetTeamEventsArg.Time*
  commentId: Overload:Dropbox.Api.TeamLog.GetTeamEventsArg.Time
  name: Time
  nameWithType: GetTeamEventsArg.Time
  fullName: Dropbox.Api.TeamLog.GetTeamEventsArg.Time
- uid: Dropbox.Api.TeamLog.GetTeamEventsArg.Category*
  commentId: Overload:Dropbox.Api.TeamLog.GetTeamEventsArg.Category
  name: Category
  nameWithType: GetTeamEventsArg.Category
  fullName: Dropbox.Api.TeamLog.GetTeamEventsArg.Category
- uid: Dropbox.Api.TeamLog.GetTeamEventsArg.EventType*
  commentId: Overload:Dropbox.Api.TeamLog.GetTeamEventsArg.EventType
  name: EventType
  nameWithType: GetTeamEventsArg.EventType
  fullName: Dropbox.Api.TeamLog.GetTeamEventsArg.EventType
