### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Sharing.SharingFileAccessError
  commentId: T:Dropbox.Api.Sharing.SharingFileAccessError
  id: SharingFileAccessError
  parent: Dropbox.Api.Sharing
  children:
  - Dropbox.Api.Sharing.SharingFileAccessError.#ctor
  - Dropbox.Api.Sharing.SharingFileAccessError.AsInsideOsxPackage
  - Dropbox.Api.Sharing.SharingFileAccessError.AsInsidePublicFolder
  - Dropbox.Api.Sharing.SharingFileAccessError.AsInvalidFile
  - Dropbox.Api.Sharing.SharingFileAccessError.AsIsFolder
  - Dropbox.Api.Sharing.SharingFileAccessError.AsNoPermission
  - Dropbox.Api.Sharing.SharingFileAccessError.AsOther
  - Dropbox.Api.Sharing.SharingFileAccessError.IsInsideOsxPackage
  - Dropbox.Api.Sharing.SharingFileAccessError.IsInsidePublicFolder
  - Dropbox.Api.Sharing.SharingFileAccessError.IsInvalidFile
  - Dropbox.Api.Sharing.SharingFileAccessError.IsIsFolder
  - Dropbox.Api.Sharing.SharingFileAccessError.IsNoPermission
  - Dropbox.Api.Sharing.SharingFileAccessError.IsOther
  langs:
  - csharp
  - vb
  name: SharingFileAccessError
  nameWithType: SharingFileAccessError
  fullName: Dropbox.Api.Sharing.SharingFileAccessError
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: SharingFileAccessError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>User could not access this file.</p>\n"
  example: []
  syntax:
    content: public class SharingFileAccessError
    content.vb: Public Class SharingFileAccessError
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Sharing.SharingFileAccessError.InsideOsxPackage
  - Dropbox.Api.Sharing.SharingFileAccessError.InsidePublicFolder
  - Dropbox.Api.Sharing.SharingFileAccessError.InvalidFile
  - Dropbox.Api.Sharing.SharingFileAccessError.IsFolder
  - Dropbox.Api.Sharing.SharingFileAccessError.NoPermission
  - Dropbox.Api.Sharing.SharingFileAccessError.Other
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Sharing.SharingFileAccessError.#ctor
  commentId: M:Dropbox.Api.Sharing.SharingFileAccessError.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Sharing.SharingFileAccessError
  langs:
  - csharp
  - vb
  name: SharingFileAccessError()
  nameWithType: SharingFileAccessError.SharingFileAccessError()
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.SharingFileAccessError()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Sharing.SharingFileAccessError\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public SharingFileAccessError()
    content.vb: Public Sub New
  overload: Dropbox.Api.Sharing.SharingFileAccessError.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.SharingFileAccessError.IsNoPermission
  commentId: P:Dropbox.Api.Sharing.SharingFileAccessError.IsNoPermission
  id: IsNoPermission
  parent: Dropbox.Api.Sharing.SharingFileAccessError
  langs:
  - csharp
  - vb
  name: IsNoPermission
  nameWithType: SharingFileAccessError.IsNoPermission
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.IsNoPermission
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsNoPermission
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Gets a value indicating whether this instance is NoPermission</p>\n"
  example: []
  syntax:
    content: public bool IsNoPermission { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNoPermission As Boolean
  overload: Dropbox.Api.Sharing.SharingFileAccessError.IsNoPermission*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Sharing.SharingFileAccessError.AsNoPermission
  commentId: P:Dropbox.Api.Sharing.SharingFileAccessError.AsNoPermission
  id: AsNoPermission
  parent: Dropbox.Api.Sharing.SharingFileAccessError
  langs:
  - csharp
  - vb
  name: AsNoPermission
  nameWithType: SharingFileAccessError.AsNoPermission
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.AsNoPermission
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsNoPermission
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
    startLine: 51
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Gets this instance as a NoPermission, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public SharingFileAccessError.NoPermission AsNoPermission { get; }
    parameters: []
    return:
      type: Dropbox.Api.Sharing.SharingFileAccessError.NoPermission
    content.vb: Public ReadOnly Property AsNoPermission As SharingFileAccessError.NoPermission
  overload: Dropbox.Api.Sharing.SharingFileAccessError.AsNoPermission*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Sharing.SharingFileAccessError.IsInvalidFile
  commentId: P:Dropbox.Api.Sharing.SharingFileAccessError.IsInvalidFile
  id: IsInvalidFile
  parent: Dropbox.Api.Sharing.SharingFileAccessError
  langs:
  - csharp
  - vb
  name: IsInvalidFile
  nameWithType: SharingFileAccessError.IsInvalidFile
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.IsInvalidFile
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsInvalidFile
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Gets a value indicating whether this instance is InvalidFile</p>\n"
  example: []
  syntax:
    content: public bool IsInvalidFile { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInvalidFile As Boolean
  overload: Dropbox.Api.Sharing.SharingFileAccessError.IsInvalidFile*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Sharing.SharingFileAccessError.AsInvalidFile
  commentId: P:Dropbox.Api.Sharing.SharingFileAccessError.AsInvalidFile
  id: AsInvalidFile
  parent: Dropbox.Api.Sharing.SharingFileAccessError
  langs:
  - csharp
  - vb
  name: AsInvalidFile
  nameWithType: SharingFileAccessError.AsInvalidFile
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.AsInvalidFile
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsInvalidFile
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Gets this instance as a InvalidFile, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public SharingFileAccessError.InvalidFile AsInvalidFile { get; }
    parameters: []
    return:
      type: Dropbox.Api.Sharing.SharingFileAccessError.InvalidFile
    content.vb: Public ReadOnly Property AsInvalidFile As SharingFileAccessError.InvalidFile
  overload: Dropbox.Api.Sharing.SharingFileAccessError.AsInvalidFile*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Sharing.SharingFileAccessError.IsIsFolder
  commentId: P:Dropbox.Api.Sharing.SharingFileAccessError.IsIsFolder
  id: IsIsFolder
  parent: Dropbox.Api.Sharing.SharingFileAccessError
  langs:
  - csharp
  - vb
  name: IsIsFolder
  nameWithType: SharingFileAccessError.IsIsFolder
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.IsIsFolder
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsIsFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Gets a value indicating whether this instance is IsFolder</p>\n"
  example: []
  syntax:
    content: public bool IsIsFolder { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsIsFolder As Boolean
  overload: Dropbox.Api.Sharing.SharingFileAccessError.IsIsFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Sharing.SharingFileAccessError.AsIsFolder
  commentId: P:Dropbox.Api.Sharing.SharingFileAccessError.AsIsFolder
  id: AsIsFolder
  parent: Dropbox.Api.Sharing.SharingFileAccessError
  langs:
  - csharp
  - vb
  name: AsIsFolder
  nameWithType: SharingFileAccessError.AsIsFolder
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.AsIsFolder
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsIsFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
    startLine: 95
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Gets this instance as a IsFolder, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public SharingFileAccessError.IsFolder AsIsFolder { get; }
    parameters: []
    return:
      type: Dropbox.Api.Sharing.SharingFileAccessError.IsFolder
    content.vb: Public ReadOnly Property AsIsFolder As SharingFileAccessError.IsFolder
  overload: Dropbox.Api.Sharing.SharingFileAccessError.AsIsFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Sharing.SharingFileAccessError.IsInsidePublicFolder
  commentId: P:Dropbox.Api.Sharing.SharingFileAccessError.IsInsidePublicFolder
  id: IsInsidePublicFolder
  parent: Dropbox.Api.Sharing.SharingFileAccessError
  langs:
  - csharp
  - vb
  name: IsInsidePublicFolder
  nameWithType: SharingFileAccessError.IsInsidePublicFolder
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.IsInsidePublicFolder
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsInsidePublicFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
    startLine: 106
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Gets a value indicating whether this instance is InsidePublicFolder</p>\n"
  example: []
  syntax:
    content: public bool IsInsidePublicFolder { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInsidePublicFolder As Boolean
  overload: Dropbox.Api.Sharing.SharingFileAccessError.IsInsidePublicFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Sharing.SharingFileAccessError.AsInsidePublicFolder
  commentId: P:Dropbox.Api.Sharing.SharingFileAccessError.AsInsidePublicFolder
  id: AsInsidePublicFolder
  parent: Dropbox.Api.Sharing.SharingFileAccessError
  langs:
  - csharp
  - vb
  name: AsInsidePublicFolder
  nameWithType: SharingFileAccessError.AsInsidePublicFolder
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.AsInsidePublicFolder
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsInsidePublicFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
    startLine: 117
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Gets this instance as a InsidePublicFolder, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public SharingFileAccessError.InsidePublicFolder AsInsidePublicFolder { get; }
    parameters: []
    return:
      type: Dropbox.Api.Sharing.SharingFileAccessError.InsidePublicFolder
    content.vb: Public ReadOnly Property AsInsidePublicFolder As SharingFileAccessError.InsidePublicFolder
  overload: Dropbox.Api.Sharing.SharingFileAccessError.AsInsidePublicFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Sharing.SharingFileAccessError.IsInsideOsxPackage
  commentId: P:Dropbox.Api.Sharing.SharingFileAccessError.IsInsideOsxPackage
  id: IsInsideOsxPackage
  parent: Dropbox.Api.Sharing.SharingFileAccessError
  langs:
  - csharp
  - vb
  name: IsInsideOsxPackage
  nameWithType: SharingFileAccessError.IsInsideOsxPackage
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.IsInsideOsxPackage
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsInsideOsxPackage
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
    startLine: 128
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Gets a value indicating whether this instance is InsideOsxPackage</p>\n"
  example: []
  syntax:
    content: public bool IsInsideOsxPackage { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInsideOsxPackage As Boolean
  overload: Dropbox.Api.Sharing.SharingFileAccessError.IsInsideOsxPackage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Sharing.SharingFileAccessError.AsInsideOsxPackage
  commentId: P:Dropbox.Api.Sharing.SharingFileAccessError.AsInsideOsxPackage
  id: AsInsideOsxPackage
  parent: Dropbox.Api.Sharing.SharingFileAccessError
  langs:
  - csharp
  - vb
  name: AsInsideOsxPackage
  nameWithType: SharingFileAccessError.AsInsideOsxPackage
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.AsInsideOsxPackage
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsInsideOsxPackage
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
    startLine: 139
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Gets this instance as a InsideOsxPackage, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public SharingFileAccessError.InsideOsxPackage AsInsideOsxPackage { get; }
    parameters: []
    return:
      type: Dropbox.Api.Sharing.SharingFileAccessError.InsideOsxPackage
    content.vb: Public ReadOnly Property AsInsideOsxPackage As SharingFileAccessError.InsideOsxPackage
  overload: Dropbox.Api.Sharing.SharingFileAccessError.AsInsideOsxPackage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Sharing.SharingFileAccessError.IsOther
  commentId: P:Dropbox.Api.Sharing.SharingFileAccessError.IsOther
  id: IsOther
  parent: Dropbox.Api.Sharing.SharingFileAccessError
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: SharingFileAccessError.IsOther
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
    startLine: 150
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.Sharing.SharingFileAccessError.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Sharing.SharingFileAccessError.AsOther
  commentId: P:Dropbox.Api.Sharing.SharingFileAccessError.AsOther
  id: AsOther
  parent: Dropbox.Api.Sharing.SharingFileAccessError
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: SharingFileAccessError.AsOther
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingFileAccessError.cs
    startLine: 161
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public SharingFileAccessError.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.Sharing.SharingFileAccessError.Other
    content.vb: Public ReadOnly Property AsOther As SharingFileAccessError.Other
  overload: Dropbox.Api.Sharing.SharingFileAccessError.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Sharing
  commentId: N:Dropbox.Api.Sharing
  name: Dropbox.Api.Sharing
  nameWithType: Dropbox.Api.Sharing
  fullName: Dropbox.Api.Sharing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Sharing.SharingFileAccessError
  commentId: T:Dropbox.Api.Sharing.SharingFileAccessError
  parent: Dropbox.Api.Sharing
  name: SharingFileAccessError
  nameWithType: SharingFileAccessError
  fullName: Dropbox.Api.Sharing.SharingFileAccessError
- uid: Dropbox.Api.Sharing.SharingFileAccessError.#ctor*
  commentId: Overload:Dropbox.Api.Sharing.SharingFileAccessError.#ctor
  name: SharingFileAccessError
  nameWithType: SharingFileAccessError.SharingFileAccessError
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.SharingFileAccessError
- uid: Dropbox.Api.Sharing.SharingFileAccessError.IsNoPermission*
  commentId: Overload:Dropbox.Api.Sharing.SharingFileAccessError.IsNoPermission
  name: IsNoPermission
  nameWithType: SharingFileAccessError.IsNoPermission
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.IsNoPermission
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Sharing.SharingFileAccessError.AsNoPermission*
  commentId: Overload:Dropbox.Api.Sharing.SharingFileAccessError.AsNoPermission
  name: AsNoPermission
  nameWithType: SharingFileAccessError.AsNoPermission
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.AsNoPermission
- uid: Dropbox.Api.Sharing.SharingFileAccessError.NoPermission
  commentId: T:Dropbox.Api.Sharing.SharingFileAccessError.NoPermission
  parent: Dropbox.Api.Sharing
  name: SharingFileAccessError.NoPermission
  nameWithType: SharingFileAccessError.NoPermission
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.NoPermission
- uid: Dropbox.Api.Sharing.SharingFileAccessError.IsInvalidFile*
  commentId: Overload:Dropbox.Api.Sharing.SharingFileAccessError.IsInvalidFile
  name: IsInvalidFile
  nameWithType: SharingFileAccessError.IsInvalidFile
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.IsInvalidFile
- uid: Dropbox.Api.Sharing.SharingFileAccessError.AsInvalidFile*
  commentId: Overload:Dropbox.Api.Sharing.SharingFileAccessError.AsInvalidFile
  name: AsInvalidFile
  nameWithType: SharingFileAccessError.AsInvalidFile
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.AsInvalidFile
- uid: Dropbox.Api.Sharing.SharingFileAccessError.InvalidFile
  commentId: T:Dropbox.Api.Sharing.SharingFileAccessError.InvalidFile
  parent: Dropbox.Api.Sharing
  name: SharingFileAccessError.InvalidFile
  nameWithType: SharingFileAccessError.InvalidFile
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.InvalidFile
- uid: Dropbox.Api.Sharing.SharingFileAccessError.IsIsFolder*
  commentId: Overload:Dropbox.Api.Sharing.SharingFileAccessError.IsIsFolder
  name: IsIsFolder
  nameWithType: SharingFileAccessError.IsIsFolder
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.IsIsFolder
- uid: Dropbox.Api.Sharing.SharingFileAccessError.AsIsFolder*
  commentId: Overload:Dropbox.Api.Sharing.SharingFileAccessError.AsIsFolder
  name: AsIsFolder
  nameWithType: SharingFileAccessError.AsIsFolder
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.AsIsFolder
- uid: Dropbox.Api.Sharing.SharingFileAccessError.IsFolder
  commentId: T:Dropbox.Api.Sharing.SharingFileAccessError.IsFolder
  parent: Dropbox.Api.Sharing
  name: SharingFileAccessError.IsFolder
  nameWithType: SharingFileAccessError.IsFolder
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.IsFolder
- uid: Dropbox.Api.Sharing.SharingFileAccessError.IsInsidePublicFolder*
  commentId: Overload:Dropbox.Api.Sharing.SharingFileAccessError.IsInsidePublicFolder
  name: IsInsidePublicFolder
  nameWithType: SharingFileAccessError.IsInsidePublicFolder
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.IsInsidePublicFolder
- uid: Dropbox.Api.Sharing.SharingFileAccessError.AsInsidePublicFolder*
  commentId: Overload:Dropbox.Api.Sharing.SharingFileAccessError.AsInsidePublicFolder
  name: AsInsidePublicFolder
  nameWithType: SharingFileAccessError.AsInsidePublicFolder
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.AsInsidePublicFolder
- uid: Dropbox.Api.Sharing.SharingFileAccessError.InsidePublicFolder
  commentId: T:Dropbox.Api.Sharing.SharingFileAccessError.InsidePublicFolder
  parent: Dropbox.Api.Sharing
  name: SharingFileAccessError.InsidePublicFolder
  nameWithType: SharingFileAccessError.InsidePublicFolder
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.InsidePublicFolder
- uid: Dropbox.Api.Sharing.SharingFileAccessError.IsInsideOsxPackage*
  commentId: Overload:Dropbox.Api.Sharing.SharingFileAccessError.IsInsideOsxPackage
  name: IsInsideOsxPackage
  nameWithType: SharingFileAccessError.IsInsideOsxPackage
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.IsInsideOsxPackage
- uid: Dropbox.Api.Sharing.SharingFileAccessError.AsInsideOsxPackage*
  commentId: Overload:Dropbox.Api.Sharing.SharingFileAccessError.AsInsideOsxPackage
  name: AsInsideOsxPackage
  nameWithType: SharingFileAccessError.AsInsideOsxPackage
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.AsInsideOsxPackage
- uid: Dropbox.Api.Sharing.SharingFileAccessError.InsideOsxPackage
  commentId: T:Dropbox.Api.Sharing.SharingFileAccessError.InsideOsxPackage
  parent: Dropbox.Api.Sharing
  name: SharingFileAccessError.InsideOsxPackage
  nameWithType: SharingFileAccessError.InsideOsxPackage
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.InsideOsxPackage
- uid: Dropbox.Api.Sharing.SharingFileAccessError.IsOther*
  commentId: Overload:Dropbox.Api.Sharing.SharingFileAccessError.IsOther
  name: IsOther
  nameWithType: SharingFileAccessError.IsOther
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.IsOther
- uid: Dropbox.Api.Sharing.SharingFileAccessError.AsOther*
  commentId: Overload:Dropbox.Api.Sharing.SharingFileAccessError.AsOther
  name: AsOther
  nameWithType: SharingFileAccessError.AsOther
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.AsOther
- uid: Dropbox.Api.Sharing.SharingFileAccessError.Other
  commentId: T:Dropbox.Api.Sharing.SharingFileAccessError.Other
  parent: Dropbox.Api.Sharing
  name: SharingFileAccessError.Other
  nameWithType: SharingFileAccessError.Other
  fullName: Dropbox.Api.Sharing.SharingFileAccessError.Other
