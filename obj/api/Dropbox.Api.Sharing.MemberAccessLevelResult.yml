### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Sharing.MemberAccessLevelResult
  commentId: T:Dropbox.Api.Sharing.MemberAccessLevelResult
  id: MemberAccessLevelResult
  parent: Dropbox.Api.Sharing
  children:
  - Dropbox.Api.Sharing.MemberAccessLevelResult.#ctor(Dropbox.Api.Sharing.AccessLevel,System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.ParentFolderAccessInfo})
  - Dropbox.Api.Sharing.MemberAccessLevelResult.AccessDetails
  - Dropbox.Api.Sharing.MemberAccessLevelResult.AccessLevel
  - Dropbox.Api.Sharing.MemberAccessLevelResult.Warning
  langs:
  - csharp
  - vb
  name: MemberAccessLevelResult
  nameWithType: MemberAccessLevelResult
  fullName: Dropbox.Api.Sharing.MemberAccessLevelResult
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/MemberAccessLevelResult.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MemberAccessLevelResult
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/MemberAccessLevelResult.cs
    startLine: 16
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Contains information about a member&apos;s access level to content after an\noperation.</p>\n"
  example: []
  syntax:
    content: public class MemberAccessLevelResult
    content.vb: Public Class MemberAccessLevelResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Sharing.MemberAccessLevelResult.#ctor(Dropbox.Api.Sharing.AccessLevel,System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.ParentFolderAccessInfo})
  commentId: M:Dropbox.Api.Sharing.MemberAccessLevelResult.#ctor(Dropbox.Api.Sharing.AccessLevel,System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.ParentFolderAccessInfo})
  id: '#ctor(Dropbox.Api.Sharing.AccessLevel,System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.ParentFolderAccessInfo})'
  parent: Dropbox.Api.Sharing.MemberAccessLevelResult
  langs:
  - csharp
  - vb
  name: MemberAccessLevelResult(AccessLevel, String, IEnumerable<ParentFolderAccessInfo>)
  nameWithType: MemberAccessLevelResult.MemberAccessLevelResult(AccessLevel, String, IEnumerable<ParentFolderAccessInfo>)
  fullName: Dropbox.Api.Sharing.MemberAccessLevelResult.MemberAccessLevelResult(Dropbox.Api.Sharing.AccessLevel, System.String, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.ParentFolderAccessInfo>)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/MemberAccessLevelResult.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/MemberAccessLevelResult.cs
    startLine: 41
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Sharing.MemberAccessLevelResult\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public MemberAccessLevelResult(AccessLevel accessLevel = null, string warning = null, IEnumerable<ParentFolderAccessInfo> accessDetails = null)
    parameters:
    - id: accessLevel
      type: Dropbox.Api.Sharing.AccessLevel
      description: >-
        The member still has this level of access to the content

        through a parent folder.
    - id: warning
      type: System.String
      description: >-
        A localized string with additional information about why the

        user has this access level to the content.
    - id: accessDetails
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.ParentFolderAccessInfo}
      description: >-
        The parent folders that a member has access to. The

        field is present if the user has access to the first parent folder where the member

        gains access.
    content.vb: Public Sub New(accessLevel As AccessLevel = Nothing, warning As String = Nothing, accessDetails As IEnumerable(Of ParentFolderAccessInfo) = Nothing)
  overload: Dropbox.Api.Sharing.MemberAccessLevelResult.#ctor*
  nameWithType.vb: MemberAccessLevelResult.MemberAccessLevelResult(AccessLevel, String, IEnumerable(Of ParentFolderAccessInfo))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.MemberAccessLevelResult.MemberAccessLevelResult(Dropbox.Api.Sharing.AccessLevel, System.String, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.ParentFolderAccessInfo))
  name.vb: MemberAccessLevelResult(AccessLevel, String, IEnumerable(Of ParentFolderAccessInfo))
- uid: Dropbox.Api.Sharing.MemberAccessLevelResult.AccessLevel
  commentId: P:Dropbox.Api.Sharing.MemberAccessLevelResult.AccessLevel
  id: AccessLevel
  parent: Dropbox.Api.Sharing.MemberAccessLevelResult
  langs:
  - csharp
  - vb
  name: AccessLevel
  nameWithType: MemberAccessLevelResult.AccessLevel
  fullName: Dropbox.Api.Sharing.MemberAccessLevelResult.AccessLevel
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/MemberAccessLevelResult.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AccessLevel
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/MemberAccessLevelResult.cs
    startLine: 67
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>The member still has this level of access to the content through a parent\nfolder.</p>\n"
  example: []
  syntax:
    content: public AccessLevel AccessLevel { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Sharing.AccessLevel
    content.vb: Public Property AccessLevel As AccessLevel
  overload: Dropbox.Api.Sharing.MemberAccessLevelResult.AccessLevel*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Sharing.MemberAccessLevelResult.Warning
  commentId: P:Dropbox.Api.Sharing.MemberAccessLevelResult.Warning
  id: Warning
  parent: Dropbox.Api.Sharing.MemberAccessLevelResult
  langs:
  - csharp
  - vb
  name: Warning
  nameWithType: MemberAccessLevelResult.Warning
  fullName: Dropbox.Api.Sharing.MemberAccessLevelResult.Warning
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/MemberAccessLevelResult.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Warning
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/MemberAccessLevelResult.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>A localized string with additional information about why the user has this\naccess level to the content.</p>\n"
  example: []
  syntax:
    content: public string Warning { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Warning As String
  overload: Dropbox.Api.Sharing.MemberAccessLevelResult.Warning*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Sharing.MemberAccessLevelResult.AccessDetails
  commentId: P:Dropbox.Api.Sharing.MemberAccessLevelResult.AccessDetails
  id: AccessDetails
  parent: Dropbox.Api.Sharing.MemberAccessLevelResult
  langs:
  - csharp
  - vb
  name: AccessDetails
  nameWithType: MemberAccessLevelResult.AccessDetails
  fullName: Dropbox.Api.Sharing.MemberAccessLevelResult.AccessDetails
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/MemberAccessLevelResult.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AccessDetails
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/MemberAccessLevelResult.cs
    startLine: 79
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>The parent folders that a member has access to. The field is present if the\nuser has access to the first parent folder where the member gains access.</p>\n"
  example: []
  syntax:
    content: public IList<ParentFolderAccessInfo> AccessDetails { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Dropbox.Api.Sharing.ParentFolderAccessInfo}
    content.vb: Public Property AccessDetails As IList(Of ParentFolderAccessInfo)
  overload: Dropbox.Api.Sharing.MemberAccessLevelResult.AccessDetails*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Sharing
  commentId: N:Dropbox.Api.Sharing
  name: Dropbox.Api.Sharing
  nameWithType: Dropbox.Api.Sharing
  fullName: Dropbox.Api.Sharing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Sharing.MemberAccessLevelResult
  commentId: T:Dropbox.Api.Sharing.MemberAccessLevelResult
  parent: Dropbox.Api.Sharing
  name: MemberAccessLevelResult
  nameWithType: MemberAccessLevelResult
  fullName: Dropbox.Api.Sharing.MemberAccessLevelResult
- uid: Dropbox.Api.Sharing.MemberAccessLevelResult.#ctor*
  commentId: Overload:Dropbox.Api.Sharing.MemberAccessLevelResult.#ctor
  name: MemberAccessLevelResult
  nameWithType: MemberAccessLevelResult.MemberAccessLevelResult
  fullName: Dropbox.Api.Sharing.MemberAccessLevelResult.MemberAccessLevelResult
- uid: Dropbox.Api.Sharing.AccessLevel
  commentId: T:Dropbox.Api.Sharing.AccessLevel
  parent: Dropbox.Api.Sharing
  name: AccessLevel
  nameWithType: AccessLevel
  fullName: Dropbox.Api.Sharing.AccessLevel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.ParentFolderAccessInfo}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.ParentFolderAccessInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ParentFolderAccessInfo>
  nameWithType: IEnumerable<ParentFolderAccessInfo>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.ParentFolderAccessInfo>
  nameWithType.vb: IEnumerable(Of ParentFolderAccessInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.ParentFolderAccessInfo)
  name.vb: IEnumerable(Of ParentFolderAccessInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.ParentFolderAccessInfo
    name: ParentFolderAccessInfo
    nameWithType: ParentFolderAccessInfo
    fullName: Dropbox.Api.Sharing.ParentFolderAccessInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.ParentFolderAccessInfo
    name: ParentFolderAccessInfo
    nameWithType: ParentFolderAccessInfo
    fullName: Dropbox.Api.Sharing.ParentFolderAccessInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Dropbox.Api.Sharing.MemberAccessLevelResult.AccessLevel*
  commentId: Overload:Dropbox.Api.Sharing.MemberAccessLevelResult.AccessLevel
  name: AccessLevel
  nameWithType: MemberAccessLevelResult.AccessLevel
  fullName: Dropbox.Api.Sharing.MemberAccessLevelResult.AccessLevel
- uid: Dropbox.Api.Sharing.MemberAccessLevelResult.Warning*
  commentId: Overload:Dropbox.Api.Sharing.MemberAccessLevelResult.Warning
  name: Warning
  nameWithType: MemberAccessLevelResult.Warning
  fullName: Dropbox.Api.Sharing.MemberAccessLevelResult.Warning
- uid: Dropbox.Api.Sharing.MemberAccessLevelResult.AccessDetails*
  commentId: Overload:Dropbox.Api.Sharing.MemberAccessLevelResult.AccessDetails
  name: AccessDetails
  nameWithType: MemberAccessLevelResult.AccessDetails
  fullName: Dropbox.Api.Sharing.MemberAccessLevelResult.AccessDetails
- uid: System.Collections.Generic.IList{Dropbox.Api.Sharing.ParentFolderAccessInfo}
  commentId: T:System.Collections.Generic.IList{Dropbox.Api.Sharing.ParentFolderAccessInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ParentFolderAccessInfo>
  nameWithType: IList<ParentFolderAccessInfo>
  fullName: System.Collections.Generic.IList<Dropbox.Api.Sharing.ParentFolderAccessInfo>
  nameWithType.vb: IList(Of ParentFolderAccessInfo)
  fullName.vb: System.Collections.Generic.IList(Of Dropbox.Api.Sharing.ParentFolderAccessInfo)
  name.vb: IList(Of ParentFolderAccessInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.ParentFolderAccessInfo
    name: ParentFolderAccessInfo
    nameWithType: ParentFolderAccessInfo
    fullName: Dropbox.Api.Sharing.ParentFolderAccessInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.ParentFolderAccessInfo
    name: ParentFolderAccessInfo
    nameWithType: ParentFolderAccessInfo
    fullName: Dropbox.Api.Sharing.ParentFolderAccessInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
