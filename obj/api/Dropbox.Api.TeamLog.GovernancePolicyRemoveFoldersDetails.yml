### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails
  commentId: T:Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails
  id: GovernancePolicyRemoveFoldersDetails
  parent: Dropbox.Api.TeamLog
  children:
  - Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.#ctor(System.String,System.String,Dropbox.Api.TeamLog.PolicyType,System.Collections.Generic.IEnumerable{System.String},System.String)
  - Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Folders
  - Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.GovernancePolicyId
  - Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Name
  - Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.PolicyType
  - Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Reason
  langs:
  - csharp
  - vb
  name: GovernancePolicyRemoveFoldersDetails
  nameWithType: GovernancePolicyRemoveFoldersDetails
  fullName: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyRemoveFoldersDetails.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GovernancePolicyRemoveFoldersDetails
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyRemoveFoldersDetails.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Removed folders from policy.</p>\n"
  example: []
  syntax:
    content: public class GovernancePolicyRemoveFoldersDetails
    content.vb: Public Class GovernancePolicyRemoveFoldersDetails
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.#ctor(System.String,System.String,Dropbox.Api.TeamLog.PolicyType,System.Collections.Generic.IEnumerable{System.String},System.String)
  commentId: M:Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.#ctor(System.String,System.String,Dropbox.Api.TeamLog.PolicyType,System.Collections.Generic.IEnumerable{System.String},System.String)
  id: '#ctor(System.String,System.String,Dropbox.Api.TeamLog.PolicyType,System.Collections.Generic.IEnumerable{System.String},System.String)'
  parent: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails
  langs:
  - csharp
  - vb
  name: GovernancePolicyRemoveFoldersDetails(String, String, PolicyType, IEnumerable<String>, String)
  nameWithType: GovernancePolicyRemoveFoldersDetails.GovernancePolicyRemoveFoldersDetails(String, String, PolicyType, IEnumerable<String>, String)
  fullName: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.GovernancePolicyRemoveFoldersDetails(System.String, System.String, Dropbox.Api.TeamLog.PolicyType, System.Collections.Generic.IEnumerable<System.String>, System.String)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyRemoveFoldersDetails.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyRemoveFoldersDetails.cs
    startLine: 38
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public GovernancePolicyRemoveFoldersDetails(string governancePolicyId, string name, PolicyType policyType = null, IEnumerable<string> folders = null, string reason = null)
    parameters:
    - id: governancePolicyId
      type: System.String
      description: Policy ID.
    - id: name
      type: System.String
      description: Policy name.
    - id: policyType
      type: Dropbox.Api.TeamLog.PolicyType
      description: Policy type.
    - id: folders
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Folders.
    - id: reason
      type: System.String
      description: Reason.
    content.vb: Public Sub New(governancePolicyId As String, name As String, policyType As PolicyType = Nothing, folders As IEnumerable(Of String) = Nothing, reason As String = Nothing)
  overload: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.#ctor*
  nameWithType.vb: GovernancePolicyRemoveFoldersDetails.GovernancePolicyRemoveFoldersDetails(String, String, PolicyType, IEnumerable(Of String), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.GovernancePolicyRemoveFoldersDetails(System.String, System.String, Dropbox.Api.TeamLog.PolicyType, System.Collections.Generic.IEnumerable(Of System.String), System.String)
  name.vb: GovernancePolicyRemoveFoldersDetails(String, String, PolicyType, IEnumerable(Of String), String)
- uid: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.GovernancePolicyId
  commentId: P:Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.GovernancePolicyId
  id: GovernancePolicyId
  parent: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails
  langs:
  - csharp
  - vb
  name: GovernancePolicyId
  nameWithType: GovernancePolicyRemoveFoldersDetails.GovernancePolicyId
  fullName: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.GovernancePolicyId
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyRemoveFoldersDetails.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GovernancePolicyId
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyRemoveFoldersDetails.cs
    startLine: 77
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Policy ID.</p>\n"
  example: []
  syntax:
    content: public string GovernancePolicyId { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GovernancePolicyId As String
  overload: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.GovernancePolicyId*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Name
  commentId: P:Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Name
  id: Name
  parent: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: GovernancePolicyRemoveFoldersDetails.Name
  fullName: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Name
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyRemoveFoldersDetails.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Name
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyRemoveFoldersDetails.cs
    startLine: 82
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Policy name.</p>\n"
  example: []
  syntax:
    content: public string Name { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Name*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.PolicyType
  commentId: P:Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.PolicyType
  id: PolicyType
  parent: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails
  langs:
  - csharp
  - vb
  name: PolicyType
  nameWithType: GovernancePolicyRemoveFoldersDetails.PolicyType
  fullName: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.PolicyType
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyRemoveFoldersDetails.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: PolicyType
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyRemoveFoldersDetails.cs
    startLine: 87
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Policy type.</p>\n"
  example: []
  syntax:
    content: public PolicyType PolicyType { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.PolicyType
    content.vb: Public Property PolicyType As PolicyType
  overload: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.PolicyType*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Folders
  commentId: P:Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Folders
  id: Folders
  parent: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails
  langs:
  - csharp
  - vb
  name: Folders
  nameWithType: GovernancePolicyRemoveFoldersDetails.Folders
  fullName: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Folders
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyRemoveFoldersDetails.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Folders
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyRemoveFoldersDetails.cs
    startLine: 92
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Folders.</p>\n"
  example: []
  syntax:
    content: public IList<string> Folders { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property Folders As IList(Of String)
  overload: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Folders*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Reason
  commentId: P:Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Reason
  id: Reason
  parent: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: GovernancePolicyRemoveFoldersDetails.Reason
  fullName: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Reason
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyRemoveFoldersDetails.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Reason
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyRemoveFoldersDetails.cs
    startLine: 97
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Reason.</p>\n"
  example: []
  syntax:
    content: public string Reason { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Reason As String
  overload: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Reason*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.TeamLog
  commentId: N:Dropbox.Api.TeamLog
  name: Dropbox.Api.TeamLog
  nameWithType: Dropbox.Api.TeamLog
  fullName: Dropbox.Api.TeamLog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails
  commentId: T:Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails
  parent: Dropbox.Api.TeamLog
  name: GovernancePolicyRemoveFoldersDetails
  nameWithType: GovernancePolicyRemoveFoldersDetails
  fullName: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails
- uid: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.#ctor*
  commentId: Overload:Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.#ctor
  name: GovernancePolicyRemoveFoldersDetails
  nameWithType: GovernancePolicyRemoveFoldersDetails.GovernancePolicyRemoveFoldersDetails
  fullName: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.GovernancePolicyRemoveFoldersDetails
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dropbox.Api.TeamLog.PolicyType
  commentId: T:Dropbox.Api.TeamLog.PolicyType
  parent: Dropbox.Api.TeamLog
  name: PolicyType
  nameWithType: PolicyType
  fullName: Dropbox.Api.TeamLog.PolicyType
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.GovernancePolicyId*
  commentId: Overload:Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.GovernancePolicyId
  name: GovernancePolicyId
  nameWithType: GovernancePolicyRemoveFoldersDetails.GovernancePolicyId
  fullName: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.GovernancePolicyId
- uid: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Name*
  commentId: Overload:Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Name
  name: Name
  nameWithType: GovernancePolicyRemoveFoldersDetails.Name
  fullName: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Name
- uid: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.PolicyType*
  commentId: Overload:Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.PolicyType
  name: PolicyType
  nameWithType: GovernancePolicyRemoveFoldersDetails.PolicyType
  fullName: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.PolicyType
- uid: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Folders*
  commentId: Overload:Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Folders
  name: Folders
  nameWithType: GovernancePolicyRemoveFoldersDetails.Folders
  fullName: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Folders
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Reason*
  commentId: Overload:Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Reason
  name: Reason
  nameWithType: GovernancePolicyRemoveFoldersDetails.Reason
  fullName: Dropbox.Api.TeamLog.GovernancePolicyRemoveFoldersDetails.Reason
