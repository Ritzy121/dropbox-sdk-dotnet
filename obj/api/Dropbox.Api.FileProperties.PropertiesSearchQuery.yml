### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.FileProperties.PropertiesSearchQuery
  commentId: T:Dropbox.Api.FileProperties.PropertiesSearchQuery
  id: PropertiesSearchQuery
  parent: Dropbox.Api.FileProperties
  children:
  - Dropbox.Api.FileProperties.PropertiesSearchQuery.#ctor(System.String,Dropbox.Api.FileProperties.PropertiesSearchMode,Dropbox.Api.FileProperties.LogicalOperator)
  - Dropbox.Api.FileProperties.PropertiesSearchQuery.LogicalOperator
  - Dropbox.Api.FileProperties.PropertiesSearchQuery.Mode
  - Dropbox.Api.FileProperties.PropertiesSearchQuery.Query
  langs:
  - csharp
  - vb
  name: PropertiesSearchQuery
  nameWithType: PropertiesSearchQuery
  fullName: Dropbox.Api.FileProperties.PropertiesSearchQuery
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchQuery.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: PropertiesSearchQuery
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchQuery.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.FileProperties
  summary: "\n<p>The properties search query object</p>\n"
  example: []
  syntax:
    content: public class PropertiesSearchQuery
    content.vb: Public Class PropertiesSearchQuery
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.FileProperties.PropertiesSearchQuery.#ctor(System.String,Dropbox.Api.FileProperties.PropertiesSearchMode,Dropbox.Api.FileProperties.LogicalOperator)
  commentId: M:Dropbox.Api.FileProperties.PropertiesSearchQuery.#ctor(System.String,Dropbox.Api.FileProperties.PropertiesSearchMode,Dropbox.Api.FileProperties.LogicalOperator)
  id: '#ctor(System.String,Dropbox.Api.FileProperties.PropertiesSearchMode,Dropbox.Api.FileProperties.LogicalOperator)'
  parent: Dropbox.Api.FileProperties.PropertiesSearchQuery
  langs:
  - csharp
  - vb
  name: PropertiesSearchQuery(String, PropertiesSearchMode, LogicalOperator)
  nameWithType: PropertiesSearchQuery.PropertiesSearchQuery(String, PropertiesSearchMode, LogicalOperator)
  fullName: Dropbox.Api.FileProperties.PropertiesSearchQuery.PropertiesSearchQuery(System.String, Dropbox.Api.FileProperties.PropertiesSearchMode, Dropbox.Api.FileProperties.LogicalOperator)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchQuery.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchQuery.cs
    startLine: 38
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.FileProperties
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.FileProperties.PropertiesSearchQuery\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public PropertiesSearchQuery(string query, PropertiesSearchMode mode, LogicalOperator logicalOperator = null)
    parameters:
    - id: query
      type: System.String
      description: >-
        The property field value for which to search across

        templates.
    - id: mode
      type: Dropbox.Api.FileProperties.PropertiesSearchMode
      description: The mode with which to perform the search.
    - id: logicalOperator
      type: Dropbox.Api.FileProperties.LogicalOperator
      description: >-
        The logical operator with which to append the

        query.
    content.vb: Public Sub New(query As String, mode As PropertiesSearchMode, logicalOperator As LogicalOperator = Nothing)
  overload: Dropbox.Api.FileProperties.PropertiesSearchQuery.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.FileProperties.PropertiesSearchQuery.Query
  commentId: P:Dropbox.Api.FileProperties.PropertiesSearchQuery.Query
  id: Query
  parent: Dropbox.Api.FileProperties.PropertiesSearchQuery
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: PropertiesSearchQuery.Query
  fullName: Dropbox.Api.FileProperties.PropertiesSearchQuery.Query
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchQuery.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Query
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchQuery.cs
    startLine: 76
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.FileProperties
  summary: "\n<p>The property field value for which to search across templates.</p>\n"
  example: []
  syntax:
    content: public string Query { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Query As String
  overload: Dropbox.Api.FileProperties.PropertiesSearchQuery.Query*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.FileProperties.PropertiesSearchQuery.Mode
  commentId: P:Dropbox.Api.FileProperties.PropertiesSearchQuery.Mode
  id: Mode
  parent: Dropbox.Api.FileProperties.PropertiesSearchQuery
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: PropertiesSearchQuery.Mode
  fullName: Dropbox.Api.FileProperties.PropertiesSearchQuery.Mode
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchQuery.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Mode
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchQuery.cs
    startLine: 81
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.FileProperties
  summary: "\n<p>The mode with which to perform the search.</p>\n"
  example: []
  syntax:
    content: public PropertiesSearchMode Mode { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.FileProperties.PropertiesSearchMode
    content.vb: Public Property Mode As PropertiesSearchMode
  overload: Dropbox.Api.FileProperties.PropertiesSearchQuery.Mode*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.FileProperties.PropertiesSearchQuery.LogicalOperator
  commentId: P:Dropbox.Api.FileProperties.PropertiesSearchQuery.LogicalOperator
  id: LogicalOperator
  parent: Dropbox.Api.FileProperties.PropertiesSearchQuery
  langs:
  - csharp
  - vb
  name: LogicalOperator
  nameWithType: PropertiesSearchQuery.LogicalOperator
  fullName: Dropbox.Api.FileProperties.PropertiesSearchQuery.LogicalOperator
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchQuery.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LogicalOperator
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/FileProperties/PropertiesSearchQuery.cs
    startLine: 86
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.FileProperties
  summary: "\n<p>The logical operator with which to append the query.</p>\n"
  example: []
  syntax:
    content: public LogicalOperator LogicalOperator { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.FileProperties.LogicalOperator
    content.vb: Public Property LogicalOperator As LogicalOperator
  overload: Dropbox.Api.FileProperties.PropertiesSearchQuery.LogicalOperator*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.FileProperties
  commentId: N:Dropbox.Api.FileProperties
  name: Dropbox.Api.FileProperties
  nameWithType: Dropbox.Api.FileProperties
  fullName: Dropbox.Api.FileProperties
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.FileProperties.PropertiesSearchQuery
  commentId: T:Dropbox.Api.FileProperties.PropertiesSearchQuery
  name: PropertiesSearchQuery
  nameWithType: PropertiesSearchQuery
  fullName: Dropbox.Api.FileProperties.PropertiesSearchQuery
- uid: Dropbox.Api.FileProperties.PropertiesSearchQuery.#ctor*
  commentId: Overload:Dropbox.Api.FileProperties.PropertiesSearchQuery.#ctor
  name: PropertiesSearchQuery
  nameWithType: PropertiesSearchQuery.PropertiesSearchQuery
  fullName: Dropbox.Api.FileProperties.PropertiesSearchQuery.PropertiesSearchQuery
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dropbox.Api.FileProperties.PropertiesSearchMode
  commentId: T:Dropbox.Api.FileProperties.PropertiesSearchMode
  parent: Dropbox.Api.FileProperties
  name: PropertiesSearchMode
  nameWithType: PropertiesSearchMode
  fullName: Dropbox.Api.FileProperties.PropertiesSearchMode
- uid: Dropbox.Api.FileProperties.LogicalOperator
  commentId: T:Dropbox.Api.FileProperties.LogicalOperator
  parent: Dropbox.Api.FileProperties
  name: LogicalOperator
  nameWithType: LogicalOperator
  fullName: Dropbox.Api.FileProperties.LogicalOperator
- uid: Dropbox.Api.FileProperties.PropertiesSearchQuery.Query*
  commentId: Overload:Dropbox.Api.FileProperties.PropertiesSearchQuery.Query
  name: Query
  nameWithType: PropertiesSearchQuery.Query
  fullName: Dropbox.Api.FileProperties.PropertiesSearchQuery.Query
- uid: Dropbox.Api.FileProperties.PropertiesSearchQuery.Mode*
  commentId: Overload:Dropbox.Api.FileProperties.PropertiesSearchQuery.Mode
  name: Mode
  nameWithType: PropertiesSearchQuery.Mode
  fullName: Dropbox.Api.FileProperties.PropertiesSearchQuery.Mode
- uid: Dropbox.Api.FileProperties.PropertiesSearchQuery.LogicalOperator*
  commentId: Overload:Dropbox.Api.FileProperties.PropertiesSearchQuery.LogicalOperator
  name: LogicalOperator
  nameWithType: PropertiesSearchQuery.LogicalOperator
  fullName: Dropbox.Api.FileProperties.PropertiesSearchQuery.LogicalOperator
