### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Sharing.PathLinkMetadata
  commentId: T:Dropbox.Api.Sharing.PathLinkMetadata
  id: PathLinkMetadata
  parent: Dropbox.Api.Sharing
  children:
  - Dropbox.Api.Sharing.PathLinkMetadata.#ctor(System.String,Dropbox.Api.Sharing.Visibility,System.String,System.Nullable{System.DateTime})
  - Dropbox.Api.Sharing.PathLinkMetadata.Path
  langs:
  - csharp
  - vb
  name: PathLinkMetadata
  nameWithType: PathLinkMetadata
  fullName: Dropbox.Api.Sharing.PathLinkMetadata
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/PathLinkMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: PathLinkMetadata
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/PathLinkMetadata.cs
    startLine: 16
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Metadata for a path-based shared link.</p>\n"
  example: []
  syntax:
    content: 'public class PathLinkMetadata : LinkMetadata'
    content.vb: >-
      Public Class PathLinkMetadata
          Inherits LinkMetadata
  inheritance:
  - System.Object
  - Dropbox.Api.Sharing.LinkMetadata
  inheritedMembers:
  - Dropbox.Api.Sharing.LinkMetadata.IsPath
  - Dropbox.Api.Sharing.LinkMetadata.AsPath
  - Dropbox.Api.Sharing.LinkMetadata.IsCollection
  - Dropbox.Api.Sharing.LinkMetadata.AsCollection
  - Dropbox.Api.Sharing.LinkMetadata.Url
  - Dropbox.Api.Sharing.LinkMetadata.Visibility
  - Dropbox.Api.Sharing.LinkMetadata.Expires
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Sharing.PathLinkMetadata.#ctor(System.String,Dropbox.Api.Sharing.Visibility,System.String,System.Nullable{System.DateTime})
  commentId: M:Dropbox.Api.Sharing.PathLinkMetadata.#ctor(System.String,Dropbox.Api.Sharing.Visibility,System.String,System.Nullable{System.DateTime})
  id: '#ctor(System.String,Dropbox.Api.Sharing.Visibility,System.String,System.Nullable{System.DateTime})'
  parent: Dropbox.Api.Sharing.PathLinkMetadata
  langs:
  - csharp
  - vb
  name: PathLinkMetadata(String, Visibility, String, Nullable<DateTime>)
  nameWithType: PathLinkMetadata.PathLinkMetadata(String, Visibility, String, Nullable<DateTime>)
  fullName: Dropbox.Api.Sharing.PathLinkMetadata.PathLinkMetadata(System.String, Dropbox.Api.Sharing.Visibility, System.String, System.Nullable<System.DateTime>)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/PathLinkMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/PathLinkMetadata.cs
    startLine: 39
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Sharing.PathLinkMetadata\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public PathLinkMetadata(string url, Visibility visibility, string path, DateTime? expires = null)
    parameters:
    - id: url
      type: System.String
      description: URL of the shared link.
    - id: visibility
      type: Dropbox.Api.Sharing.Visibility
      description: Who can access the link.
    - id: path
      type: System.String
      description: Path in user&apos;s Dropbox.
    - id: expires
      type: System.Nullable{System.DateTime}
      description: >-
        Expiration time, if set. By default the link won&apos;t

        expire.
    content.vb: Public Sub New(url As String, visibility As Visibility, path As String, expires As Date? = Nothing)
  overload: Dropbox.Api.Sharing.PathLinkMetadata.#ctor*
  nameWithType.vb: PathLinkMetadata.PathLinkMetadata(String, Visibility, String, Nullable(Of DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.PathLinkMetadata.PathLinkMetadata(System.String, Dropbox.Api.Sharing.Visibility, System.String, System.Nullable(Of System.DateTime))
  name.vb: PathLinkMetadata(String, Visibility, String, Nullable(Of DateTime))
- uid: Dropbox.Api.Sharing.PathLinkMetadata.Path
  commentId: P:Dropbox.Api.Sharing.PathLinkMetadata.Path
  id: Path
  parent: Dropbox.Api.Sharing.PathLinkMetadata
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: PathLinkMetadata.Path
  fullName: Dropbox.Api.Sharing.PathLinkMetadata.Path
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/PathLinkMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Path
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/PathLinkMetadata.cs
    startLine: 67
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Path in user&apos;s Dropbox.</p>\n"
  example: []
  syntax:
    content: public string Path { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Path As String
  overload: Dropbox.Api.Sharing.PathLinkMetadata.Path*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Sharing
  commentId: N:Dropbox.Api.Sharing
  name: Dropbox.Api.Sharing
  nameWithType: Dropbox.Api.Sharing
  fullName: Dropbox.Api.Sharing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Sharing.LinkMetadata
  commentId: T:Dropbox.Api.Sharing.LinkMetadata
  parent: Dropbox.Api.Sharing
  name: LinkMetadata
  nameWithType: LinkMetadata
  fullName: Dropbox.Api.Sharing.LinkMetadata
- uid: Dropbox.Api.Sharing.LinkMetadata.IsPath
  commentId: P:Dropbox.Api.Sharing.LinkMetadata.IsPath
  parent: Dropbox.Api.Sharing.LinkMetadata
  name: IsPath
  nameWithType: LinkMetadata.IsPath
  fullName: Dropbox.Api.Sharing.LinkMetadata.IsPath
- uid: Dropbox.Api.Sharing.LinkMetadata.AsPath
  commentId: P:Dropbox.Api.Sharing.LinkMetadata.AsPath
  parent: Dropbox.Api.Sharing.LinkMetadata
  name: AsPath
  nameWithType: LinkMetadata.AsPath
  fullName: Dropbox.Api.Sharing.LinkMetadata.AsPath
- uid: Dropbox.Api.Sharing.LinkMetadata.IsCollection
  commentId: P:Dropbox.Api.Sharing.LinkMetadata.IsCollection
  parent: Dropbox.Api.Sharing.LinkMetadata
  name: IsCollection
  nameWithType: LinkMetadata.IsCollection
  fullName: Dropbox.Api.Sharing.LinkMetadata.IsCollection
- uid: Dropbox.Api.Sharing.LinkMetadata.AsCollection
  commentId: P:Dropbox.Api.Sharing.LinkMetadata.AsCollection
  parent: Dropbox.Api.Sharing.LinkMetadata
  name: AsCollection
  nameWithType: LinkMetadata.AsCollection
  fullName: Dropbox.Api.Sharing.LinkMetadata.AsCollection
- uid: Dropbox.Api.Sharing.LinkMetadata.Url
  commentId: P:Dropbox.Api.Sharing.LinkMetadata.Url
  parent: Dropbox.Api.Sharing.LinkMetadata
  name: Url
  nameWithType: LinkMetadata.Url
  fullName: Dropbox.Api.Sharing.LinkMetadata.Url
- uid: Dropbox.Api.Sharing.LinkMetadata.Visibility
  commentId: P:Dropbox.Api.Sharing.LinkMetadata.Visibility
  parent: Dropbox.Api.Sharing.LinkMetadata
  name: Visibility
  nameWithType: LinkMetadata.Visibility
  fullName: Dropbox.Api.Sharing.LinkMetadata.Visibility
- uid: Dropbox.Api.Sharing.LinkMetadata.Expires
  commentId: P:Dropbox.Api.Sharing.LinkMetadata.Expires
  parent: Dropbox.Api.Sharing.LinkMetadata
  name: Expires
  nameWithType: LinkMetadata.Expires
  fullName: Dropbox.Api.Sharing.LinkMetadata.Expires
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Sharing.PathLinkMetadata
  commentId: T:Dropbox.Api.Sharing.PathLinkMetadata
  parent: Dropbox.Api.Sharing
  name: PathLinkMetadata
  nameWithType: PathLinkMetadata
  fullName: Dropbox.Api.Sharing.PathLinkMetadata
- uid: Dropbox.Api.Sharing.PathLinkMetadata.#ctor*
  commentId: Overload:Dropbox.Api.Sharing.PathLinkMetadata.#ctor
  name: PathLinkMetadata
  nameWithType: PathLinkMetadata.PathLinkMetadata
  fullName: Dropbox.Api.Sharing.PathLinkMetadata.PathLinkMetadata
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dropbox.Api.Sharing.Visibility
  commentId: T:Dropbox.Api.Sharing.Visibility
  parent: Dropbox.Api.Sharing
  name: Visibility
  nameWithType: Visibility
  fullName: Dropbox.Api.Sharing.Visibility
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.PathLinkMetadata.Path*
  commentId: Overload:Dropbox.Api.Sharing.PathLinkMetadata.Path
  name: Path
  nameWithType: PathLinkMetadata.Path
  fullName: Dropbox.Api.Sharing.PathLinkMetadata.Path
