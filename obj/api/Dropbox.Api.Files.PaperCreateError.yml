### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.PaperCreateError
  commentId: T:Dropbox.Api.Files.PaperCreateError
  id: PaperCreateError
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.PaperCreateError.#ctor
  - Dropbox.Api.Files.PaperCreateError.AsContentMalformed
  - Dropbox.Api.Files.PaperCreateError.AsDocLengthExceeded
  - Dropbox.Api.Files.PaperCreateError.AsEmailUnverified
  - Dropbox.Api.Files.PaperCreateError.AsImageSizeExceeded
  - Dropbox.Api.Files.PaperCreateError.AsInsufficientPermissions
  - Dropbox.Api.Files.PaperCreateError.AsInvalidFileExtension
  - Dropbox.Api.Files.PaperCreateError.AsInvalidPath
  - Dropbox.Api.Files.PaperCreateError.AsOther
  - Dropbox.Api.Files.PaperCreateError.AsPaperDisabled
  - Dropbox.Api.Files.PaperCreateError.IsContentMalformed
  - Dropbox.Api.Files.PaperCreateError.IsDocLengthExceeded
  - Dropbox.Api.Files.PaperCreateError.IsEmailUnverified
  - Dropbox.Api.Files.PaperCreateError.IsImageSizeExceeded
  - Dropbox.Api.Files.PaperCreateError.IsInsufficientPermissions
  - Dropbox.Api.Files.PaperCreateError.IsInvalidFileExtension
  - Dropbox.Api.Files.PaperCreateError.IsInvalidPath
  - Dropbox.Api.Files.PaperCreateError.IsOther
  - Dropbox.Api.Files.PaperCreateError.IsPaperDisabled
  langs:
  - csharp
  - vb
  name: PaperCreateError
  nameWithType: PaperCreateError
  fullName: Dropbox.Api.Files.PaperCreateError
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: PaperCreateError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The paper create error object</p>\n"
  example: []
  syntax:
    content: public class PaperCreateError
    content.vb: Public Class PaperCreateError
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Files.PaperCreateError.ContentMalformed
  - Dropbox.Api.Files.PaperCreateError.DocLengthExceeded
  - Dropbox.Api.Files.PaperCreateError.EmailUnverified
  - Dropbox.Api.Files.PaperCreateError.ImageSizeExceeded
  - Dropbox.Api.Files.PaperCreateError.InsufficientPermissions
  - Dropbox.Api.Files.PaperCreateError.InvalidFileExtension
  - Dropbox.Api.Files.PaperCreateError.InvalidPath
  - Dropbox.Api.Files.PaperCreateError.Other
  - Dropbox.Api.Files.PaperCreateError.PaperDisabled
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.PaperCreateError.#ctor
  commentId: M:Dropbox.Api.Files.PaperCreateError.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Files.PaperCreateError
  langs:
  - csharp
  - vb
  name: PaperCreateError()
  nameWithType: PaperCreateError.PaperCreateError()
  fullName: Dropbox.Api.Files.PaperCreateError.PaperCreateError()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.PaperCreateError\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public PaperCreateError()
    content.vb: Public Sub New
  overload: Dropbox.Api.Files.PaperCreateError.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.PaperCreateError.IsInvalidPath
  commentId: P:Dropbox.Api.Files.PaperCreateError.IsInvalidPath
  id: IsInvalidPath
  parent: Dropbox.Api.Files.PaperCreateError
  langs:
  - csharp
  - vb
  name: IsInvalidPath
  nameWithType: PaperCreateError.IsInvalidPath
  fullName: Dropbox.Api.Files.PaperCreateError.IsInvalidPath
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsInvalidPath
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is InvalidPath</p>\n"
  example: []
  syntax:
    content: public bool IsInvalidPath { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInvalidPath As Boolean
  overload: Dropbox.Api.Files.PaperCreateError.IsInvalidPath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperCreateError.AsInvalidPath
  commentId: P:Dropbox.Api.Files.PaperCreateError.AsInvalidPath
  id: AsInvalidPath
  parent: Dropbox.Api.Files.PaperCreateError
  langs:
  - csharp
  - vb
  name: AsInvalidPath
  nameWithType: PaperCreateError.AsInvalidPath
  fullName: Dropbox.Api.Files.PaperCreateError.AsInvalidPath
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsInvalidPath
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
    startLine: 51
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a InvalidPath, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperCreateError.InvalidPath AsInvalidPath { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.PaperCreateError.InvalidPath
    content.vb: Public ReadOnly Property AsInvalidPath As PaperCreateError.InvalidPath
  overload: Dropbox.Api.Files.PaperCreateError.AsInvalidPath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperCreateError.IsEmailUnverified
  commentId: P:Dropbox.Api.Files.PaperCreateError.IsEmailUnverified
  id: IsEmailUnverified
  parent: Dropbox.Api.Files.PaperCreateError
  langs:
  - csharp
  - vb
  name: IsEmailUnverified
  nameWithType: PaperCreateError.IsEmailUnverified
  fullName: Dropbox.Api.Files.PaperCreateError.IsEmailUnverified
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsEmailUnverified
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is EmailUnverified</p>\n"
  example: []
  syntax:
    content: public bool IsEmailUnverified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmailUnverified As Boolean
  overload: Dropbox.Api.Files.PaperCreateError.IsEmailUnverified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperCreateError.AsEmailUnverified
  commentId: P:Dropbox.Api.Files.PaperCreateError.AsEmailUnverified
  id: AsEmailUnverified
  parent: Dropbox.Api.Files.PaperCreateError
  langs:
  - csharp
  - vb
  name: AsEmailUnverified
  nameWithType: PaperCreateError.AsEmailUnverified
  fullName: Dropbox.Api.Files.PaperCreateError.AsEmailUnverified
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsEmailUnverified
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a EmailUnverified, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperCreateError.EmailUnverified AsEmailUnverified { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.PaperCreateError.EmailUnverified
    content.vb: Public ReadOnly Property AsEmailUnverified As PaperCreateError.EmailUnverified
  overload: Dropbox.Api.Files.PaperCreateError.AsEmailUnverified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperCreateError.IsInvalidFileExtension
  commentId: P:Dropbox.Api.Files.PaperCreateError.IsInvalidFileExtension
  id: IsInvalidFileExtension
  parent: Dropbox.Api.Files.PaperCreateError
  langs:
  - csharp
  - vb
  name: IsInvalidFileExtension
  nameWithType: PaperCreateError.IsInvalidFileExtension
  fullName: Dropbox.Api.Files.PaperCreateError.IsInvalidFileExtension
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsInvalidFileExtension
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is InvalidFileExtension</p>\n"
  example: []
  syntax:
    content: public bool IsInvalidFileExtension { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInvalidFileExtension As Boolean
  overload: Dropbox.Api.Files.PaperCreateError.IsInvalidFileExtension*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperCreateError.AsInvalidFileExtension
  commentId: P:Dropbox.Api.Files.PaperCreateError.AsInvalidFileExtension
  id: AsInvalidFileExtension
  parent: Dropbox.Api.Files.PaperCreateError
  langs:
  - csharp
  - vb
  name: AsInvalidFileExtension
  nameWithType: PaperCreateError.AsInvalidFileExtension
  fullName: Dropbox.Api.Files.PaperCreateError.AsInvalidFileExtension
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsInvalidFileExtension
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
    startLine: 95
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a InvalidFileExtension, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperCreateError.InvalidFileExtension AsInvalidFileExtension { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.PaperCreateError.InvalidFileExtension
    content.vb: Public ReadOnly Property AsInvalidFileExtension As PaperCreateError.InvalidFileExtension
  overload: Dropbox.Api.Files.PaperCreateError.AsInvalidFileExtension*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperCreateError.IsPaperDisabled
  commentId: P:Dropbox.Api.Files.PaperCreateError.IsPaperDisabled
  id: IsPaperDisabled
  parent: Dropbox.Api.Files.PaperCreateError
  langs:
  - csharp
  - vb
  name: IsPaperDisabled
  nameWithType: PaperCreateError.IsPaperDisabled
  fullName: Dropbox.Api.Files.PaperCreateError.IsPaperDisabled
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsPaperDisabled
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
    startLine: 106
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is PaperDisabled</p>\n"
  example: []
  syntax:
    content: public bool IsPaperDisabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPaperDisabled As Boolean
  overload: Dropbox.Api.Files.PaperCreateError.IsPaperDisabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperCreateError.AsPaperDisabled
  commentId: P:Dropbox.Api.Files.PaperCreateError.AsPaperDisabled
  id: AsPaperDisabled
  parent: Dropbox.Api.Files.PaperCreateError
  langs:
  - csharp
  - vb
  name: AsPaperDisabled
  nameWithType: PaperCreateError.AsPaperDisabled
  fullName: Dropbox.Api.Files.PaperCreateError.AsPaperDisabled
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsPaperDisabled
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
    startLine: 117
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a PaperDisabled, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperCreateError.PaperDisabled AsPaperDisabled { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.PaperCreateError.PaperDisabled
    content.vb: Public ReadOnly Property AsPaperDisabled As PaperCreateError.PaperDisabled
  overload: Dropbox.Api.Files.PaperCreateError.AsPaperDisabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperCreateError.IsInsufficientPermissions
  commentId: P:Dropbox.Api.Files.PaperCreateError.IsInsufficientPermissions
  id: IsInsufficientPermissions
  parent: Dropbox.Api.Files.PaperCreateError
  langs:
  - csharp
  - vb
  name: IsInsufficientPermissions
  nameWithType: PaperCreateError.IsInsufficientPermissions
  fullName: Dropbox.Api.Files.PaperCreateError.IsInsufficientPermissions
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsInsufficientPermissions
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
    startLine: 129
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is\nInsufficientPermissions</p>\n"
  example: []
  syntax:
    content: public bool IsInsufficientPermissions { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInsufficientPermissions As Boolean
  overload: Dropbox.Api.Files.PaperCreateError.IsInsufficientPermissions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperCreateError.AsInsufficientPermissions
  commentId: P:Dropbox.Api.Files.PaperCreateError.AsInsufficientPermissions
  id: AsInsufficientPermissions
  parent: Dropbox.Api.Files.PaperCreateError
  langs:
  - csharp
  - vb
  name: AsInsufficientPermissions
  nameWithType: PaperCreateError.AsInsufficientPermissions
  fullName: Dropbox.Api.Files.PaperCreateError.AsInsufficientPermissions
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsInsufficientPermissions
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
    startLine: 140
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a InsufficientPermissions, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperCreateError.InsufficientPermissions AsInsufficientPermissions { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.PaperCreateError.InsufficientPermissions
    content.vb: Public ReadOnly Property AsInsufficientPermissions As PaperCreateError.InsufficientPermissions
  overload: Dropbox.Api.Files.PaperCreateError.AsInsufficientPermissions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperCreateError.IsContentMalformed
  commentId: P:Dropbox.Api.Files.PaperCreateError.IsContentMalformed
  id: IsContentMalformed
  parent: Dropbox.Api.Files.PaperCreateError
  langs:
  - csharp
  - vb
  name: IsContentMalformed
  nameWithType: PaperCreateError.IsContentMalformed
  fullName: Dropbox.Api.Files.PaperCreateError.IsContentMalformed
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsContentMalformed
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
    startLine: 151
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is ContentMalformed</p>\n"
  example: []
  syntax:
    content: public bool IsContentMalformed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsContentMalformed As Boolean
  overload: Dropbox.Api.Files.PaperCreateError.IsContentMalformed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperCreateError.AsContentMalformed
  commentId: P:Dropbox.Api.Files.PaperCreateError.AsContentMalformed
  id: AsContentMalformed
  parent: Dropbox.Api.Files.PaperCreateError
  langs:
  - csharp
  - vb
  name: AsContentMalformed
  nameWithType: PaperCreateError.AsContentMalformed
  fullName: Dropbox.Api.Files.PaperCreateError.AsContentMalformed
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsContentMalformed
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
    startLine: 162
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a ContentMalformed, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperCreateError.ContentMalformed AsContentMalformed { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.PaperCreateError.ContentMalformed
    content.vb: Public ReadOnly Property AsContentMalformed As PaperCreateError.ContentMalformed
  overload: Dropbox.Api.Files.PaperCreateError.AsContentMalformed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperCreateError.IsDocLengthExceeded
  commentId: P:Dropbox.Api.Files.PaperCreateError.IsDocLengthExceeded
  id: IsDocLengthExceeded
  parent: Dropbox.Api.Files.PaperCreateError
  langs:
  - csharp
  - vb
  name: IsDocLengthExceeded
  nameWithType: PaperCreateError.IsDocLengthExceeded
  fullName: Dropbox.Api.Files.PaperCreateError.IsDocLengthExceeded
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsDocLengthExceeded
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
    startLine: 173
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is DocLengthExceeded</p>\n"
  example: []
  syntax:
    content: public bool IsDocLengthExceeded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDocLengthExceeded As Boolean
  overload: Dropbox.Api.Files.PaperCreateError.IsDocLengthExceeded*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperCreateError.AsDocLengthExceeded
  commentId: P:Dropbox.Api.Files.PaperCreateError.AsDocLengthExceeded
  id: AsDocLengthExceeded
  parent: Dropbox.Api.Files.PaperCreateError
  langs:
  - csharp
  - vb
  name: AsDocLengthExceeded
  nameWithType: PaperCreateError.AsDocLengthExceeded
  fullName: Dropbox.Api.Files.PaperCreateError.AsDocLengthExceeded
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsDocLengthExceeded
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
    startLine: 184
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a DocLengthExceeded, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperCreateError.DocLengthExceeded AsDocLengthExceeded { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.PaperCreateError.DocLengthExceeded
    content.vb: Public ReadOnly Property AsDocLengthExceeded As PaperCreateError.DocLengthExceeded
  overload: Dropbox.Api.Files.PaperCreateError.AsDocLengthExceeded*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperCreateError.IsImageSizeExceeded
  commentId: P:Dropbox.Api.Files.PaperCreateError.IsImageSizeExceeded
  id: IsImageSizeExceeded
  parent: Dropbox.Api.Files.PaperCreateError
  langs:
  - csharp
  - vb
  name: IsImageSizeExceeded
  nameWithType: PaperCreateError.IsImageSizeExceeded
  fullName: Dropbox.Api.Files.PaperCreateError.IsImageSizeExceeded
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsImageSizeExceeded
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
    startLine: 195
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is ImageSizeExceeded</p>\n"
  example: []
  syntax:
    content: public bool IsImageSizeExceeded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsImageSizeExceeded As Boolean
  overload: Dropbox.Api.Files.PaperCreateError.IsImageSizeExceeded*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperCreateError.AsImageSizeExceeded
  commentId: P:Dropbox.Api.Files.PaperCreateError.AsImageSizeExceeded
  id: AsImageSizeExceeded
  parent: Dropbox.Api.Files.PaperCreateError
  langs:
  - csharp
  - vb
  name: AsImageSizeExceeded
  nameWithType: PaperCreateError.AsImageSizeExceeded
  fullName: Dropbox.Api.Files.PaperCreateError.AsImageSizeExceeded
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsImageSizeExceeded
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
    startLine: 206
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a ImageSizeExceeded, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperCreateError.ImageSizeExceeded AsImageSizeExceeded { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.PaperCreateError.ImageSizeExceeded
    content.vb: Public ReadOnly Property AsImageSizeExceeded As PaperCreateError.ImageSizeExceeded
  overload: Dropbox.Api.Files.PaperCreateError.AsImageSizeExceeded*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperCreateError.IsOther
  commentId: P:Dropbox.Api.Files.PaperCreateError.IsOther
  id: IsOther
  parent: Dropbox.Api.Files.PaperCreateError
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: PaperCreateError.IsOther
  fullName: Dropbox.Api.Files.PaperCreateError.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
    startLine: 217
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.Files.PaperCreateError.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperCreateError.AsOther
  commentId: P:Dropbox.Api.Files.PaperCreateError.AsOther
  id: AsOther
  parent: Dropbox.Api.Files.PaperCreateError
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: PaperCreateError.AsOther
  fullName: Dropbox.Api.Files.PaperCreateError.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperCreateError.cs
    startLine: 228
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperCreateError.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.PaperCreateError.Other
    content.vb: Public ReadOnly Property AsOther As PaperCreateError.Other
  overload: Dropbox.Api.Files.PaperCreateError.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Files.PaperCreateError
  commentId: T:Dropbox.Api.Files.PaperCreateError
  parent: Dropbox.Api.Files
  name: PaperCreateError
  nameWithType: PaperCreateError
  fullName: Dropbox.Api.Files.PaperCreateError
- uid: Dropbox.Api.Files.PaperCreateError.#ctor*
  commentId: Overload:Dropbox.Api.Files.PaperCreateError.#ctor
  name: PaperCreateError
  nameWithType: PaperCreateError.PaperCreateError
  fullName: Dropbox.Api.Files.PaperCreateError.PaperCreateError
- uid: Dropbox.Api.Files.PaperCreateError.IsInvalidPath*
  commentId: Overload:Dropbox.Api.Files.PaperCreateError.IsInvalidPath
  name: IsInvalidPath
  nameWithType: PaperCreateError.IsInvalidPath
  fullName: Dropbox.Api.Files.PaperCreateError.IsInvalidPath
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Files.PaperCreateError.AsInvalidPath*
  commentId: Overload:Dropbox.Api.Files.PaperCreateError.AsInvalidPath
  name: AsInvalidPath
  nameWithType: PaperCreateError.AsInvalidPath
  fullName: Dropbox.Api.Files.PaperCreateError.AsInvalidPath
- uid: Dropbox.Api.Files.PaperCreateError.InvalidPath
  commentId: T:Dropbox.Api.Files.PaperCreateError.InvalidPath
  parent: Dropbox.Api.Files
  name: PaperCreateError.InvalidPath
  nameWithType: PaperCreateError.InvalidPath
  fullName: Dropbox.Api.Files.PaperCreateError.InvalidPath
- uid: Dropbox.Api.Files.PaperCreateError.IsEmailUnverified*
  commentId: Overload:Dropbox.Api.Files.PaperCreateError.IsEmailUnverified
  name: IsEmailUnverified
  nameWithType: PaperCreateError.IsEmailUnverified
  fullName: Dropbox.Api.Files.PaperCreateError.IsEmailUnverified
- uid: Dropbox.Api.Files.PaperCreateError.AsEmailUnverified*
  commentId: Overload:Dropbox.Api.Files.PaperCreateError.AsEmailUnverified
  name: AsEmailUnverified
  nameWithType: PaperCreateError.AsEmailUnverified
  fullName: Dropbox.Api.Files.PaperCreateError.AsEmailUnverified
- uid: Dropbox.Api.Files.PaperCreateError.EmailUnverified
  commentId: T:Dropbox.Api.Files.PaperCreateError.EmailUnverified
  parent: Dropbox.Api.Files
  name: PaperCreateError.EmailUnverified
  nameWithType: PaperCreateError.EmailUnverified
  fullName: Dropbox.Api.Files.PaperCreateError.EmailUnverified
- uid: Dropbox.Api.Files.PaperCreateError.IsInvalidFileExtension*
  commentId: Overload:Dropbox.Api.Files.PaperCreateError.IsInvalidFileExtension
  name: IsInvalidFileExtension
  nameWithType: PaperCreateError.IsInvalidFileExtension
  fullName: Dropbox.Api.Files.PaperCreateError.IsInvalidFileExtension
- uid: Dropbox.Api.Files.PaperCreateError.AsInvalidFileExtension*
  commentId: Overload:Dropbox.Api.Files.PaperCreateError.AsInvalidFileExtension
  name: AsInvalidFileExtension
  nameWithType: PaperCreateError.AsInvalidFileExtension
  fullName: Dropbox.Api.Files.PaperCreateError.AsInvalidFileExtension
- uid: Dropbox.Api.Files.PaperCreateError.InvalidFileExtension
  commentId: T:Dropbox.Api.Files.PaperCreateError.InvalidFileExtension
  parent: Dropbox.Api.Files
  name: PaperCreateError.InvalidFileExtension
  nameWithType: PaperCreateError.InvalidFileExtension
  fullName: Dropbox.Api.Files.PaperCreateError.InvalidFileExtension
- uid: Dropbox.Api.Files.PaperCreateError.IsPaperDisabled*
  commentId: Overload:Dropbox.Api.Files.PaperCreateError.IsPaperDisabled
  name: IsPaperDisabled
  nameWithType: PaperCreateError.IsPaperDisabled
  fullName: Dropbox.Api.Files.PaperCreateError.IsPaperDisabled
- uid: Dropbox.Api.Files.PaperCreateError.AsPaperDisabled*
  commentId: Overload:Dropbox.Api.Files.PaperCreateError.AsPaperDisabled
  name: AsPaperDisabled
  nameWithType: PaperCreateError.AsPaperDisabled
  fullName: Dropbox.Api.Files.PaperCreateError.AsPaperDisabled
- uid: Dropbox.Api.Files.PaperCreateError.PaperDisabled
  commentId: T:Dropbox.Api.Files.PaperCreateError.PaperDisabled
  parent: Dropbox.Api.Files
  name: PaperCreateError.PaperDisabled
  nameWithType: PaperCreateError.PaperDisabled
  fullName: Dropbox.Api.Files.PaperCreateError.PaperDisabled
- uid: Dropbox.Api.Files.PaperCreateError.IsInsufficientPermissions*
  commentId: Overload:Dropbox.Api.Files.PaperCreateError.IsInsufficientPermissions
  name: IsInsufficientPermissions
  nameWithType: PaperCreateError.IsInsufficientPermissions
  fullName: Dropbox.Api.Files.PaperCreateError.IsInsufficientPermissions
- uid: Dropbox.Api.Files.PaperCreateError.AsInsufficientPermissions*
  commentId: Overload:Dropbox.Api.Files.PaperCreateError.AsInsufficientPermissions
  name: AsInsufficientPermissions
  nameWithType: PaperCreateError.AsInsufficientPermissions
  fullName: Dropbox.Api.Files.PaperCreateError.AsInsufficientPermissions
- uid: Dropbox.Api.Files.PaperCreateError.InsufficientPermissions
  commentId: T:Dropbox.Api.Files.PaperCreateError.InsufficientPermissions
  parent: Dropbox.Api.Files
  name: PaperCreateError.InsufficientPermissions
  nameWithType: PaperCreateError.InsufficientPermissions
  fullName: Dropbox.Api.Files.PaperCreateError.InsufficientPermissions
- uid: Dropbox.Api.Files.PaperCreateError.IsContentMalformed*
  commentId: Overload:Dropbox.Api.Files.PaperCreateError.IsContentMalformed
  name: IsContentMalformed
  nameWithType: PaperCreateError.IsContentMalformed
  fullName: Dropbox.Api.Files.PaperCreateError.IsContentMalformed
- uid: Dropbox.Api.Files.PaperCreateError.AsContentMalformed*
  commentId: Overload:Dropbox.Api.Files.PaperCreateError.AsContentMalformed
  name: AsContentMalformed
  nameWithType: PaperCreateError.AsContentMalformed
  fullName: Dropbox.Api.Files.PaperCreateError.AsContentMalformed
- uid: Dropbox.Api.Files.PaperCreateError.ContentMalformed
  commentId: T:Dropbox.Api.Files.PaperCreateError.ContentMalformed
  parent: Dropbox.Api.Files
  name: PaperCreateError.ContentMalformed
  nameWithType: PaperCreateError.ContentMalformed
  fullName: Dropbox.Api.Files.PaperCreateError.ContentMalformed
- uid: Dropbox.Api.Files.PaperCreateError.IsDocLengthExceeded*
  commentId: Overload:Dropbox.Api.Files.PaperCreateError.IsDocLengthExceeded
  name: IsDocLengthExceeded
  nameWithType: PaperCreateError.IsDocLengthExceeded
  fullName: Dropbox.Api.Files.PaperCreateError.IsDocLengthExceeded
- uid: Dropbox.Api.Files.PaperCreateError.AsDocLengthExceeded*
  commentId: Overload:Dropbox.Api.Files.PaperCreateError.AsDocLengthExceeded
  name: AsDocLengthExceeded
  nameWithType: PaperCreateError.AsDocLengthExceeded
  fullName: Dropbox.Api.Files.PaperCreateError.AsDocLengthExceeded
- uid: Dropbox.Api.Files.PaperCreateError.DocLengthExceeded
  commentId: T:Dropbox.Api.Files.PaperCreateError.DocLengthExceeded
  parent: Dropbox.Api.Files
  name: PaperCreateError.DocLengthExceeded
  nameWithType: PaperCreateError.DocLengthExceeded
  fullName: Dropbox.Api.Files.PaperCreateError.DocLengthExceeded
- uid: Dropbox.Api.Files.PaperCreateError.IsImageSizeExceeded*
  commentId: Overload:Dropbox.Api.Files.PaperCreateError.IsImageSizeExceeded
  name: IsImageSizeExceeded
  nameWithType: PaperCreateError.IsImageSizeExceeded
  fullName: Dropbox.Api.Files.PaperCreateError.IsImageSizeExceeded
- uid: Dropbox.Api.Files.PaperCreateError.AsImageSizeExceeded*
  commentId: Overload:Dropbox.Api.Files.PaperCreateError.AsImageSizeExceeded
  name: AsImageSizeExceeded
  nameWithType: PaperCreateError.AsImageSizeExceeded
  fullName: Dropbox.Api.Files.PaperCreateError.AsImageSizeExceeded
- uid: Dropbox.Api.Files.PaperCreateError.ImageSizeExceeded
  commentId: T:Dropbox.Api.Files.PaperCreateError.ImageSizeExceeded
  parent: Dropbox.Api.Files
  name: PaperCreateError.ImageSizeExceeded
  nameWithType: PaperCreateError.ImageSizeExceeded
  fullName: Dropbox.Api.Files.PaperCreateError.ImageSizeExceeded
- uid: Dropbox.Api.Files.PaperCreateError.IsOther*
  commentId: Overload:Dropbox.Api.Files.PaperCreateError.IsOther
  name: IsOther
  nameWithType: PaperCreateError.IsOther
  fullName: Dropbox.Api.Files.PaperCreateError.IsOther
- uid: Dropbox.Api.Files.PaperCreateError.AsOther*
  commentId: Overload:Dropbox.Api.Files.PaperCreateError.AsOther
  name: AsOther
  nameWithType: PaperCreateError.AsOther
  fullName: Dropbox.Api.Files.PaperCreateError.AsOther
- uid: Dropbox.Api.Files.PaperCreateError.Other
  commentId: T:Dropbox.Api.Files.PaperCreateError.Other
  parent: Dropbox.Api.Files
  name: PaperCreateError.Other
  nameWithType: PaperCreateError.Other
  fullName: Dropbox.Api.Files.PaperCreateError.Other
