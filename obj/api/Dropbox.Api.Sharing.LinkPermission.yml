### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Sharing.LinkPermission
  commentId: T:Dropbox.Api.Sharing.LinkPermission
  id: LinkPermission
  parent: Dropbox.Api.Sharing
  children:
  - Dropbox.Api.Sharing.LinkPermission.#ctor(Dropbox.Api.Sharing.LinkAction,System.Boolean,Dropbox.Api.Sharing.PermissionDeniedReason)
  - Dropbox.Api.Sharing.LinkPermission.Action
  - Dropbox.Api.Sharing.LinkPermission.Allow
  - Dropbox.Api.Sharing.LinkPermission.Reason
  langs:
  - csharp
  - vb
  name: LinkPermission
  nameWithType: LinkPermission
  fullName: Dropbox.Api.Sharing.LinkPermission
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/LinkPermission.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LinkPermission
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/LinkPermission.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Permissions for actions that can be performed on a link.</p>\n"
  example: []
  syntax:
    content: public class LinkPermission
    content.vb: Public Class LinkPermission
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Sharing.LinkPermission.#ctor(Dropbox.Api.Sharing.LinkAction,System.Boolean,Dropbox.Api.Sharing.PermissionDeniedReason)
  commentId: M:Dropbox.Api.Sharing.LinkPermission.#ctor(Dropbox.Api.Sharing.LinkAction,System.Boolean,Dropbox.Api.Sharing.PermissionDeniedReason)
  id: '#ctor(Dropbox.Api.Sharing.LinkAction,System.Boolean,Dropbox.Api.Sharing.PermissionDeniedReason)'
  parent: Dropbox.Api.Sharing.LinkPermission
  langs:
  - csharp
  - vb
  name: LinkPermission(LinkAction, Boolean, PermissionDeniedReason)
  nameWithType: LinkPermission.LinkPermission(LinkAction, Boolean, PermissionDeniedReason)
  fullName: Dropbox.Api.Sharing.LinkPermission.LinkPermission(Dropbox.Api.Sharing.LinkAction, System.Boolean, Dropbox.Api.Sharing.PermissionDeniedReason)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/LinkPermission.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/LinkPermission.cs
    startLine: 35
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Sharing.LinkPermission\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public LinkPermission(LinkAction action, bool allow, PermissionDeniedReason reason = null)
    parameters:
    - id: action
      type: Dropbox.Api.Sharing.LinkAction
      description: The action
    - id: allow
      type: System.Boolean
      description: The allow
    - id: reason
      type: Dropbox.Api.Sharing.PermissionDeniedReason
      description: The reason
    content.vb: Public Sub New(action As LinkAction, allow As Boolean, reason As PermissionDeniedReason = Nothing)
  overload: Dropbox.Api.Sharing.LinkPermission.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.LinkPermission.Action
  commentId: P:Dropbox.Api.Sharing.LinkPermission.Action
  id: Action
  parent: Dropbox.Api.Sharing.LinkPermission
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: LinkPermission.Action
  fullName: Dropbox.Api.Sharing.LinkPermission.Action
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/LinkPermission.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Action
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/LinkPermission.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Gets the action of the link permission</p>\n"
  example: []
  syntax:
    content: public LinkAction Action { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Sharing.LinkAction
    content.vb: Public Property Action As LinkAction
  overload: Dropbox.Api.Sharing.LinkPermission.Action*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Sharing.LinkPermission.Allow
  commentId: P:Dropbox.Api.Sharing.LinkPermission.Allow
  id: Allow
  parent: Dropbox.Api.Sharing.LinkPermission
  langs:
  - csharp
  - vb
  name: Allow
  nameWithType: LinkPermission.Allow
  fullName: Dropbox.Api.Sharing.LinkPermission.Allow
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/LinkPermission.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Allow
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/LinkPermission.cs
    startLine: 67
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Gets the allow of the link permission</p>\n"
  example: []
  syntax:
    content: public bool Allow { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Allow As Boolean
  overload: Dropbox.Api.Sharing.LinkPermission.Allow*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Sharing.LinkPermission.Reason
  commentId: P:Dropbox.Api.Sharing.LinkPermission.Reason
  id: Reason
  parent: Dropbox.Api.Sharing.LinkPermission
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: LinkPermission.Reason
  fullName: Dropbox.Api.Sharing.LinkPermission.Reason
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/LinkPermission.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Reason
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/LinkPermission.cs
    startLine: 72
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Gets the reason of the link permission</p>\n"
  example: []
  syntax:
    content: public PermissionDeniedReason Reason { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Sharing.PermissionDeniedReason
    content.vb: Public Property Reason As PermissionDeniedReason
  overload: Dropbox.Api.Sharing.LinkPermission.Reason*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Sharing
  commentId: N:Dropbox.Api.Sharing
  name: Dropbox.Api.Sharing
  nameWithType: Dropbox.Api.Sharing
  fullName: Dropbox.Api.Sharing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Sharing.LinkPermission
  commentId: T:Dropbox.Api.Sharing.LinkPermission
  name: LinkPermission
  nameWithType: LinkPermission
  fullName: Dropbox.Api.Sharing.LinkPermission
- uid: Dropbox.Api.Sharing.LinkPermission.#ctor*
  commentId: Overload:Dropbox.Api.Sharing.LinkPermission.#ctor
  name: LinkPermission
  nameWithType: LinkPermission.LinkPermission
  fullName: Dropbox.Api.Sharing.LinkPermission.LinkPermission
- uid: Dropbox.Api.Sharing.LinkAction
  commentId: T:Dropbox.Api.Sharing.LinkAction
  parent: Dropbox.Api.Sharing
  name: LinkAction
  nameWithType: LinkAction
  fullName: Dropbox.Api.Sharing.LinkAction
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Sharing.PermissionDeniedReason
  commentId: T:Dropbox.Api.Sharing.PermissionDeniedReason
  parent: Dropbox.Api.Sharing
  name: PermissionDeniedReason
  nameWithType: PermissionDeniedReason
  fullName: Dropbox.Api.Sharing.PermissionDeniedReason
- uid: Dropbox.Api.Sharing.LinkPermission.Action*
  commentId: Overload:Dropbox.Api.Sharing.LinkPermission.Action
  name: Action
  nameWithType: LinkPermission.Action
  fullName: Dropbox.Api.Sharing.LinkPermission.Action
- uid: Dropbox.Api.Sharing.LinkPermission.Allow*
  commentId: Overload:Dropbox.Api.Sharing.LinkPermission.Allow
  name: Allow
  nameWithType: LinkPermission.Allow
  fullName: Dropbox.Api.Sharing.LinkPermission.Allow
- uid: Dropbox.Api.Sharing.LinkPermission.Reason*
  commentId: Overload:Dropbox.Api.Sharing.LinkPermission.Reason
  name: Reason
  nameWithType: LinkPermission.Reason
  fullName: Dropbox.Api.Sharing.LinkPermission.Reason
