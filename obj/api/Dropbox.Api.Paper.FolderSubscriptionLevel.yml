### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel
  commentId: T:Dropbox.Api.Paper.FolderSubscriptionLevel
  id: FolderSubscriptionLevel
  parent: Dropbox.Api.Paper
  children:
  - Dropbox.Api.Paper.FolderSubscriptionLevel.#ctor
  - Dropbox.Api.Paper.FolderSubscriptionLevel.AsActivityOnly
  - Dropbox.Api.Paper.FolderSubscriptionLevel.AsDailyEmails
  - Dropbox.Api.Paper.FolderSubscriptionLevel.AsNone
  - Dropbox.Api.Paper.FolderSubscriptionLevel.AsWeeklyEmails
  - Dropbox.Api.Paper.FolderSubscriptionLevel.IsActivityOnly
  - Dropbox.Api.Paper.FolderSubscriptionLevel.IsDailyEmails
  - Dropbox.Api.Paper.FolderSubscriptionLevel.IsNone
  - Dropbox.Api.Paper.FolderSubscriptionLevel.IsWeeklyEmails
  langs:
  - csharp
  - vb
  name: FolderSubscriptionLevel
  nameWithType: FolderSubscriptionLevel
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/FolderSubscriptionLevel.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: FolderSubscriptionLevel
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/FolderSubscriptionLevel.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Paper
  summary: "\n<p>The subscription level of a Paper folder.</p>\n"
  example: []
  syntax:
    content: public class FolderSubscriptionLevel
    content.vb: Public Class FolderSubscriptionLevel
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Paper.FolderSubscriptionLevel.ActivityOnly
  - Dropbox.Api.Paper.FolderSubscriptionLevel.DailyEmails
  - Dropbox.Api.Paper.FolderSubscriptionLevel.None
  - Dropbox.Api.Paper.FolderSubscriptionLevel.WeeklyEmails
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.#ctor
  commentId: M:Dropbox.Api.Paper.FolderSubscriptionLevel.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Paper.FolderSubscriptionLevel
  langs:
  - csharp
  - vb
  name: FolderSubscriptionLevel()
  nameWithType: FolderSubscriptionLevel.FolderSubscriptionLevel()
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.FolderSubscriptionLevel()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/FolderSubscriptionLevel.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/FolderSubscriptionLevel.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Paper
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Paper.FolderSubscriptionLevel\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public FolderSubscriptionLevel()
    content.vb: Public Sub New
  overload: Dropbox.Api.Paper.FolderSubscriptionLevel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.IsNone
  commentId: P:Dropbox.Api.Paper.FolderSubscriptionLevel.IsNone
  id: IsNone
  parent: Dropbox.Api.Paper.FolderSubscriptionLevel
  langs:
  - csharp
  - vb
  name: IsNone
  nameWithType: FolderSubscriptionLevel.IsNone
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.IsNone
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/FolderSubscriptionLevel.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsNone
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/FolderSubscriptionLevel.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Paper
  summary: "\n<p>Gets a value indicating whether this instance is None</p>\n"
  example: []
  syntax:
    content: public bool IsNone { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNone As Boolean
  overload: Dropbox.Api.Paper.FolderSubscriptionLevel.IsNone*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.AsNone
  commentId: P:Dropbox.Api.Paper.FolderSubscriptionLevel.AsNone
  id: AsNone
  parent: Dropbox.Api.Paper.FolderSubscriptionLevel
  langs:
  - csharp
  - vb
  name: AsNone
  nameWithType: FolderSubscriptionLevel.AsNone
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.AsNone
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/FolderSubscriptionLevel.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsNone
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/FolderSubscriptionLevel.cs
    startLine: 51
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Paper
  summary: "\n<p>Gets this instance as a None, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public FolderSubscriptionLevel.None AsNone { get; }
    parameters: []
    return:
      type: Dropbox.Api.Paper.FolderSubscriptionLevel.None
    content.vb: Public ReadOnly Property AsNone As FolderSubscriptionLevel.None
  overload: Dropbox.Api.Paper.FolderSubscriptionLevel.AsNone*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.IsActivityOnly
  commentId: P:Dropbox.Api.Paper.FolderSubscriptionLevel.IsActivityOnly
  id: IsActivityOnly
  parent: Dropbox.Api.Paper.FolderSubscriptionLevel
  langs:
  - csharp
  - vb
  name: IsActivityOnly
  nameWithType: FolderSubscriptionLevel.IsActivityOnly
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.IsActivityOnly
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/FolderSubscriptionLevel.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsActivityOnly
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/FolderSubscriptionLevel.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Paper
  summary: "\n<p>Gets a value indicating whether this instance is ActivityOnly</p>\n"
  example: []
  syntax:
    content: public bool IsActivityOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsActivityOnly As Boolean
  overload: Dropbox.Api.Paper.FolderSubscriptionLevel.IsActivityOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.AsActivityOnly
  commentId: P:Dropbox.Api.Paper.FolderSubscriptionLevel.AsActivityOnly
  id: AsActivityOnly
  parent: Dropbox.Api.Paper.FolderSubscriptionLevel
  langs:
  - csharp
  - vb
  name: AsActivityOnly
  nameWithType: FolderSubscriptionLevel.AsActivityOnly
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.AsActivityOnly
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/FolderSubscriptionLevel.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsActivityOnly
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/FolderSubscriptionLevel.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Paper
  summary: "\n<p>Gets this instance as a ActivityOnly, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public FolderSubscriptionLevel.ActivityOnly AsActivityOnly { get; }
    parameters: []
    return:
      type: Dropbox.Api.Paper.FolderSubscriptionLevel.ActivityOnly
    content.vb: Public ReadOnly Property AsActivityOnly As FolderSubscriptionLevel.ActivityOnly
  overload: Dropbox.Api.Paper.FolderSubscriptionLevel.AsActivityOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.IsDailyEmails
  commentId: P:Dropbox.Api.Paper.FolderSubscriptionLevel.IsDailyEmails
  id: IsDailyEmails
  parent: Dropbox.Api.Paper.FolderSubscriptionLevel
  langs:
  - csharp
  - vb
  name: IsDailyEmails
  nameWithType: FolderSubscriptionLevel.IsDailyEmails
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.IsDailyEmails
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/FolderSubscriptionLevel.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsDailyEmails
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/FolderSubscriptionLevel.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Paper
  summary: "\n<p>Gets a value indicating whether this instance is DailyEmails</p>\n"
  example: []
  syntax:
    content: public bool IsDailyEmails { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDailyEmails As Boolean
  overload: Dropbox.Api.Paper.FolderSubscriptionLevel.IsDailyEmails*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.AsDailyEmails
  commentId: P:Dropbox.Api.Paper.FolderSubscriptionLevel.AsDailyEmails
  id: AsDailyEmails
  parent: Dropbox.Api.Paper.FolderSubscriptionLevel
  langs:
  - csharp
  - vb
  name: AsDailyEmails
  nameWithType: FolderSubscriptionLevel.AsDailyEmails
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.AsDailyEmails
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/FolderSubscriptionLevel.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsDailyEmails
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/FolderSubscriptionLevel.cs
    startLine: 95
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Paper
  summary: "\n<p>Gets this instance as a DailyEmails, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public FolderSubscriptionLevel.DailyEmails AsDailyEmails { get; }
    parameters: []
    return:
      type: Dropbox.Api.Paper.FolderSubscriptionLevel.DailyEmails
    content.vb: Public ReadOnly Property AsDailyEmails As FolderSubscriptionLevel.DailyEmails
  overload: Dropbox.Api.Paper.FolderSubscriptionLevel.AsDailyEmails*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.IsWeeklyEmails
  commentId: P:Dropbox.Api.Paper.FolderSubscriptionLevel.IsWeeklyEmails
  id: IsWeeklyEmails
  parent: Dropbox.Api.Paper.FolderSubscriptionLevel
  langs:
  - csharp
  - vb
  name: IsWeeklyEmails
  nameWithType: FolderSubscriptionLevel.IsWeeklyEmails
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.IsWeeklyEmails
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/FolderSubscriptionLevel.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsWeeklyEmails
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/FolderSubscriptionLevel.cs
    startLine: 106
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Paper
  summary: "\n<p>Gets a value indicating whether this instance is WeeklyEmails</p>\n"
  example: []
  syntax:
    content: public bool IsWeeklyEmails { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsWeeklyEmails As Boolean
  overload: Dropbox.Api.Paper.FolderSubscriptionLevel.IsWeeklyEmails*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.AsWeeklyEmails
  commentId: P:Dropbox.Api.Paper.FolderSubscriptionLevel.AsWeeklyEmails
  id: AsWeeklyEmails
  parent: Dropbox.Api.Paper.FolderSubscriptionLevel
  langs:
  - csharp
  - vb
  name: AsWeeklyEmails
  nameWithType: FolderSubscriptionLevel.AsWeeklyEmails
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.AsWeeklyEmails
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/FolderSubscriptionLevel.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsWeeklyEmails
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/FolderSubscriptionLevel.cs
    startLine: 117
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Paper
  summary: "\n<p>Gets this instance as a WeeklyEmails, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public FolderSubscriptionLevel.WeeklyEmails AsWeeklyEmails { get; }
    parameters: []
    return:
      type: Dropbox.Api.Paper.FolderSubscriptionLevel.WeeklyEmails
    content.vb: Public ReadOnly Property AsWeeklyEmails As FolderSubscriptionLevel.WeeklyEmails
  overload: Dropbox.Api.Paper.FolderSubscriptionLevel.AsWeeklyEmails*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Paper
  commentId: N:Dropbox.Api.Paper
  name: Dropbox.Api.Paper
  nameWithType: Dropbox.Api.Paper
  fullName: Dropbox.Api.Paper
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel
  commentId: T:Dropbox.Api.Paper.FolderSubscriptionLevel
  parent: Dropbox.Api.Paper
  name: FolderSubscriptionLevel
  nameWithType: FolderSubscriptionLevel
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.#ctor*
  commentId: Overload:Dropbox.Api.Paper.FolderSubscriptionLevel.#ctor
  name: FolderSubscriptionLevel
  nameWithType: FolderSubscriptionLevel.FolderSubscriptionLevel
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.FolderSubscriptionLevel
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.IsNone*
  commentId: Overload:Dropbox.Api.Paper.FolderSubscriptionLevel.IsNone
  name: IsNone
  nameWithType: FolderSubscriptionLevel.IsNone
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.IsNone
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.AsNone*
  commentId: Overload:Dropbox.Api.Paper.FolderSubscriptionLevel.AsNone
  name: AsNone
  nameWithType: FolderSubscriptionLevel.AsNone
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.AsNone
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.None
  commentId: T:Dropbox.Api.Paper.FolderSubscriptionLevel.None
  parent: Dropbox.Api.Paper
  name: FolderSubscriptionLevel.None
  nameWithType: FolderSubscriptionLevel.None
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.None
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.IsActivityOnly*
  commentId: Overload:Dropbox.Api.Paper.FolderSubscriptionLevel.IsActivityOnly
  name: IsActivityOnly
  nameWithType: FolderSubscriptionLevel.IsActivityOnly
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.IsActivityOnly
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.AsActivityOnly*
  commentId: Overload:Dropbox.Api.Paper.FolderSubscriptionLevel.AsActivityOnly
  name: AsActivityOnly
  nameWithType: FolderSubscriptionLevel.AsActivityOnly
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.AsActivityOnly
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.ActivityOnly
  commentId: T:Dropbox.Api.Paper.FolderSubscriptionLevel.ActivityOnly
  parent: Dropbox.Api.Paper
  name: FolderSubscriptionLevel.ActivityOnly
  nameWithType: FolderSubscriptionLevel.ActivityOnly
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.ActivityOnly
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.IsDailyEmails*
  commentId: Overload:Dropbox.Api.Paper.FolderSubscriptionLevel.IsDailyEmails
  name: IsDailyEmails
  nameWithType: FolderSubscriptionLevel.IsDailyEmails
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.IsDailyEmails
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.AsDailyEmails*
  commentId: Overload:Dropbox.Api.Paper.FolderSubscriptionLevel.AsDailyEmails
  name: AsDailyEmails
  nameWithType: FolderSubscriptionLevel.AsDailyEmails
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.AsDailyEmails
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.DailyEmails
  commentId: T:Dropbox.Api.Paper.FolderSubscriptionLevel.DailyEmails
  parent: Dropbox.Api.Paper
  name: FolderSubscriptionLevel.DailyEmails
  nameWithType: FolderSubscriptionLevel.DailyEmails
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.DailyEmails
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.IsWeeklyEmails*
  commentId: Overload:Dropbox.Api.Paper.FolderSubscriptionLevel.IsWeeklyEmails
  name: IsWeeklyEmails
  nameWithType: FolderSubscriptionLevel.IsWeeklyEmails
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.IsWeeklyEmails
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.AsWeeklyEmails*
  commentId: Overload:Dropbox.Api.Paper.FolderSubscriptionLevel.AsWeeklyEmails
  name: AsWeeklyEmails
  nameWithType: FolderSubscriptionLevel.AsWeeklyEmails
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.AsWeeklyEmails
- uid: Dropbox.Api.Paper.FolderSubscriptionLevel.WeeklyEmails
  commentId: T:Dropbox.Api.Paper.FolderSubscriptionLevel.WeeklyEmails
  parent: Dropbox.Api.Paper
  name: FolderSubscriptionLevel.WeeklyEmails
  nameWithType: FolderSubscriptionLevel.WeeklyEmails
  fullName: Dropbox.Api.Paper.FolderSubscriptionLevel.WeeklyEmails
