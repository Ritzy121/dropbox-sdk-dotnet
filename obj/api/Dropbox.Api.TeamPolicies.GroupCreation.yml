### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamPolicies.GroupCreation
  commentId: T:Dropbox.Api.TeamPolicies.GroupCreation
  id: GroupCreation
  parent: Dropbox.Api.TeamPolicies
  children:
  - Dropbox.Api.TeamPolicies.GroupCreation.#ctor
  - Dropbox.Api.TeamPolicies.GroupCreation.AsAdminsAndMembers
  - Dropbox.Api.TeamPolicies.GroupCreation.AsAdminsOnly
  - Dropbox.Api.TeamPolicies.GroupCreation.IsAdminsAndMembers
  - Dropbox.Api.TeamPolicies.GroupCreation.IsAdminsOnly
  langs:
  - csharp
  - vb
  name: GroupCreation
  nameWithType: GroupCreation
  fullName: Dropbox.Api.TeamPolicies.GroupCreation
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/GroupCreation.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupCreation
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/GroupCreation.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamPolicies
  summary: "\n<p>The group creation object</p>\n"
  example: []
  syntax:
    content: public class GroupCreation
    content.vb: Public Class GroupCreation
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.TeamPolicies.GroupCreation.AdminsAndMembers
  - Dropbox.Api.TeamPolicies.GroupCreation.AdminsOnly
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.TeamPolicies.GroupCreation.#ctor
  commentId: M:Dropbox.Api.TeamPolicies.GroupCreation.#ctor
  id: '#ctor'
  parent: Dropbox.Api.TeamPolicies.GroupCreation
  langs:
  - csharp
  - vb
  name: GroupCreation()
  nameWithType: GroupCreation.GroupCreation()
  fullName: Dropbox.Api.TeamPolicies.GroupCreation.GroupCreation()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/GroupCreation.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/GroupCreation.cs
    startLine: 32
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamPolicies
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamPolicies.GroupCreation\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public GroupCreation()
    content.vb: Public Sub New
  overload: Dropbox.Api.TeamPolicies.GroupCreation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.TeamPolicies.GroupCreation.IsAdminsAndMembers
  commentId: P:Dropbox.Api.TeamPolicies.GroupCreation.IsAdminsAndMembers
  id: IsAdminsAndMembers
  parent: Dropbox.Api.TeamPolicies.GroupCreation
  langs:
  - csharp
  - vb
  name: IsAdminsAndMembers
  nameWithType: GroupCreation.IsAdminsAndMembers
  fullName: Dropbox.Api.TeamPolicies.GroupCreation.IsAdminsAndMembers
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/GroupCreation.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsAdminsAndMembers
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/GroupCreation.cs
    startLine: 39
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamPolicies
  summary: "\n<p>Gets a value indicating whether this instance is AdminsAndMembers</p>\n"
  example: []
  syntax:
    content: public bool IsAdminsAndMembers { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAdminsAndMembers As Boolean
  overload: Dropbox.Api.TeamPolicies.GroupCreation.IsAdminsAndMembers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamPolicies.GroupCreation.AsAdminsAndMembers
  commentId: P:Dropbox.Api.TeamPolicies.GroupCreation.AsAdminsAndMembers
  id: AsAdminsAndMembers
  parent: Dropbox.Api.TeamPolicies.GroupCreation
  langs:
  - csharp
  - vb
  name: AsAdminsAndMembers
  nameWithType: GroupCreation.AsAdminsAndMembers
  fullName: Dropbox.Api.TeamPolicies.GroupCreation.AsAdminsAndMembers
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/GroupCreation.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsAdminsAndMembers
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/GroupCreation.cs
    startLine: 50
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamPolicies
  summary: "\n<p>Gets this instance as a AdminsAndMembers, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public GroupCreation.AdminsAndMembers AsAdminsAndMembers { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamPolicies.GroupCreation.AdminsAndMembers
    content.vb: Public ReadOnly Property AsAdminsAndMembers As GroupCreation.AdminsAndMembers
  overload: Dropbox.Api.TeamPolicies.GroupCreation.AsAdminsAndMembers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamPolicies.GroupCreation.IsAdminsOnly
  commentId: P:Dropbox.Api.TeamPolicies.GroupCreation.IsAdminsOnly
  id: IsAdminsOnly
  parent: Dropbox.Api.TeamPolicies.GroupCreation
  langs:
  - csharp
  - vb
  name: IsAdminsOnly
  nameWithType: GroupCreation.IsAdminsOnly
  fullName: Dropbox.Api.TeamPolicies.GroupCreation.IsAdminsOnly
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/GroupCreation.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsAdminsOnly
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/GroupCreation.cs
    startLine: 61
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamPolicies
  summary: "\n<p>Gets a value indicating whether this instance is AdminsOnly</p>\n"
  example: []
  syntax:
    content: public bool IsAdminsOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAdminsOnly As Boolean
  overload: Dropbox.Api.TeamPolicies.GroupCreation.IsAdminsOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamPolicies.GroupCreation.AsAdminsOnly
  commentId: P:Dropbox.Api.TeamPolicies.GroupCreation.AsAdminsOnly
  id: AsAdminsOnly
  parent: Dropbox.Api.TeamPolicies.GroupCreation
  langs:
  - csharp
  - vb
  name: AsAdminsOnly
  nameWithType: GroupCreation.AsAdminsOnly
  fullName: Dropbox.Api.TeamPolicies.GroupCreation.AsAdminsOnly
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/GroupCreation.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsAdminsOnly
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/GroupCreation.cs
    startLine: 72
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamPolicies
  summary: "\n<p>Gets this instance as a AdminsOnly, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public GroupCreation.AdminsOnly AsAdminsOnly { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamPolicies.GroupCreation.AdminsOnly
    content.vb: Public ReadOnly Property AsAdminsOnly As GroupCreation.AdminsOnly
  overload: Dropbox.Api.TeamPolicies.GroupCreation.AsAdminsOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.TeamPolicies
  commentId: N:Dropbox.Api.TeamPolicies
  name: Dropbox.Api.TeamPolicies
  nameWithType: Dropbox.Api.TeamPolicies
  fullName: Dropbox.Api.TeamPolicies
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.TeamPolicies.GroupCreation
  commentId: T:Dropbox.Api.TeamPolicies.GroupCreation
  parent: Dropbox.Api.TeamPolicies
  name: GroupCreation
  nameWithType: GroupCreation
  fullName: Dropbox.Api.TeamPolicies.GroupCreation
- uid: Dropbox.Api.TeamPolicies.GroupCreation.#ctor*
  commentId: Overload:Dropbox.Api.TeamPolicies.GroupCreation.#ctor
  name: GroupCreation
  nameWithType: GroupCreation.GroupCreation
  fullName: Dropbox.Api.TeamPolicies.GroupCreation.GroupCreation
- uid: Dropbox.Api.TeamPolicies.GroupCreation.IsAdminsAndMembers*
  commentId: Overload:Dropbox.Api.TeamPolicies.GroupCreation.IsAdminsAndMembers
  name: IsAdminsAndMembers
  nameWithType: GroupCreation.IsAdminsAndMembers
  fullName: Dropbox.Api.TeamPolicies.GroupCreation.IsAdminsAndMembers
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.TeamPolicies.GroupCreation.AsAdminsAndMembers*
  commentId: Overload:Dropbox.Api.TeamPolicies.GroupCreation.AsAdminsAndMembers
  name: AsAdminsAndMembers
  nameWithType: GroupCreation.AsAdminsAndMembers
  fullName: Dropbox.Api.TeamPolicies.GroupCreation.AsAdminsAndMembers
- uid: Dropbox.Api.TeamPolicies.GroupCreation.AdminsAndMembers
  commentId: T:Dropbox.Api.TeamPolicies.GroupCreation.AdminsAndMembers
  parent: Dropbox.Api.TeamPolicies
  name: GroupCreation.AdminsAndMembers
  nameWithType: GroupCreation.AdminsAndMembers
  fullName: Dropbox.Api.TeamPolicies.GroupCreation.AdminsAndMembers
- uid: Dropbox.Api.TeamPolicies.GroupCreation.IsAdminsOnly*
  commentId: Overload:Dropbox.Api.TeamPolicies.GroupCreation.IsAdminsOnly
  name: IsAdminsOnly
  nameWithType: GroupCreation.IsAdminsOnly
  fullName: Dropbox.Api.TeamPolicies.GroupCreation.IsAdminsOnly
- uid: Dropbox.Api.TeamPolicies.GroupCreation.AsAdminsOnly*
  commentId: Overload:Dropbox.Api.TeamPolicies.GroupCreation.AsAdminsOnly
  name: AsAdminsOnly
  nameWithType: GroupCreation.AsAdminsOnly
  fullName: Dropbox.Api.TeamPolicies.GroupCreation.AsAdminsOnly
- uid: Dropbox.Api.TeamPolicies.GroupCreation.AdminsOnly
  commentId: T:Dropbox.Api.TeamPolicies.GroupCreation.AdminsOnly
  parent: Dropbox.Api.TeamPolicies
  name: GroupCreation.AdminsOnly
  nameWithType: GroupCreation.AdminsOnly
  fullName: Dropbox.Api.TeamPolicies.GroupCreation.AdminsOnly
