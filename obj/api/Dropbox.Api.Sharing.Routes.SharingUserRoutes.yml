### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  commentId: T:Dropbox.Api.Sharing.Routes.SharingUserRoutes
  id: SharingUserRoutes
  parent: Dropbox.Api.Sharing.Routes
  children:
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFileMemberAsync(Dropbox.Api.Sharing.AddFileMemberArgs)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFileMemberAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberSelector},System.String,System.Boolean,Dropbox.Api.Sharing.AccessLevel,System.Boolean)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFolderMemberAsync(Dropbox.Api.Sharing.AddFolderMemberArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFolderMemberAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.AddMember},System.Boolean,System.String)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFileMember(Dropbox.Api.Sharing.AddFileMemberArgs,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFileMember(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberSelector},System.String,System.Boolean,Dropbox.Api.Sharing.AccessLevel,System.Boolean,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFolderMember(Dropbox.Api.Sharing.AddFolderMemberArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFolderMember(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.AddMember},System.Boolean,System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckJobStatus(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckJobStatus(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckRemoveMemberJobStatus(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckRemoveMemberJobStatus(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckShareJobStatus(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckShareJobStatus(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLink(Dropbox.Api.Sharing.CreateSharedLinkArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLink(System.String,System.Boolean,Dropbox.Api.Sharing.PendingUploadMode,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLinkWithSettings(Dropbox.Api.Sharing.CreateSharedLinkWithSettingsArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLinkWithSettings(System.String,Dropbox.Api.Sharing.SharedLinkSettings,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadata(Dropbox.Api.Sharing.GetFileMetadataArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadata(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction},System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadataBatch(Dropbox.Api.Sharing.GetFileMetadataBatchArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadataBatch(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction},System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFolderMetadata(Dropbox.Api.Sharing.GetMetadataArgs,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFolderMetadata(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkFile(Dropbox.Api.Sharing.GetSharedLinkMetadataArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkFile(System.String,System.String,System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkMetadata(Dropbox.Api.Sharing.GetSharedLinkMetadataArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkMetadata(System.String,System.String,System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinks(Dropbox.Api.Sharing.GetSharedLinksArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinks(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembers(Dropbox.Api.Sharing.ListFileMembersArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembers(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction},System.Boolean,System.UInt32,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersBatch(Dropbox.Api.Sharing.ListFileMembersBatchArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersBatch(System.Collections.Generic.IEnumerable{System.String},System.UInt32,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersContinue(Dropbox.Api.Sharing.ListFileMembersContinueArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersContinue(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembers(Dropbox.Api.Sharing.ListFolderMembersArgs,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembers(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction},System.UInt32,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembersContinue(Dropbox.Api.Sharing.ListFolderMembersContinueArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembersContinue(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolders(Dropbox.Api.Sharing.ListFoldersArgs,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolders(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFoldersContinue(Dropbox.Api.Sharing.ListFoldersContinueArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFoldersContinue(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFolders(Dropbox.Api.Sharing.ListFoldersArgs,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFolders(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFoldersContinue(Dropbox.Api.Sharing.ListFoldersContinueArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFoldersContinue(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFiles(Dropbox.Api.Sharing.ListFilesArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFiles(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction},System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFilesContinue(Dropbox.Api.Sharing.ListFilesContinueArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFilesContinue(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListSharedLinks(Dropbox.Api.Sharing.ListSharedLinksArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListSharedLinks(System.String,System.String,System.Nullable{System.Boolean},System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginModifySharedLinkSettings(Dropbox.Api.Sharing.ModifySharedLinkSettingsArgs,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginModifySharedLinkSettings(System.String,Dropbox.Api.Sharing.SharedLinkSettings,System.Boolean,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginMountFolder(Dropbox.Api.Sharing.MountFolderArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginMountFolder(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFileMembership(Dropbox.Api.Sharing.RelinquishFileMembershipArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFileMembership(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFolderMembership(Dropbox.Api.Sharing.RelinquishFolderMembershipArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFolderMembership(System.String,System.Boolean,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember(Dropbox.Api.Sharing.RemoveFileMemberArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember(System.String,Dropbox.Api.Sharing.MemberSelector,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember2(Dropbox.Api.Sharing.RemoveFileMemberArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember2(System.String,Dropbox.Api.Sharing.MemberSelector,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFolderMember(Dropbox.Api.Sharing.RemoveFolderMemberArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFolderMember(System.String,Dropbox.Api.Sharing.MemberSelector,System.Boolean,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRevokeSharedLink(Dropbox.Api.Sharing.RevokeSharedLinkArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRevokeSharedLink(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginSetAccessInheritance(Dropbox.Api.Sharing.SetAccessInheritanceArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginSetAccessInheritance(System.String,Dropbox.Api.Sharing.AccessInheritance,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginShareFolder(Dropbox.Api.Sharing.ShareFolderArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginShareFolder(System.String,Dropbox.Api.Sharing.AclUpdatePolicy,System.Boolean,Dropbox.Api.Sharing.MemberPolicy,Dropbox.Api.Sharing.SharedLinkPolicy,Dropbox.Api.Sharing.ViewerInfoPolicy,Dropbox.Api.Sharing.AccessInheritance,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},Dropbox.Api.Sharing.LinkSettings,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginTransferFolder(Dropbox.Api.Sharing.TransferFolderArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginTransferFolder(System.String,System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnmountFolder(Dropbox.Api.Sharing.UnmountFolderArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnmountFolder(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFile(Dropbox.Api.Sharing.UnshareFileArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFile(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFolder(Dropbox.Api.Sharing.UnshareFolderArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFolder(System.String,System.Boolean,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFileMember(Dropbox.Api.Sharing.UpdateFileMemberArgs,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFileMember(System.String,Dropbox.Api.Sharing.MemberSelector,Dropbox.Api.Sharing.AccessLevel,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderMember(Dropbox.Api.Sharing.UpdateFolderMemberArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderMember(System.String,Dropbox.Api.Sharing.MemberSelector,Dropbox.Api.Sharing.AccessLevel,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderPolicy(Dropbox.Api.Sharing.UpdateFolderPolicyArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderPolicy(System.String,Dropbox.Api.Sharing.MemberPolicy,Dropbox.Api.Sharing.AclUpdatePolicy,Dropbox.Api.Sharing.ViewerInfoPolicy,Dropbox.Api.Sharing.SharedLinkPolicy,Dropbox.Api.Sharing.LinkSettings,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},System.AsyncCallback,System.Object)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckJobStatusAsync(Dropbox.Api.Async.PollArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckJobStatusAsync(System.String)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckRemoveMemberJobStatusAsync(Dropbox.Api.Async.PollArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckRemoveMemberJobStatusAsync(System.String)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckShareJobStatusAsync(Dropbox.Api.Async.PollArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckShareJobStatusAsync(System.String)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkAsync(Dropbox.Api.Sharing.CreateSharedLinkArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkAsync(System.String,System.Boolean,Dropbox.Api.Sharing.PendingUploadMode)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkWithSettingsAsync(Dropbox.Api.Sharing.CreateSharedLinkWithSettingsArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkWithSettingsAsync(System.String,Dropbox.Api.Sharing.SharedLinkSettings)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndAddFileMember(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndAddFolderMember(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckJobStatus(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckRemoveMemberJobStatus(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckShareJobStatus(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCreateSharedLink(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCreateSharedLinkWithSettings(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFileMetadata(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFileMetadataBatch(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFolderMetadata(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinkFile(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinkMetadata(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinks(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembers(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembersBatch(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembersContinue(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolderMembers(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolderMembersContinue(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolders(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFoldersContinue(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListMountableFolders(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListMountableFoldersContinue(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListReceivedFiles(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListReceivedFilesContinue(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListSharedLinks(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndModifySharedLinkSettings(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndMountFolder(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRelinquishFileMembership(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRelinquishFolderMembership(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFileMember(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFileMember2(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFolderMember(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRevokeSharedLink(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndSetAccessInheritance(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndShareFolder(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndTransferFolder(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnmountFolder(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnshareFile(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnshareFolder(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFileMember(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFolderMember(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFolderPolicy(System.IAsyncResult)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataAsync(Dropbox.Api.Sharing.GetFileMetadataArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction})
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataBatchAsync(Dropbox.Api.Sharing.GetFileMetadataBatchArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataBatchAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction})
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFolderMetadataAsync(Dropbox.Api.Sharing.GetMetadataArgs)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFolderMetadataAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction})
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkFileAsync(Dropbox.Api.Sharing.GetSharedLinkMetadataArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkFileAsync(System.String,System.String,System.String)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkMetadataAsync(Dropbox.Api.Sharing.GetSharedLinkMetadataArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkMetadataAsync(System.String,System.String,System.String)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinksAsync(Dropbox.Api.Sharing.GetSharedLinksArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinksAsync(System.String)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersAsync(Dropbox.Api.Sharing.ListFileMembersArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction},System.Boolean,System.UInt32)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersBatchAsync(Dropbox.Api.Sharing.ListFileMembersBatchArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersBatchAsync(System.Collections.Generic.IEnumerable{System.String},System.UInt32)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersContinueAsync(Dropbox.Api.Sharing.ListFileMembersContinueArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersContinueAsync(System.String)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersAsync(Dropbox.Api.Sharing.ListFolderMembersArgs)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction},System.UInt32)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersContinueAsync(Dropbox.Api.Sharing.ListFolderMembersContinueArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersContinueAsync(System.String)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersAsync(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction})
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersContinueAsync(Dropbox.Api.Sharing.ListFoldersContinueArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersContinueAsync(System.String)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersAsync(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction})
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersContinueAsync(Dropbox.Api.Sharing.ListFoldersContinueArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersContinueAsync(System.String)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesAsync(Dropbox.Api.Sharing.ListFilesArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesAsync(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction})
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesContinueAsync(Dropbox.Api.Sharing.ListFilesContinueArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesContinueAsync(System.String)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync(Dropbox.Api.Sharing.ListSharedLinksArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync(System.String,System.String,System.Nullable{System.Boolean})
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ModifySharedLinkSettingsAsync(Dropbox.Api.Sharing.ModifySharedLinkSettingsArgs)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ModifySharedLinkSettingsAsync(System.String,Dropbox.Api.Sharing.SharedLinkSettings,System.Boolean)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.MountFolderAsync(Dropbox.Api.Sharing.MountFolderArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.MountFolderAsync(System.String)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFileMembershipAsync(Dropbox.Api.Sharing.RelinquishFileMembershipArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFileMembershipAsync(System.String)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFolderMembershipAsync(Dropbox.Api.Sharing.RelinquishFolderMembershipArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFolderMembershipAsync(System.String,System.Boolean)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMember2Async(Dropbox.Api.Sharing.RemoveFileMemberArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMember2Async(System.String,Dropbox.Api.Sharing.MemberSelector)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMemberAsync(Dropbox.Api.Sharing.RemoveFileMemberArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMemberAsync(System.String,Dropbox.Api.Sharing.MemberSelector)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFolderMemberAsync(Dropbox.Api.Sharing.RemoveFolderMemberArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFolderMemberAsync(System.String,Dropbox.Api.Sharing.MemberSelector,System.Boolean)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.RevokeSharedLinkAsync(Dropbox.Api.Sharing.RevokeSharedLinkArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.RevokeSharedLinkAsync(System.String)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.SetAccessInheritanceAsync(Dropbox.Api.Sharing.SetAccessInheritanceArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.SetAccessInheritanceAsync(System.String,Dropbox.Api.Sharing.AccessInheritance)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ShareFolderAsync(Dropbox.Api.Sharing.ShareFolderArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.ShareFolderAsync(System.String,Dropbox.Api.Sharing.AclUpdatePolicy,System.Boolean,Dropbox.Api.Sharing.MemberPolicy,Dropbox.Api.Sharing.SharedLinkPolicy,Dropbox.Api.Sharing.ViewerInfoPolicy,Dropbox.Api.Sharing.AccessInheritance,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},Dropbox.Api.Sharing.LinkSettings)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.TransferFolderAsync(Dropbox.Api.Sharing.TransferFolderArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.TransferFolderAsync(System.String,System.String)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnmountFolderAsync(Dropbox.Api.Sharing.UnmountFolderArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnmountFolderAsync(System.String)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFileAsync(Dropbox.Api.Sharing.UnshareFileArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFileAsync(System.String)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFolderAsync(Dropbox.Api.Sharing.UnshareFolderArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFolderAsync(System.String,System.Boolean)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFileMemberAsync(Dropbox.Api.Sharing.UpdateFileMemberArgs)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFileMemberAsync(System.String,Dropbox.Api.Sharing.MemberSelector,Dropbox.Api.Sharing.AccessLevel)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderMemberAsync(Dropbox.Api.Sharing.UpdateFolderMemberArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderMemberAsync(System.String,Dropbox.Api.Sharing.MemberSelector,Dropbox.Api.Sharing.AccessLevel)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderPolicyAsync(Dropbox.Api.Sharing.UpdateFolderPolicyArg)
  - Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderPolicyAsync(System.String,Dropbox.Api.Sharing.MemberPolicy,Dropbox.Api.Sharing.AclUpdatePolicy,Dropbox.Api.Sharing.ViewerInfoPolicy,Dropbox.Api.Sharing.SharedLinkPolicy,Dropbox.Api.Sharing.LinkSettings,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction})
  langs:
  - csharp
  - vb
  name: SharingUserRoutes
  nameWithType: SharingUserRoutes
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: SharingUserRoutes
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>The routes for the <xref href=\"Dropbox.Api.Sharing\" data-throw-if-not-resolved=\"false\"></xref> namespace</p>\n"
  example: []
  syntax:
    content: public class SharingUserRoutes
    content.vb: Public Class SharingUserRoutes
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFileMemberAsync(Dropbox.Api.Sharing.AddFileMemberArgs)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFileMemberAsync(Dropbox.Api.Sharing.AddFileMemberArgs)
  id: AddFileMemberAsync(Dropbox.Api.Sharing.AddFileMemberArgs)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: AddFileMemberAsync(AddFileMemberArgs)
  nameWithType: SharingUserRoutes.AddFileMemberAsync(AddFileMemberArgs)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFileMemberAsync(Dropbox.Api.Sharing.AddFileMemberArgs)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AddFileMemberAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 41
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Adds specified members to a file.</p>\n"
  example: []
  syntax:
    content: public Task<List<FileMemberActionResult>> AddFileMemberAsync(AddFileMemberArgs addFileMemberArgs)
    parameters:
    - id: addFileMemberArgs
      type: Dropbox.Api.Sharing.AddFileMemberArgs
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Sharing.FileMemberActionResult}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function AddFileMemberAsync(addFileMemberArgs As AddFileMemberArgs) As Task(Of List(Of FileMemberActionResult))
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFileMemberAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.AddFileMemberError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFileMember(Dropbox.Api.Sharing.AddFileMemberArgs,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFileMember(Dropbox.Api.Sharing.AddFileMemberArgs,System.AsyncCallback,System.Object)
  id: BeginAddFileMember(Dropbox.Api.Sharing.AddFileMemberArgs,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginAddFileMember(AddFileMemberArgs, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginAddFileMember(AddFileMemberArgs, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFileMember(Dropbox.Api.Sharing.AddFileMemberArgs, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginAddFileMember
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 55
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the add file member route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginAddFileMember(AddFileMemberArgs addFileMemberArgs, AsyncCallback callback, object state = null)
    parameters:
    - id: addFileMemberArgs
      type: Dropbox.Api.Sharing.AddFileMemberArgs
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginAddFileMember(addFileMemberArgs As AddFileMemberArgs, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFileMember*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFileMemberAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberSelector},System.String,System.Boolean,Dropbox.Api.Sharing.AccessLevel,System.Boolean)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFileMemberAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberSelector},System.String,System.Boolean,Dropbox.Api.Sharing.AccessLevel,System.Boolean)
  id: AddFileMemberAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberSelector},System.String,System.Boolean,Dropbox.Api.Sharing.AccessLevel,System.Boolean)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: AddFileMemberAsync(String, IEnumerable<MemberSelector>, String, Boolean, AccessLevel, Boolean)
  nameWithType: SharingUserRoutes.AddFileMemberAsync(String, IEnumerable<MemberSelector>, String, Boolean, AccessLevel, Boolean)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFileMemberAsync(System.String, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.MemberSelector>, System.String, System.Boolean, Dropbox.Api.Sharing.AccessLevel, System.Boolean)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AddFileMemberAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 82
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Adds specified members to a file.</p>\n"
  example: []
  syntax:
    content: public Task<List<FileMemberActionResult>> AddFileMemberAsync(string file, IEnumerable<MemberSelector> members, string customMessage = null, bool quiet = false, AccessLevel accessLevel = null, bool addMessageAsComment = false)
    parameters:
    - id: file
      type: System.String
      description: File to which to add members.
    - id: members
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberSelector}
      description: >-
        Members to add. Note that even an email address is given,

        this may result in a user being directly added to the membership if that email is

        the user&apos;s main account email.
    - id: customMessage
      type: System.String
      description: >-
        Message to send to added members in their

        invitation.
    - id: quiet
      type: System.Boolean
      description: >-
        Whether added members should be notified via email and device

        notifications of their invitation.
    - id: accessLevel
      type: Dropbox.Api.Sharing.AccessLevel
      description: >-
        AccessLevel union object, describing what access level we

        want to give new members.
    - id: addMessageAsComment
      type: System.Boolean
      description: >-
        If the custom message should be added as a

        comment on the file.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Sharing.FileMemberActionResult}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function AddFileMemberAsync(file As String, members As IEnumerable(Of MemberSelector), customMessage As String = Nothing, quiet As Boolean = False, accessLevel As AccessLevel = Nothing, addMessageAsComment As Boolean = False) As Task(Of List(Of FileMemberActionResult))
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFileMemberAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.AddFileMemberError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: SharingUserRoutes.AddFileMemberAsync(String, IEnumerable(Of MemberSelector), String, Boolean, AccessLevel, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFileMemberAsync(System.String, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.MemberSelector), System.String, System.Boolean, Dropbox.Api.Sharing.AccessLevel, System.Boolean)
  name.vb: AddFileMemberAsync(String, IEnumerable(Of MemberSelector), String, Boolean, AccessLevel, Boolean)
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFileMember(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberSelector},System.String,System.Boolean,Dropbox.Api.Sharing.AccessLevel,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFileMember(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberSelector},System.String,System.Boolean,Dropbox.Api.Sharing.AccessLevel,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAddFileMember(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberSelector},System.String,System.Boolean,Dropbox.Api.Sharing.AccessLevel,System.Boolean,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginAddFileMember(String, IEnumerable<MemberSelector>, String, Boolean, AccessLevel, Boolean, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginAddFileMember(String, IEnumerable<MemberSelector>, String, Boolean, AccessLevel, Boolean, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFileMember(System.String, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.MemberSelector>, System.String, System.Boolean, Dropbox.Api.Sharing.AccessLevel, System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginAddFileMember
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 119
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the add file member route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginAddFileMember(string file, IEnumerable<MemberSelector> members, string customMessage = null, bool quiet = false, AccessLevel accessLevel = null, bool addMessageAsComment = false, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: file
      type: System.String
      description: File to which to add members.
    - id: members
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberSelector}
      description: >-
        Members to add. Note that even an email address is given,

        this may result in a user being directly added to the membership if that email is

        the user&apos;s main account email.
    - id: customMessage
      type: System.String
      description: >-
        Message to send to added members in their

        invitation.
    - id: quiet
      type: System.Boolean
      description: >-
        Whether added members should be notified via email and device

        notifications of their invitation.
    - id: accessLevel
      type: Dropbox.Api.Sharing.AccessLevel
      description: >-
        AccessLevel union object, describing what access level we

        want to give new members.
    - id: addMessageAsComment
      type: System.Boolean
      description: >-
        If the custom message should be added as a

        comment on the file.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginAddFileMember(file As String, members As IEnumerable(Of MemberSelector), customMessage As String = Nothing, quiet As Boolean = False, accessLevel As AccessLevel = Nothing, addMessageAsComment As Boolean = False, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFileMember*
  nameWithType.vb: SharingUserRoutes.BeginAddFileMember(String, IEnumerable(Of MemberSelector), String, Boolean, AccessLevel, Boolean, AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFileMember(System.String, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.MemberSelector), System.String, System.Boolean, Dropbox.Api.Sharing.AccessLevel, System.Boolean, System.AsyncCallback, System.Object)
  name.vb: BeginAddFileMember(String, IEnumerable(Of MemberSelector), String, Boolean, AccessLevel, Boolean, AsyncCallback, Object)
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndAddFileMember(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndAddFileMember(System.IAsyncResult)
  id: EndAddFileMember(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndAddFileMember(IAsyncResult)
  nameWithType: SharingUserRoutes.EndAddFileMember(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndAddFileMember(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndAddFileMember
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 148
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the add file member route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public List<FileMemberActionResult> EndAddFileMember(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: System.Collections.Generic.List{Dropbox.Api.Sharing.FileMemberActionResult}
      description: The response to the send request
    content.vb: Public Function EndAddFileMember(asyncResult As IAsyncResult) As List(Of FileMemberActionResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndAddFileMember*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.AddFileMemberError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFolderMemberAsync(Dropbox.Api.Sharing.AddFolderMemberArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFolderMemberAsync(Dropbox.Api.Sharing.AddFolderMemberArg)
  id: AddFolderMemberAsync(Dropbox.Api.Sharing.AddFolderMemberArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: AddFolderMemberAsync(AddFolderMemberArg)
  nameWithType: SharingUserRoutes.AddFolderMemberAsync(AddFolderMemberArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFolderMemberAsync(Dropbox.Api.Sharing.AddFolderMemberArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AddFolderMemberAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 172
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Allows an owner or editor (if the ACL update policy allows) of a shared\nfolder to add another member.</p>\n<p>For the new member to get access to all the functionality for this folder,\nyou will need to call <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.MountFolderAsync(Dropbox.Api.Sharing.MountFolderArg)\" data-throw-if-not-resolved=\"false\"></xref> on their\nbehalf.</p>\n"
  example: []
  syntax:
    content: public Task AddFolderMemberAsync(AddFolderMemberArg addFolderMemberArg)
    parameters:
    - id: addFolderMemberArg
      type: Dropbox.Api.Sharing.AddFolderMemberArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function AddFolderMemberAsync(addFolderMemberArg As AddFolderMemberArg) As Task
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFolderMemberAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.AddFolderMemberError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFolderMember(Dropbox.Api.Sharing.AddFolderMemberArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFolderMember(Dropbox.Api.Sharing.AddFolderMemberArg,System.AsyncCallback,System.Object)
  id: BeginAddFolderMember(Dropbox.Api.Sharing.AddFolderMemberArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginAddFolderMember(AddFolderMemberArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginAddFolderMember(AddFolderMemberArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFolderMember(Dropbox.Api.Sharing.AddFolderMemberArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginAddFolderMember
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 186
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the add folder member route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginAddFolderMember(AddFolderMemberArg addFolderMemberArg, AsyncCallback callback, object state = null)
    parameters:
    - id: addFolderMemberArg
      type: Dropbox.Api.Sharing.AddFolderMemberArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginAddFolderMember(addFolderMemberArg As AddFolderMemberArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFolderMember*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFolderMemberAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.AddMember},System.Boolean,System.String)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFolderMemberAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.AddMember},System.Boolean,System.String)
  id: AddFolderMemberAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.AddMember},System.Boolean,System.String)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: AddFolderMemberAsync(String, IEnumerable<AddMember>, Boolean, String)
  nameWithType: SharingUserRoutes.AddFolderMemberAsync(String, IEnumerable<AddMember>, Boolean, String)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFolderMemberAsync(System.String, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.AddMember>, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AddFolderMemberAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 212
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Allows an owner or editor (if the ACL update policy allows) of a shared\nfolder to add another member.</p>\n<p>For the new member to get access to all the functionality for this folder,\nyou will need to call <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.MountFolderAsync(Dropbox.Api.Sharing.MountFolderArg)\" data-throw-if-not-resolved=\"false\"></xref> on their\nbehalf.</p>\n"
  example: []
  syntax:
    content: public Task AddFolderMemberAsync(string sharedFolderId, IEnumerable<AddMember> members, bool quiet = false, string customMessage = null)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: members
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.AddMember}
      description: >-
        The intended list of members to add.  Added members will

        receive invites to join the shared folder.
    - id: quiet
      type: System.Boolean
      description: >-
        Whether added members should be notified via email and device

        notifications of their invite.
    - id: customMessage
      type: System.String
      description: >-
        Optional message to display to added members in their

        invitation.
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function AddFolderMemberAsync(sharedFolderId As String, members As IEnumerable(Of AddMember), quiet As Boolean = False, customMessage As String = Nothing) As Task
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFolderMemberAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.AddFolderMemberError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: SharingUserRoutes.AddFolderMemberAsync(String, IEnumerable(Of AddMember), Boolean, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFolderMemberAsync(System.String, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.AddMember), System.Boolean, System.String)
  name.vb: AddFolderMemberAsync(String, IEnumerable(Of AddMember), Boolean, String)
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFolderMember(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.AddMember},System.Boolean,System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFolderMember(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.AddMember},System.Boolean,System.String,System.AsyncCallback,System.Object)
  id: BeginAddFolderMember(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.AddMember},System.Boolean,System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginAddFolderMember(String, IEnumerable<AddMember>, Boolean, String, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginAddFolderMember(String, IEnumerable<AddMember>, Boolean, String, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFolderMember(System.String, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.AddMember>, System.Boolean, System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginAddFolderMember
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 240
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the add folder member route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginAddFolderMember(string sharedFolderId, IEnumerable<AddMember> members, bool quiet = false, string customMessage = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: members
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.AddMember}
      description: >-
        The intended list of members to add.  Added members will

        receive invites to join the shared folder.
    - id: quiet
      type: System.Boolean
      description: >-
        Whether added members should be notified via email and device

        notifications of their invite.
    - id: customMessage
      type: System.String
      description: >-
        Optional message to display to added members in their

        invitation.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginAddFolderMember(sharedFolderId As String, members As IEnumerable(Of AddMember), quiet As Boolean = False, customMessage As String = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFolderMember*
  nameWithType.vb: SharingUserRoutes.BeginAddFolderMember(String, IEnumerable(Of AddMember), Boolean, String, AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFolderMember(System.String, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.AddMember), System.Boolean, System.String, System.AsyncCallback, System.Object)
  name.vb: BeginAddFolderMember(String, IEnumerable(Of AddMember), Boolean, String, AsyncCallback, Object)
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndAddFolderMember(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndAddFolderMember(System.IAsyncResult)
  id: EndAddFolderMember(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndAddFolderMember(IAsyncResult)
  nameWithType: SharingUserRoutes.EndAddFolderMember(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndAddFolderMember(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndAddFolderMember
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 264
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the add folder member route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public void EndAddFolderMember(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    content.vb: Public Sub EndAddFolderMember(asyncResult As IAsyncResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndAddFolderMember*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.AddFolderMemberError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckJobStatusAsync(Dropbox.Api.Async.PollArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckJobStatusAsync(Dropbox.Api.Async.PollArg)
  id: CheckJobStatusAsync(Dropbox.Api.Async.PollArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: CheckJobStatusAsync(PollArg)
  nameWithType: SharingUserRoutes.CheckJobStatusAsync(PollArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckJobStatusAsync(Dropbox.Api.Async.PollArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: CheckJobStatusAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 282
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Returns the status of an asynchronous job.</p>\n"
  example: []
  syntax:
    content: public Task<JobStatus> CheckJobStatusAsync(PollArg pollArg)
    parameters:
    - id: pollArg
      type: Dropbox.Api.Async.PollArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.JobStatus}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function CheckJobStatusAsync(pollArg As PollArg) As Task(Of JobStatus)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckJobStatusAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckJobStatus(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckJobStatus(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  id: BeginCheckJobStatus(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginCheckJobStatus(PollArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginCheckJobStatus(PollArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckJobStatus(Dropbox.Api.Async.PollArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginCheckJobStatus
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 296
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the check job status route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginCheckJobStatus(PollArg pollArg, AsyncCallback callback, object state = null)
    parameters:
    - id: pollArg
      type: Dropbox.Api.Async.PollArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginCheckJobStatus(pollArg As PollArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckJobStatus*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckJobStatusAsync(System.String)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckJobStatusAsync(System.String)
  id: CheckJobStatusAsync(System.String)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: CheckJobStatusAsync(String)
  nameWithType: SharingUserRoutes.CheckJobStatusAsync(String)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckJobStatusAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: CheckJobStatusAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 313
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Returns the status of an asynchronous job.</p>\n"
  example: []
  syntax:
    content: public Task<JobStatus> CheckJobStatusAsync(string asyncJobId)
    parameters:
    - id: asyncJobId
      type: System.String
      description: >-
        Id of the asynchronous job. This is the value of a

        response returned from the method that launched the job.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.JobStatus}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function CheckJobStatusAsync(asyncJobId As String) As Task(Of JobStatus)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckJobStatusAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckJobStatus(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckJobStatus(System.String,System.AsyncCallback,System.Object)
  id: BeginCheckJobStatus(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginCheckJobStatus(String, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginCheckJobStatus(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckJobStatus(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginCheckJobStatus
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 330
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the check job status route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginCheckJobStatus(string asyncJobId, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: asyncJobId
      type: System.String
      description: >-
        Id of the asynchronous job. This is the value of a

        response returned from the method that launched the job.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginCheckJobStatus(asyncJobId As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckJobStatus*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckJobStatus(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckJobStatus(System.IAsyncResult)
  id: EndCheckJobStatus(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndCheckJobStatus(IAsyncResult)
  nameWithType: SharingUserRoutes.EndCheckJobStatus(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckJobStatus(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndCheckJobStatus
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 349
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the check job status route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public JobStatus EndCheckJobStatus(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.JobStatus
      description: The response to the send request
    content.vb: Public Function EndCheckJobStatus(asyncResult As IAsyncResult) As JobStatus
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckJobStatus*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckRemoveMemberJobStatusAsync(Dropbox.Api.Async.PollArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckRemoveMemberJobStatusAsync(Dropbox.Api.Async.PollArg)
  id: CheckRemoveMemberJobStatusAsync(Dropbox.Api.Async.PollArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: CheckRemoveMemberJobStatusAsync(PollArg)
  nameWithType: SharingUserRoutes.CheckRemoveMemberJobStatusAsync(PollArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckRemoveMemberJobStatusAsync(Dropbox.Api.Async.PollArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: CheckRemoveMemberJobStatusAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 369
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Returns the status of an asynchronous job for sharing a folder.</p>\n"
  example: []
  syntax:
    content: public Task<RemoveMemberJobStatus> CheckRemoveMemberJobStatusAsync(PollArg pollArg)
    parameters:
    - id: pollArg
      type: Dropbox.Api.Async.PollArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.RemoveMemberJobStatus}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function CheckRemoveMemberJobStatusAsync(pollArg As PollArg) As Task(Of RemoveMemberJobStatus)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckRemoveMemberJobStatusAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckRemoveMemberJobStatus(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckRemoveMemberJobStatus(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  id: BeginCheckRemoveMemberJobStatus(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginCheckRemoveMemberJobStatus(PollArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginCheckRemoveMemberJobStatus(PollArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckRemoveMemberJobStatus(Dropbox.Api.Async.PollArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginCheckRemoveMemberJobStatus
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 384
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the check remove member job status\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginCheckRemoveMemberJobStatus(PollArg pollArg, AsyncCallback callback, object state = null)
    parameters:
    - id: pollArg
      type: Dropbox.Api.Async.PollArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginCheckRemoveMemberJobStatus(pollArg As PollArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckRemoveMemberJobStatus*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckRemoveMemberJobStatusAsync(System.String)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckRemoveMemberJobStatusAsync(System.String)
  id: CheckRemoveMemberJobStatusAsync(System.String)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: CheckRemoveMemberJobStatusAsync(String)
  nameWithType: SharingUserRoutes.CheckRemoveMemberJobStatusAsync(String)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckRemoveMemberJobStatusAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: CheckRemoveMemberJobStatusAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 401
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Returns the status of an asynchronous job for sharing a folder.</p>\n"
  example: []
  syntax:
    content: public Task<RemoveMemberJobStatus> CheckRemoveMemberJobStatusAsync(string asyncJobId)
    parameters:
    - id: asyncJobId
      type: System.String
      description: >-
        Id of the asynchronous job. This is the value of a

        response returned from the method that launched the job.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.RemoveMemberJobStatus}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function CheckRemoveMemberJobStatusAsync(asyncJobId As String) As Task(Of RemoveMemberJobStatus)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckRemoveMemberJobStatusAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckRemoveMemberJobStatus(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckRemoveMemberJobStatus(System.String,System.AsyncCallback,System.Object)
  id: BeginCheckRemoveMemberJobStatus(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginCheckRemoveMemberJobStatus(String, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginCheckRemoveMemberJobStatus(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckRemoveMemberJobStatus(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginCheckRemoveMemberJobStatus
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 419
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the check remove member job status\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginCheckRemoveMemberJobStatus(string asyncJobId, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: asyncJobId
      type: System.String
      description: >-
        Id of the asynchronous job. This is the value of a

        response returned from the method that launched the job.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginCheckRemoveMemberJobStatus(asyncJobId As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckRemoveMemberJobStatus*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckRemoveMemberJobStatus(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckRemoveMemberJobStatus(System.IAsyncResult)
  id: EndCheckRemoveMemberJobStatus(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndCheckRemoveMemberJobStatus(IAsyncResult)
  nameWithType: SharingUserRoutes.EndCheckRemoveMemberJobStatus(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckRemoveMemberJobStatus(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndCheckRemoveMemberJobStatus
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 438
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the check remove member job status\nroute to complete</p>\n"
  example: []
  syntax:
    content: public RemoveMemberJobStatus EndCheckRemoveMemberJobStatus(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.RemoveMemberJobStatus
      description: The response to the send request
    content.vb: Public Function EndCheckRemoveMemberJobStatus(asyncResult As IAsyncResult) As RemoveMemberJobStatus
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckRemoveMemberJobStatus*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckShareJobStatusAsync(Dropbox.Api.Async.PollArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckShareJobStatusAsync(Dropbox.Api.Async.PollArg)
  id: CheckShareJobStatusAsync(Dropbox.Api.Async.PollArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: CheckShareJobStatusAsync(PollArg)
  nameWithType: SharingUserRoutes.CheckShareJobStatusAsync(PollArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckShareJobStatusAsync(Dropbox.Api.Async.PollArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: CheckShareJobStatusAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 458
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Returns the status of an asynchronous job for sharing a folder.</p>\n"
  example: []
  syntax:
    content: public Task<ShareFolderJobStatus> CheckShareJobStatusAsync(PollArg pollArg)
    parameters:
    - id: pollArg
      type: Dropbox.Api.Async.PollArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ShareFolderJobStatus}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function CheckShareJobStatusAsync(pollArg As PollArg) As Task(Of ShareFolderJobStatus)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckShareJobStatusAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckShareJobStatus(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckShareJobStatus(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  id: BeginCheckShareJobStatus(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginCheckShareJobStatus(PollArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginCheckShareJobStatus(PollArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckShareJobStatus(Dropbox.Api.Async.PollArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginCheckShareJobStatus
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 472
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the check share job status route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginCheckShareJobStatus(PollArg pollArg, AsyncCallback callback, object state = null)
    parameters:
    - id: pollArg
      type: Dropbox.Api.Async.PollArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginCheckShareJobStatus(pollArg As PollArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckShareJobStatus*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckShareJobStatusAsync(System.String)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckShareJobStatusAsync(System.String)
  id: CheckShareJobStatusAsync(System.String)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: CheckShareJobStatusAsync(String)
  nameWithType: SharingUserRoutes.CheckShareJobStatusAsync(String)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckShareJobStatusAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: CheckShareJobStatusAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 489
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Returns the status of an asynchronous job for sharing a folder.</p>\n"
  example: []
  syntax:
    content: public Task<ShareFolderJobStatus> CheckShareJobStatusAsync(string asyncJobId)
    parameters:
    - id: asyncJobId
      type: System.String
      description: >-
        Id of the asynchronous job. This is the value of a

        response returned from the method that launched the job.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ShareFolderJobStatus}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function CheckShareJobStatusAsync(asyncJobId As String) As Task(Of ShareFolderJobStatus)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckShareJobStatusAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckShareJobStatus(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckShareJobStatus(System.String,System.AsyncCallback,System.Object)
  id: BeginCheckShareJobStatus(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginCheckShareJobStatus(String, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginCheckShareJobStatus(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckShareJobStatus(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginCheckShareJobStatus
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 506
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the check share job status route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginCheckShareJobStatus(string asyncJobId, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: asyncJobId
      type: System.String
      description: >-
        Id of the asynchronous job. This is the value of a

        response returned from the method that launched the job.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginCheckShareJobStatus(asyncJobId As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckShareJobStatus*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckShareJobStatus(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckShareJobStatus(System.IAsyncResult)
  id: EndCheckShareJobStatus(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndCheckShareJobStatus(IAsyncResult)
  nameWithType: SharingUserRoutes.EndCheckShareJobStatus(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckShareJobStatus(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndCheckShareJobStatus
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 525
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the check share job status route\nto complete</p>\n"
  example: []
  syntax:
    content: public ShareFolderJobStatus EndCheckShareJobStatus(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.ShareFolderJobStatus
      description: The response to the send request
    content.vb: Public Function EndCheckShareJobStatus(asyncResult As IAsyncResult) As ShareFolderJobStatus
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckShareJobStatus*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkAsync(Dropbox.Api.Sharing.CreateSharedLinkArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkAsync(Dropbox.Api.Sharing.CreateSharedLinkArg)
  id: CreateSharedLinkAsync(Dropbox.Api.Sharing.CreateSharedLinkArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: CreateSharedLinkAsync(CreateSharedLinkArg)
  nameWithType: SharingUserRoutes.CreateSharedLinkAsync(CreateSharedLinkArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkAsync(Dropbox.Api.Sharing.CreateSharedLinkArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: CreateSharedLinkAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 553
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Create a shared link.</p>\n<p>If a shared link already exists for the given path, that link is\nreturned.</p>\n<p>Previously, it was technically possible to break a shared link by moving or\nrenaming the corresponding file or folder. In the future, this will no longer be\nthe case, so your app shouldn&apos;t rely on this behavior. Instead, if your app needs\nto revoke a shared link, use <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.RevokeSharedLinkAsync(Dropbox.Api.Sharing.RevokeSharedLinkArg)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use CreateSharedLinkWithSettingsAsync instead.")]

      public Task<PathLinkMetadata> CreateSharedLinkAsync(CreateSharedLinkArg createSharedLinkArg)
    parameters:
    - id: createSharedLinkArg
      type: Dropbox.Api.Sharing.CreateSharedLinkArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.PathLinkMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated, please use CreateSharedLinkWithSettingsAsync instead.")>

      Public Function CreateSharedLinkAsync(createSharedLinkArg As CreateSharedLinkArg) As Task(Of PathLinkMetadata)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.CreateSharedLinkError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use CreateSharedLinkWithSettingsAsync instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLink(Dropbox.Api.Sharing.CreateSharedLinkArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLink(Dropbox.Api.Sharing.CreateSharedLinkArg,System.AsyncCallback,System.Object)
  id: BeginCreateSharedLink(Dropbox.Api.Sharing.CreateSharedLinkArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginCreateSharedLink(CreateSharedLinkArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginCreateSharedLink(CreateSharedLinkArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLink(Dropbox.Api.Sharing.CreateSharedLinkArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginCreateSharedLink
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 568
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the create shared link route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use BeginCreateSharedLinkWithSettings instead.")]

      public IAsyncResult BeginCreateSharedLink(CreateSharedLinkArg createSharedLinkArg, AsyncCallback callback, object state = null)
    parameters:
    - id: createSharedLinkArg
      type: Dropbox.Api.Sharing.CreateSharedLinkArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated, please use BeginCreateSharedLinkWithSettings instead.")>

      Public Function BeginCreateSharedLink(createSharedLinkArg As CreateSharedLinkArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLink*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use BeginCreateSharedLinkWithSettings instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkAsync(System.String,System.Boolean,Dropbox.Api.Sharing.PendingUploadMode)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkAsync(System.String,System.Boolean,Dropbox.Api.Sharing.PendingUploadMode)
  id: CreateSharedLinkAsync(System.String,System.Boolean,Dropbox.Api.Sharing.PendingUploadMode)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: CreateSharedLinkAsync(String, Boolean, PendingUploadMode)
  nameWithType: SharingUserRoutes.CreateSharedLinkAsync(String, Boolean, PendingUploadMode)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkAsync(System.String, System.Boolean, Dropbox.Api.Sharing.PendingUploadMode)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: CreateSharedLinkAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 598
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Create a shared link.</p>\n<p>If a shared link already exists for the given path, that link is\nreturned.</p>\n<p>Previously, it was technically possible to break a shared link by moving or\nrenaming the corresponding file or folder. In the future, this will no longer be\nthe case, so your app shouldn&apos;t rely on this behavior. Instead, if your app needs\nto revoke a shared link, use <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.RevokeSharedLinkAsync(Dropbox.Api.Sharing.RevokeSharedLinkArg)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use CreateSharedLinkWithSettingsAsync instead.")]

      public Task<PathLinkMetadata> CreateSharedLinkAsync(string path, bool shortUrl = false, PendingUploadMode pendingUpload = null)
    parameters:
    - id: path
      type: System.String
      description: The path to share.
    - id: shortUrl
      type: System.Boolean
      description: The short url
    - id: pendingUpload
      type: Dropbox.Api.Sharing.PendingUploadMode
      description: >-
        If it&apos;s okay to share a path that does not yet exist,

        set this to either <xref href="Dropbox.Api.Sharing.PendingUploadMode.File" data-throw-if-not-resolved="false"></xref> or

        <xref href="Dropbox.Api.Sharing.PendingUploadMode.Folder" data-throw-if-not-resolved="false"></xref> to indicate whether to

        assume it&apos;s a file or folder.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.PathLinkMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated, please use CreateSharedLinkWithSettingsAsync instead.")>

      Public Function CreateSharedLinkAsync(path As String, shortUrl As Boolean = False, pendingUpload As PendingUploadMode = Nothing) As Task(Of PathLinkMetadata)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.CreateSharedLinkError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use CreateSharedLinkWithSettingsAsync instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLink(System.String,System.Boolean,Dropbox.Api.Sharing.PendingUploadMode,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLink(System.String,System.Boolean,Dropbox.Api.Sharing.PendingUploadMode,System.AsyncCallback,System.Object)
  id: BeginCreateSharedLink(System.String,System.Boolean,Dropbox.Api.Sharing.PendingUploadMode,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginCreateSharedLink(String, Boolean, PendingUploadMode, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginCreateSharedLink(String, Boolean, PendingUploadMode, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLink(System.String, System.Boolean, Dropbox.Api.Sharing.PendingUploadMode, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginCreateSharedLink
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 624
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the create shared link route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use BeginCreateSharedLinkWithSettings instead.")]

      public IAsyncResult BeginCreateSharedLink(string path, bool shortUrl = false, PendingUploadMode pendingUpload = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: path
      type: System.String
      description: The path to share.
    - id: shortUrl
      type: System.Boolean
      description: The short url
    - id: pendingUpload
      type: Dropbox.Api.Sharing.PendingUploadMode
      description: >-
        If it&apos;s okay to share a path that does not yet exist,

        set this to either <xref href="Dropbox.Api.Sharing.PendingUploadMode.File" data-throw-if-not-resolved="false"></xref> or

        <xref href="Dropbox.Api.Sharing.PendingUploadMode.Folder" data-throw-if-not-resolved="false"></xref> to indicate whether to

        assume it&apos;s a file or folder.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated, please use BeginCreateSharedLinkWithSettings instead.")>

      Public Function BeginCreateSharedLink(path As String, shortUrl As Boolean = False, pendingUpload As PendingUploadMode = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLink*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use BeginCreateSharedLinkWithSettings instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCreateSharedLink(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCreateSharedLink(System.IAsyncResult)
  id: EndCreateSharedLink(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndCreateSharedLink(IAsyncResult)
  nameWithType: SharingUserRoutes.EndCreateSharedLink(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCreateSharedLink(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndCreateSharedLink
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 648
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the create shared link route to\ncomplete</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use EndCreateSharedLinkWithSettings instead.")]

      public PathLinkMetadata EndCreateSharedLink(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.PathLinkMetadata
      description: The response to the send request
    content.vb: >-
      <Obsolete("This function is deprecated, please use EndCreateSharedLinkWithSettings instead.")>

      Public Function EndCreateSharedLink(asyncResult As IAsyncResult) As PathLinkMetadata
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCreateSharedLink*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.CreateSharedLinkError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use EndCreateSharedLinkWithSettings instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkWithSettingsAsync(Dropbox.Api.Sharing.CreateSharedLinkWithSettingsArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkWithSettingsAsync(Dropbox.Api.Sharing.CreateSharedLinkWithSettingsArg)
  id: CreateSharedLinkWithSettingsAsync(Dropbox.Api.Sharing.CreateSharedLinkWithSettingsArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: CreateSharedLinkWithSettingsAsync(CreateSharedLinkWithSettingsArg)
  nameWithType: SharingUserRoutes.CreateSharedLinkWithSettingsAsync(CreateSharedLinkWithSettingsArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkWithSettingsAsync(Dropbox.Api.Sharing.CreateSharedLinkWithSettingsArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: CreateSharedLinkWithSettingsAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 672
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Create a shared link with custom settings. If no settings are given then the\ndefault visibility is <xref href=\"Dropbox.Api.Sharing.RequestedVisibility.Public\" data-throw-if-not-resolved=\"false\"></xref>\n(The resolved visibility, though, may depend on other aspects such as team and\nshared folder settings).</p>\n"
  example: []
  syntax:
    content: public Task<SharedLinkMetadata> CreateSharedLinkWithSettingsAsync(CreateSharedLinkWithSettingsArg createSharedLinkWithSettingsArg)
    parameters:
    - id: createSharedLinkWithSettingsArg
      type: Dropbox.Api.Sharing.CreateSharedLinkWithSettingsArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedLinkMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function CreateSharedLinkWithSettingsAsync(createSharedLinkWithSettingsArg As CreateSharedLinkWithSettingsArg) As Task(Of SharedLinkMetadata)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkWithSettingsAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.CreateSharedLinkWithSettingsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLinkWithSettings(Dropbox.Api.Sharing.CreateSharedLinkWithSettingsArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLinkWithSettings(Dropbox.Api.Sharing.CreateSharedLinkWithSettingsArg,System.AsyncCallback,System.Object)
  id: BeginCreateSharedLinkWithSettings(Dropbox.Api.Sharing.CreateSharedLinkWithSettingsArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginCreateSharedLinkWithSettings(CreateSharedLinkWithSettingsArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginCreateSharedLinkWithSettings(CreateSharedLinkWithSettingsArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLinkWithSettings(Dropbox.Api.Sharing.CreateSharedLinkWithSettingsArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginCreateSharedLinkWithSettings
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 687
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the create shared link with settings\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginCreateSharedLinkWithSettings(CreateSharedLinkWithSettingsArg createSharedLinkWithSettingsArg, AsyncCallback callback, object state = null)
    parameters:
    - id: createSharedLinkWithSettingsArg
      type: Dropbox.Api.Sharing.CreateSharedLinkWithSettingsArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginCreateSharedLinkWithSettings(createSharedLinkWithSettingsArg As CreateSharedLinkWithSettingsArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLinkWithSettings*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkWithSettingsAsync(System.String,Dropbox.Api.Sharing.SharedLinkSettings)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkWithSettingsAsync(System.String,Dropbox.Api.Sharing.SharedLinkSettings)
  id: CreateSharedLinkWithSettingsAsync(System.String,Dropbox.Api.Sharing.SharedLinkSettings)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: CreateSharedLinkWithSettingsAsync(String, SharedLinkSettings)
  nameWithType: SharingUserRoutes.CreateSharedLinkWithSettingsAsync(String, SharedLinkSettings)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkWithSettingsAsync(System.String, Dropbox.Api.Sharing.SharedLinkSettings)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: CreateSharedLinkWithSettingsAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 708
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Create a shared link with custom settings. If no settings are given then the\ndefault visibility is <xref href=\"Dropbox.Api.Sharing.RequestedVisibility.Public\" data-throw-if-not-resolved=\"false\"></xref>\n(The resolved visibility, though, may depend on other aspects such as team and\nshared folder settings).</p>\n"
  example: []
  syntax:
    content: public Task<SharedLinkMetadata> CreateSharedLinkWithSettingsAsync(string path, SharedLinkSettings settings = null)
    parameters:
    - id: path
      type: System.String
      description: The path to be shared by the shared link.
    - id: settings
      type: Dropbox.Api.Sharing.SharedLinkSettings
      description: >-
        The requested settings for the newly created shared

        link.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedLinkMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function CreateSharedLinkWithSettingsAsync(path As String, settings As SharedLinkSettings = Nothing) As Task(Of SharedLinkMetadata)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkWithSettingsAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.CreateSharedLinkWithSettingsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLinkWithSettings(System.String,Dropbox.Api.Sharing.SharedLinkSettings,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLinkWithSettings(System.String,Dropbox.Api.Sharing.SharedLinkSettings,System.AsyncCallback,System.Object)
  id: BeginCreateSharedLinkWithSettings(System.String,Dropbox.Api.Sharing.SharedLinkSettings,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginCreateSharedLinkWithSettings(String, SharedLinkSettings, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginCreateSharedLinkWithSettings(String, SharedLinkSettings, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLinkWithSettings(System.String, Dropbox.Api.Sharing.SharedLinkSettings, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginCreateSharedLinkWithSettings
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 729
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the create shared link with settings\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginCreateSharedLinkWithSettings(string path, SharedLinkSettings settings = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: path
      type: System.String
      description: The path to be shared by the shared link.
    - id: settings
      type: Dropbox.Api.Sharing.SharedLinkSettings
      description: >-
        The requested settings for the newly created shared

        link.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginCreateSharedLinkWithSettings(path As String, settings As SharedLinkSettings = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLinkWithSettings*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCreateSharedLinkWithSettings(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCreateSharedLinkWithSettings(System.IAsyncResult)
  id: EndCreateSharedLinkWithSettings(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndCreateSharedLinkWithSettings(IAsyncResult)
  nameWithType: SharingUserRoutes.EndCreateSharedLinkWithSettings(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCreateSharedLinkWithSettings(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndCreateSharedLinkWithSettings
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 750
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the create shared link with\nsettings route to complete</p>\n"
  example: []
  syntax:
    content: public SharedLinkMetadata EndCreateSharedLinkWithSettings(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.SharedLinkMetadata
      description: The response to the send request
    content.vb: Public Function EndCreateSharedLinkWithSettings(asyncResult As IAsyncResult) As SharedLinkMetadata
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCreateSharedLinkWithSettings*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.CreateSharedLinkWithSettingsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataAsync(Dropbox.Api.Sharing.GetFileMetadataArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataAsync(Dropbox.Api.Sharing.GetFileMetadataArg)
  id: GetFileMetadataAsync(Dropbox.Api.Sharing.GetFileMetadataArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: GetFileMetadataAsync(GetFileMetadataArg)
  nameWithType: SharingUserRoutes.GetFileMetadataAsync(GetFileMetadataArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataAsync(Dropbox.Api.Sharing.GetFileMetadataArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GetFileMetadataAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 770
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Returns shared file metadata.</p>\n"
  example: []
  syntax:
    content: public Task<SharedFileMetadata> GetFileMetadataAsync(GetFileMetadataArg getFileMetadataArg)
    parameters:
    - id: getFileMetadataArg
      type: Dropbox.Api.Sharing.GetFileMetadataArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFileMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GetFileMetadataAsync(getFileMetadataArg As GetFileMetadataArg) As Task(Of SharedFileMetadata)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.GetFileMetadataError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadata(Dropbox.Api.Sharing.GetFileMetadataArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadata(Dropbox.Api.Sharing.GetFileMetadataArg,System.AsyncCallback,System.Object)
  id: BeginGetFileMetadata(Dropbox.Api.Sharing.GetFileMetadataArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginGetFileMetadata(GetFileMetadataArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginGetFileMetadata(GetFileMetadataArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadata(Dropbox.Api.Sharing.GetFileMetadataArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGetFileMetadata
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 784
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the get file metadata route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGetFileMetadata(GetFileMetadataArg getFileMetadataArg, AsyncCallback callback, object state = null)
    parameters:
    - id: getFileMetadataArg
      type: Dropbox.Api.Sharing.GetFileMetadataArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGetFileMetadata(getFileMetadataArg As GetFileMetadataArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadata*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction})
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction})
  id: GetFileMetadataAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction})
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: GetFileMetadataAsync(String, IEnumerable<FileAction>)
  nameWithType: SharingUserRoutes.GetFileMetadataAsync(String, IEnumerable<FileAction>)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataAsync(System.String, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.FileAction>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GetFileMetadataAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 804
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Returns shared file metadata.</p>\n"
  example: []
  syntax:
    content: public Task<SharedFileMetadata> GetFileMetadataAsync(string file, IEnumerable<FileAction> actions = null)
    parameters:
    - id: file
      type: System.String
      description: The file to query.
    - id: actions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction}
      description: >-
        A list of `FileAction`s corresponding to `FilePermission`s

        that should appear in the  response&apos;s <xref href="Dropbox.Api.Sharing.SharedFileMetadata.Permissions" data-throw-if-not-resolved="false"></xref> field describing the

        actions the  authenticated user can perform on the file.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFileMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GetFileMetadataAsync(file As String, actions As IEnumerable(Of FileAction) = Nothing) As Task(Of SharedFileMetadata)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.GetFileMetadataError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: SharingUserRoutes.GetFileMetadataAsync(String, IEnumerable(Of FileAction))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataAsync(System.String, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.FileAction))
  name.vb: GetFileMetadataAsync(String, IEnumerable(Of FileAction))
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadata(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadata(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction},System.AsyncCallback,System.Object)
  id: BeginGetFileMetadata(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginGetFileMetadata(String, IEnumerable<FileAction>, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginGetFileMetadata(String, IEnumerable<FileAction>, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadata(System.String, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.FileAction>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGetFileMetadata
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 826
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the get file metadata route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGetFileMetadata(string file, IEnumerable<FileAction> actions = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: file
      type: System.String
      description: The file to query.
    - id: actions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction}
      description: >-
        A list of `FileAction`s corresponding to `FilePermission`s

        that should appear in the  response&apos;s <xref href="Dropbox.Api.Sharing.SharedFileMetadata.Permissions" data-throw-if-not-resolved="false"></xref> field describing the

        actions the  authenticated user can perform on the file.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGetFileMetadata(file As String, actions As IEnumerable(Of FileAction) = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadata*
  nameWithType.vb: SharingUserRoutes.BeginGetFileMetadata(String, IEnumerable(Of FileAction), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadata(System.String, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.FileAction), System.AsyncCallback, System.Object)
  name.vb: BeginGetFileMetadata(String, IEnumerable(Of FileAction), AsyncCallback, Object)
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFileMetadata(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFileMetadata(System.IAsyncResult)
  id: EndGetFileMetadata(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndGetFileMetadata(IAsyncResult)
  nameWithType: SharingUserRoutes.EndGetFileMetadata(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFileMetadata(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndGetFileMetadata
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 847
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the get file metadata route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public SharedFileMetadata EndGetFileMetadata(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.SharedFileMetadata
      description: The response to the send request
    content.vb: Public Function EndGetFileMetadata(asyncResult As IAsyncResult) As SharedFileMetadata
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFileMetadata*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.GetFileMetadataError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataBatchAsync(Dropbox.Api.Sharing.GetFileMetadataBatchArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataBatchAsync(Dropbox.Api.Sharing.GetFileMetadataBatchArg)
  id: GetFileMetadataBatchAsync(Dropbox.Api.Sharing.GetFileMetadataBatchArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: GetFileMetadataBatchAsync(GetFileMetadataBatchArg)
  nameWithType: SharingUserRoutes.GetFileMetadataBatchAsync(GetFileMetadataBatchArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataBatchAsync(Dropbox.Api.Sharing.GetFileMetadataBatchArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GetFileMetadataBatchAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 867
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Returns shared file metadata.</p>\n"
  example: []
  syntax:
    content: public Task<List<GetFileMetadataBatchResult>> GetFileMetadataBatchAsync(GetFileMetadataBatchArg getFileMetadataBatchArg)
    parameters:
    - id: getFileMetadataBatchArg
      type: Dropbox.Api.Sharing.GetFileMetadataBatchArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Sharing.GetFileMetadataBatchResult}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GetFileMetadataBatchAsync(getFileMetadataBatchArg As GetFileMetadataBatchArg) As Task(Of List(Of GetFileMetadataBatchResult))
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataBatchAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SharingUserError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadataBatch(Dropbox.Api.Sharing.GetFileMetadataBatchArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadataBatch(Dropbox.Api.Sharing.GetFileMetadataBatchArg,System.AsyncCallback,System.Object)
  id: BeginGetFileMetadataBatch(Dropbox.Api.Sharing.GetFileMetadataBatchArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginGetFileMetadataBatch(GetFileMetadataBatchArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginGetFileMetadataBatch(GetFileMetadataBatchArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadataBatch(Dropbox.Api.Sharing.GetFileMetadataBatchArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGetFileMetadataBatch
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 881
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the get file metadata batch route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGetFileMetadataBatch(GetFileMetadataBatchArg getFileMetadataBatchArg, AsyncCallback callback, object state = null)
    parameters:
    - id: getFileMetadataBatchArg
      type: Dropbox.Api.Sharing.GetFileMetadataBatchArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGetFileMetadataBatch(getFileMetadataBatchArg As GetFileMetadataBatchArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadataBatch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataBatchAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction})
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataBatchAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction})
  id: GetFileMetadataBatchAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction})
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: GetFileMetadataBatchAsync(IEnumerable<String>, IEnumerable<FileAction>)
  nameWithType: SharingUserRoutes.GetFileMetadataBatchAsync(IEnumerable<String>, IEnumerable<FileAction>)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataBatchAsync(System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.FileAction>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GetFileMetadataBatchAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 901
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Returns shared file metadata.</p>\n"
  example: []
  syntax:
    content: public Task<List<GetFileMetadataBatchResult>> GetFileMetadataBatchAsync(IEnumerable<string> files, IEnumerable<FileAction> actions = null)
    parameters:
    - id: files
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The files to query.
    - id: actions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction}
      description: >-
        A list of `FileAction`s corresponding to `FilePermission`s

        that should appear in the  response&apos;s <xref href="Dropbox.Api.Sharing.SharedFileMetadata.Permissions" data-throw-if-not-resolved="false"></xref> field describing the

        actions the  authenticated user can perform on the file.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Sharing.GetFileMetadataBatchResult}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GetFileMetadataBatchAsync(files As IEnumerable(Of String), actions As IEnumerable(Of FileAction) = Nothing) As Task(Of List(Of GetFileMetadataBatchResult))
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataBatchAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SharingUserError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: SharingUserRoutes.GetFileMetadataBatchAsync(IEnumerable(Of String), IEnumerable(Of FileAction))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataBatchAsync(System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.FileAction))
  name.vb: GetFileMetadataBatchAsync(IEnumerable(Of String), IEnumerable(Of FileAction))
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadataBatch(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadataBatch(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction},System.AsyncCallback,System.Object)
  id: BeginGetFileMetadataBatch(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginGetFileMetadataBatch(IEnumerable<String>, IEnumerable<FileAction>, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginGetFileMetadataBatch(IEnumerable<String>, IEnumerable<FileAction>, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadataBatch(System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.FileAction>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGetFileMetadataBatch
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 923
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the get file metadata batch route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGetFileMetadataBatch(IEnumerable<string> files, IEnumerable<FileAction> actions = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: files
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The files to query.
    - id: actions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction}
      description: >-
        A list of `FileAction`s corresponding to `FilePermission`s

        that should appear in the  response&apos;s <xref href="Dropbox.Api.Sharing.SharedFileMetadata.Permissions" data-throw-if-not-resolved="false"></xref> field describing the

        actions the  authenticated user can perform on the file.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGetFileMetadataBatch(files As IEnumerable(Of String), actions As IEnumerable(Of FileAction) = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadataBatch*
  nameWithType.vb: SharingUserRoutes.BeginGetFileMetadataBatch(IEnumerable(Of String), IEnumerable(Of FileAction), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadataBatch(System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.FileAction), System.AsyncCallback, System.Object)
  name.vb: BeginGetFileMetadataBatch(IEnumerable(Of String), IEnumerable(Of FileAction), AsyncCallback, Object)
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFileMetadataBatch(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFileMetadataBatch(System.IAsyncResult)
  id: EndGetFileMetadataBatch(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndGetFileMetadataBatch(IAsyncResult)
  nameWithType: SharingUserRoutes.EndGetFileMetadataBatch(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFileMetadataBatch(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndGetFileMetadataBatch
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 944
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the get file metadata batch route\nto complete</p>\n"
  example: []
  syntax:
    content: public List<GetFileMetadataBatchResult> EndGetFileMetadataBatch(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: System.Collections.Generic.List{Dropbox.Api.Sharing.GetFileMetadataBatchResult}
      description: The response to the send request
    content.vb: Public Function EndGetFileMetadataBatch(asyncResult As IAsyncResult) As List(Of GetFileMetadataBatchResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFileMetadataBatch*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SharingUserError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFolderMetadataAsync(Dropbox.Api.Sharing.GetMetadataArgs)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFolderMetadataAsync(Dropbox.Api.Sharing.GetMetadataArgs)
  id: GetFolderMetadataAsync(Dropbox.Api.Sharing.GetMetadataArgs)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: GetFolderMetadataAsync(GetMetadataArgs)
  nameWithType: SharingUserRoutes.GetFolderMetadataAsync(GetMetadataArgs)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFolderMetadataAsync(Dropbox.Api.Sharing.GetMetadataArgs)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GetFolderMetadataAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 964
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Returns shared folder metadata by its folder ID.</p>\n"
  example: []
  syntax:
    content: public Task<SharedFolderMetadata> GetFolderMetadataAsync(GetMetadataArgs getMetadataArgs)
    parameters:
    - id: getMetadataArgs
      type: Dropbox.Api.Sharing.GetMetadataArgs
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFolderMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GetFolderMetadataAsync(getMetadataArgs As GetMetadataArgs) As Task(Of SharedFolderMetadata)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFolderMetadataAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SharedFolderAccessError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFolderMetadata(Dropbox.Api.Sharing.GetMetadataArgs,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFolderMetadata(Dropbox.Api.Sharing.GetMetadataArgs,System.AsyncCallback,System.Object)
  id: BeginGetFolderMetadata(Dropbox.Api.Sharing.GetMetadataArgs,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginGetFolderMetadata(GetMetadataArgs, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginGetFolderMetadata(GetMetadataArgs, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFolderMetadata(Dropbox.Api.Sharing.GetMetadataArgs, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGetFolderMetadata
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 978
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the get folder metadata route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGetFolderMetadata(GetMetadataArgs getMetadataArgs, AsyncCallback callback, object state = null)
    parameters:
    - id: getMetadataArgs
      type: Dropbox.Api.Sharing.GetMetadataArgs
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGetFolderMetadata(getMetadataArgs As GetMetadataArgs, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFolderMetadata*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFolderMetadataAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction})
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFolderMetadataAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction})
  id: GetFolderMetadataAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction})
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: GetFolderMetadataAsync(String, IEnumerable<FolderAction>)
  nameWithType: SharingUserRoutes.GetFolderMetadataAsync(String, IEnumerable<FolderAction>)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFolderMetadataAsync(System.String, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.FolderAction>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GetFolderMetadataAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 998
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Returns shared folder metadata by its folder ID.</p>\n"
  example: []
  syntax:
    content: public Task<SharedFolderMetadata> GetFolderMetadataAsync(string sharedFolderId, IEnumerable<FolderAction> actions = null)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: actions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction}
      description: >-
        A list of `FolderAction`s corresponding to

        `FolderPermission`s that should appear in the  response&apos;s <xref href="Dropbox.Api.Sharing.SharedFolderMetadata.Permissions" data-throw-if-not-resolved="false"></xref> field describing the

        actions the  authenticated user can perform on the folder.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFolderMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GetFolderMetadataAsync(sharedFolderId As String, actions As IEnumerable(Of FolderAction) = Nothing) As Task(Of SharedFolderMetadata)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFolderMetadataAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SharedFolderAccessError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: SharingUserRoutes.GetFolderMetadataAsync(String, IEnumerable(Of FolderAction))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFolderMetadataAsync(System.String, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.FolderAction))
  name.vb: GetFolderMetadataAsync(String, IEnumerable(Of FolderAction))
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFolderMetadata(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFolderMetadata(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},System.AsyncCallback,System.Object)
  id: BeginGetFolderMetadata(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginGetFolderMetadata(String, IEnumerable<FolderAction>, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginGetFolderMetadata(String, IEnumerable<FolderAction>, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFolderMetadata(System.String, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.FolderAction>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGetFolderMetadata
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1020
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the get folder metadata route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGetFolderMetadata(string sharedFolderId, IEnumerable<FolderAction> actions = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: actions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction}
      description: >-
        A list of `FolderAction`s corresponding to

        `FolderPermission`s that should appear in the  response&apos;s <xref href="Dropbox.Api.Sharing.SharedFolderMetadata.Permissions" data-throw-if-not-resolved="false"></xref> field describing the

        actions the  authenticated user can perform on the folder.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGetFolderMetadata(sharedFolderId As String, actions As IEnumerable(Of FolderAction) = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFolderMetadata*
  nameWithType.vb: SharingUserRoutes.BeginGetFolderMetadata(String, IEnumerable(Of FolderAction), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFolderMetadata(System.String, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.FolderAction), System.AsyncCallback, System.Object)
  name.vb: BeginGetFolderMetadata(String, IEnumerable(Of FolderAction), AsyncCallback, Object)
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFolderMetadata(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFolderMetadata(System.IAsyncResult)
  id: EndGetFolderMetadata(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndGetFolderMetadata(IAsyncResult)
  nameWithType: SharingUserRoutes.EndGetFolderMetadata(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFolderMetadata(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndGetFolderMetadata
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1041
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the get folder metadata route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public SharedFolderMetadata EndGetFolderMetadata(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.SharedFolderMetadata
      description: The response to the send request
    content.vb: Public Function EndGetFolderMetadata(asyncResult As IAsyncResult) As SharedFolderMetadata
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFolderMetadata*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SharedFolderAccessError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkFileAsync(Dropbox.Api.Sharing.GetSharedLinkMetadataArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkFileAsync(Dropbox.Api.Sharing.GetSharedLinkMetadataArg)
  id: GetSharedLinkFileAsync(Dropbox.Api.Sharing.GetSharedLinkMetadataArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: GetSharedLinkFileAsync(GetSharedLinkMetadataArg)
  nameWithType: SharingUserRoutes.GetSharedLinkFileAsync(GetSharedLinkMetadataArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkFileAsync(Dropbox.Api.Sharing.GetSharedLinkMetadataArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GetSharedLinkFileAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1061
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Download the shared link&apos;s file from a user&apos;s Dropbox.</p>\n"
  example: []
  syntax:
    content: public Task<IDownloadResponse<SharedLinkMetadata>> GetSharedLinkFileAsync(GetSharedLinkMetadataArg getSharedLinkMetadataArg)
    parameters:
    - id: getSharedLinkMetadataArg
      type: Dropbox.Api.Sharing.GetSharedLinkMetadataArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Stone.IDownloadResponse{Dropbox.Api.Sharing.SharedLinkMetadata}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GetSharedLinkFileAsync(getSharedLinkMetadataArg As GetSharedLinkMetadataArg) As Task(Of IDownloadResponse(Of SharedLinkMetadata))
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkFileAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.GetSharedLinkFileError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkFile(Dropbox.Api.Sharing.GetSharedLinkMetadataArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkFile(Dropbox.Api.Sharing.GetSharedLinkMetadataArg,System.AsyncCallback,System.Object)
  id: BeginGetSharedLinkFile(Dropbox.Api.Sharing.GetSharedLinkMetadataArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginGetSharedLinkFile(GetSharedLinkMetadataArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginGetSharedLinkFile(GetSharedLinkMetadataArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkFile(Dropbox.Api.Sharing.GetSharedLinkMetadataArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGetSharedLinkFile
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1075
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the get shared link file route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGetSharedLinkFile(GetSharedLinkMetadataArg getSharedLinkMetadataArg, AsyncCallback callback, object state = null)
    parameters:
    - id: getSharedLinkMetadataArg
      type: Dropbox.Api.Sharing.GetSharedLinkMetadataArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGetSharedLinkFile(getSharedLinkMetadataArg As GetSharedLinkMetadataArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkFileAsync(System.String,System.String,System.String)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkFileAsync(System.String,System.String,System.String)
  id: GetSharedLinkFileAsync(System.String,System.String,System.String)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: GetSharedLinkFileAsync(String, String, String)
  nameWithType: SharingUserRoutes.GetSharedLinkFileAsync(String, String, String)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkFileAsync(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GetSharedLinkFileAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1096
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Download the shared link&apos;s file from a user&apos;s Dropbox.</p>\n"
  example: []
  syntax:
    content: public Task<IDownloadResponse<SharedLinkMetadata>> GetSharedLinkFileAsync(string url, string path = null, string linkPassword = null)
    parameters:
    - id: url
      type: System.String
      description: URL of the shared link.
    - id: path
      type: System.String
      description: >-
        If the shared link is to a folder, this parameter can be used to

        retrieve the metadata for a specific file or sub-folder in this folder. A relative

        path should be used.
    - id: linkPassword
      type: System.String
      description: >-
        If the shared link has a password, this parameter can be

        used.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Stone.IDownloadResponse{Dropbox.Api.Sharing.SharedLinkMetadata}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GetSharedLinkFileAsync(url As String, path As String = Nothing, linkPassword As String = Nothing) As Task(Of IDownloadResponse(Of SharedLinkMetadata))
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkFileAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.GetSharedLinkFileError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkFile(System.String,System.String,System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkFile(System.String,System.String,System.String,System.AsyncCallback,System.Object)
  id: BeginGetSharedLinkFile(System.String,System.String,System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginGetSharedLinkFile(String, String, String, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginGetSharedLinkFile(String, String, String, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkFile(System.String, System.String, System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGetSharedLinkFile
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1121
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the get shared link file route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGetSharedLinkFile(string url, string path = null, string linkPassword = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: url
      type: System.String
      description: URL of the shared link.
    - id: path
      type: System.String
      description: >-
        If the shared link is to a folder, this parameter can be used to

        retrieve the metadata for a specific file or sub-folder in this folder. A relative

        path should be used.
    - id: linkPassword
      type: System.String
      description: >-
        If the shared link has a password, this parameter can be

        used.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGetSharedLinkFile(url As String, path As String = Nothing, linkPassword As String = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinkFile(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinkFile(System.IAsyncResult)
  id: EndGetSharedLinkFile(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndGetSharedLinkFile(IAsyncResult)
  nameWithType: SharingUserRoutes.EndGetSharedLinkFile(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinkFile(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndGetSharedLinkFile
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1144
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the get shared link file route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public IDownloadResponse<SharedLinkMetadata> EndGetSharedLinkFile(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Stone.IDownloadResponse{Dropbox.Api.Sharing.SharedLinkMetadata}
      description: The response to the send request
    content.vb: Public Function EndGetSharedLinkFile(asyncResult As IAsyncResult) As IDownloadResponse(Of SharedLinkMetadata)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinkFile*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.GetSharedLinkFileError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkMetadataAsync(Dropbox.Api.Sharing.GetSharedLinkMetadataArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkMetadataAsync(Dropbox.Api.Sharing.GetSharedLinkMetadataArg)
  id: GetSharedLinkMetadataAsync(Dropbox.Api.Sharing.GetSharedLinkMetadataArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: GetSharedLinkMetadataAsync(GetSharedLinkMetadataArg)
  nameWithType: SharingUserRoutes.GetSharedLinkMetadataAsync(GetSharedLinkMetadataArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkMetadataAsync(Dropbox.Api.Sharing.GetSharedLinkMetadataArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GetSharedLinkMetadataAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1164
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Get the shared link&apos;s metadata.</p>\n"
  example: []
  syntax:
    content: public Task<SharedLinkMetadata> GetSharedLinkMetadataAsync(GetSharedLinkMetadataArg getSharedLinkMetadataArg)
    parameters:
    - id: getSharedLinkMetadataArg
      type: Dropbox.Api.Sharing.GetSharedLinkMetadataArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedLinkMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GetSharedLinkMetadataAsync(getSharedLinkMetadataArg As GetSharedLinkMetadataArg) As Task(Of SharedLinkMetadata)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkMetadataAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SharedLinkError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkMetadata(Dropbox.Api.Sharing.GetSharedLinkMetadataArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkMetadata(Dropbox.Api.Sharing.GetSharedLinkMetadataArg,System.AsyncCallback,System.Object)
  id: BeginGetSharedLinkMetadata(Dropbox.Api.Sharing.GetSharedLinkMetadataArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginGetSharedLinkMetadata(GetSharedLinkMetadataArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginGetSharedLinkMetadata(GetSharedLinkMetadataArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkMetadata(Dropbox.Api.Sharing.GetSharedLinkMetadataArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGetSharedLinkMetadata
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1178
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the get shared link metadata route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGetSharedLinkMetadata(GetSharedLinkMetadataArg getSharedLinkMetadataArg, AsyncCallback callback, object state = null)
    parameters:
    - id: getSharedLinkMetadataArg
      type: Dropbox.Api.Sharing.GetSharedLinkMetadataArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGetSharedLinkMetadata(getSharedLinkMetadataArg As GetSharedLinkMetadataArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkMetadata*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkMetadataAsync(System.String,System.String,System.String)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkMetadataAsync(System.String,System.String,System.String)
  id: GetSharedLinkMetadataAsync(System.String,System.String,System.String)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: GetSharedLinkMetadataAsync(String, String, String)
  nameWithType: SharingUserRoutes.GetSharedLinkMetadataAsync(String, String, String)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkMetadataAsync(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GetSharedLinkMetadataAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1199
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Get the shared link&apos;s metadata.</p>\n"
  example: []
  syntax:
    content: public Task<SharedLinkMetadata> GetSharedLinkMetadataAsync(string url, string path = null, string linkPassword = null)
    parameters:
    - id: url
      type: System.String
      description: URL of the shared link.
    - id: path
      type: System.String
      description: >-
        If the shared link is to a folder, this parameter can be used to

        retrieve the metadata for a specific file or sub-folder in this folder. A relative

        path should be used.
    - id: linkPassword
      type: System.String
      description: >-
        If the shared link has a password, this parameter can be

        used.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedLinkMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GetSharedLinkMetadataAsync(url As String, path As String = Nothing, linkPassword As String = Nothing) As Task(Of SharedLinkMetadata)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkMetadataAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SharedLinkError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkMetadata(System.String,System.String,System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkMetadata(System.String,System.String,System.String,System.AsyncCallback,System.Object)
  id: BeginGetSharedLinkMetadata(System.String,System.String,System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginGetSharedLinkMetadata(String, String, String, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginGetSharedLinkMetadata(String, String, String, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkMetadata(System.String, System.String, System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGetSharedLinkMetadata
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1224
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the get shared link metadata route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGetSharedLinkMetadata(string url, string path = null, string linkPassword = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: url
      type: System.String
      description: URL of the shared link.
    - id: path
      type: System.String
      description: >-
        If the shared link is to a folder, this parameter can be used to

        retrieve the metadata for a specific file or sub-folder in this folder. A relative

        path should be used.
    - id: linkPassword
      type: System.String
      description: >-
        If the shared link has a password, this parameter can be

        used.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGetSharedLinkMetadata(url As String, path As String = Nothing, linkPassword As String = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkMetadata*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinkMetadata(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinkMetadata(System.IAsyncResult)
  id: EndGetSharedLinkMetadata(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndGetSharedLinkMetadata(IAsyncResult)
  nameWithType: SharingUserRoutes.EndGetSharedLinkMetadata(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinkMetadata(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndGetSharedLinkMetadata
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1247
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the get shared link metadata route\nto complete</p>\n"
  example: []
  syntax:
    content: public SharedLinkMetadata EndGetSharedLinkMetadata(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.SharedLinkMetadata
      description: The response to the send request
    content.vb: Public Function EndGetSharedLinkMetadata(asyncResult As IAsyncResult) As SharedLinkMetadata
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinkMetadata*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SharedLinkError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinksAsync(Dropbox.Api.Sharing.GetSharedLinksArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinksAsync(Dropbox.Api.Sharing.GetSharedLinksArg)
  id: GetSharedLinksAsync(Dropbox.Api.Sharing.GetSharedLinksArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: GetSharedLinksAsync(GetSharedLinksArg)
  nameWithType: SharingUserRoutes.GetSharedLinksAsync(GetSharedLinksArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinksAsync(Dropbox.Api.Sharing.GetSharedLinksArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GetSharedLinksAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1272
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Returns a list of <xref href=\"Dropbox.Api.Sharing.LinkMetadata\" data-throw-if-not-resolved=\"false\"></xref> objects for this user,\nincluding collection links.</p>\n<p>If no path is given, returns a list of all shared links for the current user,\nincluding collection links, up to a maximum of 1000 links.</p>\n<p>If a non-empty path is given, returns a list of all shared links that allow\naccess to the given path.  Collection links are never returned in this case.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use ListSharedLinksAsync instead.")]

      public Task<GetSharedLinksResult> GetSharedLinksAsync(GetSharedLinksArg getSharedLinksArg)
    parameters:
    - id: getSharedLinksArg
      type: Dropbox.Api.Sharing.GetSharedLinksArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.GetSharedLinksResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated, please use ListSharedLinksAsync instead.")>

      Public Function GetSharedLinksAsync(getSharedLinksArg As GetSharedLinksArg) As Task(Of GetSharedLinksResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinksAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.GetSharedLinksError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use ListSharedLinksAsync instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinks(Dropbox.Api.Sharing.GetSharedLinksArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinks(Dropbox.Api.Sharing.GetSharedLinksArg,System.AsyncCallback,System.Object)
  id: BeginGetSharedLinks(Dropbox.Api.Sharing.GetSharedLinksArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginGetSharedLinks(GetSharedLinksArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginGetSharedLinks(GetSharedLinksArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinks(Dropbox.Api.Sharing.GetSharedLinksArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGetSharedLinks
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1287
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the get shared links route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use BeginListSharedLinks instead.")]

      public IAsyncResult BeginGetSharedLinks(GetSharedLinksArg getSharedLinksArg, AsyncCallback callback, object state = null)
    parameters:
    - id: getSharedLinksArg
      type: Dropbox.Api.Sharing.GetSharedLinksArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated, please use BeginListSharedLinks instead.")>

      Public Function BeginGetSharedLinks(getSharedLinksArg As GetSharedLinksArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinks*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use BeginListSharedLinks instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinksAsync(System.String)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinksAsync(System.String)
  id: GetSharedLinksAsync(System.String)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: GetSharedLinksAsync(String)
  nameWithType: SharingUserRoutes.GetSharedLinksAsync(String)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinksAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GetSharedLinksAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1311
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Returns a list of <xref href=\"Dropbox.Api.Sharing.LinkMetadata\" data-throw-if-not-resolved=\"false\"></xref> objects for this user,\nincluding collection links.</p>\n<p>If no path is given, returns a list of all shared links for the current user,\nincluding collection links, up to a maximum of 1000 links.</p>\n<p>If a non-empty path is given, returns a list of all shared links that allow\naccess to the given path.  Collection links are never returned in this case.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use ListSharedLinksAsync instead.")]

      public Task<GetSharedLinksResult> GetSharedLinksAsync(string path = null)
    parameters:
    - id: path
      type: System.String
      description: >-
        See <xref href="Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinksAsync(Dropbox.Api.Sharing.GetSharedLinksArg)" data-throw-if-not-resolved="false"></xref>

        description.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.GetSharedLinksResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated, please use ListSharedLinksAsync instead.")>

      Public Function GetSharedLinksAsync(path As String = Nothing) As Task(Of GetSharedLinksResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinksAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.GetSharedLinksError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use ListSharedLinksAsync instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinks(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinks(System.String,System.AsyncCallback,System.Object)
  id: BeginGetSharedLinks(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginGetSharedLinks(String, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginGetSharedLinks(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinks(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGetSharedLinks
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1330
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the get shared links route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use BeginListSharedLinks instead.")]

      public IAsyncResult BeginGetSharedLinks(string path = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: path
      type: System.String
      description: >-
        See <xref href="Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinksAsync(Dropbox.Api.Sharing.GetSharedLinksArg)" data-throw-if-not-resolved="false"></xref>

        description.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated, please use BeginListSharedLinks instead.")>

      Public Function BeginGetSharedLinks(path As String = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinks*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use BeginListSharedLinks instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinks(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinks(System.IAsyncResult)
  id: EndGetSharedLinks(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndGetSharedLinks(IAsyncResult)
  nameWithType: SharingUserRoutes.EndGetSharedLinks(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinks(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndGetSharedLinks
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1350
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the get shared links route to\ncomplete</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use EndListSharedLinks instead.")]

      public GetSharedLinksResult EndGetSharedLinks(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.GetSharedLinksResult
      description: The response to the send request
    content.vb: >-
      <Obsolete("This function is deprecated, please use EndListSharedLinks instead.")>

      Public Function EndGetSharedLinks(asyncResult As IAsyncResult) As GetSharedLinksResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinks*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.GetSharedLinksError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use EndListSharedLinks instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersAsync(Dropbox.Api.Sharing.ListFileMembersArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersAsync(Dropbox.Api.Sharing.ListFileMembersArg)
  id: ListFileMembersAsync(Dropbox.Api.Sharing.ListFileMembersArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListFileMembersAsync(ListFileMembersArg)
  nameWithType: SharingUserRoutes.ListFileMembersAsync(ListFileMembersArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersAsync(Dropbox.Api.Sharing.ListFileMembersArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListFileMembersAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1372
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Use to obtain the members who have been invited to a file, both inherited and\nuninherited members.</p>\n"
  example: []
  syntax:
    content: public Task<SharedFileMembers> ListFileMembersAsync(ListFileMembersArg listFileMembersArg)
    parameters:
    - id: listFileMembersArg
      type: Dropbox.Api.Sharing.ListFileMembersArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFileMembers}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListFileMembersAsync(listFileMembersArg As ListFileMembersArg) As Task(Of SharedFileMembers)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListFileMembersError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembers(Dropbox.Api.Sharing.ListFileMembersArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembers(Dropbox.Api.Sharing.ListFileMembersArg,System.AsyncCallback,System.Object)
  id: BeginListFileMembers(Dropbox.Api.Sharing.ListFileMembersArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListFileMembers(ListFileMembersArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListFileMembers(ListFileMembersArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembers(Dropbox.Api.Sharing.ListFileMembersArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListFileMembers
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1386
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list file members route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListFileMembers(ListFileMembersArg listFileMembersArg, AsyncCallback callback, object state = null)
    parameters:
    - id: listFileMembersArg
      type: Dropbox.Api.Sharing.ListFileMembersArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListFileMembers(listFileMembersArg As ListFileMembersArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembers*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction},System.Boolean,System.UInt32)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction},System.Boolean,System.UInt32)
  id: ListFileMembersAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction},System.Boolean,System.UInt32)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListFileMembersAsync(String, IEnumerable<MemberAction>, Boolean, UInt32)
  nameWithType: SharingUserRoutes.ListFileMembersAsync(String, IEnumerable<MemberAction>, Boolean, UInt32)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersAsync(System.String, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.MemberAction>, System.Boolean, System.UInt32)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListFileMembersAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1409
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Use to obtain the members who have been invited to a file, both inherited and\nuninherited members.</p>\n"
  example: []
  syntax:
    content: public Task<SharedFileMembers> ListFileMembersAsync(string file, IEnumerable<MemberAction> actions = null, bool includeInherited = true, uint limit = 100U)
    parameters:
    - id: file
      type: System.String
      description: The file for which you want to see members.
    - id: actions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction}
      description: >-
        The actions for which to return permissions on a

        member.
    - id: includeInherited
      type: System.Boolean
      description: >-
        Whether to include members who only have access from

        a parent shared folder.
    - id: limit
      type: System.UInt32
      description: >-
        Number of members to return max per query. Defaults to 100 if

        no limit is specified.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFileMembers}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListFileMembersAsync(file As String, actions As IEnumerable(Of MemberAction) = Nothing, includeInherited As Boolean = True, limit As UInteger = 100UI) As Task(Of SharedFileMembers)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListFileMembersError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: SharingUserRoutes.ListFileMembersAsync(String, IEnumerable(Of MemberAction), Boolean, UInt32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersAsync(System.String, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.MemberAction), System.Boolean, System.UInt32)
  name.vb: ListFileMembersAsync(String, IEnumerable(Of MemberAction), Boolean, UInt32)
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembers(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction},System.Boolean,System.UInt32,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembers(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction},System.Boolean,System.UInt32,System.AsyncCallback,System.Object)
  id: BeginListFileMembers(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction},System.Boolean,System.UInt32,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListFileMembers(String, IEnumerable<MemberAction>, Boolean, UInt32, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListFileMembers(String, IEnumerable<MemberAction>, Boolean, UInt32, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembers(System.String, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.MemberAction>, System.Boolean, System.UInt32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListFileMembers
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1437
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list file members route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListFileMembers(string file, IEnumerable<MemberAction> actions = null, bool includeInherited = true, uint limit = 100U, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: file
      type: System.String
      description: The file for which you want to see members.
    - id: actions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction}
      description: >-
        The actions for which to return permissions on a

        member.
    - id: includeInherited
      type: System.Boolean
      description: >-
        Whether to include members who only have access from

        a parent shared folder.
    - id: limit
      type: System.UInt32
      description: >-
        Number of members to return max per query. Defaults to 100 if

        no limit is specified.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListFileMembers(file As String, actions As IEnumerable(Of MemberAction) = Nothing, includeInherited As Boolean = True, limit As UInteger = 100UI, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembers*
  nameWithType.vb: SharingUserRoutes.BeginListFileMembers(String, IEnumerable(Of MemberAction), Boolean, UInt32, AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembers(System.String, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.MemberAction), System.Boolean, System.UInt32, System.AsyncCallback, System.Object)
  name.vb: BeginListFileMembers(String, IEnumerable(Of MemberAction), Boolean, UInt32, AsyncCallback, Object)
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembers(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembers(System.IAsyncResult)
  id: EndListFileMembers(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndListFileMembers(IAsyncResult)
  nameWithType: SharingUserRoutes.EndListFileMembers(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembers(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndListFileMembers
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1462
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the list file members route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public SharedFileMembers EndListFileMembers(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.SharedFileMembers
      description: The response to the send request
    content.vb: Public Function EndListFileMembers(asyncResult As IAsyncResult) As SharedFileMembers
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembers*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListFileMembersError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersBatchAsync(Dropbox.Api.Sharing.ListFileMembersBatchArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersBatchAsync(Dropbox.Api.Sharing.ListFileMembersBatchArg)
  id: ListFileMembersBatchAsync(Dropbox.Api.Sharing.ListFileMembersBatchArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListFileMembersBatchAsync(ListFileMembersBatchArg)
  nameWithType: SharingUserRoutes.ListFileMembersBatchAsync(ListFileMembersBatchArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersBatchAsync(Dropbox.Api.Sharing.ListFileMembersBatchArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListFileMembersBatchAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1486
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Get members of multiple files at once. The arguments to this route are more\nlimited, and the limit on query result size per file is more strict. To customize\nthe results more, use the individual file endpoint.</p>\n<p>Inherited users and groups are not included in the result, and permissions\nare not returned for this endpoint.</p>\n"
  example: []
  syntax:
    content: public Task<List<ListFileMembersBatchResult>> ListFileMembersBatchAsync(ListFileMembersBatchArg listFileMembersBatchArg)
    parameters:
    - id: listFileMembersBatchArg
      type: Dropbox.Api.Sharing.ListFileMembersBatchArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Sharing.ListFileMembersBatchResult}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListFileMembersBatchAsync(listFileMembersBatchArg As ListFileMembersBatchArg) As Task(Of List(Of ListFileMembersBatchResult))
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersBatchAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SharingUserError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersBatch(Dropbox.Api.Sharing.ListFileMembersBatchArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersBatch(Dropbox.Api.Sharing.ListFileMembersBatchArg,System.AsyncCallback,System.Object)
  id: BeginListFileMembersBatch(Dropbox.Api.Sharing.ListFileMembersBatchArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListFileMembersBatch(ListFileMembersBatchArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListFileMembersBatch(ListFileMembersBatchArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersBatch(Dropbox.Api.Sharing.ListFileMembersBatchArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListFileMembersBatch
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1500
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list file members batch route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListFileMembersBatch(ListFileMembersBatchArg listFileMembersBatchArg, AsyncCallback callback, object state = null)
    parameters:
    - id: listFileMembersBatchArg
      type: Dropbox.Api.Sharing.ListFileMembersBatchArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListFileMembersBatch(listFileMembersBatchArg As ListFileMembersBatchArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersBatch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersBatchAsync(System.Collections.Generic.IEnumerable{System.String},System.UInt32)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersBatchAsync(System.Collections.Generic.IEnumerable{System.String},System.UInt32)
  id: ListFileMembersBatchAsync(System.Collections.Generic.IEnumerable{System.String},System.UInt32)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListFileMembersBatchAsync(IEnumerable<String>, UInt32)
  nameWithType: SharingUserRoutes.ListFileMembersBatchAsync(IEnumerable<String>, UInt32)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersBatchAsync(System.Collections.Generic.IEnumerable<System.String>, System.UInt32)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListFileMembersBatchAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1522
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Get members of multiple files at once. The arguments to this route are more\nlimited, and the limit on query result size per file is more strict. To customize\nthe results more, use the individual file endpoint.</p>\n<p>Inherited users and groups are not included in the result, and permissions\nare not returned for this endpoint.</p>\n"
  example: []
  syntax:
    content: public Task<List<ListFileMembersBatchResult>> ListFileMembersBatchAsync(IEnumerable<string> files, uint limit = 10U)
    parameters:
    - id: files
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Files for which to return members.
    - id: limit
      type: System.UInt32
      description: >-
        Number of members to return max per query. Defaults to 10 if no

        limit is specified.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Sharing.ListFileMembersBatchResult}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListFileMembersBatchAsync(files As IEnumerable(Of String), limit As UInteger = 10UI) As Task(Of List(Of ListFileMembersBatchResult))
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersBatchAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SharingUserError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: SharingUserRoutes.ListFileMembersBatchAsync(IEnumerable(Of String), UInt32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersBatchAsync(System.Collections.Generic.IEnumerable(Of System.String), System.UInt32)
  name.vb: ListFileMembersBatchAsync(IEnumerable(Of String), UInt32)
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersBatch(System.Collections.Generic.IEnumerable{System.String},System.UInt32,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersBatch(System.Collections.Generic.IEnumerable{System.String},System.UInt32,System.AsyncCallback,System.Object)
  id: BeginListFileMembersBatch(System.Collections.Generic.IEnumerable{System.String},System.UInt32,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListFileMembersBatch(IEnumerable<String>, UInt32, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListFileMembersBatch(IEnumerable<String>, UInt32, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersBatch(System.Collections.Generic.IEnumerable<System.String>, System.UInt32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListFileMembersBatch
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1542
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list file members batch route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListFileMembersBatch(IEnumerable<string> files, uint limit = 10U, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: files
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Files for which to return members.
    - id: limit
      type: System.UInt32
      description: >-
        Number of members to return max per query. Defaults to 10 if no

        limit is specified.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListFileMembersBatch(files As IEnumerable(Of String), limit As UInteger = 10UI, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersBatch*
  nameWithType.vb: SharingUserRoutes.BeginListFileMembersBatch(IEnumerable(Of String), UInt32, AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersBatch(System.Collections.Generic.IEnumerable(Of System.String), System.UInt32, System.AsyncCallback, System.Object)
  name.vb: BeginListFileMembersBatch(IEnumerable(Of String), UInt32, AsyncCallback, Object)
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembersBatch(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembersBatch(System.IAsyncResult)
  id: EndListFileMembersBatch(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndListFileMembersBatch(IAsyncResult)
  nameWithType: SharingUserRoutes.EndListFileMembersBatch(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembersBatch(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndListFileMembersBatch
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1563
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the list file members batch route\nto complete</p>\n"
  example: []
  syntax:
    content: public List<ListFileMembersBatchResult> EndListFileMembersBatch(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: System.Collections.Generic.List{Dropbox.Api.Sharing.ListFileMembersBatchResult}
      description: The response to the send request
    content.vb: Public Function EndListFileMembersBatch(asyncResult As IAsyncResult) As List(Of ListFileMembersBatchResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembersBatch*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SharingUserError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersContinueAsync(Dropbox.Api.Sharing.ListFileMembersContinueArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersContinueAsync(Dropbox.Api.Sharing.ListFileMembersContinueArg)
  id: ListFileMembersContinueAsync(Dropbox.Api.Sharing.ListFileMembersContinueArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListFileMembersContinueAsync(ListFileMembersContinueArg)
  nameWithType: SharingUserRoutes.ListFileMembersContinueAsync(ListFileMembersContinueArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersContinueAsync(Dropbox.Api.Sharing.ListFileMembersContinueArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListFileMembersContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1586
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Once a cursor has been retrieved from <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersAsync(Dropbox.Api.Sharing.ListFileMembersArg)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersBatchAsync(Dropbox.Api.Sharing.ListFileMembersBatchArg)\" data-throw-if-not-resolved=\"false\"></xref>,\nuse this to paginate through all shared file members.</p>\n"
  example: []
  syntax:
    content: public Task<SharedFileMembers> ListFileMembersContinueAsync(ListFileMembersContinueArg listFileMembersContinueArg)
    parameters:
    - id: listFileMembersContinueArg
      type: Dropbox.Api.Sharing.ListFileMembersContinueArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFileMembers}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListFileMembersContinueAsync(listFileMembersContinueArg As ListFileMembersContinueArg) As Task(Of SharedFileMembers)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListFileMembersContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersContinue(Dropbox.Api.Sharing.ListFileMembersContinueArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersContinue(Dropbox.Api.Sharing.ListFileMembersContinueArg,System.AsyncCallback,System.Object)
  id: BeginListFileMembersContinue(Dropbox.Api.Sharing.ListFileMembersContinueArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListFileMembersContinue(ListFileMembersContinueArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListFileMembersContinue(ListFileMembersContinueArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersContinue(Dropbox.Api.Sharing.ListFileMembersContinueArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListFileMembersContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1600
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list file members continue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListFileMembersContinue(ListFileMembersContinueArg listFileMembersContinueArg, AsyncCallback callback, object state = null)
    parameters:
    - id: listFileMembersContinueArg
      type: Dropbox.Api.Sharing.ListFileMembersContinueArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListFileMembersContinue(listFileMembersContinueArg As ListFileMembersContinueArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersContinueAsync(System.String)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersContinueAsync(System.String)
  id: ListFileMembersContinueAsync(System.String)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListFileMembersContinueAsync(String)
  nameWithType: SharingUserRoutes.ListFileMembersContinueAsync(String)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersContinueAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListFileMembersContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1624
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Once a cursor has been retrieved from <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersAsync(Dropbox.Api.Sharing.ListFileMembersArg)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersBatchAsync(Dropbox.Api.Sharing.ListFileMembersBatchArg)\" data-throw-if-not-resolved=\"false\"></xref>,\nuse this to paginate through all shared file members.</p>\n"
  example: []
  syntax:
    content: public Task<SharedFileMembers> ListFileMembersContinueAsync(string cursor)
    parameters:
    - id: cursor
      type: System.String
      description: The cursor returned by your last call to <xref href="Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersAsync(Dropbox.Api.Sharing.ListFileMembersArg)" data-throw-if-not-resolved="false"></xref>, <xref href="Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersContinueAsync(Dropbox.Api.Sharing.ListFileMembersContinueArg)" data-throw-if-not-resolved="false"></xref>, or <xref href="Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersBatchAsync(Dropbox.Api.Sharing.ListFileMembersBatchArg)" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFileMembers}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListFileMembersContinueAsync(cursor As String) As Task(Of SharedFileMembers)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListFileMembersContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersContinue(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersContinue(System.String,System.AsyncCallback,System.Object)
  id: BeginListFileMembersContinue(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListFileMembersContinue(String, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListFileMembersContinue(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersContinue(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListFileMembersContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1645
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list file members continue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListFileMembersContinue(string cursor, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: cursor
      type: System.String
      description: The cursor returned by your last call to <xref href="Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersAsync(Dropbox.Api.Sharing.ListFileMembersArg)" data-throw-if-not-resolved="false"></xref>, <xref href="Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersContinueAsync(Dropbox.Api.Sharing.ListFileMembersContinueArg)" data-throw-if-not-resolved="false"></xref>, or <xref href="Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersBatchAsync(Dropbox.Api.Sharing.ListFileMembersBatchArg)" data-throw-if-not-resolved="false"></xref>.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListFileMembersContinue(cursor As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembersContinue(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembersContinue(System.IAsyncResult)
  id: EndListFileMembersContinue(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndListFileMembersContinue(IAsyncResult)
  nameWithType: SharingUserRoutes.EndListFileMembersContinue(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembersContinue(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndListFileMembersContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1664
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the list file members continue\nroute to complete</p>\n"
  example: []
  syntax:
    content: public SharedFileMembers EndListFileMembersContinue(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.SharedFileMembers
      description: The response to the send request
    content.vb: Public Function EndListFileMembersContinue(asyncResult As IAsyncResult) As SharedFileMembers
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembersContinue*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListFileMembersContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersAsync(Dropbox.Api.Sharing.ListFolderMembersArgs)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersAsync(Dropbox.Api.Sharing.ListFolderMembersArgs)
  id: ListFolderMembersAsync(Dropbox.Api.Sharing.ListFolderMembersArgs)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListFolderMembersAsync(ListFolderMembersArgs)
  nameWithType: SharingUserRoutes.ListFolderMembersAsync(ListFolderMembersArgs)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersAsync(Dropbox.Api.Sharing.ListFolderMembersArgs)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListFolderMembersAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1684
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Returns shared folder membership by its folder ID.</p>\n"
  example: []
  syntax:
    content: public Task<SharedFolderMembers> ListFolderMembersAsync(ListFolderMembersArgs listFolderMembersArgs)
    parameters:
    - id: listFolderMembersArgs
      type: Dropbox.Api.Sharing.ListFolderMembersArgs
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFolderMembers}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListFolderMembersAsync(listFolderMembersArgs As ListFolderMembersArgs) As Task(Of SharedFolderMembers)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SharedFolderAccessError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembers(Dropbox.Api.Sharing.ListFolderMembersArgs,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembers(Dropbox.Api.Sharing.ListFolderMembersArgs,System.AsyncCallback,System.Object)
  id: BeginListFolderMembers(Dropbox.Api.Sharing.ListFolderMembersArgs,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListFolderMembers(ListFolderMembersArgs, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListFolderMembers(ListFolderMembersArgs, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembers(Dropbox.Api.Sharing.ListFolderMembersArgs, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListFolderMembers
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1698
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list folder members route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListFolderMembers(ListFolderMembersArgs listFolderMembersArgs, AsyncCallback callback, object state = null)
    parameters:
    - id: listFolderMembersArgs
      type: Dropbox.Api.Sharing.ListFolderMembersArgs
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListFolderMembers(listFolderMembersArgs As ListFolderMembersArgs, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembers*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction},System.UInt32)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction},System.UInt32)
  id: ListFolderMembersAsync(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction},System.UInt32)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListFolderMembersAsync(String, IEnumerable<MemberAction>, UInt32)
  nameWithType: SharingUserRoutes.ListFolderMembersAsync(String, IEnumerable<MemberAction>, UInt32)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersAsync(System.String, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.MemberAction>, System.UInt32)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListFolderMembersAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1720
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Returns shared folder membership by its folder ID.</p>\n"
  example: []
  syntax:
    content: public Task<SharedFolderMembers> ListFolderMembersAsync(string sharedFolderId, IEnumerable<MemberAction> actions = null, uint limit = 1000U)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: actions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction}
      description: >-
        This is a list indicating whether each returned member will

        include a boolean value <xref href="Dropbox.Api.Sharing.MemberPermission.Allow" data-throw-if-not-resolved="false"></xref>

        that describes whether the current user can perform the MemberAction on the

        member.
    - id: limit
      type: System.UInt32
      description: >-
        The maximum number of results that include members, groups and

        invitees to return per request.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFolderMembers}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListFolderMembersAsync(sharedFolderId As String, actions As IEnumerable(Of MemberAction) = Nothing, limit As UInteger = 1000UI) As Task(Of SharedFolderMembers)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SharedFolderAccessError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: SharingUserRoutes.ListFolderMembersAsync(String, IEnumerable(Of MemberAction), UInt32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersAsync(System.String, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.MemberAction), System.UInt32)
  name.vb: ListFolderMembersAsync(String, IEnumerable(Of MemberAction), UInt32)
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembers(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction},System.UInt32,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembers(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction},System.UInt32,System.AsyncCallback,System.Object)
  id: BeginListFolderMembers(System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction},System.UInt32,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListFolderMembers(String, IEnumerable<MemberAction>, UInt32, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListFolderMembers(String, IEnumerable<MemberAction>, UInt32, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembers(System.String, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.MemberAction>, System.UInt32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListFolderMembers
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1746
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list folder members route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListFolderMembers(string sharedFolderId, IEnumerable<MemberAction> actions = null, uint limit = 1000U, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: actions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction}
      description: >-
        This is a list indicating whether each returned member will

        include a boolean value <xref href="Dropbox.Api.Sharing.MemberPermission.Allow" data-throw-if-not-resolved="false"></xref>

        that describes whether the current user can perform the MemberAction on the

        member.
    - id: limit
      type: System.UInt32
      description: >-
        The maximum number of results that include members, groups and

        invitees to return per request.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListFolderMembers(sharedFolderId As String, actions As IEnumerable(Of MemberAction) = Nothing, limit As UInteger = 1000UI, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembers*
  nameWithType.vb: SharingUserRoutes.BeginListFolderMembers(String, IEnumerable(Of MemberAction), UInt32, AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembers(System.String, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.MemberAction), System.UInt32, System.AsyncCallback, System.Object)
  name.vb: BeginListFolderMembers(String, IEnumerable(Of MemberAction), UInt32, AsyncCallback, Object)
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolderMembers(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolderMembers(System.IAsyncResult)
  id: EndListFolderMembers(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndListFolderMembers(IAsyncResult)
  nameWithType: SharingUserRoutes.EndListFolderMembers(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolderMembers(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndListFolderMembers
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1769
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the list folder members route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public SharedFolderMembers EndListFolderMembers(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.SharedFolderMembers
      description: The response to the send request
    content.vb: Public Function EndListFolderMembers(asyncResult As IAsyncResult) As SharedFolderMembers
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolderMembers*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SharedFolderAccessError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersContinueAsync(Dropbox.Api.Sharing.ListFolderMembersContinueArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersContinueAsync(Dropbox.Api.Sharing.ListFolderMembersContinueArg)
  id: ListFolderMembersContinueAsync(Dropbox.Api.Sharing.ListFolderMembersContinueArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListFolderMembersContinueAsync(ListFolderMembersContinueArg)
  nameWithType: SharingUserRoutes.ListFolderMembersContinueAsync(ListFolderMembersContinueArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersContinueAsync(Dropbox.Api.Sharing.ListFolderMembersContinueArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListFolderMembersContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1791
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Once a cursor has been retrieved from <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersAsync(Dropbox.Api.Sharing.ListFolderMembersArgs)\" data-throw-if-not-resolved=\"false\"></xref>, use\nthis to paginate through all shared folder members.</p>\n"
  example: []
  syntax:
    content: public Task<SharedFolderMembers> ListFolderMembersContinueAsync(ListFolderMembersContinueArg listFolderMembersContinueArg)
    parameters:
    - id: listFolderMembersContinueArg
      type: Dropbox.Api.Sharing.ListFolderMembersContinueArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFolderMembers}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListFolderMembersContinueAsync(listFolderMembersContinueArg As ListFolderMembersContinueArg) As Task(Of SharedFolderMembers)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListFolderMembersContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembersContinue(Dropbox.Api.Sharing.ListFolderMembersContinueArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembersContinue(Dropbox.Api.Sharing.ListFolderMembersContinueArg,System.AsyncCallback,System.Object)
  id: BeginListFolderMembersContinue(Dropbox.Api.Sharing.ListFolderMembersContinueArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListFolderMembersContinue(ListFolderMembersContinueArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListFolderMembersContinue(ListFolderMembersContinueArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembersContinue(Dropbox.Api.Sharing.ListFolderMembersContinueArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListFolderMembersContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1805
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list folder members continue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListFolderMembersContinue(ListFolderMembersContinueArg listFolderMembersContinueArg, AsyncCallback callback, object state = null)
    parameters:
    - id: listFolderMembersContinueArg
      type: Dropbox.Api.Sharing.ListFolderMembersContinueArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListFolderMembersContinue(listFolderMembersContinueArg As ListFolderMembersContinueArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembersContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersContinueAsync(System.String)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersContinueAsync(System.String)
  id: ListFolderMembersContinueAsync(System.String)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListFolderMembersContinueAsync(String)
  nameWithType: SharingUserRoutes.ListFolderMembersContinueAsync(String)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersContinueAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListFolderMembersContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1827
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Once a cursor has been retrieved from <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersAsync(Dropbox.Api.Sharing.ListFolderMembersArgs)\" data-throw-if-not-resolved=\"false\"></xref>, use\nthis to paginate through all shared folder members.</p>\n"
  example: []
  syntax:
    content: public Task<SharedFolderMembers> ListFolderMembersContinueAsync(string cursor)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        The cursor returned by your last call to <xref href="Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersAsync(Dropbox.Api.Sharing.ListFolderMembersArgs)" data-throw-if-not-resolved="false"></xref> or

        <xref href="Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersContinueAsync(Dropbox.Api.Sharing.ListFolderMembersContinueArg)" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFolderMembers}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListFolderMembersContinueAsync(cursor As String) As Task(Of SharedFolderMembers)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListFolderMembersContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembersContinue(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembersContinue(System.String,System.AsyncCallback,System.Object)
  id: BeginListFolderMembersContinue(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListFolderMembersContinue(String, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListFolderMembersContinue(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembersContinue(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListFolderMembersContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1847
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list folder members continue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListFolderMembersContinue(string cursor, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        The cursor returned by your last call to <xref href="Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersAsync(Dropbox.Api.Sharing.ListFolderMembersArgs)" data-throw-if-not-resolved="false"></xref> or

        <xref href="Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersContinueAsync(Dropbox.Api.Sharing.ListFolderMembersContinueArg)" data-throw-if-not-resolved="false"></xref>.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListFolderMembersContinue(cursor As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembersContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolderMembersContinue(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolderMembersContinue(System.IAsyncResult)
  id: EndListFolderMembersContinue(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndListFolderMembersContinue(IAsyncResult)
  nameWithType: SharingUserRoutes.EndListFolderMembersContinue(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolderMembersContinue(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndListFolderMembersContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1866
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the list folder members continue\nroute to complete</p>\n"
  example: []
  syntax:
    content: public SharedFolderMembers EndListFolderMembersContinue(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.SharedFolderMembers
      description: The response to the send request
    content.vb: Public Function EndListFolderMembersContinue(asyncResult As IAsyncResult) As SharedFolderMembers
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolderMembersContinue*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListFolderMembersContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)
  id: ListFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListFoldersAsync(ListFoldersArgs)
  nameWithType: SharingUserRoutes.ListFoldersAsync(ListFoldersArgs)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListFoldersAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1883
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Return the list of all shared folders the current user has access to.</p>\n"
  example: []
  syntax:
    content: public Task<ListFoldersResult> ListFoldersAsync(ListFoldersArgs listFoldersArgs)
    parameters:
    - id: listFoldersArgs
      type: Dropbox.Api.Sharing.ListFoldersArgs
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ListFoldersResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListFoldersAsync(listFoldersArgs As ListFoldersArgs) As Task(Of ListFoldersResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolders(Dropbox.Api.Sharing.ListFoldersArgs,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolders(Dropbox.Api.Sharing.ListFoldersArgs,System.AsyncCallback,System.Object)
  id: BeginListFolders(Dropbox.Api.Sharing.ListFoldersArgs,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListFolders(ListFoldersArgs, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListFolders(ListFoldersArgs, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolders(Dropbox.Api.Sharing.ListFoldersArgs, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListFolders
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1897
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list folders route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListFolders(ListFoldersArgs listFoldersArgs, AsyncCallback callback, object state = null)
    parameters:
    - id: listFoldersArgs
      type: Dropbox.Api.Sharing.ListFoldersArgs
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListFolders(listFoldersArgs As ListFoldersArgs, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolders*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersAsync(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction})
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersAsync(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction})
  id: ListFoldersAsync(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction})
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListFoldersAsync(UInt32, IEnumerable<FolderAction>)
  nameWithType: SharingUserRoutes.ListFoldersAsync(UInt32, IEnumerable<FolderAction>)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersAsync(System.UInt32, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.FolderAction>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListFoldersAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1914
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Return the list of all shared folders the current user has access to.</p>\n"
  example: []
  syntax:
    content: public Task<ListFoldersResult> ListFoldersAsync(uint limit = 1000U, IEnumerable<FolderAction> actions = null)
    parameters:
    - id: limit
      type: System.UInt32
      description: The maximum number of results to return per request.
    - id: actions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction}
      description: >-
        A list of `FolderAction`s corresponding to

        `FolderPermission`s that should appear in the  response&apos;s <xref href="Dropbox.Api.Sharing.SharedFolderMetadata.Permissions" data-throw-if-not-resolved="false"></xref> field describing the

        actions the  authenticated user can perform on the folder.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ListFoldersResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListFoldersAsync(limit As UInteger = 1000UI, actions As IEnumerable(Of FolderAction) = Nothing) As Task(Of ListFoldersResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersAsync*
  nameWithType.vb: SharingUserRoutes.ListFoldersAsync(UInt32, IEnumerable(Of FolderAction))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersAsync(System.UInt32, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.FolderAction))
  name.vb: ListFoldersAsync(UInt32, IEnumerable(Of FolderAction))
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolders(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolders(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},System.AsyncCallback,System.Object)
  id: BeginListFolders(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListFolders(UInt32, IEnumerable<FolderAction>, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListFolders(UInt32, IEnumerable<FolderAction>, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolders(System.UInt32, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.FolderAction>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListFolders
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1936
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list folders route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListFolders(uint limit = 1000U, IEnumerable<FolderAction> actions = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: limit
      type: System.UInt32
      description: The maximum number of results to return per request.
    - id: actions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction}
      description: >-
        A list of `FolderAction`s corresponding to

        `FolderPermission`s that should appear in the  response&apos;s <xref href="Dropbox.Api.Sharing.SharedFolderMetadata.Permissions" data-throw-if-not-resolved="false"></xref> field describing the

        actions the  authenticated user can perform on the folder.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListFolders(limit As UInteger = 1000UI, actions As IEnumerable(Of FolderAction) = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolders*
  nameWithType.vb: SharingUserRoutes.BeginListFolders(UInt32, IEnumerable(Of FolderAction), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolders(System.UInt32, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.FolderAction), System.AsyncCallback, System.Object)
  name.vb: BeginListFolders(UInt32, IEnumerable(Of FolderAction), AsyncCallback, Object)
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolders(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolders(System.IAsyncResult)
  id: EndListFolders(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndListFolders(IAsyncResult)
  nameWithType: SharingUserRoutes.EndListFolders(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolders(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndListFolders
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1954
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the list folders route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public ListFoldersResult EndListFolders(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.ListFoldersResult
      description: The response to the send request
    content.vb: Public Function EndListFolders(asyncResult As IAsyncResult) As ListFoldersResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolders*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersContinueAsync(Dropbox.Api.Sharing.ListFoldersContinueArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersContinueAsync(Dropbox.Api.Sharing.ListFoldersContinueArg)
  id: ListFoldersContinueAsync(Dropbox.Api.Sharing.ListFoldersContinueArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListFoldersContinueAsync(ListFoldersContinueArg)
  nameWithType: SharingUserRoutes.ListFoldersContinueAsync(ListFoldersContinueArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersContinueAsync(Dropbox.Api.Sharing.ListFoldersContinueArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListFoldersContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1979
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Once a cursor has been retrieved from <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)\" data-throw-if-not-resolved=\"false\"></xref>, use this\nto paginate through all shared folders. The cursor must come from a previous call\nto <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)\" data-throw-if-not-resolved=\"false\"></xref> or\n<xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersContinueAsync(Dropbox.Api.Sharing.ListFoldersContinueArg)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public Task<ListFoldersResult> ListFoldersContinueAsync(ListFoldersContinueArg listFoldersContinueArg)
    parameters:
    - id: listFoldersContinueArg
      type: Dropbox.Api.Sharing.ListFoldersContinueArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ListFoldersResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListFoldersContinueAsync(listFoldersContinueArg As ListFoldersContinueArg) As Task(Of ListFoldersResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListFoldersContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFoldersContinue(Dropbox.Api.Sharing.ListFoldersContinueArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFoldersContinue(Dropbox.Api.Sharing.ListFoldersContinueArg,System.AsyncCallback,System.Object)
  id: BeginListFoldersContinue(Dropbox.Api.Sharing.ListFoldersContinueArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListFoldersContinue(ListFoldersContinueArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListFoldersContinue(ListFoldersContinueArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFoldersContinue(Dropbox.Api.Sharing.ListFoldersContinueArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListFoldersContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 1993
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list folders continue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListFoldersContinue(ListFoldersContinueArg listFoldersContinueArg, AsyncCallback callback, object state = null)
    parameters:
    - id: listFoldersContinueArg
      type: Dropbox.Api.Sharing.ListFoldersContinueArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListFoldersContinue(listFoldersContinueArg As ListFoldersContinueArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFoldersContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersContinueAsync(System.String)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersContinueAsync(System.String)
  id: ListFoldersContinueAsync(System.String)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListFoldersContinueAsync(String)
  nameWithType: SharingUserRoutes.ListFoldersContinueAsync(String)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersContinueAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListFoldersContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2015
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Once a cursor has been retrieved from <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)\" data-throw-if-not-resolved=\"false\"></xref>, use this\nto paginate through all shared folders. The cursor must come from a previous call\nto <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)\" data-throw-if-not-resolved=\"false\"></xref> or\n<xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersContinueAsync(Dropbox.Api.Sharing.ListFoldersContinueArg)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public Task<ListFoldersResult> ListFoldersContinueAsync(string cursor)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        The cursor returned by the previous API call specified in the

        endpoint description.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ListFoldersResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListFoldersContinueAsync(cursor As String) As Task(Of ListFoldersResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListFoldersContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFoldersContinue(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFoldersContinue(System.String,System.AsyncCallback,System.Object)
  id: BeginListFoldersContinue(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListFoldersContinue(String, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListFoldersContinue(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFoldersContinue(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListFoldersContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2032
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list folders continue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListFoldersContinue(string cursor, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        The cursor returned by the previous API call specified in the

        endpoint description.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListFoldersContinue(cursor As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFoldersContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFoldersContinue(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFoldersContinue(System.IAsyncResult)
  id: EndListFoldersContinue(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndListFoldersContinue(IAsyncResult)
  nameWithType: SharingUserRoutes.EndListFoldersContinue(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFoldersContinue(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndListFoldersContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2051
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the list folders continue route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public ListFoldersResult EndListFoldersContinue(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.ListFoldersResult
      description: The response to the send request
    content.vb: Public Function EndListFoldersContinue(asyncResult As IAsyncResult) As ListFoldersResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFoldersContinue*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListFoldersContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)
  id: ListMountableFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListMountableFoldersAsync(ListFoldersArgs)
  nameWithType: SharingUserRoutes.ListMountableFoldersAsync(ListFoldersArgs)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListMountableFoldersAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2069
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Return the list of all shared folders the current user can mount or\nunmount.</p>\n"
  example: []
  syntax:
    content: public Task<ListFoldersResult> ListMountableFoldersAsync(ListFoldersArgs listFoldersArgs)
    parameters:
    - id: listFoldersArgs
      type: Dropbox.Api.Sharing.ListFoldersArgs
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ListFoldersResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListMountableFoldersAsync(listFoldersArgs As ListFoldersArgs) As Task(Of ListFoldersResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFolders(Dropbox.Api.Sharing.ListFoldersArgs,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFolders(Dropbox.Api.Sharing.ListFoldersArgs,System.AsyncCallback,System.Object)
  id: BeginListMountableFolders(Dropbox.Api.Sharing.ListFoldersArgs,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListMountableFolders(ListFoldersArgs, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListMountableFolders(ListFoldersArgs, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFolders(Dropbox.Api.Sharing.ListFoldersArgs, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListMountableFolders
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2083
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list mountable folders route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListMountableFolders(ListFoldersArgs listFoldersArgs, AsyncCallback callback, object state = null)
    parameters:
    - id: listFoldersArgs
      type: Dropbox.Api.Sharing.ListFoldersArgs
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListMountableFolders(listFoldersArgs As ListFoldersArgs, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFolders*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersAsync(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction})
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersAsync(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction})
  id: ListMountableFoldersAsync(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction})
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListMountableFoldersAsync(UInt32, IEnumerable<FolderAction>)
  nameWithType: SharingUserRoutes.ListMountableFoldersAsync(UInt32, IEnumerable<FolderAction>)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersAsync(System.UInt32, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.FolderAction>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListMountableFoldersAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2101
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Return the list of all shared folders the current user can mount or\nunmount.</p>\n"
  example: []
  syntax:
    content: public Task<ListFoldersResult> ListMountableFoldersAsync(uint limit = 1000U, IEnumerable<FolderAction> actions = null)
    parameters:
    - id: limit
      type: System.UInt32
      description: The maximum number of results to return per request.
    - id: actions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction}
      description: >-
        A list of `FolderAction`s corresponding to

        `FolderPermission`s that should appear in the  response&apos;s <xref href="Dropbox.Api.Sharing.SharedFolderMetadata.Permissions" data-throw-if-not-resolved="false"></xref> field describing the

        actions the  authenticated user can perform on the folder.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ListFoldersResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListMountableFoldersAsync(limit As UInteger = 1000UI, actions As IEnumerable(Of FolderAction) = Nothing) As Task(Of ListFoldersResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersAsync*
  nameWithType.vb: SharingUserRoutes.ListMountableFoldersAsync(UInt32, IEnumerable(Of FolderAction))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersAsync(System.UInt32, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.FolderAction))
  name.vb: ListMountableFoldersAsync(UInt32, IEnumerable(Of FolderAction))
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFolders(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFolders(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},System.AsyncCallback,System.Object)
  id: BeginListMountableFolders(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListMountableFolders(UInt32, IEnumerable<FolderAction>, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListMountableFolders(UInt32, IEnumerable<FolderAction>, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFolders(System.UInt32, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.FolderAction>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListMountableFolders
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2123
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list mountable folders route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListMountableFolders(uint limit = 1000U, IEnumerable<FolderAction> actions = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: limit
      type: System.UInt32
      description: The maximum number of results to return per request.
    - id: actions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction}
      description: >-
        A list of `FolderAction`s corresponding to

        `FolderPermission`s that should appear in the  response&apos;s <xref href="Dropbox.Api.Sharing.SharedFolderMetadata.Permissions" data-throw-if-not-resolved="false"></xref> field describing the

        actions the  authenticated user can perform on the folder.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListMountableFolders(limit As UInteger = 1000UI, actions As IEnumerable(Of FolderAction) = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFolders*
  nameWithType.vb: SharingUserRoutes.BeginListMountableFolders(UInt32, IEnumerable(Of FolderAction), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFolders(System.UInt32, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.FolderAction), System.AsyncCallback, System.Object)
  name.vb: BeginListMountableFolders(UInt32, IEnumerable(Of FolderAction), AsyncCallback, Object)
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListMountableFolders(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListMountableFolders(System.IAsyncResult)
  id: EndListMountableFolders(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndListMountableFolders(IAsyncResult)
  nameWithType: SharingUserRoutes.EndListMountableFolders(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListMountableFolders(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndListMountableFolders
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2141
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the list mountable folders route\nto complete</p>\n"
  example: []
  syntax:
    content: public ListFoldersResult EndListMountableFolders(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.ListFoldersResult
      description: The response to the send request
    content.vb: Public Function EndListMountableFolders(asyncResult As IAsyncResult) As ListFoldersResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListMountableFolders*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersContinueAsync(Dropbox.Api.Sharing.ListFoldersContinueArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersContinueAsync(Dropbox.Api.Sharing.ListFoldersContinueArg)
  id: ListMountableFoldersContinueAsync(Dropbox.Api.Sharing.ListFoldersContinueArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListMountableFoldersContinueAsync(ListFoldersContinueArg)
  nameWithType: SharingUserRoutes.ListMountableFoldersContinueAsync(ListFoldersContinueArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersContinueAsync(Dropbox.Api.Sharing.ListFoldersContinueArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListMountableFoldersContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2168
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Once a cursor has been retrieved from <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)\" data-throw-if-not-resolved=\"false\"></xref>,\nuse this to paginate through all mountable shared folders. The cursor must come\nfrom a previous call to <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)\" data-throw-if-not-resolved=\"false\"></xref> or\n<xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersContinueAsync(Dropbox.Api.Sharing.ListFoldersContinueArg)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public Task<ListFoldersResult> ListMountableFoldersContinueAsync(ListFoldersContinueArg listFoldersContinueArg)
    parameters:
    - id: listFoldersContinueArg
      type: Dropbox.Api.Sharing.ListFoldersContinueArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ListFoldersResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListMountableFoldersContinueAsync(listFoldersContinueArg As ListFoldersContinueArg) As Task(Of ListFoldersResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListFoldersContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFoldersContinue(Dropbox.Api.Sharing.ListFoldersContinueArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFoldersContinue(Dropbox.Api.Sharing.ListFoldersContinueArg,System.AsyncCallback,System.Object)
  id: BeginListMountableFoldersContinue(Dropbox.Api.Sharing.ListFoldersContinueArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListMountableFoldersContinue(ListFoldersContinueArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListMountableFoldersContinue(ListFoldersContinueArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFoldersContinue(Dropbox.Api.Sharing.ListFoldersContinueArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListMountableFoldersContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2183
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list mountable folders continue\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListMountableFoldersContinue(ListFoldersContinueArg listFoldersContinueArg, AsyncCallback callback, object state = null)
    parameters:
    - id: listFoldersContinueArg
      type: Dropbox.Api.Sharing.ListFoldersContinueArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListMountableFoldersContinue(listFoldersContinueArg As ListFoldersContinueArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFoldersContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersContinueAsync(System.String)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersContinueAsync(System.String)
  id: ListMountableFoldersContinueAsync(System.String)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListMountableFoldersContinueAsync(String)
  nameWithType: SharingUserRoutes.ListMountableFoldersContinueAsync(String)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersContinueAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListMountableFoldersContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2207
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Once a cursor has been retrieved from <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)\" data-throw-if-not-resolved=\"false\"></xref>,\nuse this to paginate through all mountable shared folders. The cursor must come\nfrom a previous call to <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)\" data-throw-if-not-resolved=\"false\"></xref> or\n<xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersContinueAsync(Dropbox.Api.Sharing.ListFoldersContinueArg)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public Task<ListFoldersResult> ListMountableFoldersContinueAsync(string cursor)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        The cursor returned by the previous API call specified in the

        endpoint description.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ListFoldersResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListMountableFoldersContinueAsync(cursor As String) As Task(Of ListFoldersResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListFoldersContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFoldersContinue(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFoldersContinue(System.String,System.AsyncCallback,System.Object)
  id: BeginListMountableFoldersContinue(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListMountableFoldersContinue(String, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListMountableFoldersContinue(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFoldersContinue(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListMountableFoldersContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2225
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list mountable folders continue\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListMountableFoldersContinue(string cursor, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        The cursor returned by the previous API call specified in the

        endpoint description.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListMountableFoldersContinue(cursor As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFoldersContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListMountableFoldersContinue(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListMountableFoldersContinue(System.IAsyncResult)
  id: EndListMountableFoldersContinue(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndListMountableFoldersContinue(IAsyncResult)
  nameWithType: SharingUserRoutes.EndListMountableFoldersContinue(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListMountableFoldersContinue(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndListMountableFoldersContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2244
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the list mountable folders\ncontinue route to complete</p>\n"
  example: []
  syntax:
    content: public ListFoldersResult EndListMountableFoldersContinue(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.ListFoldersResult
      description: The response to the send request
    content.vb: Public Function EndListMountableFoldersContinue(asyncResult As IAsyncResult) As ListFoldersResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListMountableFoldersContinue*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListFoldersContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesAsync(Dropbox.Api.Sharing.ListFilesArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesAsync(Dropbox.Api.Sharing.ListFilesArg)
  id: ListReceivedFilesAsync(Dropbox.Api.Sharing.ListFilesArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListReceivedFilesAsync(ListFilesArg)
  nameWithType: SharingUserRoutes.ListReceivedFilesAsync(ListFilesArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesAsync(Dropbox.Api.Sharing.ListFilesArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListReceivedFilesAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2266
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Returns a list of all files shared with current user.</p>\n<p> Does not include files the user has received via shared folders, and does\nnot include unclaimed invitations.</p>\n"
  example: []
  syntax:
    content: public Task<ListFilesResult> ListReceivedFilesAsync(ListFilesArg listFilesArg)
    parameters:
    - id: listFilesArg
      type: Dropbox.Api.Sharing.ListFilesArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ListFilesResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListReceivedFilesAsync(listFilesArg As ListFilesArg) As Task(Of ListFilesResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SharingUserError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFiles(Dropbox.Api.Sharing.ListFilesArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFiles(Dropbox.Api.Sharing.ListFilesArg,System.AsyncCallback,System.Object)
  id: BeginListReceivedFiles(Dropbox.Api.Sharing.ListFilesArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListReceivedFiles(ListFilesArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListReceivedFiles(ListFilesArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFiles(Dropbox.Api.Sharing.ListFilesArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListReceivedFiles
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2280
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list received files route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListReceivedFiles(ListFilesArg listFilesArg, AsyncCallback callback, object state = null)
    parameters:
    - id: listFilesArg
      type: Dropbox.Api.Sharing.ListFilesArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListReceivedFiles(listFilesArg As ListFilesArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFiles*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesAsync(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction})
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesAsync(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction})
  id: ListReceivedFilesAsync(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction})
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListReceivedFilesAsync(UInt32, IEnumerable<FileAction>)
  nameWithType: SharingUserRoutes.ListReceivedFilesAsync(UInt32, IEnumerable<FileAction>)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesAsync(System.UInt32, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.FileAction>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListReceivedFilesAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2303
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Returns a list of all files shared with current user.</p>\n<p> Does not include files the user has received via shared folders, and does\nnot include unclaimed invitations.</p>\n"
  example: []
  syntax:
    content: public Task<ListFilesResult> ListReceivedFilesAsync(uint limit = 100U, IEnumerable<FileAction> actions = null)
    parameters:
    - id: limit
      type: System.UInt32
      description: >-
        Number of files to return max per query. Defaults to 100 if no

        limit is specified.
    - id: actions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction}
      description: >-
        A list of `FileAction`s corresponding to `FilePermission`s

        that should appear in the  response&apos;s <xref href="Dropbox.Api.Sharing.SharedFileMetadata.Permissions" data-throw-if-not-resolved="false"></xref> field describing the

        actions the  authenticated user can perform on the file.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ListFilesResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListReceivedFilesAsync(limit As UInteger = 100UI, actions As IEnumerable(Of FileAction) = Nothing) As Task(Of ListFilesResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SharingUserError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: SharingUserRoutes.ListReceivedFilesAsync(UInt32, IEnumerable(Of FileAction))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesAsync(System.UInt32, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.FileAction))
  name.vb: ListReceivedFilesAsync(UInt32, IEnumerable(Of FileAction))
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFiles(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFiles(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction},System.AsyncCallback,System.Object)
  id: BeginListReceivedFiles(System.UInt32,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListReceivedFiles(UInt32, IEnumerable<FileAction>, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListReceivedFiles(UInt32, IEnumerable<FileAction>, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFiles(System.UInt32, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.FileAction>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListReceivedFiles
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2326
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list received files route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListReceivedFiles(uint limit = 100U, IEnumerable<FileAction> actions = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: limit
      type: System.UInt32
      description: >-
        Number of files to return max per query. Defaults to 100 if no

        limit is specified.
    - id: actions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction}
      description: >-
        A list of `FileAction`s corresponding to `FilePermission`s

        that should appear in the  response&apos;s <xref href="Dropbox.Api.Sharing.SharedFileMetadata.Permissions" data-throw-if-not-resolved="false"></xref> field describing the

        actions the  authenticated user can perform on the file.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListReceivedFiles(limit As UInteger = 100UI, actions As IEnumerable(Of FileAction) = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFiles*
  nameWithType.vb: SharingUserRoutes.BeginListReceivedFiles(UInt32, IEnumerable(Of FileAction), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFiles(System.UInt32, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.FileAction), System.AsyncCallback, System.Object)
  name.vb: BeginListReceivedFiles(UInt32, IEnumerable(Of FileAction), AsyncCallback, Object)
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListReceivedFiles(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListReceivedFiles(System.IAsyncResult)
  id: EndListReceivedFiles(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndListReceivedFiles(IAsyncResult)
  nameWithType: SharingUserRoutes.EndListReceivedFiles(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListReceivedFiles(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndListReceivedFiles
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2347
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the list received files route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public ListFilesResult EndListReceivedFiles(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.ListFilesResult
      description: The response to the send request
    content.vb: Public Function EndListReceivedFiles(asyncResult As IAsyncResult) As ListFilesResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListReceivedFiles*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SharingUserError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesContinueAsync(Dropbox.Api.Sharing.ListFilesContinueArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesContinueAsync(Dropbox.Api.Sharing.ListFilesContinueArg)
  id: ListReceivedFilesContinueAsync(Dropbox.Api.Sharing.ListFilesContinueArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListReceivedFilesContinueAsync(ListFilesContinueArg)
  nameWithType: SharingUserRoutes.ListReceivedFilesContinueAsync(ListFilesContinueArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesContinueAsync(Dropbox.Api.Sharing.ListFilesContinueArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListReceivedFilesContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2369
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Get more results with a cursor from <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesAsync(Dropbox.Api.Sharing.ListFilesArg)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public Task<ListFilesResult> ListReceivedFilesContinueAsync(ListFilesContinueArg listFilesContinueArg)
    parameters:
    - id: listFilesContinueArg
      type: Dropbox.Api.Sharing.ListFilesContinueArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ListFilesResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListReceivedFilesContinueAsync(listFilesContinueArg As ListFilesContinueArg) As Task(Of ListFilesResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListFilesContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFilesContinue(Dropbox.Api.Sharing.ListFilesContinueArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFilesContinue(Dropbox.Api.Sharing.ListFilesContinueArg,System.AsyncCallback,System.Object)
  id: BeginListReceivedFilesContinue(Dropbox.Api.Sharing.ListFilesContinueArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListReceivedFilesContinue(ListFilesContinueArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListReceivedFilesContinue(ListFilesContinueArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFilesContinue(Dropbox.Api.Sharing.ListFilesContinueArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListReceivedFilesContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2383
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list received files continue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListReceivedFilesContinue(ListFilesContinueArg listFilesContinueArg, AsyncCallback callback, object state = null)
    parameters:
    - id: listFilesContinueArg
      type: Dropbox.Api.Sharing.ListFilesContinueArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListReceivedFilesContinue(listFilesContinueArg As ListFilesContinueArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFilesContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesContinueAsync(System.String)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesContinueAsync(System.String)
  id: ListReceivedFilesContinueAsync(System.String)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListReceivedFilesContinueAsync(String)
  nameWithType: SharingUserRoutes.ListReceivedFilesContinueAsync(String)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesContinueAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListReceivedFilesContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2402
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Get more results with a cursor from <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesAsync(Dropbox.Api.Sharing.ListFilesArg)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public Task<ListFilesResult> ListReceivedFilesContinueAsync(string cursor)
    parameters:
    - id: cursor
      type: System.String
      description: Cursor in <xref href="Dropbox.Api.Sharing.ListFilesResult.Cursor" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ListFilesResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListReceivedFilesContinueAsync(cursor As String) As Task(Of ListFilesResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListFilesContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFilesContinue(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFilesContinue(System.String,System.AsyncCallback,System.Object)
  id: BeginListReceivedFilesContinue(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListReceivedFilesContinue(String, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListReceivedFilesContinue(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFilesContinue(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListReceivedFilesContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2419
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list received files continue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListReceivedFilesContinue(string cursor, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: cursor
      type: System.String
      description: Cursor in <xref href="Dropbox.Api.Sharing.ListFilesResult.Cursor" data-throw-if-not-resolved="false"></xref>.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListReceivedFilesContinue(cursor As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFilesContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListReceivedFilesContinue(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListReceivedFilesContinue(System.IAsyncResult)
  id: EndListReceivedFilesContinue(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndListReceivedFilesContinue(IAsyncResult)
  nameWithType: SharingUserRoutes.EndListReceivedFilesContinue(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListReceivedFilesContinue(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndListReceivedFilesContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2438
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the list received files continue\nroute to complete</p>\n"
  example: []
  syntax:
    content: public ListFilesResult EndListReceivedFilesContinue(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.ListFilesResult
      description: The response to the send request
    content.vb: Public Function EndListReceivedFilesContinue(asyncResult As IAsyncResult) As ListFilesResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListReceivedFilesContinue*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListFilesContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync(Dropbox.Api.Sharing.ListSharedLinksArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync(Dropbox.Api.Sharing.ListSharedLinksArg)
  id: ListSharedLinksAsync(Dropbox.Api.Sharing.ListSharedLinksArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListSharedLinksAsync(ListSharedLinksArg)
  nameWithType: SharingUserRoutes.ListSharedLinksAsync(ListSharedLinksArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync(Dropbox.Api.Sharing.ListSharedLinksArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListSharedLinksAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2468
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>List shared links of this user.</p>\n<p>If no path is given, returns a list of all shared links for the current user.\nFor members of business teams using team space and member folders, returns all\nshared links in the team member&apos;s home folder unless the team space ID is specified\nin the request header. For more information, refer to the <a href=\"https://www.dropbox.com/developers/reference/namespace-guide\">Namespace\nGuide</a>.</p>\n<p>If a non-empty path is given, returns a list of all shared links that allow\naccess to the given path - direct links to the given path and links to parent\nfolders of the given path. Links to parent folders can be suppressed by setting\ndirect_only to true.</p>\n"
  example: []
  syntax:
    content: public Task<ListSharedLinksResult> ListSharedLinksAsync(ListSharedLinksArg listSharedLinksArg)
    parameters:
    - id: listSharedLinksArg
      type: Dropbox.Api.Sharing.ListSharedLinksArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ListSharedLinksResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListSharedLinksAsync(listSharedLinksArg As ListSharedLinksArg) As Task(Of ListSharedLinksResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListSharedLinksError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListSharedLinks(Dropbox.Api.Sharing.ListSharedLinksArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListSharedLinks(Dropbox.Api.Sharing.ListSharedLinksArg,System.AsyncCallback,System.Object)
  id: BeginListSharedLinks(Dropbox.Api.Sharing.ListSharedLinksArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListSharedLinks(ListSharedLinksArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListSharedLinks(ListSharedLinksArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListSharedLinks(Dropbox.Api.Sharing.ListSharedLinksArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListSharedLinks
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2482
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list shared links route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListSharedLinks(ListSharedLinksArg listSharedLinksArg, AsyncCallback callback, object state = null)
    parameters:
    - id: listSharedLinksArg
      type: Dropbox.Api.Sharing.ListSharedLinksArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListSharedLinks(listSharedLinksArg As ListSharedLinksArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListSharedLinks*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync(System.String,System.String,System.Nullable{System.Boolean})
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync(System.String,System.String,System.Nullable{System.Boolean})
  id: ListSharedLinksAsync(System.String,System.String,System.Nullable{System.Boolean})
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ListSharedLinksAsync(String, String, Nullable<Boolean>)
  nameWithType: SharingUserRoutes.ListSharedLinksAsync(String, String, Nullable<Boolean>)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync(System.String, System.String, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ListSharedLinksAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2516
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>List shared links of this user.</p>\n<p>If no path is given, returns a list of all shared links for the current user.\nFor members of business teams using team space and member folders, returns all\nshared links in the team member&apos;s home folder unless the team space ID is specified\nin the request header. For more information, refer to the <a href=\"https://www.dropbox.com/developers/reference/namespace-guide\">Namespace\nGuide</a>.</p>\n<p>If a non-empty path is given, returns a list of all shared links that allow\naccess to the given path - direct links to the given path and links to parent\nfolders of the given path. Links to parent folders can be suppressed by setting\ndirect_only to true.</p>\n"
  example: []
  syntax:
    content: public Task<ListSharedLinksResult> ListSharedLinksAsync(string path = null, string cursor = null, bool? directOnly = null)
    parameters:
    - id: path
      type: System.String
      description: >-
        See <xref href="Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync(Dropbox.Api.Sharing.ListSharedLinksArg)" data-throw-if-not-resolved="false"></xref>

        description.
    - id: cursor
      type: System.String
      description: The cursor returned by your last call to <xref href="Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync(Dropbox.Api.Sharing.ListSharedLinksArg)" data-throw-if-not-resolved="false"></xref>.
    - id: directOnly
      type: System.Nullable{System.Boolean}
      description: >-
        See <xref href="Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync(Dropbox.Api.Sharing.ListSharedLinksArg)" data-throw-if-not-resolved="false"></xref>

        description.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ListSharedLinksResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ListSharedLinksAsync(path As String = Nothing, cursor As String = Nothing, directOnly As Boolean? = Nothing) As Task(Of ListSharedLinksResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListSharedLinksError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: SharingUserRoutes.ListSharedLinksAsync(String, String, Nullable(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync(System.String, System.String, System.Nullable(Of System.Boolean))
  name.vb: ListSharedLinksAsync(String, String, Nullable(Of Boolean))
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListSharedLinks(System.String,System.String,System.Nullable{System.Boolean},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListSharedLinks(System.String,System.String,System.Nullable{System.Boolean},System.AsyncCallback,System.Object)
  id: BeginListSharedLinks(System.String,System.String,System.Nullable{System.Boolean},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginListSharedLinks(String, String, Nullable<Boolean>, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginListSharedLinks(String, String, Nullable<Boolean>, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListSharedLinks(System.String, System.String, System.Nullable<System.Boolean>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginListSharedLinks
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2544
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the list shared links route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginListSharedLinks(string path = null, string cursor = null, bool? directOnly = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: path
      type: System.String
      description: >-
        See <xref href="Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync(Dropbox.Api.Sharing.ListSharedLinksArg)" data-throw-if-not-resolved="false"></xref>

        description.
    - id: cursor
      type: System.String
      description: The cursor returned by your last call to <xref href="Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync(Dropbox.Api.Sharing.ListSharedLinksArg)" data-throw-if-not-resolved="false"></xref>.
    - id: directOnly
      type: System.Nullable{System.Boolean}
      description: >-
        See <xref href="Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync(Dropbox.Api.Sharing.ListSharedLinksArg)" data-throw-if-not-resolved="false"></xref>

        description.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginListSharedLinks(path As String = Nothing, cursor As String = Nothing, directOnly As Boolean? = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListSharedLinks*
  nameWithType.vb: SharingUserRoutes.BeginListSharedLinks(String, String, Nullable(Of Boolean), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListSharedLinks(System.String, System.String, System.Nullable(Of System.Boolean), System.AsyncCallback, System.Object)
  name.vb: BeginListSharedLinks(String, String, Nullable(Of Boolean), AsyncCallback, Object)
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListSharedLinks(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListSharedLinks(System.IAsyncResult)
  id: EndListSharedLinks(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndListSharedLinks(IAsyncResult)
  nameWithType: SharingUserRoutes.EndListSharedLinks(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListSharedLinks(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndListSharedLinks
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2567
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the list shared links route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public ListSharedLinksResult EndListSharedLinks(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.ListSharedLinksResult
      description: The response to the send request
    content.vb: Public Function EndListSharedLinks(asyncResult As IAsyncResult) As ListSharedLinksResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListSharedLinks*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ListSharedLinksError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ModifySharedLinkSettingsAsync(Dropbox.Api.Sharing.ModifySharedLinkSettingsArgs)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ModifySharedLinkSettingsAsync(Dropbox.Api.Sharing.ModifySharedLinkSettingsArgs)
  id: ModifySharedLinkSettingsAsync(Dropbox.Api.Sharing.ModifySharedLinkSettingsArgs)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ModifySharedLinkSettingsAsync(ModifySharedLinkSettingsArgs)
  nameWithType: SharingUserRoutes.ModifySharedLinkSettingsAsync(ModifySharedLinkSettingsArgs)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ModifySharedLinkSettingsAsync(Dropbox.Api.Sharing.ModifySharedLinkSettingsArgs)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ModifySharedLinkSettingsAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2594
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Modify the shared link&apos;s settings.</p>\n<p>If the requested visibility conflict with the shared links policy of the team\nor the shared folder (in case the linked file is part of a shared folder) then the\n<xref href=\"Dropbox.Api.Sharing.LinkPermissions.ResolvedVisibility\" data-throw-if-not-resolved=\"false\"></xref> of the\nreturned <xref href=\"Dropbox.Api.Sharing.SharedLinkMetadata\" data-throw-if-not-resolved=\"false\"></xref> will reflect the actual visibility of\nthe shared link and the <xref href=\"Dropbox.Api.Sharing.LinkPermissions.RequestedVisibility\" data-throw-if-not-resolved=\"false\"></xref> will reflect the\nrequested visibility.</p>\n"
  example: []
  syntax:
    content: public Task<SharedLinkMetadata> ModifySharedLinkSettingsAsync(ModifySharedLinkSettingsArgs modifySharedLinkSettingsArgs)
    parameters:
    - id: modifySharedLinkSettingsArgs
      type: Dropbox.Api.Sharing.ModifySharedLinkSettingsArgs
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedLinkMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ModifySharedLinkSettingsAsync(modifySharedLinkSettingsArgs As ModifySharedLinkSettingsArgs) As Task(Of SharedLinkMetadata)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ModifySharedLinkSettingsAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ModifySharedLinkSettingsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginModifySharedLinkSettings(Dropbox.Api.Sharing.ModifySharedLinkSettingsArgs,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginModifySharedLinkSettings(Dropbox.Api.Sharing.ModifySharedLinkSettingsArgs,System.AsyncCallback,System.Object)
  id: BeginModifySharedLinkSettings(Dropbox.Api.Sharing.ModifySharedLinkSettingsArgs,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginModifySharedLinkSettings(ModifySharedLinkSettingsArgs, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginModifySharedLinkSettings(ModifySharedLinkSettingsArgs, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginModifySharedLinkSettings(Dropbox.Api.Sharing.ModifySharedLinkSettingsArgs, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginModifySharedLinkSettings
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2608
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the modify shared link settings route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginModifySharedLinkSettings(ModifySharedLinkSettingsArgs modifySharedLinkSettingsArgs, AsyncCallback callback, object state = null)
    parameters:
    - id: modifySharedLinkSettingsArgs
      type: Dropbox.Api.Sharing.ModifySharedLinkSettingsArgs
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginModifySharedLinkSettings(modifySharedLinkSettingsArgs As ModifySharedLinkSettingsArgs, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginModifySharedLinkSettings*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ModifySharedLinkSettingsAsync(System.String,Dropbox.Api.Sharing.SharedLinkSettings,System.Boolean)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ModifySharedLinkSettingsAsync(System.String,Dropbox.Api.Sharing.SharedLinkSettings,System.Boolean)
  id: ModifySharedLinkSettingsAsync(System.String,Dropbox.Api.Sharing.SharedLinkSettings,System.Boolean)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ModifySharedLinkSettingsAsync(String, SharedLinkSettings, Boolean)
  nameWithType: SharingUserRoutes.ModifySharedLinkSettingsAsync(String, SharedLinkSettings, Boolean)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ModifySharedLinkSettingsAsync(System.String, Dropbox.Api.Sharing.SharedLinkSettings, System.Boolean)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ModifySharedLinkSettingsAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2634
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Modify the shared link&apos;s settings.</p>\n<p>If the requested visibility conflict with the shared links policy of the team\nor the shared folder (in case the linked file is part of a shared folder) then the\n<xref href=\"Dropbox.Api.Sharing.LinkPermissions.ResolvedVisibility\" data-throw-if-not-resolved=\"false\"></xref> of the\nreturned <xref href=\"Dropbox.Api.Sharing.SharedLinkMetadata\" data-throw-if-not-resolved=\"false\"></xref> will reflect the actual visibility of\nthe shared link and the <xref href=\"Dropbox.Api.Sharing.LinkPermissions.RequestedVisibility\" data-throw-if-not-resolved=\"false\"></xref> will reflect the\nrequested visibility.</p>\n"
  example: []
  syntax:
    content: public Task<SharedLinkMetadata> ModifySharedLinkSettingsAsync(string url, SharedLinkSettings settings, bool removeExpiration = false)
    parameters:
    - id: url
      type: System.String
      description: URL of the shared link to change its settings.
    - id: settings
      type: Dropbox.Api.Sharing.SharedLinkSettings
      description: Set of settings for the shared link.
    - id: removeExpiration
      type: System.Boolean
      description: >-
        If set to true, removes the expiration of the shared

        link.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedLinkMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ModifySharedLinkSettingsAsync(url As String, settings As SharedLinkSettings, removeExpiration As Boolean = False) As Task(Of SharedLinkMetadata)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ModifySharedLinkSettingsAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ModifySharedLinkSettingsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginModifySharedLinkSettings(System.String,Dropbox.Api.Sharing.SharedLinkSettings,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginModifySharedLinkSettings(System.String,Dropbox.Api.Sharing.SharedLinkSettings,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginModifySharedLinkSettings(System.String,Dropbox.Api.Sharing.SharedLinkSettings,System.Boolean,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginModifySharedLinkSettings(String, SharedLinkSettings, Boolean, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginModifySharedLinkSettings(String, SharedLinkSettings, Boolean, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginModifySharedLinkSettings(System.String, Dropbox.Api.Sharing.SharedLinkSettings, System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginModifySharedLinkSettings
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2657
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the modify shared link settings route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginModifySharedLinkSettings(string url, SharedLinkSettings settings, bool removeExpiration = false, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: url
      type: System.String
      description: URL of the shared link to change its settings.
    - id: settings
      type: Dropbox.Api.Sharing.SharedLinkSettings
      description: Set of settings for the shared link.
    - id: removeExpiration
      type: System.Boolean
      description: >-
        If set to true, removes the expiration of the shared

        link.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginModifySharedLinkSettings(url As String, settings As SharedLinkSettings, removeExpiration As Boolean = False, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginModifySharedLinkSettings*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndModifySharedLinkSettings(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndModifySharedLinkSettings(System.IAsyncResult)
  id: EndModifySharedLinkSettings(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndModifySharedLinkSettings(IAsyncResult)
  nameWithType: SharingUserRoutes.EndModifySharedLinkSettings(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndModifySharedLinkSettings(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndModifySharedLinkSettings
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2680
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the modify shared link settings\nroute to complete</p>\n"
  example: []
  syntax:
    content: public SharedLinkMetadata EndModifySharedLinkSettings(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.SharedLinkMetadata
      description: The response to the send request
    content.vb: Public Function EndModifySharedLinkSettings(asyncResult As IAsyncResult) As SharedLinkMetadata
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndModifySharedLinkSettings*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ModifySharedLinkSettingsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.MountFolderAsync(Dropbox.Api.Sharing.MountFolderArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.MountFolderAsync(Dropbox.Api.Sharing.MountFolderArg)
  id: MountFolderAsync(Dropbox.Api.Sharing.MountFolderArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: MountFolderAsync(MountFolderArg)
  nameWithType: SharingUserRoutes.MountFolderAsync(MountFolderArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.MountFolderAsync(Dropbox.Api.Sharing.MountFolderArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MountFolderAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2702
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>The current user mounts the designated folder.</p>\n<p>Mount a shared folder for a user after they have been added as a member. Once\nmounted, the shared folder will appear in their Dropbox.</p>\n"
  example: []
  syntax:
    content: public Task<SharedFolderMetadata> MountFolderAsync(MountFolderArg mountFolderArg)
    parameters:
    - id: mountFolderArg
      type: Dropbox.Api.Sharing.MountFolderArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFolderMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MountFolderAsync(mountFolderArg As MountFolderArg) As Task(Of SharedFolderMetadata)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.MountFolderAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.MountFolderError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginMountFolder(Dropbox.Api.Sharing.MountFolderArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginMountFolder(Dropbox.Api.Sharing.MountFolderArg,System.AsyncCallback,System.Object)
  id: BeginMountFolder(Dropbox.Api.Sharing.MountFolderArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginMountFolder(MountFolderArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginMountFolder(MountFolderArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginMountFolder(Dropbox.Api.Sharing.MountFolderArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMountFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2716
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the mount folder route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMountFolder(MountFolderArg mountFolderArg, AsyncCallback callback, object state = null)
    parameters:
    - id: mountFolderArg
      type: Dropbox.Api.Sharing.MountFolderArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMountFolder(mountFolderArg As MountFolderArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginMountFolder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.MountFolderAsync(System.String)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.MountFolderAsync(System.String)
  id: MountFolderAsync(System.String)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: MountFolderAsync(String)
  nameWithType: SharingUserRoutes.MountFolderAsync(String)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.MountFolderAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MountFolderAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2734
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>The current user mounts the designated folder.</p>\n<p>Mount a shared folder for a user after they have been added as a member. Once\nmounted, the shared folder will appear in their Dropbox.</p>\n"
  example: []
  syntax:
    content: public Task<SharedFolderMetadata> MountFolderAsync(string sharedFolderId)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID of the shared folder to mount.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFolderMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MountFolderAsync(sharedFolderId As String) As Task(Of SharedFolderMetadata)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.MountFolderAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.MountFolderError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginMountFolder(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginMountFolder(System.String,System.AsyncCallback,System.Object)
  id: BeginMountFolder(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginMountFolder(String, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginMountFolder(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginMountFolder(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMountFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2750
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the mount folder route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMountFolder(string sharedFolderId, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID of the shared folder to mount.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMountFolder(sharedFolderId As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginMountFolder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndMountFolder(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndMountFolder(System.IAsyncResult)
  id: EndMountFolder(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndMountFolder(IAsyncResult)
  nameWithType: SharingUserRoutes.EndMountFolder(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndMountFolder(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMountFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2769
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the mount folder route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public SharedFolderMetadata EndMountFolder(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.SharedFolderMetadata
      description: The response to the send request
    content.vb: Public Function EndMountFolder(asyncResult As IAsyncResult) As SharedFolderMetadata
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndMountFolder*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.MountFolderError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFileMembershipAsync(Dropbox.Api.Sharing.RelinquishFileMembershipArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFileMembershipAsync(Dropbox.Api.Sharing.RelinquishFileMembershipArg)
  id: RelinquishFileMembershipAsync(Dropbox.Api.Sharing.RelinquishFileMembershipArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: RelinquishFileMembershipAsync(RelinquishFileMembershipArg)
  nameWithType: SharingUserRoutes.RelinquishFileMembershipAsync(RelinquishFileMembershipArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFileMembershipAsync(Dropbox.Api.Sharing.RelinquishFileMembershipArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: RelinquishFileMembershipAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2790
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>The current user relinquishes their membership in the designated file. Note\nthat the current user may still have inherited access to this file through the\nparent folder.</p>\n"
  example: []
  syntax:
    content: public Task RelinquishFileMembershipAsync(RelinquishFileMembershipArg relinquishFileMembershipArg)
    parameters:
    - id: relinquishFileMembershipArg
      type: Dropbox.Api.Sharing.RelinquishFileMembershipArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function RelinquishFileMembershipAsync(relinquishFileMembershipArg As RelinquishFileMembershipArg) As Task
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFileMembershipAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.RelinquishFileMembershipError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFileMembership(Dropbox.Api.Sharing.RelinquishFileMembershipArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFileMembership(Dropbox.Api.Sharing.RelinquishFileMembershipArg,System.AsyncCallback,System.Object)
  id: BeginRelinquishFileMembership(Dropbox.Api.Sharing.RelinquishFileMembershipArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginRelinquishFileMembership(RelinquishFileMembershipArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginRelinquishFileMembership(RelinquishFileMembershipArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFileMembership(Dropbox.Api.Sharing.RelinquishFileMembershipArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginRelinquishFileMembership
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2804
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the relinquish file membership route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginRelinquishFileMembership(RelinquishFileMembershipArg relinquishFileMembershipArg, AsyncCallback callback, object state = null)
    parameters:
    - id: relinquishFileMembershipArg
      type: Dropbox.Api.Sharing.RelinquishFileMembershipArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginRelinquishFileMembership(relinquishFileMembershipArg As RelinquishFileMembershipArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFileMembership*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFileMembershipAsync(System.String)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFileMembershipAsync(System.String)
  id: RelinquishFileMembershipAsync(System.String)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: RelinquishFileMembershipAsync(String)
  nameWithType: SharingUserRoutes.RelinquishFileMembershipAsync(String)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFileMembershipAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: RelinquishFileMembershipAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2821
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>The current user relinquishes their membership in the designated file. Note\nthat the current user may still have inherited access to this file through the\nparent folder.</p>\n"
  example: []
  syntax:
    content: public Task RelinquishFileMembershipAsync(string file)
    parameters:
    - id: file
      type: System.String
      description: The path or id for the file.
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function RelinquishFileMembershipAsync(file As String) As Task
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFileMembershipAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.RelinquishFileMembershipError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFileMembership(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFileMembership(System.String,System.AsyncCallback,System.Object)
  id: BeginRelinquishFileMembership(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginRelinquishFileMembership(String, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginRelinquishFileMembership(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFileMembership(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginRelinquishFileMembership
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2837
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the relinquish file membership route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginRelinquishFileMembership(string file, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: file
      type: System.String
      description: The path or id for the file.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginRelinquishFileMembership(file As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFileMembership*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRelinquishFileMembership(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRelinquishFileMembership(System.IAsyncResult)
  id: EndRelinquishFileMembership(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndRelinquishFileMembership(IAsyncResult)
  nameWithType: SharingUserRoutes.EndRelinquishFileMembership(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRelinquishFileMembership(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndRelinquishFileMembership
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2855
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the relinquish file membership\nroute to complete</p>\n"
  example: []
  syntax:
    content: public void EndRelinquishFileMembership(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    content.vb: Public Sub EndRelinquishFileMembership(asyncResult As IAsyncResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRelinquishFileMembership*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.RelinquishFileMembershipError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFolderMembershipAsync(Dropbox.Api.Sharing.RelinquishFolderMembershipArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFolderMembershipAsync(Dropbox.Api.Sharing.RelinquishFolderMembershipArg)
  id: RelinquishFolderMembershipAsync(Dropbox.Api.Sharing.RelinquishFolderMembershipArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: RelinquishFolderMembershipAsync(RelinquishFolderMembershipArg)
  nameWithType: SharingUserRoutes.RelinquishFolderMembershipAsync(RelinquishFolderMembershipArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFolderMembershipAsync(Dropbox.Api.Sharing.RelinquishFolderMembershipArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: RelinquishFolderMembershipAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2877
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>The current user relinquishes their membership in the designated shared\nfolder and will no longer have access to the folder.  A folder owner cannot\nrelinquish membership in their own folder.</p>\n<p>This will run synchronously if leave_a_copy is false, and asynchronously if\nleave_a_copy is true.</p>\n"
  example: []
  syntax:
    content: public Task<LaunchEmptyResult> RelinquishFolderMembershipAsync(RelinquishFolderMembershipArg relinquishFolderMembershipArg)
    parameters:
    - id: relinquishFolderMembershipArg
      type: Dropbox.Api.Sharing.RelinquishFolderMembershipArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Async.LaunchEmptyResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function RelinquishFolderMembershipAsync(relinquishFolderMembershipArg As RelinquishFolderMembershipArg) As Task(Of LaunchEmptyResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFolderMembershipAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.RelinquishFolderMembershipError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFolderMembership(Dropbox.Api.Sharing.RelinquishFolderMembershipArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFolderMembership(Dropbox.Api.Sharing.RelinquishFolderMembershipArg,System.AsyncCallback,System.Object)
  id: BeginRelinquishFolderMembership(Dropbox.Api.Sharing.RelinquishFolderMembershipArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginRelinquishFolderMembership(RelinquishFolderMembershipArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginRelinquishFolderMembership(RelinquishFolderMembershipArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFolderMembership(Dropbox.Api.Sharing.RelinquishFolderMembershipArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginRelinquishFolderMembership
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2891
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the relinquish folder membership route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginRelinquishFolderMembership(RelinquishFolderMembershipArg relinquishFolderMembershipArg, AsyncCallback callback, object state = null)
    parameters:
    - id: relinquishFolderMembershipArg
      type: Dropbox.Api.Sharing.RelinquishFolderMembershipArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginRelinquishFolderMembership(relinquishFolderMembershipArg As RelinquishFolderMembershipArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFolderMembership*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFolderMembershipAsync(System.String,System.Boolean)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFolderMembershipAsync(System.String,System.Boolean)
  id: RelinquishFolderMembershipAsync(System.String,System.Boolean)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: RelinquishFolderMembershipAsync(String, Boolean)
  nameWithType: SharingUserRoutes.RelinquishFolderMembershipAsync(String, Boolean)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFolderMembershipAsync(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: RelinquishFolderMembershipAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2914
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>The current user relinquishes their membership in the designated shared\nfolder and will no longer have access to the folder.  A folder owner cannot\nrelinquish membership in their own folder.</p>\n<p>This will run synchronously if leave_a_copy is false, and asynchronously if\nleave_a_copy is true.</p>\n"
  example: []
  syntax:
    content: public Task<LaunchEmptyResult> RelinquishFolderMembershipAsync(string sharedFolderId, bool leaveACopy = false)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: leaveACopy
      type: System.Boolean
      description: >-
        Keep a copy of the folder&apos;s contents upon relinquishing

        membership. This must be set to false when the folder is within a team folder or

        another shared folder.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Async.LaunchEmptyResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function RelinquishFolderMembershipAsync(sharedFolderId As String, leaveACopy As Boolean = False) As Task(Of LaunchEmptyResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFolderMembershipAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.RelinquishFolderMembershipError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFolderMembership(System.String,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFolderMembership(System.String,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginRelinquishFolderMembership(System.String,System.Boolean,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginRelinquishFolderMembership(String, Boolean, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginRelinquishFolderMembership(String, Boolean, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFolderMembership(System.String, System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginRelinquishFolderMembership
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2935
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the relinquish folder membership route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginRelinquishFolderMembership(string sharedFolderId, bool leaveACopy = false, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: leaveACopy
      type: System.Boolean
      description: >-
        Keep a copy of the folder&apos;s contents upon relinquishing

        membership. This must be set to false when the folder is within a team folder or

        another shared folder.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginRelinquishFolderMembership(sharedFolderId As String, leaveACopy As Boolean = False, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFolderMembership*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRelinquishFolderMembership(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRelinquishFolderMembership(System.IAsyncResult)
  id: EndRelinquishFolderMembership(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndRelinquishFolderMembership(IAsyncResult)
  nameWithType: SharingUserRoutes.EndRelinquishFolderMembership(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRelinquishFolderMembership(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndRelinquishFolderMembership
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2956
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the relinquish folder membership\nroute to complete</p>\n"
  example: []
  syntax:
    content: public LaunchEmptyResult EndRelinquishFolderMembership(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Async.LaunchEmptyResult
      description: The response to the send request
    content.vb: Public Function EndRelinquishFolderMembership(asyncResult As IAsyncResult) As LaunchEmptyResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRelinquishFolderMembership*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.RelinquishFolderMembershipError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMemberAsync(Dropbox.Api.Sharing.RemoveFileMemberArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMemberAsync(Dropbox.Api.Sharing.RemoveFileMemberArg)
  id: RemoveFileMemberAsync(Dropbox.Api.Sharing.RemoveFileMemberArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: RemoveFileMemberAsync(RemoveFileMemberArg)
  nameWithType: SharingUserRoutes.RemoveFileMemberAsync(RemoveFileMemberArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMemberAsync(Dropbox.Api.Sharing.RemoveFileMemberArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: RemoveFileMemberAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2976
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Identical to remove_file_member_2 but with less information returned.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use RemoveFileMember2Async instead.")]

      public Task<FileMemberActionIndividualResult> RemoveFileMemberAsync(RemoveFileMemberArg removeFileMemberArg)
    parameters:
    - id: removeFileMemberArg
      type: Dropbox.Api.Sharing.RemoveFileMemberArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.FileMemberActionIndividualResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated, please use RemoveFileMember2Async instead.")>

      Public Function RemoveFileMemberAsync(removeFileMemberArg As RemoveFileMemberArg) As Task(Of FileMemberActionIndividualResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMemberAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.RemoveFileMemberError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use RemoveFileMember2Async instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember(Dropbox.Api.Sharing.RemoveFileMemberArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember(Dropbox.Api.Sharing.RemoveFileMemberArg,System.AsyncCallback,System.Object)
  id: BeginRemoveFileMember(Dropbox.Api.Sharing.RemoveFileMemberArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginRemoveFileMember(RemoveFileMemberArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginRemoveFileMember(RemoveFileMemberArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember(Dropbox.Api.Sharing.RemoveFileMemberArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginRemoveFileMember
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 2991
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the remove file member route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use BeginRemoveFileMember2 instead.")]

      public IAsyncResult BeginRemoveFileMember(RemoveFileMemberArg removeFileMemberArg, AsyncCallback callback, object state = null)
    parameters:
    - id: removeFileMemberArg
      type: Dropbox.Api.Sharing.RemoveFileMemberArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated, please use BeginRemoveFileMember2 instead.")>

      Public Function BeginRemoveFileMember(removeFileMemberArg As RemoveFileMemberArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use BeginRemoveFileMember2 instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMemberAsync(System.String,Dropbox.Api.Sharing.MemberSelector)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMemberAsync(System.String,Dropbox.Api.Sharing.MemberSelector)
  id: RemoveFileMemberAsync(System.String,Dropbox.Api.Sharing.MemberSelector)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: RemoveFileMemberAsync(String, MemberSelector)
  nameWithType: SharingUserRoutes.RemoveFileMemberAsync(String, MemberSelector)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMemberAsync(System.String, Dropbox.Api.Sharing.MemberSelector)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: RemoveFileMemberAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3011
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Identical to remove_file_member_2 but with less information returned.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use RemoveFileMember2Async instead.")]

      public Task<FileMemberActionIndividualResult> RemoveFileMemberAsync(string file, MemberSelector member)
    parameters:
    - id: file
      type: System.String
      description: File from which to remove members.
    - id: member
      type: Dropbox.Api.Sharing.MemberSelector
      description: >-
        Member to remove from this file. Note that even if an email is

        specified, it may result in the removal of a user (not an invitee) if the user&apos;s

        main account corresponds to that email address.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.FileMemberActionIndividualResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated, please use RemoveFileMember2Async instead.")>

      Public Function RemoveFileMemberAsync(file As String, member As MemberSelector) As Task(Of FileMemberActionIndividualResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMemberAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.RemoveFileMemberError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use RemoveFileMember2Async instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember(System.String,Dropbox.Api.Sharing.MemberSelector,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember(System.String,Dropbox.Api.Sharing.MemberSelector,System.AsyncCallback,System.Object)
  id: BeginRemoveFileMember(System.String,Dropbox.Api.Sharing.MemberSelector,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginRemoveFileMember(String, MemberSelector, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginRemoveFileMember(String, MemberSelector, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember(System.String, Dropbox.Api.Sharing.MemberSelector, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginRemoveFileMember
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3033
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the remove file member route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use BeginRemoveFileMember2 instead.")]

      public IAsyncResult BeginRemoveFileMember(string file, MemberSelector member, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: file
      type: System.String
      description: File from which to remove members.
    - id: member
      type: Dropbox.Api.Sharing.MemberSelector
      description: >-
        Member to remove from this file. Note that even if an email is

        specified, it may result in the removal of a user (not an invitee) if the user&apos;s

        main account corresponds to that email address.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated, please use BeginRemoveFileMember2 instead.")>

      Public Function BeginRemoveFileMember(file As String, member As MemberSelector, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use BeginRemoveFileMember2 instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFileMember(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFileMember(System.IAsyncResult)
  id: EndRemoveFileMember(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndRemoveFileMember(IAsyncResult)
  nameWithType: SharingUserRoutes.EndRemoveFileMember(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFileMember(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndRemoveFileMember
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3055
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the remove file member route to\ncomplete</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use EndRemoveFileMember2 instead.")]

      public FileMemberActionIndividualResult EndRemoveFileMember(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.FileMemberActionIndividualResult
      description: The response to the send request
    content.vb: >-
      <Obsolete("This function is deprecated, please use EndRemoveFileMember2 instead.")>

      Public Function EndRemoveFileMember(asyncResult As IAsyncResult) As FileMemberActionIndividualResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFileMember*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.RemoveFileMemberError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use EndRemoveFileMember2 instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMember2Async(Dropbox.Api.Sharing.RemoveFileMemberArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMember2Async(Dropbox.Api.Sharing.RemoveFileMemberArg)
  id: RemoveFileMember2Async(Dropbox.Api.Sharing.RemoveFileMemberArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: RemoveFileMember2Async(RemoveFileMemberArg)
  nameWithType: SharingUserRoutes.RemoveFileMember2Async(RemoveFileMemberArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMember2Async(Dropbox.Api.Sharing.RemoveFileMemberArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: RemoveFileMember2Async
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3076
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Removes a specified member from the file.</p>\n"
  example: []
  syntax:
    content: public Task<FileMemberRemoveActionResult> RemoveFileMember2Async(RemoveFileMemberArg removeFileMemberArg)
    parameters:
    - id: removeFileMemberArg
      type: Dropbox.Api.Sharing.RemoveFileMemberArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.FileMemberRemoveActionResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function RemoveFileMember2Async(removeFileMemberArg As RemoveFileMemberArg) As Task(Of FileMemberRemoveActionResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMember2Async*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.RemoveFileMemberError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember2(Dropbox.Api.Sharing.RemoveFileMemberArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember2(Dropbox.Api.Sharing.RemoveFileMemberArg,System.AsyncCallback,System.Object)
  id: BeginRemoveFileMember2(Dropbox.Api.Sharing.RemoveFileMemberArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginRemoveFileMember2(RemoveFileMemberArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginRemoveFileMember2(RemoveFileMemberArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember2(Dropbox.Api.Sharing.RemoveFileMemberArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginRemoveFileMember2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3090
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the remove file member 2 route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginRemoveFileMember2(RemoveFileMemberArg removeFileMemberArg, AsyncCallback callback, object state = null)
    parameters:
    - id: removeFileMemberArg
      type: Dropbox.Api.Sharing.RemoveFileMemberArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginRemoveFileMember2(removeFileMemberArg As RemoveFileMemberArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMember2Async(System.String,Dropbox.Api.Sharing.MemberSelector)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMember2Async(System.String,Dropbox.Api.Sharing.MemberSelector)
  id: RemoveFileMember2Async(System.String,Dropbox.Api.Sharing.MemberSelector)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: RemoveFileMember2Async(String, MemberSelector)
  nameWithType: SharingUserRoutes.RemoveFileMember2Async(String, MemberSelector)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMember2Async(System.String, Dropbox.Api.Sharing.MemberSelector)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: RemoveFileMember2Async
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3109
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Removes a specified member from the file.</p>\n"
  example: []
  syntax:
    content: public Task<FileMemberRemoveActionResult> RemoveFileMember2Async(string file, MemberSelector member)
    parameters:
    - id: file
      type: System.String
      description: File from which to remove members.
    - id: member
      type: Dropbox.Api.Sharing.MemberSelector
      description: >-
        Member to remove from this file. Note that even if an email is

        specified, it may result in the removal of a user (not an invitee) if the user&apos;s

        main account corresponds to that email address.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.FileMemberRemoveActionResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function RemoveFileMember2Async(file As String, member As MemberSelector) As Task(Of FileMemberRemoveActionResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMember2Async*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.RemoveFileMemberError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember2(System.String,Dropbox.Api.Sharing.MemberSelector,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember2(System.String,Dropbox.Api.Sharing.MemberSelector,System.AsyncCallback,System.Object)
  id: BeginRemoveFileMember2(System.String,Dropbox.Api.Sharing.MemberSelector,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginRemoveFileMember2(String, MemberSelector, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginRemoveFileMember2(String, MemberSelector, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember2(System.String, Dropbox.Api.Sharing.MemberSelector, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginRemoveFileMember2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3130
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the remove file member 2 route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginRemoveFileMember2(string file, MemberSelector member, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: file
      type: System.String
      description: File from which to remove members.
    - id: member
      type: Dropbox.Api.Sharing.MemberSelector
      description: >-
        Member to remove from this file. Note that even if an email is

        specified, it may result in the removal of a user (not an invitee) if the user&apos;s

        main account corresponds to that email address.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginRemoveFileMember2(file As String, member As MemberSelector, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFileMember2(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFileMember2(System.IAsyncResult)
  id: EndRemoveFileMember2(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndRemoveFileMember2(IAsyncResult)
  nameWithType: SharingUserRoutes.EndRemoveFileMember2(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFileMember2(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndRemoveFileMember2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3151
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the remove file member 2 route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public FileMemberRemoveActionResult EndRemoveFileMember2(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.FileMemberRemoveActionResult
      description: The response to the send request
    content.vb: Public Function EndRemoveFileMember2(asyncResult As IAsyncResult) As FileMemberRemoveActionResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFileMember2*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.RemoveFileMemberError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFolderMemberAsync(Dropbox.Api.Sharing.RemoveFolderMemberArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFolderMemberAsync(Dropbox.Api.Sharing.RemoveFolderMemberArg)
  id: RemoveFolderMemberAsync(Dropbox.Api.Sharing.RemoveFolderMemberArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: RemoveFolderMemberAsync(RemoveFolderMemberArg)
  nameWithType: SharingUserRoutes.RemoveFolderMemberAsync(RemoveFolderMemberArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFolderMemberAsync(Dropbox.Api.Sharing.RemoveFolderMemberArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: RemoveFolderMemberAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3172
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Allows an owner or editor (if the ACL update policy allows) of a shared\nfolder to remove another member.</p>\n"
  example: []
  syntax:
    content: public Task<LaunchResultBase> RemoveFolderMemberAsync(RemoveFolderMemberArg removeFolderMemberArg)
    parameters:
    - id: removeFolderMemberArg
      type: Dropbox.Api.Sharing.RemoveFolderMemberArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Async.LaunchResultBase}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function RemoveFolderMemberAsync(removeFolderMemberArg As RemoveFolderMemberArg) As Task(Of LaunchResultBase)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFolderMemberAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.RemoveFolderMemberError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFolderMember(Dropbox.Api.Sharing.RemoveFolderMemberArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFolderMember(Dropbox.Api.Sharing.RemoveFolderMemberArg,System.AsyncCallback,System.Object)
  id: BeginRemoveFolderMember(Dropbox.Api.Sharing.RemoveFolderMemberArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginRemoveFolderMember(RemoveFolderMemberArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginRemoveFolderMember(RemoveFolderMemberArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFolderMember(Dropbox.Api.Sharing.RemoveFolderMemberArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginRemoveFolderMember
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3186
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the remove folder member route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginRemoveFolderMember(RemoveFolderMemberArg removeFolderMemberArg, AsyncCallback callback, object state = null)
    parameters:
    - id: removeFolderMemberArg
      type: Dropbox.Api.Sharing.RemoveFolderMemberArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginRemoveFolderMember(removeFolderMemberArg As RemoveFolderMemberArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFolderMember*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFolderMemberAsync(System.String,Dropbox.Api.Sharing.MemberSelector,System.Boolean)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFolderMemberAsync(System.String,Dropbox.Api.Sharing.MemberSelector,System.Boolean)
  id: RemoveFolderMemberAsync(System.String,Dropbox.Api.Sharing.MemberSelector,System.Boolean)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: RemoveFolderMemberAsync(String, MemberSelector, Boolean)
  nameWithType: SharingUserRoutes.RemoveFolderMemberAsync(String, MemberSelector, Boolean)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFolderMemberAsync(System.String, Dropbox.Api.Sharing.MemberSelector, System.Boolean)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: RemoveFolderMemberAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3208
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Allows an owner or editor (if the ACL update policy allows) of a shared\nfolder to remove another member.</p>\n"
  example: []
  syntax:
    content: public Task<LaunchResultBase> RemoveFolderMemberAsync(string sharedFolderId, MemberSelector member, bool leaveACopy)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: member
      type: Dropbox.Api.Sharing.MemberSelector
      description: The member to remove from the folder.
    - id: leaveACopy
      type: System.Boolean
      description: >-
        If true, the removed user will keep their copy of the

        folder after it&apos;s unshared, assuming it was mounted. Otherwise, it will be removed

        from their Dropbox. This must be set to false when removing a group, or when the

        folder is within a team folder or another shared folder.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Async.LaunchResultBase}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function RemoveFolderMemberAsync(sharedFolderId As String, member As MemberSelector, leaveACopy As Boolean) As Task(Of LaunchResultBase)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFolderMemberAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.RemoveFolderMemberError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFolderMember(System.String,Dropbox.Api.Sharing.MemberSelector,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFolderMember(System.String,Dropbox.Api.Sharing.MemberSelector,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginRemoveFolderMember(System.String,Dropbox.Api.Sharing.MemberSelector,System.Boolean,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginRemoveFolderMember(String, MemberSelector, Boolean, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginRemoveFolderMember(String, MemberSelector, Boolean, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFolderMember(System.String, Dropbox.Api.Sharing.MemberSelector, System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginRemoveFolderMember
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3233
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the remove folder member route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginRemoveFolderMember(string sharedFolderId, MemberSelector member, bool leaveACopy, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: member
      type: Dropbox.Api.Sharing.MemberSelector
      description: The member to remove from the folder.
    - id: leaveACopy
      type: System.Boolean
      description: >-
        If true, the removed user will keep their copy of the

        folder after it&apos;s unshared, assuming it was mounted. Otherwise, it will be removed

        from their Dropbox. This must be set to false when removing a group, or when the

        folder is within a team folder or another shared folder.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginRemoveFolderMember(sharedFolderId As String, member As MemberSelector, leaveACopy As Boolean, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFolderMember*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFolderMember(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFolderMember(System.IAsyncResult)
  id: EndRemoveFolderMember(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndRemoveFolderMember(IAsyncResult)
  nameWithType: SharingUserRoutes.EndRemoveFolderMember(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFolderMember(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndRemoveFolderMember
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3256
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the remove folder member route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public LaunchResultBase EndRemoveFolderMember(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Async.LaunchResultBase
      description: The response to the send request
    content.vb: Public Function EndRemoveFolderMember(asyncResult As IAsyncResult) As LaunchResultBase
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFolderMember*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.RemoveFolderMemberError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RevokeSharedLinkAsync(Dropbox.Api.Sharing.RevokeSharedLinkArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.RevokeSharedLinkAsync(Dropbox.Api.Sharing.RevokeSharedLinkArg)
  id: RevokeSharedLinkAsync(Dropbox.Api.Sharing.RevokeSharedLinkArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: RevokeSharedLinkAsync(RevokeSharedLinkArg)
  nameWithType: SharingUserRoutes.RevokeSharedLinkAsync(RevokeSharedLinkArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RevokeSharedLinkAsync(Dropbox.Api.Sharing.RevokeSharedLinkArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: RevokeSharedLinkAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3281
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Revoke a shared link.</p>\n<p>Note that even after revoking a shared link to a file, the file may be\naccessible if there are shared links leading to any of the file parent folders. To\nlist all shared links that enable access to a specific file, you can use the <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync(Dropbox.Api.Sharing.ListSharedLinksArg)\" data-throw-if-not-resolved=\"false\"></xref> with\nthe file as the <xref href=\"Dropbox.Api.Sharing.ListSharedLinksArg.Path\" data-throw-if-not-resolved=\"false\"></xref>\nargument.</p>\n"
  example: []
  syntax:
    content: public Task RevokeSharedLinkAsync(RevokeSharedLinkArg revokeSharedLinkArg)
    parameters:
    - id: revokeSharedLinkArg
      type: Dropbox.Api.Sharing.RevokeSharedLinkArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function RevokeSharedLinkAsync(revokeSharedLinkArg As RevokeSharedLinkArg) As Task
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RevokeSharedLinkAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.RevokeSharedLinkError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRevokeSharedLink(Dropbox.Api.Sharing.RevokeSharedLinkArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRevokeSharedLink(Dropbox.Api.Sharing.RevokeSharedLinkArg,System.AsyncCallback,System.Object)
  id: BeginRevokeSharedLink(Dropbox.Api.Sharing.RevokeSharedLinkArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginRevokeSharedLink(RevokeSharedLinkArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginRevokeSharedLink(RevokeSharedLinkArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRevokeSharedLink(Dropbox.Api.Sharing.RevokeSharedLinkArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginRevokeSharedLink
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3295
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the revoke shared link route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginRevokeSharedLink(RevokeSharedLinkArg revokeSharedLinkArg, AsyncCallback callback, object state = null)
    parameters:
    - id: revokeSharedLinkArg
      type: Dropbox.Api.Sharing.RevokeSharedLinkArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginRevokeSharedLink(revokeSharedLinkArg As RevokeSharedLinkArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRevokeSharedLink*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RevokeSharedLinkAsync(System.String)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.RevokeSharedLinkAsync(System.String)
  id: RevokeSharedLinkAsync(System.String)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: RevokeSharedLinkAsync(String)
  nameWithType: SharingUserRoutes.RevokeSharedLinkAsync(String)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RevokeSharedLinkAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: RevokeSharedLinkAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3316
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Revoke a shared link.</p>\n<p>Note that even after revoking a shared link to a file, the file may be\naccessible if there are shared links leading to any of the file parent folders. To\nlist all shared links that enable access to a specific file, you can use the <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync(Dropbox.Api.Sharing.ListSharedLinksArg)\" data-throw-if-not-resolved=\"false\"></xref> with\nthe file as the <xref href=\"Dropbox.Api.Sharing.ListSharedLinksArg.Path\" data-throw-if-not-resolved=\"false\"></xref>\nargument.</p>\n"
  example: []
  syntax:
    content: public Task RevokeSharedLinkAsync(string url)
    parameters:
    - id: url
      type: System.String
      description: URL of the shared link.
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function RevokeSharedLinkAsync(url As String) As Task
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RevokeSharedLinkAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.RevokeSharedLinkError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRevokeSharedLink(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRevokeSharedLink(System.String,System.AsyncCallback,System.Object)
  id: BeginRevokeSharedLink(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginRevokeSharedLink(String, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginRevokeSharedLink(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRevokeSharedLink(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginRevokeSharedLink
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3332
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the revoke shared link route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginRevokeSharedLink(string url, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: url
      type: System.String
      description: URL of the shared link.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginRevokeSharedLink(url As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRevokeSharedLink*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRevokeSharedLink(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRevokeSharedLink(System.IAsyncResult)
  id: EndRevokeSharedLink(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndRevokeSharedLink(IAsyncResult)
  nameWithType: SharingUserRoutes.EndRevokeSharedLink(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRevokeSharedLink(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndRevokeSharedLink
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3350
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the revoke shared link route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public void EndRevokeSharedLink(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    content.vb: Public Sub EndRevokeSharedLink(asyncResult As IAsyncResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRevokeSharedLink*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.RevokeSharedLinkError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.SetAccessInheritanceAsync(Dropbox.Api.Sharing.SetAccessInheritanceArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.SetAccessInheritanceAsync(Dropbox.Api.Sharing.SetAccessInheritanceArg)
  id: SetAccessInheritanceAsync(Dropbox.Api.Sharing.SetAccessInheritanceArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: SetAccessInheritanceAsync(SetAccessInheritanceArg)
  nameWithType: SharingUserRoutes.SetAccessInheritanceAsync(SetAccessInheritanceArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.SetAccessInheritanceAsync(Dropbox.Api.Sharing.SetAccessInheritanceArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: SetAccessInheritanceAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3373
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Change the inheritance policy of an existing Shared Folder. Only permitted\nfor shared folders in a shared team root.</p>\n<p>If a <xref href=\"Dropbox.Api.Sharing.ShareFolderLaunch.AsyncJobId\" data-throw-if-not-resolved=\"false\"></xref> is\nreturned, you&apos;ll need to call <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckShareJobStatusAsync(Dropbox.Api.Async.PollArg)\" data-throw-if-not-resolved=\"false\"></xref>\nuntil the action completes to get the metadata for the folder.</p>\n"
  example: []
  syntax:
    content: public Task<ShareFolderLaunch> SetAccessInheritanceAsync(SetAccessInheritanceArg setAccessInheritanceArg)
    parameters:
    - id: setAccessInheritanceArg
      type: Dropbox.Api.Sharing.SetAccessInheritanceArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ShareFolderLaunch}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function SetAccessInheritanceAsync(setAccessInheritanceArg As SetAccessInheritanceArg) As Task(Of ShareFolderLaunch)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.SetAccessInheritanceAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SetAccessInheritanceError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginSetAccessInheritance(Dropbox.Api.Sharing.SetAccessInheritanceArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginSetAccessInheritance(Dropbox.Api.Sharing.SetAccessInheritanceArg,System.AsyncCallback,System.Object)
  id: BeginSetAccessInheritance(Dropbox.Api.Sharing.SetAccessInheritanceArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginSetAccessInheritance(SetAccessInheritanceArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginSetAccessInheritance(SetAccessInheritanceArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginSetAccessInheritance(Dropbox.Api.Sharing.SetAccessInheritanceArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginSetAccessInheritance
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3387
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the set access inheritance route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginSetAccessInheritance(SetAccessInheritanceArg setAccessInheritanceArg, AsyncCallback callback, object state = null)
    parameters:
    - id: setAccessInheritanceArg
      type: Dropbox.Api.Sharing.SetAccessInheritanceArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginSetAccessInheritance(setAccessInheritanceArg As SetAccessInheritanceArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginSetAccessInheritance*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.SetAccessInheritanceAsync(System.String,Dropbox.Api.Sharing.AccessInheritance)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.SetAccessInheritanceAsync(System.String,Dropbox.Api.Sharing.AccessInheritance)
  id: SetAccessInheritanceAsync(System.String,Dropbox.Api.Sharing.AccessInheritance)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: SetAccessInheritanceAsync(String, AccessInheritance)
  nameWithType: SharingUserRoutes.SetAccessInheritanceAsync(String, AccessInheritance)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.SetAccessInheritanceAsync(System.String, Dropbox.Api.Sharing.AccessInheritance)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: SetAccessInheritanceAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3410
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Change the inheritance policy of an existing Shared Folder. Only permitted\nfor shared folders in a shared team root.</p>\n<p>If a <xref href=\"Dropbox.Api.Sharing.ShareFolderLaunch.AsyncJobId\" data-throw-if-not-resolved=\"false\"></xref> is\nreturned, you&apos;ll need to call <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckShareJobStatusAsync(Dropbox.Api.Async.PollArg)\" data-throw-if-not-resolved=\"false\"></xref>\nuntil the action completes to get the metadata for the folder.</p>\n"
  example: []
  syntax:
    content: public Task<ShareFolderLaunch> SetAccessInheritanceAsync(string sharedFolderId, AccessInheritance accessInheritance = null)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: accessInheritance
      type: Dropbox.Api.Sharing.AccessInheritance
      description: >-
        The access inheritance settings for the

        folder.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ShareFolderLaunch}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function SetAccessInheritanceAsync(sharedFolderId As String, accessInheritance As AccessInheritance = Nothing) As Task(Of ShareFolderLaunch)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.SetAccessInheritanceAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SetAccessInheritanceError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginSetAccessInheritance(System.String,Dropbox.Api.Sharing.AccessInheritance,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginSetAccessInheritance(System.String,Dropbox.Api.Sharing.AccessInheritance,System.AsyncCallback,System.Object)
  id: BeginSetAccessInheritance(System.String,Dropbox.Api.Sharing.AccessInheritance,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginSetAccessInheritance(String, AccessInheritance, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginSetAccessInheritance(String, AccessInheritance, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginSetAccessInheritance(System.String, Dropbox.Api.Sharing.AccessInheritance, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginSetAccessInheritance
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3430
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the set access inheritance route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginSetAccessInheritance(string sharedFolderId, AccessInheritance accessInheritance = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: accessInheritance
      type: Dropbox.Api.Sharing.AccessInheritance
      description: >-
        The access inheritance settings for the

        folder.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginSetAccessInheritance(sharedFolderId As String, accessInheritance As AccessInheritance = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginSetAccessInheritance*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndSetAccessInheritance(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndSetAccessInheritance(System.IAsyncResult)
  id: EndSetAccessInheritance(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndSetAccessInheritance(IAsyncResult)
  nameWithType: SharingUserRoutes.EndSetAccessInheritance(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndSetAccessInheritance(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndSetAccessInheritance
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3451
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the set access inheritance route\nto complete</p>\n"
  example: []
  syntax:
    content: public ShareFolderLaunch EndSetAccessInheritance(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.ShareFolderLaunch
      description: The response to the send request
    content.vb: Public Function EndSetAccessInheritance(asyncResult As IAsyncResult) As ShareFolderLaunch
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndSetAccessInheritance*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.SetAccessInheritanceError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ShareFolderAsync(Dropbox.Api.Sharing.ShareFolderArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ShareFolderAsync(Dropbox.Api.Sharing.ShareFolderArg)
  id: ShareFolderAsync(Dropbox.Api.Sharing.ShareFolderArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ShareFolderAsync(ShareFolderArg)
  nameWithType: SharingUserRoutes.ShareFolderAsync(ShareFolderArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ShareFolderAsync(Dropbox.Api.Sharing.ShareFolderArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ShareFolderAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3478
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Share a folder with collaborators.</p>\n<p>Most sharing will be completed synchronously. Large folders will be completed\nasynchronously. To make testing the async case repeatable, set\n`ShareFolderArg.force_async`.</p>\n<p>If a <xref href=\"Dropbox.Api.Sharing.ShareFolderLaunch.AsyncJobId\" data-throw-if-not-resolved=\"false\"></xref> is\nreturned, you&apos;ll need to call <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckShareJobStatusAsync(Dropbox.Api.Async.PollArg)\" data-throw-if-not-resolved=\"false\"></xref>\nuntil the action completes to get the metadata for the folder.</p>\n"
  example: []
  syntax:
    content: public Task<ShareFolderLaunch> ShareFolderAsync(ShareFolderArg shareFolderArg)
    parameters:
    - id: shareFolderArg
      type: Dropbox.Api.Sharing.ShareFolderArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ShareFolderLaunch}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ShareFolderAsync(shareFolderArg As ShareFolderArg) As Task(Of ShareFolderLaunch)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ShareFolderAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ShareFolderError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginShareFolder(Dropbox.Api.Sharing.ShareFolderArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginShareFolder(Dropbox.Api.Sharing.ShareFolderArg,System.AsyncCallback,System.Object)
  id: BeginShareFolder(Dropbox.Api.Sharing.ShareFolderArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginShareFolder(ShareFolderArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginShareFolder(ShareFolderArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginShareFolder(Dropbox.Api.Sharing.ShareFolderArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginShareFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3492
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the share folder route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginShareFolder(ShareFolderArg shareFolderArg, AsyncCallback callback, object state = null)
    parameters:
    - id: shareFolderArg
      type: Dropbox.Api.Sharing.ShareFolderArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginShareFolder(shareFolderArg As ShareFolderArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginShareFolder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ShareFolderAsync(System.String,Dropbox.Api.Sharing.AclUpdatePolicy,System.Boolean,Dropbox.Api.Sharing.MemberPolicy,Dropbox.Api.Sharing.SharedLinkPolicy,Dropbox.Api.Sharing.ViewerInfoPolicy,Dropbox.Api.Sharing.AccessInheritance,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},Dropbox.Api.Sharing.LinkSettings)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ShareFolderAsync(System.String,Dropbox.Api.Sharing.AclUpdatePolicy,System.Boolean,Dropbox.Api.Sharing.MemberPolicy,Dropbox.Api.Sharing.SharedLinkPolicy,Dropbox.Api.Sharing.ViewerInfoPolicy,Dropbox.Api.Sharing.AccessInheritance,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},Dropbox.Api.Sharing.LinkSettings)
  id: ShareFolderAsync(System.String,Dropbox.Api.Sharing.AclUpdatePolicy,System.Boolean,Dropbox.Api.Sharing.MemberPolicy,Dropbox.Api.Sharing.SharedLinkPolicy,Dropbox.Api.Sharing.ViewerInfoPolicy,Dropbox.Api.Sharing.AccessInheritance,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},Dropbox.Api.Sharing.LinkSettings)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: ShareFolderAsync(String, AclUpdatePolicy, Boolean, MemberPolicy, SharedLinkPolicy, ViewerInfoPolicy, AccessInheritance, IEnumerable<FolderAction>, LinkSettings)
  nameWithType: SharingUserRoutes.ShareFolderAsync(String, AclUpdatePolicy, Boolean, MemberPolicy, SharedLinkPolicy, ViewerInfoPolicy, AccessInheritance, IEnumerable<FolderAction>, LinkSettings)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ShareFolderAsync(System.String, Dropbox.Api.Sharing.AclUpdatePolicy, System.Boolean, Dropbox.Api.Sharing.MemberPolicy, Dropbox.Api.Sharing.SharedLinkPolicy, Dropbox.Api.Sharing.ViewerInfoPolicy, Dropbox.Api.Sharing.AccessInheritance, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.FolderAction>, Dropbox.Api.Sharing.LinkSettings)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ShareFolderAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3534
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Share a folder with collaborators.</p>\n<p>Most sharing will be completed synchronously. Large folders will be completed\nasynchronously. To make testing the async case repeatable, set\n`ShareFolderArg.force_async`.</p>\n<p>If a <xref href=\"Dropbox.Api.Sharing.ShareFolderLaunch.AsyncJobId\" data-throw-if-not-resolved=\"false\"></xref> is\nreturned, you&apos;ll need to call <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckShareJobStatusAsync(Dropbox.Api.Async.PollArg)\" data-throw-if-not-resolved=\"false\"></xref>\nuntil the action completes to get the metadata for the folder.</p>\n"
  example: []
  syntax:
    content: public Task<ShareFolderLaunch> ShareFolderAsync(string path, AclUpdatePolicy aclUpdatePolicy = null, bool forceAsync = false, MemberPolicy memberPolicy = null, SharedLinkPolicy sharedLinkPolicy = null, ViewerInfoPolicy viewerInfoPolicy = null, AccessInheritance accessInheritance = null, IEnumerable<FolderAction> actions = null, LinkSettings linkSettings = null)
    parameters:
    - id: path
      type: System.String
      description: >-
        The path to the folder to share. If it does not exist, then a

        new one is created.
    - id: aclUpdatePolicy
      type: Dropbox.Api.Sharing.AclUpdatePolicy
      description: >-
        Who can add and remove members of this shared

        folder.
    - id: forceAsync
      type: System.Boolean
      description: >-
        Whether to force the share to happen

        asynchronously.
    - id: memberPolicy
      type: Dropbox.Api.Sharing.MemberPolicy
      description: >-
        Who can be a member of this shared folder. Only

        applicable if the current user is on a team.
    - id: sharedLinkPolicy
      type: Dropbox.Api.Sharing.SharedLinkPolicy
      description: >-
        The policy to apply to shared links created for

        content inside this shared folder.  The current user must be on a team to set this

        policy to <xref href="Dropbox.Api.Sharing.SharedLinkPolicy.Members" data-throw-if-not-resolved="false"></xref>.
    - id: viewerInfoPolicy
      type: Dropbox.Api.Sharing.ViewerInfoPolicy
      description: >-
        Who can enable/disable viewer info for this shared

        folder.
    - id: accessInheritance
      type: Dropbox.Api.Sharing.AccessInheritance
      description: >-
        The access inheritance settings for the

        folder.
    - id: actions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction}
      description: >-
        A list of `FolderAction`s corresponding to

        `FolderPermission`s that should appear in the  response&apos;s <xref href="Dropbox.Api.Sharing.SharedFolderMetadata.Permissions" data-throw-if-not-resolved="false"></xref> field describing the

        actions the  authenticated user can perform on the folder.
    - id: linkSettings
      type: Dropbox.Api.Sharing.LinkSettings
      description: Settings on the link for this folder.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ShareFolderLaunch}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function ShareFolderAsync(path As String, aclUpdatePolicy As AclUpdatePolicy = Nothing, forceAsync As Boolean = False, memberPolicy As MemberPolicy = Nothing, sharedLinkPolicy As SharedLinkPolicy = Nothing, viewerInfoPolicy As ViewerInfoPolicy = Nothing, accessInheritance As AccessInheritance = Nothing, actions As IEnumerable(Of FolderAction) = Nothing, linkSettings As LinkSettings = Nothing) As Task(Of ShareFolderLaunch)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ShareFolderAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ShareFolderError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: SharingUserRoutes.ShareFolderAsync(String, AclUpdatePolicy, Boolean, MemberPolicy, SharedLinkPolicy, ViewerInfoPolicy, AccessInheritance, IEnumerable(Of FolderAction), LinkSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ShareFolderAsync(System.String, Dropbox.Api.Sharing.AclUpdatePolicy, System.Boolean, Dropbox.Api.Sharing.MemberPolicy, Dropbox.Api.Sharing.SharedLinkPolicy, Dropbox.Api.Sharing.ViewerInfoPolicy, Dropbox.Api.Sharing.AccessInheritance, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.FolderAction), Dropbox.Api.Sharing.LinkSettings)
  name.vb: ShareFolderAsync(String, AclUpdatePolicy, Boolean, MemberPolicy, SharedLinkPolicy, ViewerInfoPolicy, AccessInheritance, IEnumerable(Of FolderAction), LinkSettings)
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginShareFolder(System.String,Dropbox.Api.Sharing.AclUpdatePolicy,System.Boolean,Dropbox.Api.Sharing.MemberPolicy,Dropbox.Api.Sharing.SharedLinkPolicy,Dropbox.Api.Sharing.ViewerInfoPolicy,Dropbox.Api.Sharing.AccessInheritance,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},Dropbox.Api.Sharing.LinkSettings,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginShareFolder(System.String,Dropbox.Api.Sharing.AclUpdatePolicy,System.Boolean,Dropbox.Api.Sharing.MemberPolicy,Dropbox.Api.Sharing.SharedLinkPolicy,Dropbox.Api.Sharing.ViewerInfoPolicy,Dropbox.Api.Sharing.AccessInheritance,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},Dropbox.Api.Sharing.LinkSettings,System.AsyncCallback,System.Object)
  id: BeginShareFolder(System.String,Dropbox.Api.Sharing.AclUpdatePolicy,System.Boolean,Dropbox.Api.Sharing.MemberPolicy,Dropbox.Api.Sharing.SharedLinkPolicy,Dropbox.Api.Sharing.ViewerInfoPolicy,Dropbox.Api.Sharing.AccessInheritance,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},Dropbox.Api.Sharing.LinkSettings,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginShareFolder(String, AclUpdatePolicy, Boolean, MemberPolicy, SharedLinkPolicy, ViewerInfoPolicy, AccessInheritance, IEnumerable<FolderAction>, LinkSettings, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginShareFolder(String, AclUpdatePolicy, Boolean, MemberPolicy, SharedLinkPolicy, ViewerInfoPolicy, AccessInheritance, IEnumerable<FolderAction>, LinkSettings, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginShareFolder(System.String, Dropbox.Api.Sharing.AclUpdatePolicy, System.Boolean, Dropbox.Api.Sharing.MemberPolicy, Dropbox.Api.Sharing.SharedLinkPolicy, Dropbox.Api.Sharing.ViewerInfoPolicy, Dropbox.Api.Sharing.AccessInheritance, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.FolderAction>, Dropbox.Api.Sharing.LinkSettings, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginShareFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3585
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the share folder route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginShareFolder(string path, AclUpdatePolicy aclUpdatePolicy = null, bool forceAsync = false, MemberPolicy memberPolicy = null, SharedLinkPolicy sharedLinkPolicy = null, ViewerInfoPolicy viewerInfoPolicy = null, AccessInheritance accessInheritance = null, IEnumerable<FolderAction> actions = null, LinkSettings linkSettings = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: path
      type: System.String
      description: >-
        The path to the folder to share. If it does not exist, then a

        new one is created.
    - id: aclUpdatePolicy
      type: Dropbox.Api.Sharing.AclUpdatePolicy
      description: >-
        Who can add and remove members of this shared

        folder.
    - id: forceAsync
      type: System.Boolean
      description: >-
        Whether to force the share to happen

        asynchronously.
    - id: memberPolicy
      type: Dropbox.Api.Sharing.MemberPolicy
      description: >-
        Who can be a member of this shared folder. Only

        applicable if the current user is on a team.
    - id: sharedLinkPolicy
      type: Dropbox.Api.Sharing.SharedLinkPolicy
      description: >-
        The policy to apply to shared links created for

        content inside this shared folder.  The current user must be on a team to set this

        policy to <xref href="Dropbox.Api.Sharing.SharedLinkPolicy.Members" data-throw-if-not-resolved="false"></xref>.
    - id: viewerInfoPolicy
      type: Dropbox.Api.Sharing.ViewerInfoPolicy
      description: >-
        Who can enable/disable viewer info for this shared

        folder.
    - id: accessInheritance
      type: Dropbox.Api.Sharing.AccessInheritance
      description: >-
        The access inheritance settings for the

        folder.
    - id: actions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction}
      description: >-
        A list of `FolderAction`s corresponding to

        `FolderPermission`s that should appear in the  response&apos;s <xref href="Dropbox.Api.Sharing.SharedFolderMetadata.Permissions" data-throw-if-not-resolved="false"></xref> field describing the

        actions the  authenticated user can perform on the folder.
    - id: linkSettings
      type: Dropbox.Api.Sharing.LinkSettings
      description: Settings on the link for this folder.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginShareFolder(path As String, aclUpdatePolicy As AclUpdatePolicy = Nothing, forceAsync As Boolean = False, memberPolicy As MemberPolicy = Nothing, sharedLinkPolicy As SharedLinkPolicy = Nothing, viewerInfoPolicy As ViewerInfoPolicy = Nothing, accessInheritance As AccessInheritance = Nothing, actions As IEnumerable(Of FolderAction) = Nothing, linkSettings As LinkSettings = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginShareFolder*
  nameWithType.vb: SharingUserRoutes.BeginShareFolder(String, AclUpdatePolicy, Boolean, MemberPolicy, SharedLinkPolicy, ViewerInfoPolicy, AccessInheritance, IEnumerable(Of FolderAction), LinkSettings, AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginShareFolder(System.String, Dropbox.Api.Sharing.AclUpdatePolicy, System.Boolean, Dropbox.Api.Sharing.MemberPolicy, Dropbox.Api.Sharing.SharedLinkPolicy, Dropbox.Api.Sharing.ViewerInfoPolicy, Dropbox.Api.Sharing.AccessInheritance, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.FolderAction), Dropbox.Api.Sharing.LinkSettings, System.AsyncCallback, System.Object)
  name.vb: BeginShareFolder(String, AclUpdatePolicy, Boolean, MemberPolicy, SharedLinkPolicy, ViewerInfoPolicy, AccessInheritance, IEnumerable(Of FolderAction), LinkSettings, AsyncCallback, Object)
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndShareFolder(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndShareFolder(System.IAsyncResult)
  id: EndShareFolder(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndShareFolder(IAsyncResult)
  nameWithType: SharingUserRoutes.EndShareFolder(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndShareFolder(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndShareFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3620
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the share folder route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public ShareFolderLaunch EndShareFolder(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.ShareFolderLaunch
      description: The response to the send request
    content.vb: Public Function EndShareFolder(asyncResult As IAsyncResult) As ShareFolderLaunch
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndShareFolder*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.ShareFolderError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.TransferFolderAsync(Dropbox.Api.Sharing.TransferFolderArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.TransferFolderAsync(Dropbox.Api.Sharing.TransferFolderArg)
  id: TransferFolderAsync(Dropbox.Api.Sharing.TransferFolderArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: TransferFolderAsync(TransferFolderArg)
  nameWithType: SharingUserRoutes.TransferFolderAsync(TransferFolderArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.TransferFolderAsync(Dropbox.Api.Sharing.TransferFolderArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TransferFolderAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3642
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Transfer ownership of a shared folder to a member of the shared\nfolder.</p>\n<p>User must have <xref href=\"Dropbox.Api.Sharing.AccessLevel.Owner\" data-throw-if-not-resolved=\"false\"></xref> access to\nthe shared folder to perform a transfer.</p>\n"
  example: []
  syntax:
    content: public Task TransferFolderAsync(TransferFolderArg transferFolderArg)
    parameters:
    - id: transferFolderArg
      type: Dropbox.Api.Sharing.TransferFolderArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function TransferFolderAsync(transferFolderArg As TransferFolderArg) As Task
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.TransferFolderAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.TransferFolderError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginTransferFolder(Dropbox.Api.Sharing.TransferFolderArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginTransferFolder(Dropbox.Api.Sharing.TransferFolderArg,System.AsyncCallback,System.Object)
  id: BeginTransferFolder(Dropbox.Api.Sharing.TransferFolderArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginTransferFolder(TransferFolderArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginTransferFolder(TransferFolderArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginTransferFolder(Dropbox.Api.Sharing.TransferFolderArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTransferFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3656
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the transfer folder route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTransferFolder(TransferFolderArg transferFolderArg, AsyncCallback callback, object state = null)
    parameters:
    - id: transferFolderArg
      type: Dropbox.Api.Sharing.TransferFolderArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTransferFolder(transferFolderArg As TransferFolderArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginTransferFolder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.TransferFolderAsync(System.String,System.String)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.TransferFolderAsync(System.String,System.String)
  id: TransferFolderAsync(System.String,System.String)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: TransferFolderAsync(String, String)
  nameWithType: SharingUserRoutes.TransferFolderAsync(String, String)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.TransferFolderAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TransferFolderAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3676
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Transfer ownership of a shared folder to a member of the shared\nfolder.</p>\n<p>User must have <xref href=\"Dropbox.Api.Sharing.AccessLevel.Owner\" data-throw-if-not-resolved=\"false\"></xref> access to\nthe shared folder to perform a transfer.</p>\n"
  example: []
  syntax:
    content: public Task TransferFolderAsync(string sharedFolderId, string toDropboxId)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: toDropboxId
      type: System.String
      description: >-
        A account or team member ID to transfer ownership

        to.
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function TransferFolderAsync(sharedFolderId As String, toDropboxId As String) As Task
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.TransferFolderAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.TransferFolderError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginTransferFolder(System.String,System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginTransferFolder(System.String,System.String,System.AsyncCallback,System.Object)
  id: BeginTransferFolder(System.String,System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginTransferFolder(String, String, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginTransferFolder(String, String, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginTransferFolder(System.String, System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTransferFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3696
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the transfer folder route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTransferFolder(string sharedFolderId, string toDropboxId, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: toDropboxId
      type: System.String
      description: >-
        A account or team member ID to transfer ownership

        to.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTransferFolder(sharedFolderId As String, toDropboxId As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginTransferFolder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndTransferFolder(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndTransferFolder(System.IAsyncResult)
  id: EndTransferFolder(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndTransferFolder(IAsyncResult)
  nameWithType: SharingUserRoutes.EndTransferFolder(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndTransferFolder(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndTransferFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3716
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the transfer folder route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public void EndTransferFolder(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    content.vb: Public Sub EndTransferFolder(asyncResult As IAsyncResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndTransferFolder*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.TransferFolderError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnmountFolderAsync(Dropbox.Api.Sharing.UnmountFolderArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnmountFolderAsync(Dropbox.Api.Sharing.UnmountFolderArg)
  id: UnmountFolderAsync(Dropbox.Api.Sharing.UnmountFolderArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: UnmountFolderAsync(UnmountFolderArg)
  nameWithType: SharingUserRoutes.UnmountFolderAsync(UnmountFolderArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnmountFolderAsync(Dropbox.Api.Sharing.UnmountFolderArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: UnmountFolderAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3735
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>The current user unmounts the designated folder. They can re-mount the folder\nat a later time using <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.MountFolderAsync(Dropbox.Api.Sharing.MountFolderArg)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public Task UnmountFolderAsync(UnmountFolderArg unmountFolderArg)
    parameters:
    - id: unmountFolderArg
      type: Dropbox.Api.Sharing.UnmountFolderArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function UnmountFolderAsync(unmountFolderArg As UnmountFolderArg) As Task
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnmountFolderAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.UnmountFolderError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnmountFolder(Dropbox.Api.Sharing.UnmountFolderArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnmountFolder(Dropbox.Api.Sharing.UnmountFolderArg,System.AsyncCallback,System.Object)
  id: BeginUnmountFolder(Dropbox.Api.Sharing.UnmountFolderArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginUnmountFolder(UnmountFolderArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginUnmountFolder(UnmountFolderArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnmountFolder(Dropbox.Api.Sharing.UnmountFolderArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginUnmountFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3749
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the unmount folder route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginUnmountFolder(UnmountFolderArg unmountFolderArg, AsyncCallback callback, object state = null)
    parameters:
    - id: unmountFolderArg
      type: Dropbox.Api.Sharing.UnmountFolderArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginUnmountFolder(unmountFolderArg As UnmountFolderArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnmountFolder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnmountFolderAsync(System.String)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnmountFolderAsync(System.String)
  id: UnmountFolderAsync(System.String)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: UnmountFolderAsync(String)
  nameWithType: SharingUserRoutes.UnmountFolderAsync(String)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnmountFolderAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: UnmountFolderAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3766
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>The current user unmounts the designated folder. They can re-mount the folder\nat a later time using <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.MountFolderAsync(Dropbox.Api.Sharing.MountFolderArg)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public Task UnmountFolderAsync(string sharedFolderId)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function UnmountFolderAsync(sharedFolderId As String) As Task
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnmountFolderAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.UnmountFolderError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnmountFolder(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnmountFolder(System.String,System.AsyncCallback,System.Object)
  id: BeginUnmountFolder(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginUnmountFolder(String, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginUnmountFolder(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnmountFolder(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginUnmountFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3782
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the unmount folder route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginUnmountFolder(string sharedFolderId, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginUnmountFolder(sharedFolderId As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnmountFolder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnmountFolder(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnmountFolder(System.IAsyncResult)
  id: EndUnmountFolder(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndUnmountFolder(IAsyncResult)
  nameWithType: SharingUserRoutes.EndUnmountFolder(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnmountFolder(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndUnmountFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3800
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the unmount folder route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public void EndUnmountFolder(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    content.vb: Public Sub EndUnmountFolder(asyncResult As IAsyncResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnmountFolder*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.UnmountFolderError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFileAsync(Dropbox.Api.Sharing.UnshareFileArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFileAsync(Dropbox.Api.Sharing.UnshareFileArg)
  id: UnshareFileAsync(Dropbox.Api.Sharing.UnshareFileArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: UnshareFileAsync(UnshareFileArg)
  nameWithType: SharingUserRoutes.UnshareFileAsync(UnshareFileArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFileAsync(Dropbox.Api.Sharing.UnshareFileArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: UnshareFileAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3817
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Remove all members from this file. Does not remove inherited members.</p>\n"
  example: []
  syntax:
    content: public Task UnshareFileAsync(UnshareFileArg unshareFileArg)
    parameters:
    - id: unshareFileArg
      type: Dropbox.Api.Sharing.UnshareFileArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function UnshareFileAsync(unshareFileArg As UnshareFileArg) As Task
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFileAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.UnshareFileError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFile(Dropbox.Api.Sharing.UnshareFileArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFile(Dropbox.Api.Sharing.UnshareFileArg,System.AsyncCallback,System.Object)
  id: BeginUnshareFile(Dropbox.Api.Sharing.UnshareFileArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginUnshareFile(UnshareFileArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginUnshareFile(UnshareFileArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFile(Dropbox.Api.Sharing.UnshareFileArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginUnshareFile
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3831
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the unshare file route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginUnshareFile(UnshareFileArg unshareFileArg, AsyncCallback callback, object state = null)
    parameters:
    - id: unshareFileArg
      type: Dropbox.Api.Sharing.UnshareFileArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginUnshareFile(unshareFileArg As UnshareFileArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFileAsync(System.String)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFileAsync(System.String)
  id: UnshareFileAsync(System.String)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: UnshareFileAsync(String)
  nameWithType: SharingUserRoutes.UnshareFileAsync(String)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFileAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: UnshareFileAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3846
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Remove all members from this file. Does not remove inherited members.</p>\n"
  example: []
  syntax:
    content: public Task UnshareFileAsync(string file)
    parameters:
    - id: file
      type: System.String
      description: The file to unshare.
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function UnshareFileAsync(file As String) As Task
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFileAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.UnshareFileError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFile(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFile(System.String,System.AsyncCallback,System.Object)
  id: BeginUnshareFile(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginUnshareFile(String, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginUnshareFile(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFile(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginUnshareFile
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3862
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the unshare file route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginUnshareFile(string file, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: file
      type: System.String
      description: The file to unshare.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginUnshareFile(file As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnshareFile(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnshareFile(System.IAsyncResult)
  id: EndUnshareFile(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndUnshareFile(IAsyncResult)
  nameWithType: SharingUserRoutes.EndUnshareFile(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnshareFile(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndUnshareFile
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3880
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the unshare file route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public void EndUnshareFile(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    content.vb: Public Sub EndUnshareFile(asyncResult As IAsyncResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnshareFile*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.UnshareFileError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFolderAsync(Dropbox.Api.Sharing.UnshareFolderArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFolderAsync(Dropbox.Api.Sharing.UnshareFolderArg)
  id: UnshareFolderAsync(Dropbox.Api.Sharing.UnshareFolderArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: UnshareFolderAsync(UnshareFolderArg)
  nameWithType: SharingUserRoutes.UnshareFolderAsync(UnshareFolderArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFolderAsync(Dropbox.Api.Sharing.UnshareFolderArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: UnshareFolderAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3901
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Allows a shared folder owner to unshare the folder.</p>\n<p>You&apos;ll need to call <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckJobStatusAsync(Dropbox.Api.Async.PollArg)\" data-throw-if-not-resolved=\"false\"></xref> to\ndetermine if the action has completed successfully.</p>\n"
  example: []
  syntax:
    content: public Task<LaunchEmptyResult> UnshareFolderAsync(UnshareFolderArg unshareFolderArg)
    parameters:
    - id: unshareFolderArg
      type: Dropbox.Api.Sharing.UnshareFolderArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Async.LaunchEmptyResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function UnshareFolderAsync(unshareFolderArg As UnshareFolderArg) As Task(Of LaunchEmptyResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFolderAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.UnshareFolderError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFolder(Dropbox.Api.Sharing.UnshareFolderArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFolder(Dropbox.Api.Sharing.UnshareFolderArg,System.AsyncCallback,System.Object)
  id: BeginUnshareFolder(Dropbox.Api.Sharing.UnshareFolderArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginUnshareFolder(UnshareFolderArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginUnshareFolder(UnshareFolderArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFolder(Dropbox.Api.Sharing.UnshareFolderArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginUnshareFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3915
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the unshare folder route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginUnshareFolder(UnshareFolderArg unshareFolderArg, AsyncCallback callback, object state = null)
    parameters:
    - id: unshareFolderArg
      type: Dropbox.Api.Sharing.UnshareFolderArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginUnshareFolder(unshareFolderArg As UnshareFolderArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFolder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFolderAsync(System.String,System.Boolean)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFolderAsync(System.String,System.Boolean)
  id: UnshareFolderAsync(System.String,System.Boolean)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: UnshareFolderAsync(String, Boolean)
  nameWithType: SharingUserRoutes.UnshareFolderAsync(String, Boolean)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFolderAsync(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: UnshareFolderAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3937
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Allows a shared folder owner to unshare the folder.</p>\n<p>You&apos;ll need to call <xref href=\"Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckJobStatusAsync(Dropbox.Api.Async.PollArg)\" data-throw-if-not-resolved=\"false\"></xref> to\ndetermine if the action has completed successfully.</p>\n"
  example: []
  syntax:
    content: public Task<LaunchEmptyResult> UnshareFolderAsync(string sharedFolderId, bool leaveACopy = false)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: leaveACopy
      type: System.Boolean
      description: >-
        If true, members of this shared folder will get a copy of

        this folder after it&apos;s unshared. Otherwise, it will be removed from their Dropbox.

        The current user, who is an owner, will always retain their copy.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Async.LaunchEmptyResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function UnshareFolderAsync(sharedFolderId As String, leaveACopy As Boolean = False) As Task(Of LaunchEmptyResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFolderAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.UnshareFolderError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFolder(System.String,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFolder(System.String,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginUnshareFolder(System.String,System.Boolean,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginUnshareFolder(String, Boolean, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginUnshareFolder(String, Boolean, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFolder(System.String, System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginUnshareFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3958
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the unshare folder route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginUnshareFolder(string sharedFolderId, bool leaveACopy = false, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: leaveACopy
      type: System.Boolean
      description: >-
        If true, members of this shared folder will get a copy of

        this folder after it&apos;s unshared. Otherwise, it will be removed from their Dropbox.

        The current user, who is an owner, will always retain their copy.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginUnshareFolder(sharedFolderId As String, leaveACopy As Boolean = False, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFolder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnshareFolder(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnshareFolder(System.IAsyncResult)
  id: EndUnshareFolder(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndUnshareFolder(IAsyncResult)
  nameWithType: SharingUserRoutes.EndUnshareFolder(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnshareFolder(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndUnshareFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3979
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the unshare folder route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public LaunchEmptyResult EndUnshareFolder(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Async.LaunchEmptyResult
      description: The response to the send request
    content.vb: Public Function EndUnshareFolder(asyncResult As IAsyncResult) As LaunchEmptyResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnshareFolder*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.UnshareFolderError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFileMemberAsync(Dropbox.Api.Sharing.UpdateFileMemberArgs)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFileMemberAsync(Dropbox.Api.Sharing.UpdateFileMemberArgs)
  id: UpdateFileMemberAsync(Dropbox.Api.Sharing.UpdateFileMemberArgs)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: UpdateFileMemberAsync(UpdateFileMemberArgs)
  nameWithType: SharingUserRoutes.UpdateFileMemberAsync(UpdateFileMemberArgs)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFileMemberAsync(Dropbox.Api.Sharing.UpdateFileMemberArgs)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: UpdateFileMemberAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 3999
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Changes a member&apos;s access on a shared file.</p>\n"
  example: []
  syntax:
    content: public Task<MemberAccessLevelResult> UpdateFileMemberAsync(UpdateFileMemberArgs updateFileMemberArgs)
    parameters:
    - id: updateFileMemberArgs
      type: Dropbox.Api.Sharing.UpdateFileMemberArgs
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.MemberAccessLevelResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function UpdateFileMemberAsync(updateFileMemberArgs As UpdateFileMemberArgs) As Task(Of MemberAccessLevelResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFileMemberAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.FileMemberActionError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFileMember(Dropbox.Api.Sharing.UpdateFileMemberArgs,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFileMember(Dropbox.Api.Sharing.UpdateFileMemberArgs,System.AsyncCallback,System.Object)
  id: BeginUpdateFileMember(Dropbox.Api.Sharing.UpdateFileMemberArgs,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginUpdateFileMember(UpdateFileMemberArgs, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginUpdateFileMember(UpdateFileMemberArgs, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFileMember(Dropbox.Api.Sharing.UpdateFileMemberArgs, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginUpdateFileMember
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 4013
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the update file member route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginUpdateFileMember(UpdateFileMemberArgs updateFileMemberArgs, AsyncCallback callback, object state = null)
    parameters:
    - id: updateFileMemberArgs
      type: Dropbox.Api.Sharing.UpdateFileMemberArgs
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginUpdateFileMember(updateFileMemberArgs As UpdateFileMemberArgs, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFileMember*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFileMemberAsync(System.String,Dropbox.Api.Sharing.MemberSelector,Dropbox.Api.Sharing.AccessLevel)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFileMemberAsync(System.String,Dropbox.Api.Sharing.MemberSelector,Dropbox.Api.Sharing.AccessLevel)
  id: UpdateFileMemberAsync(System.String,Dropbox.Api.Sharing.MemberSelector,Dropbox.Api.Sharing.AccessLevel)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: UpdateFileMemberAsync(String, MemberSelector, AccessLevel)
  nameWithType: SharingUserRoutes.UpdateFileMemberAsync(String, MemberSelector, AccessLevel)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFileMemberAsync(System.String, Dropbox.Api.Sharing.MemberSelector, Dropbox.Api.Sharing.AccessLevel)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: UpdateFileMemberAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 4031
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Changes a member&apos;s access on a shared file.</p>\n"
  example: []
  syntax:
    content: public Task<MemberAccessLevelResult> UpdateFileMemberAsync(string file, MemberSelector member, AccessLevel accessLevel)
    parameters:
    - id: file
      type: System.String
      description: File for which we are changing a member&apos;s access.
    - id: member
      type: Dropbox.Api.Sharing.MemberSelector
      description: The member whose access we are changing.
    - id: accessLevel
      type: Dropbox.Api.Sharing.AccessLevel
      description: The new access level for the member.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.MemberAccessLevelResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function UpdateFileMemberAsync(file As String, member As MemberSelector, accessLevel As AccessLevel) As Task(Of MemberAccessLevelResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFileMemberAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.FileMemberActionError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFileMember(System.String,Dropbox.Api.Sharing.MemberSelector,Dropbox.Api.Sharing.AccessLevel,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFileMember(System.String,Dropbox.Api.Sharing.MemberSelector,Dropbox.Api.Sharing.AccessLevel,System.AsyncCallback,System.Object)
  id: BeginUpdateFileMember(System.String,Dropbox.Api.Sharing.MemberSelector,Dropbox.Api.Sharing.AccessLevel,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginUpdateFileMember(String, MemberSelector, AccessLevel, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginUpdateFileMember(String, MemberSelector, AccessLevel, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFileMember(System.String, Dropbox.Api.Sharing.MemberSelector, Dropbox.Api.Sharing.AccessLevel, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginUpdateFileMember
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 4053
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the update file member route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginUpdateFileMember(string file, MemberSelector member, AccessLevel accessLevel, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: file
      type: System.String
      description: File for which we are changing a member&apos;s access.
    - id: member
      type: Dropbox.Api.Sharing.MemberSelector
      description: The member whose access we are changing.
    - id: accessLevel
      type: Dropbox.Api.Sharing.AccessLevel
      description: The new access level for the member.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginUpdateFileMember(file As String, member As MemberSelector, accessLevel As AccessLevel, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFileMember*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFileMember(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFileMember(System.IAsyncResult)
  id: EndUpdateFileMember(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndUpdateFileMember(IAsyncResult)
  nameWithType: SharingUserRoutes.EndUpdateFileMember(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFileMember(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndUpdateFileMember
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 4076
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the update file member route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public MemberAccessLevelResult EndUpdateFileMember(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.MemberAccessLevelResult
      description: The response to the send request
    content.vb: Public Function EndUpdateFileMember(asyncResult As IAsyncResult) As MemberAccessLevelResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFileMember*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.FileMemberActionError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderMemberAsync(Dropbox.Api.Sharing.UpdateFolderMemberArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderMemberAsync(Dropbox.Api.Sharing.UpdateFolderMemberArg)
  id: UpdateFolderMemberAsync(Dropbox.Api.Sharing.UpdateFolderMemberArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: UpdateFolderMemberAsync(UpdateFolderMemberArg)
  nameWithType: SharingUserRoutes.UpdateFolderMemberAsync(UpdateFolderMemberArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderMemberAsync(Dropbox.Api.Sharing.UpdateFolderMemberArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: UpdateFolderMemberAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 4097
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Allows an owner or editor of a shared folder to update another member&apos;s\npermissions.</p>\n"
  example: []
  syntax:
    content: public Task<MemberAccessLevelResult> UpdateFolderMemberAsync(UpdateFolderMemberArg updateFolderMemberArg)
    parameters:
    - id: updateFolderMemberArg
      type: Dropbox.Api.Sharing.UpdateFolderMemberArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.MemberAccessLevelResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function UpdateFolderMemberAsync(updateFolderMemberArg As UpdateFolderMemberArg) As Task(Of MemberAccessLevelResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderMemberAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.UpdateFolderMemberError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderMember(Dropbox.Api.Sharing.UpdateFolderMemberArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderMember(Dropbox.Api.Sharing.UpdateFolderMemberArg,System.AsyncCallback,System.Object)
  id: BeginUpdateFolderMember(Dropbox.Api.Sharing.UpdateFolderMemberArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginUpdateFolderMember(UpdateFolderMemberArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginUpdateFolderMember(UpdateFolderMemberArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderMember(Dropbox.Api.Sharing.UpdateFolderMemberArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginUpdateFolderMember
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 4111
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the update folder member route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginUpdateFolderMember(UpdateFolderMemberArg updateFolderMemberArg, AsyncCallback callback, object state = null)
    parameters:
    - id: updateFolderMemberArg
      type: Dropbox.Api.Sharing.UpdateFolderMemberArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginUpdateFolderMember(updateFolderMemberArg As UpdateFolderMemberArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderMember*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderMemberAsync(System.String,Dropbox.Api.Sharing.MemberSelector,Dropbox.Api.Sharing.AccessLevel)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderMemberAsync(System.String,Dropbox.Api.Sharing.MemberSelector,Dropbox.Api.Sharing.AccessLevel)
  id: UpdateFolderMemberAsync(System.String,Dropbox.Api.Sharing.MemberSelector,Dropbox.Api.Sharing.AccessLevel)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: UpdateFolderMemberAsync(String, MemberSelector, AccessLevel)
  nameWithType: SharingUserRoutes.UpdateFolderMemberAsync(String, MemberSelector, AccessLevel)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderMemberAsync(System.String, Dropbox.Api.Sharing.MemberSelector, Dropbox.Api.Sharing.AccessLevel)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: UpdateFolderMemberAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 4133
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Allows an owner or editor of a shared folder to update another member&apos;s\npermissions.</p>\n"
  example: []
  syntax:
    content: public Task<MemberAccessLevelResult> UpdateFolderMemberAsync(string sharedFolderId, MemberSelector member, AccessLevel accessLevel)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: member
      type: Dropbox.Api.Sharing.MemberSelector
      description: >-
        The member of the shared folder to update.  Only the <xref href="Dropbox.Api.Sharing.MemberSelector.DropboxId" data-throw-if-not-resolved="false"></xref> may be set at this

        time.
    - id: accessLevel
      type: Dropbox.Api.Sharing.AccessLevel
      description: The new access level for <code data-dev-comment-type="paramref" class="paramref">member</code>. <xref href="Dropbox.Api.Sharing.AccessLevel.Owner" data-throw-if-not-resolved="false"></xref> is disallowed.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.MemberAccessLevelResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function UpdateFolderMemberAsync(sharedFolderId As String, member As MemberSelector, accessLevel As AccessLevel) As Task(Of MemberAccessLevelResult)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderMemberAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.UpdateFolderMemberError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderMember(System.String,Dropbox.Api.Sharing.MemberSelector,Dropbox.Api.Sharing.AccessLevel,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderMember(System.String,Dropbox.Api.Sharing.MemberSelector,Dropbox.Api.Sharing.AccessLevel,System.AsyncCallback,System.Object)
  id: BeginUpdateFolderMember(System.String,Dropbox.Api.Sharing.MemberSelector,Dropbox.Api.Sharing.AccessLevel,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginUpdateFolderMember(String, MemberSelector, AccessLevel, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginUpdateFolderMember(String, MemberSelector, AccessLevel, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderMember(System.String, Dropbox.Api.Sharing.MemberSelector, Dropbox.Api.Sharing.AccessLevel, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginUpdateFolderMember
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 4158
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the update folder member route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginUpdateFolderMember(string sharedFolderId, MemberSelector member, AccessLevel accessLevel, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: member
      type: Dropbox.Api.Sharing.MemberSelector
      description: >-
        The member of the shared folder to update.  Only the <xref href="Dropbox.Api.Sharing.MemberSelector.DropboxId" data-throw-if-not-resolved="false"></xref> may be set at this

        time.
    - id: accessLevel
      type: Dropbox.Api.Sharing.AccessLevel
      description: The new access level for <code data-dev-comment-type="paramref" class="paramref">member</code>. <xref href="Dropbox.Api.Sharing.AccessLevel.Owner" data-throw-if-not-resolved="false"></xref> is disallowed.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginUpdateFolderMember(sharedFolderId As String, member As MemberSelector, accessLevel As AccessLevel, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderMember*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFolderMember(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFolderMember(System.IAsyncResult)
  id: EndUpdateFolderMember(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndUpdateFolderMember(IAsyncResult)
  nameWithType: SharingUserRoutes.EndUpdateFolderMember(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFolderMember(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndUpdateFolderMember
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 4181
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the update folder member route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public MemberAccessLevelResult EndUpdateFolderMember(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.MemberAccessLevelResult
      description: The response to the send request
    content.vb: Public Function EndUpdateFolderMember(asyncResult As IAsyncResult) As MemberAccessLevelResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFolderMember*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.UpdateFolderMemberError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderPolicyAsync(Dropbox.Api.Sharing.UpdateFolderPolicyArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderPolicyAsync(Dropbox.Api.Sharing.UpdateFolderPolicyArg)
  id: UpdateFolderPolicyAsync(Dropbox.Api.Sharing.UpdateFolderPolicyArg)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: UpdateFolderPolicyAsync(UpdateFolderPolicyArg)
  nameWithType: SharingUserRoutes.UpdateFolderPolicyAsync(UpdateFolderPolicyArg)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderPolicyAsync(Dropbox.Api.Sharing.UpdateFolderPolicyArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: UpdateFolderPolicyAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 4203
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Update the sharing policies for a shared folder.</p>\n<p>User must have <xref href=\"Dropbox.Api.Sharing.AccessLevel.Owner\" data-throw-if-not-resolved=\"false\"></xref> access to\nthe shared folder to update its policies.</p>\n"
  example: []
  syntax:
    content: public Task<SharedFolderMetadata> UpdateFolderPolicyAsync(UpdateFolderPolicyArg updateFolderPolicyArg)
    parameters:
    - id: updateFolderPolicyArg
      type: Dropbox.Api.Sharing.UpdateFolderPolicyArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFolderMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function UpdateFolderPolicyAsync(updateFolderPolicyArg As UpdateFolderPolicyArg) As Task(Of SharedFolderMetadata)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderPolicyAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.UpdateFolderPolicyError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderPolicy(Dropbox.Api.Sharing.UpdateFolderPolicyArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderPolicy(Dropbox.Api.Sharing.UpdateFolderPolicyArg,System.AsyncCallback,System.Object)
  id: BeginUpdateFolderPolicy(Dropbox.Api.Sharing.UpdateFolderPolicyArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginUpdateFolderPolicy(UpdateFolderPolicyArg, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginUpdateFolderPolicy(UpdateFolderPolicyArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderPolicy(Dropbox.Api.Sharing.UpdateFolderPolicyArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginUpdateFolderPolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 4217
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the update folder policy route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginUpdateFolderPolicy(UpdateFolderPolicyArg updateFolderPolicyArg, AsyncCallback callback, object state = null)
    parameters:
    - id: updateFolderPolicyArg
      type: Dropbox.Api.Sharing.UpdateFolderPolicyArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginUpdateFolderPolicy(updateFolderPolicyArg As UpdateFolderPolicyArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderPolicy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderPolicyAsync(System.String,Dropbox.Api.Sharing.MemberPolicy,Dropbox.Api.Sharing.AclUpdatePolicy,Dropbox.Api.Sharing.ViewerInfoPolicy,Dropbox.Api.Sharing.SharedLinkPolicy,Dropbox.Api.Sharing.LinkSettings,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction})
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderPolicyAsync(System.String,Dropbox.Api.Sharing.MemberPolicy,Dropbox.Api.Sharing.AclUpdatePolicy,Dropbox.Api.Sharing.ViewerInfoPolicy,Dropbox.Api.Sharing.SharedLinkPolicy,Dropbox.Api.Sharing.LinkSettings,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction})
  id: UpdateFolderPolicyAsync(System.String,Dropbox.Api.Sharing.MemberPolicy,Dropbox.Api.Sharing.AclUpdatePolicy,Dropbox.Api.Sharing.ViewerInfoPolicy,Dropbox.Api.Sharing.SharedLinkPolicy,Dropbox.Api.Sharing.LinkSettings,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction})
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: UpdateFolderPolicyAsync(String, MemberPolicy, AclUpdatePolicy, ViewerInfoPolicy, SharedLinkPolicy, LinkSettings, IEnumerable<FolderAction>)
  nameWithType: SharingUserRoutes.UpdateFolderPolicyAsync(String, MemberPolicy, AclUpdatePolicy, ViewerInfoPolicy, SharedLinkPolicy, LinkSettings, IEnumerable<FolderAction>)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderPolicyAsync(System.String, Dropbox.Api.Sharing.MemberPolicy, Dropbox.Api.Sharing.AclUpdatePolicy, Dropbox.Api.Sharing.ViewerInfoPolicy, Dropbox.Api.Sharing.SharedLinkPolicy, Dropbox.Api.Sharing.LinkSettings, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.FolderAction>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: UpdateFolderPolicyAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 4249
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Update the sharing policies for a shared folder.</p>\n<p>User must have <xref href=\"Dropbox.Api.Sharing.AccessLevel.Owner\" data-throw-if-not-resolved=\"false\"></xref> access to\nthe shared folder to update its policies.</p>\n"
  example: []
  syntax:
    content: public Task<SharedFolderMetadata> UpdateFolderPolicyAsync(string sharedFolderId, MemberPolicy memberPolicy = null, AclUpdatePolicy aclUpdatePolicy = null, ViewerInfoPolicy viewerInfoPolicy = null, SharedLinkPolicy sharedLinkPolicy = null, LinkSettings linkSettings = null, IEnumerable<FolderAction> actions = null)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: memberPolicy
      type: Dropbox.Api.Sharing.MemberPolicy
      description: >-
        Who can be a member of this shared folder. Only

        applicable if the current user is on a team.
    - id: aclUpdatePolicy
      type: Dropbox.Api.Sharing.AclUpdatePolicy
      description: >-
        Who can add and remove members of this shared

        folder.
    - id: viewerInfoPolicy
      type: Dropbox.Api.Sharing.ViewerInfoPolicy
      description: >-
        Who can enable/disable viewer info for this shared

        folder.
    - id: sharedLinkPolicy
      type: Dropbox.Api.Sharing.SharedLinkPolicy
      description: >-
        The policy to apply to shared links created for

        content inside this shared folder. The current user must be on a team to set this

        policy to <xref href="Dropbox.Api.Sharing.SharedLinkPolicy.Members" data-throw-if-not-resolved="false"></xref>.
    - id: linkSettings
      type: Dropbox.Api.Sharing.LinkSettings
      description: Settings on the link for this folder.
    - id: actions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction}
      description: >-
        A list of `FolderAction`s corresponding to

        `FolderPermission`s that should appear in the  response&apos;s <xref href="Dropbox.Api.Sharing.SharedFolderMetadata.Permissions" data-throw-if-not-resolved="false"></xref> field describing the

        actions the  authenticated user can perform on the folder.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFolderMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function UpdateFolderPolicyAsync(sharedFolderId As String, memberPolicy As MemberPolicy = Nothing, aclUpdatePolicy As AclUpdatePolicy = Nothing, viewerInfoPolicy As ViewerInfoPolicy = Nothing, sharedLinkPolicy As SharedLinkPolicy = Nothing, linkSettings As LinkSettings = Nothing, actions As IEnumerable(Of FolderAction) = Nothing) As Task(Of SharedFolderMetadata)
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderPolicyAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.UpdateFolderPolicyError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: SharingUserRoutes.UpdateFolderPolicyAsync(String, MemberPolicy, AclUpdatePolicy, ViewerInfoPolicy, SharedLinkPolicy, LinkSettings, IEnumerable(Of FolderAction))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderPolicyAsync(System.String, Dropbox.Api.Sharing.MemberPolicy, Dropbox.Api.Sharing.AclUpdatePolicy, Dropbox.Api.Sharing.ViewerInfoPolicy, Dropbox.Api.Sharing.SharedLinkPolicy, Dropbox.Api.Sharing.LinkSettings, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.FolderAction))
  name.vb: UpdateFolderPolicyAsync(String, MemberPolicy, AclUpdatePolicy, ViewerInfoPolicy, SharedLinkPolicy, LinkSettings, IEnumerable(Of FolderAction))
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderPolicy(System.String,Dropbox.Api.Sharing.MemberPolicy,Dropbox.Api.Sharing.AclUpdatePolicy,Dropbox.Api.Sharing.ViewerInfoPolicy,Dropbox.Api.Sharing.SharedLinkPolicy,Dropbox.Api.Sharing.LinkSettings,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderPolicy(System.String,Dropbox.Api.Sharing.MemberPolicy,Dropbox.Api.Sharing.AclUpdatePolicy,Dropbox.Api.Sharing.ViewerInfoPolicy,Dropbox.Api.Sharing.SharedLinkPolicy,Dropbox.Api.Sharing.LinkSettings,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},System.AsyncCallback,System.Object)
  id: BeginUpdateFolderPolicy(System.String,Dropbox.Api.Sharing.MemberPolicy,Dropbox.Api.Sharing.AclUpdatePolicy,Dropbox.Api.Sharing.ViewerInfoPolicy,Dropbox.Api.Sharing.SharedLinkPolicy,Dropbox.Api.Sharing.LinkSettings,System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: BeginUpdateFolderPolicy(String, MemberPolicy, AclUpdatePolicy, ViewerInfoPolicy, SharedLinkPolicy, LinkSettings, IEnumerable<FolderAction>, AsyncCallback, Object)
  nameWithType: SharingUserRoutes.BeginUpdateFolderPolicy(String, MemberPolicy, AclUpdatePolicy, ViewerInfoPolicy, SharedLinkPolicy, LinkSettings, IEnumerable<FolderAction>, AsyncCallback, Object)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderPolicy(System.String, Dropbox.Api.Sharing.MemberPolicy, Dropbox.Api.Sharing.AclUpdatePolicy, Dropbox.Api.Sharing.ViewerInfoPolicy, Dropbox.Api.Sharing.SharedLinkPolicy, Dropbox.Api.Sharing.LinkSettings, System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.FolderAction>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginUpdateFolderPolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 4291
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Begins an asynchronous send to the update folder policy route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginUpdateFolderPolicy(string sharedFolderId, MemberPolicy memberPolicy = null, AclUpdatePolicy aclUpdatePolicy = null, ViewerInfoPolicy viewerInfoPolicy = null, SharedLinkPolicy sharedLinkPolicy = null, LinkSettings linkSettings = null, IEnumerable<FolderAction> actions = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: sharedFolderId
      type: System.String
      description: The ID for the shared folder.
    - id: memberPolicy
      type: Dropbox.Api.Sharing.MemberPolicy
      description: >-
        Who can be a member of this shared folder. Only

        applicable if the current user is on a team.
    - id: aclUpdatePolicy
      type: Dropbox.Api.Sharing.AclUpdatePolicy
      description: >-
        Who can add and remove members of this shared

        folder.
    - id: viewerInfoPolicy
      type: Dropbox.Api.Sharing.ViewerInfoPolicy
      description: >-
        Who can enable/disable viewer info for this shared

        folder.
    - id: sharedLinkPolicy
      type: Dropbox.Api.Sharing.SharedLinkPolicy
      description: >-
        The policy to apply to shared links created for

        content inside this shared folder. The current user must be on a team to set this

        policy to <xref href="Dropbox.Api.Sharing.SharedLinkPolicy.Members" data-throw-if-not-resolved="false"></xref>.
    - id: linkSettings
      type: Dropbox.Api.Sharing.LinkSettings
      description: Settings on the link for this folder.
    - id: actions
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction}
      description: >-
        A list of `FolderAction`s corresponding to

        `FolderPermission`s that should appear in the  response&apos;s <xref href="Dropbox.Api.Sharing.SharedFolderMetadata.Permissions" data-throw-if-not-resolved="false"></xref> field describing the

        actions the  authenticated user can perform on the folder.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginUpdateFolderPolicy(sharedFolderId As String, memberPolicy As MemberPolicy = Nothing, aclUpdatePolicy As AclUpdatePolicy = Nothing, viewerInfoPolicy As ViewerInfoPolicy = Nothing, sharedLinkPolicy As SharedLinkPolicy = Nothing, linkSettings As LinkSettings = Nothing, actions As IEnumerable(Of FolderAction) = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderPolicy*
  nameWithType.vb: SharingUserRoutes.BeginUpdateFolderPolicy(String, MemberPolicy, AclUpdatePolicy, ViewerInfoPolicy, SharedLinkPolicy, LinkSettings, IEnumerable(Of FolderAction), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderPolicy(System.String, Dropbox.Api.Sharing.MemberPolicy, Dropbox.Api.Sharing.AclUpdatePolicy, Dropbox.Api.Sharing.ViewerInfoPolicy, Dropbox.Api.Sharing.SharedLinkPolicy, Dropbox.Api.Sharing.LinkSettings, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.FolderAction), System.AsyncCallback, System.Object)
  name.vb: BeginUpdateFolderPolicy(String, MemberPolicy, AclUpdatePolicy, ViewerInfoPolicy, SharedLinkPolicy, LinkSettings, IEnumerable(Of FolderAction), AsyncCallback, Object)
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFolderPolicy(System.IAsyncResult)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFolderPolicy(System.IAsyncResult)
  id: EndUpdateFolderPolicy(System.IAsyncResult)
  parent: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  langs:
  - csharp
  - vb
  name: EndUpdateFolderPolicy(IAsyncResult)
  nameWithType: SharingUserRoutes.EndUpdateFolderPolicy(IAsyncResult)
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFolderPolicy(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndUpdateFolderPolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/SharingUserRoutes.cs
    startLine: 4322
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the update folder policy route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public SharedFolderMetadata EndUpdateFolderPolicy(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Sharing.SharedFolderMetadata
      description: The response to the send request
    content.vb: Public Function EndUpdateFolderPolicy(asyncResult As IAsyncResult) As SharedFolderMetadata
  overload: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFolderPolicy*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Sharing.UpdateFolderPolicyError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Dropbox.Api.Sharing
  commentId: N:Dropbox.Api.Sharing
  name: Dropbox.Api.Sharing
  nameWithType: Dropbox.Api.Sharing
  fullName: Dropbox.Api.Sharing
- uid: Dropbox.Api.Sharing.Routes
  commentId: N:Dropbox.Api.Sharing.Routes
  name: Dropbox.Api.Sharing.Routes
  nameWithType: Dropbox.Api.Sharing.Routes
  fullName: Dropbox.Api.Sharing.Routes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Sharing.AddFileMemberError
  commentId: T:Dropbox.Api.Sharing.AddFileMemberError
  parent: Dropbox.Api.Sharing
  name: AddFileMemberError
  nameWithType: AddFileMemberError
  fullName: Dropbox.Api.Sharing.AddFileMemberError
- uid: Dropbox.Api.ApiException`1
  commentId: T:Dropbox.Api.ApiException`1
  name: ApiException<TError>
  nameWithType: ApiException<TError>
  fullName: Dropbox.Api.ApiException<TError>
  nameWithType.vb: ApiException(Of TError)
  fullName.vb: Dropbox.Api.ApiException(Of TError)
  name.vb: ApiException(Of TError)
  spec.csharp:
  - uid: Dropbox.Api.ApiException`1
    name: ApiException
    nameWithType: ApiException
    fullName: Dropbox.Api.ApiException
  - name: <
    nameWithType: <
    fullName: <
  - name: TError
    nameWithType: TError
    fullName: TError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dropbox.Api.ApiException`1
    name: ApiException
    nameWithType: ApiException
    fullName: Dropbox.Api.ApiException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TError
    nameWithType: TError
    fullName: TError
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFileMemberAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFileMemberAsync
  name: AddFileMemberAsync
  nameWithType: SharingUserRoutes.AddFileMemberAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFileMemberAsync
- uid: Dropbox.Api.Sharing.AddFileMemberArgs
  commentId: T:Dropbox.Api.Sharing.AddFileMemberArgs
  parent: Dropbox.Api.Sharing
  name: AddFileMemberArgs
  nameWithType: AddFileMemberArgs
  fullName: Dropbox.Api.Sharing.AddFileMemberArgs
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Sharing.FileMemberActionResult}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Sharing.FileMemberActionResult}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<FileMemberActionResult>>
  nameWithType: Task<List<FileMemberActionResult>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Dropbox.Api.Sharing.FileMemberActionResult>>
  nameWithType.vb: Task(Of List(Of FileMemberActionResult))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Dropbox.Api.Sharing.FileMemberActionResult))
  name.vb: Task(Of List(Of FileMemberActionResult))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.FileMemberActionResult
    name: FileMemberActionResult
    nameWithType: FileMemberActionResult
    fullName: Dropbox.Api.Sharing.FileMemberActionResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.FileMemberActionResult
    name: FileMemberActionResult
    nameWithType: FileMemberActionResult
    fullName: Dropbox.Api.Sharing.FileMemberActionResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFileMember*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFileMember
  name: BeginAddFileMember
  nameWithType: SharingUserRoutes.BeginAddFileMember
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFileMember
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberSelector}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberSelector}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<MemberSelector>
  nameWithType: IEnumerable<MemberSelector>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.MemberSelector>
  nameWithType.vb: IEnumerable(Of MemberSelector)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.MemberSelector)
  name.vb: IEnumerable(Of MemberSelector)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.MemberSelector
    name: MemberSelector
    nameWithType: MemberSelector
    fullName: Dropbox.Api.Sharing.MemberSelector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.MemberSelector
    name: MemberSelector
    nameWithType: MemberSelector
    fullName: Dropbox.Api.Sharing.MemberSelector
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Sharing.AccessLevel
  commentId: T:Dropbox.Api.Sharing.AccessLevel
  parent: Dropbox.Api.Sharing
  name: AccessLevel
  nameWithType: AccessLevel
  fullName: Dropbox.Api.Sharing.AccessLevel
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndAddFileMember*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndAddFileMember
  name: EndAddFileMember
  nameWithType: SharingUserRoutes.EndAddFileMember
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndAddFileMember
- uid: System.Collections.Generic.List{Dropbox.Api.Sharing.FileMemberActionResult}
  commentId: T:System.Collections.Generic.List{Dropbox.Api.Sharing.FileMemberActionResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<FileMemberActionResult>
  nameWithType: List<FileMemberActionResult>
  fullName: System.Collections.Generic.List<Dropbox.Api.Sharing.FileMemberActionResult>
  nameWithType.vb: List(Of FileMemberActionResult)
  fullName.vb: System.Collections.Generic.List(Of Dropbox.Api.Sharing.FileMemberActionResult)
  name.vb: List(Of FileMemberActionResult)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.FileMemberActionResult
    name: FileMemberActionResult
    nameWithType: FileMemberActionResult
    fullName: Dropbox.Api.Sharing.FileMemberActionResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.FileMemberActionResult
    name: FileMemberActionResult
    nameWithType: FileMemberActionResult
    fullName: Dropbox.Api.Sharing.FileMemberActionResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.MountFolderAsync(Dropbox.Api.Sharing.MountFolderArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.MountFolderAsync(Dropbox.Api.Sharing.MountFolderArg)
  isExternal: true
- uid: Dropbox.Api.Sharing.AddFolderMemberError
  commentId: T:Dropbox.Api.Sharing.AddFolderMemberError
  parent: Dropbox.Api.Sharing
  name: AddFolderMemberError
  nameWithType: AddFolderMemberError
  fullName: Dropbox.Api.Sharing.AddFolderMemberError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFolderMemberAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFolderMemberAsync
  name: AddFolderMemberAsync
  nameWithType: SharingUserRoutes.AddFolderMemberAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.AddFolderMemberAsync
- uid: Dropbox.Api.Sharing.AddFolderMemberArg
  commentId: T:Dropbox.Api.Sharing.AddFolderMemberArg
  parent: Dropbox.Api.Sharing
  name: AddFolderMemberArg
  nameWithType: AddFolderMemberArg
  fullName: Dropbox.Api.Sharing.AddFolderMemberArg
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFolderMember*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFolderMember
  name: BeginAddFolderMember
  nameWithType: SharingUserRoutes.BeginAddFolderMember
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginAddFolderMember
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.AddMember}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.AddMember}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<AddMember>
  nameWithType: IEnumerable<AddMember>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.AddMember>
  nameWithType.vb: IEnumerable(Of AddMember)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.AddMember)
  name.vb: IEnumerable(Of AddMember)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.AddMember
    name: AddMember
    nameWithType: AddMember
    fullName: Dropbox.Api.Sharing.AddMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.AddMember
    name: AddMember
    nameWithType: AddMember
    fullName: Dropbox.Api.Sharing.AddMember
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndAddFolderMember*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndAddFolderMember
  name: EndAddFolderMember
  nameWithType: SharingUserRoutes.EndAddFolderMember
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndAddFolderMember
- uid: Dropbox.Api.Async.PollError
  commentId: T:Dropbox.Api.Async.PollError
  parent: Dropbox.Api.Async
  name: PollError
  nameWithType: PollError
  fullName: Dropbox.Api.Async.PollError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckJobStatusAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckJobStatusAsync
  name: CheckJobStatusAsync
  nameWithType: SharingUserRoutes.CheckJobStatusAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckJobStatusAsync
- uid: Dropbox.Api.Async.PollArg
  commentId: T:Dropbox.Api.Async.PollArg
  parent: Dropbox.Api.Async
  name: PollArg
  nameWithType: PollArg
  fullName: Dropbox.Api.Async.PollArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Sharing.JobStatus}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Sharing.JobStatus}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<JobStatus>
  nameWithType: Task<JobStatus>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Sharing.JobStatus>
  nameWithType.vb: Task(Of JobStatus)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Sharing.JobStatus)
  name.vb: Task(Of JobStatus)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.JobStatus
    name: JobStatus
    nameWithType: JobStatus
    fullName: Dropbox.Api.Sharing.JobStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.JobStatus
    name: JobStatus
    nameWithType: JobStatus
    fullName: Dropbox.Api.Sharing.JobStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Async
  commentId: N:Dropbox.Api.Async
  name: Dropbox.Api.Async
  nameWithType: Dropbox.Api.Async
  fullName: Dropbox.Api.Async
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckJobStatus*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckJobStatus
  name: BeginCheckJobStatus
  nameWithType: SharingUserRoutes.BeginCheckJobStatus
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckJobStatus
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckJobStatus*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckJobStatus
  name: EndCheckJobStatus
  nameWithType: SharingUserRoutes.EndCheckJobStatus
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckJobStatus
- uid: Dropbox.Api.Sharing.JobStatus
  commentId: T:Dropbox.Api.Sharing.JobStatus
  parent: Dropbox.Api.Sharing
  name: JobStatus
  nameWithType: JobStatus
  fullName: Dropbox.Api.Sharing.JobStatus
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckRemoveMemberJobStatusAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckRemoveMemberJobStatusAsync
  name: CheckRemoveMemberJobStatusAsync
  nameWithType: SharingUserRoutes.CheckRemoveMemberJobStatusAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckRemoveMemberJobStatusAsync
- uid: System.Threading.Tasks.Task{Dropbox.Api.Sharing.RemoveMemberJobStatus}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Sharing.RemoveMemberJobStatus}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RemoveMemberJobStatus>
  nameWithType: Task<RemoveMemberJobStatus>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Sharing.RemoveMemberJobStatus>
  nameWithType.vb: Task(Of RemoveMemberJobStatus)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Sharing.RemoveMemberJobStatus)
  name.vb: Task(Of RemoveMemberJobStatus)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.RemoveMemberJobStatus
    name: RemoveMemberJobStatus
    nameWithType: RemoveMemberJobStatus
    fullName: Dropbox.Api.Sharing.RemoveMemberJobStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.RemoveMemberJobStatus
    name: RemoveMemberJobStatus
    nameWithType: RemoveMemberJobStatus
    fullName: Dropbox.Api.Sharing.RemoveMemberJobStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckRemoveMemberJobStatus*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckRemoveMemberJobStatus
  name: BeginCheckRemoveMemberJobStatus
  nameWithType: SharingUserRoutes.BeginCheckRemoveMemberJobStatus
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckRemoveMemberJobStatus
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckRemoveMemberJobStatus*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckRemoveMemberJobStatus
  name: EndCheckRemoveMemberJobStatus
  nameWithType: SharingUserRoutes.EndCheckRemoveMemberJobStatus
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckRemoveMemberJobStatus
- uid: Dropbox.Api.Sharing.RemoveMemberJobStatus
  commentId: T:Dropbox.Api.Sharing.RemoveMemberJobStatus
  parent: Dropbox.Api.Sharing
  name: RemoveMemberJobStatus
  nameWithType: RemoveMemberJobStatus
  fullName: Dropbox.Api.Sharing.RemoveMemberJobStatus
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckShareJobStatusAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckShareJobStatusAsync
  name: CheckShareJobStatusAsync
  nameWithType: SharingUserRoutes.CheckShareJobStatusAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckShareJobStatusAsync
- uid: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ShareFolderJobStatus}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Sharing.ShareFolderJobStatus}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ShareFolderJobStatus>
  nameWithType: Task<ShareFolderJobStatus>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Sharing.ShareFolderJobStatus>
  nameWithType.vb: Task(Of ShareFolderJobStatus)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Sharing.ShareFolderJobStatus)
  name.vb: Task(Of ShareFolderJobStatus)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.ShareFolderJobStatus
    name: ShareFolderJobStatus
    nameWithType: ShareFolderJobStatus
    fullName: Dropbox.Api.Sharing.ShareFolderJobStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.ShareFolderJobStatus
    name: ShareFolderJobStatus
    nameWithType: ShareFolderJobStatus
    fullName: Dropbox.Api.Sharing.ShareFolderJobStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckShareJobStatus*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckShareJobStatus
  name: BeginCheckShareJobStatus
  nameWithType: SharingUserRoutes.BeginCheckShareJobStatus
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCheckShareJobStatus
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckShareJobStatus*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckShareJobStatus
  name: EndCheckShareJobStatus
  nameWithType: SharingUserRoutes.EndCheckShareJobStatus
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCheckShareJobStatus
- uid: Dropbox.Api.Sharing.ShareFolderJobStatus
  commentId: T:Dropbox.Api.Sharing.ShareFolderJobStatus
  parent: Dropbox.Api.Sharing
  name: ShareFolderJobStatus
  nameWithType: ShareFolderJobStatus
  fullName: Dropbox.Api.Sharing.ShareFolderJobStatus
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RevokeSharedLinkAsync(Dropbox.Api.Sharing.RevokeSharedLinkArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.RevokeSharedLinkAsync(Dropbox.Api.Sharing.RevokeSharedLinkArg)
  isExternal: true
- uid: Dropbox.Api.Sharing.CreateSharedLinkError
  commentId: T:Dropbox.Api.Sharing.CreateSharedLinkError
  parent: Dropbox.Api.Sharing
  name: CreateSharedLinkError
  nameWithType: CreateSharedLinkError
  fullName: Dropbox.Api.Sharing.CreateSharedLinkError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkAsync
  name: CreateSharedLinkAsync
  nameWithType: SharingUserRoutes.CreateSharedLinkAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkAsync
- uid: Dropbox.Api.Sharing.CreateSharedLinkArg
  commentId: T:Dropbox.Api.Sharing.CreateSharedLinkArg
  parent: Dropbox.Api.Sharing
  name: CreateSharedLinkArg
  nameWithType: CreateSharedLinkArg
  fullName: Dropbox.Api.Sharing.CreateSharedLinkArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Sharing.PathLinkMetadata}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Sharing.PathLinkMetadata}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PathLinkMetadata>
  nameWithType: Task<PathLinkMetadata>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Sharing.PathLinkMetadata>
  nameWithType.vb: Task(Of PathLinkMetadata)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Sharing.PathLinkMetadata)
  name.vb: Task(Of PathLinkMetadata)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.PathLinkMetadata
    name: PathLinkMetadata
    nameWithType: PathLinkMetadata
    fullName: Dropbox.Api.Sharing.PathLinkMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.PathLinkMetadata
    name: PathLinkMetadata
    nameWithType: PathLinkMetadata
    fullName: Dropbox.Api.Sharing.PathLinkMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLink*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLink
  name: BeginCreateSharedLink
  nameWithType: SharingUserRoutes.BeginCreateSharedLink
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLink
- uid: Dropbox.Api.Sharing.PendingUploadMode.File
  commentId: T:Dropbox.Api.Sharing.PendingUploadMode.File
  parent: Dropbox.Api.Sharing
  name: PendingUploadMode.File
  nameWithType: PendingUploadMode.File
  fullName: Dropbox.Api.Sharing.PendingUploadMode.File
- uid: Dropbox.Api.Sharing.PendingUploadMode.Folder
  commentId: T:Dropbox.Api.Sharing.PendingUploadMode.Folder
  parent: Dropbox.Api.Sharing
  name: PendingUploadMode.Folder
  nameWithType: PendingUploadMode.Folder
  fullName: Dropbox.Api.Sharing.PendingUploadMode.Folder
- uid: Dropbox.Api.Sharing.PendingUploadMode
  commentId: T:Dropbox.Api.Sharing.PendingUploadMode
  parent: Dropbox.Api.Sharing
  name: PendingUploadMode
  nameWithType: PendingUploadMode
  fullName: Dropbox.Api.Sharing.PendingUploadMode
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCreateSharedLink*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCreateSharedLink
  name: EndCreateSharedLink
  nameWithType: SharingUserRoutes.EndCreateSharedLink
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCreateSharedLink
- uid: Dropbox.Api.Sharing.PathLinkMetadata
  commentId: T:Dropbox.Api.Sharing.PathLinkMetadata
  parent: Dropbox.Api.Sharing
  name: PathLinkMetadata
  nameWithType: PathLinkMetadata
  fullName: Dropbox.Api.Sharing.PathLinkMetadata
- uid: Dropbox.Api.Sharing.RequestedVisibility.Public
  commentId: T:Dropbox.Api.Sharing.RequestedVisibility.Public
  parent: Dropbox.Api.Sharing
  name: RequestedVisibility.Public
  nameWithType: RequestedVisibility.Public
  fullName: Dropbox.Api.Sharing.RequestedVisibility.Public
- uid: Dropbox.Api.Sharing.CreateSharedLinkWithSettingsError
  commentId: T:Dropbox.Api.Sharing.CreateSharedLinkWithSettingsError
  parent: Dropbox.Api.Sharing
  name: CreateSharedLinkWithSettingsError
  nameWithType: CreateSharedLinkWithSettingsError
  fullName: Dropbox.Api.Sharing.CreateSharedLinkWithSettingsError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkWithSettingsAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkWithSettingsAsync
  name: CreateSharedLinkWithSettingsAsync
  nameWithType: SharingUserRoutes.CreateSharedLinkWithSettingsAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CreateSharedLinkWithSettingsAsync
- uid: Dropbox.Api.Sharing.CreateSharedLinkWithSettingsArg
  commentId: T:Dropbox.Api.Sharing.CreateSharedLinkWithSettingsArg
  parent: Dropbox.Api.Sharing
  name: CreateSharedLinkWithSettingsArg
  nameWithType: CreateSharedLinkWithSettingsArg
  fullName: Dropbox.Api.Sharing.CreateSharedLinkWithSettingsArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedLinkMetadata}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedLinkMetadata}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<SharedLinkMetadata>
  nameWithType: Task<SharedLinkMetadata>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Sharing.SharedLinkMetadata>
  nameWithType.vb: Task(Of SharedLinkMetadata)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Sharing.SharedLinkMetadata)
  name.vb: Task(Of SharedLinkMetadata)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.SharedLinkMetadata
    name: SharedLinkMetadata
    nameWithType: SharedLinkMetadata
    fullName: Dropbox.Api.Sharing.SharedLinkMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.SharedLinkMetadata
    name: SharedLinkMetadata
    nameWithType: SharedLinkMetadata
    fullName: Dropbox.Api.Sharing.SharedLinkMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLinkWithSettings*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLinkWithSettings
  name: BeginCreateSharedLinkWithSettings
  nameWithType: SharingUserRoutes.BeginCreateSharedLinkWithSettings
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginCreateSharedLinkWithSettings
- uid: Dropbox.Api.Sharing.SharedLinkSettings
  commentId: T:Dropbox.Api.Sharing.SharedLinkSettings
  parent: Dropbox.Api.Sharing
  name: SharedLinkSettings
  nameWithType: SharedLinkSettings
  fullName: Dropbox.Api.Sharing.SharedLinkSettings
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCreateSharedLinkWithSettings*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCreateSharedLinkWithSettings
  name: EndCreateSharedLinkWithSettings
  nameWithType: SharingUserRoutes.EndCreateSharedLinkWithSettings
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndCreateSharedLinkWithSettings
- uid: Dropbox.Api.Sharing.SharedLinkMetadata
  commentId: T:Dropbox.Api.Sharing.SharedLinkMetadata
  parent: Dropbox.Api.Sharing
  name: SharedLinkMetadata
  nameWithType: SharedLinkMetadata
  fullName: Dropbox.Api.Sharing.SharedLinkMetadata
- uid: Dropbox.Api.Sharing.GetFileMetadataError
  commentId: T:Dropbox.Api.Sharing.GetFileMetadataError
  parent: Dropbox.Api.Sharing
  name: GetFileMetadataError
  nameWithType: GetFileMetadataError
  fullName: Dropbox.Api.Sharing.GetFileMetadataError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataAsync
  name: GetFileMetadataAsync
  nameWithType: SharingUserRoutes.GetFileMetadataAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataAsync
- uid: Dropbox.Api.Sharing.GetFileMetadataArg
  commentId: T:Dropbox.Api.Sharing.GetFileMetadataArg
  parent: Dropbox.Api.Sharing
  name: GetFileMetadataArg
  nameWithType: GetFileMetadataArg
  fullName: Dropbox.Api.Sharing.GetFileMetadataArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFileMetadata}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFileMetadata}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<SharedFileMetadata>
  nameWithType: Task<SharedFileMetadata>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Sharing.SharedFileMetadata>
  nameWithType.vb: Task(Of SharedFileMetadata)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Sharing.SharedFileMetadata)
  name.vb: Task(Of SharedFileMetadata)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.SharedFileMetadata
    name: SharedFileMetadata
    nameWithType: SharedFileMetadata
    fullName: Dropbox.Api.Sharing.SharedFileMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.SharedFileMetadata
    name: SharedFileMetadata
    nameWithType: SharedFileMetadata
    fullName: Dropbox.Api.Sharing.SharedFileMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadata*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadata
  name: BeginGetFileMetadata
  nameWithType: SharingUserRoutes.BeginGetFileMetadata
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadata
- uid: Dropbox.Api.Sharing.SharedFileMetadata.Permissions
  commentId: P:Dropbox.Api.Sharing.SharedFileMetadata.Permissions
  isExternal: true
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FileAction}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FileAction>
  nameWithType: IEnumerable<FileAction>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.FileAction>
  nameWithType.vb: IEnumerable(Of FileAction)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.FileAction)
  name.vb: IEnumerable(Of FileAction)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.FileAction
    name: FileAction
    nameWithType: FileAction
    fullName: Dropbox.Api.Sharing.FileAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.FileAction
    name: FileAction
    nameWithType: FileAction
    fullName: Dropbox.Api.Sharing.FileAction
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFileMetadata*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFileMetadata
  name: EndGetFileMetadata
  nameWithType: SharingUserRoutes.EndGetFileMetadata
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFileMetadata
- uid: Dropbox.Api.Sharing.SharedFileMetadata
  commentId: T:Dropbox.Api.Sharing.SharedFileMetadata
  parent: Dropbox.Api.Sharing
  name: SharedFileMetadata
  nameWithType: SharedFileMetadata
  fullName: Dropbox.Api.Sharing.SharedFileMetadata
- uid: Dropbox.Api.Sharing.SharingUserError
  commentId: T:Dropbox.Api.Sharing.SharingUserError
  parent: Dropbox.Api.Sharing
  name: SharingUserError
  nameWithType: SharingUserError
  fullName: Dropbox.Api.Sharing.SharingUserError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataBatchAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataBatchAsync
  name: GetFileMetadataBatchAsync
  nameWithType: SharingUserRoutes.GetFileMetadataBatchAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFileMetadataBatchAsync
- uid: Dropbox.Api.Sharing.GetFileMetadataBatchArg
  commentId: T:Dropbox.Api.Sharing.GetFileMetadataBatchArg
  parent: Dropbox.Api.Sharing
  name: GetFileMetadataBatchArg
  nameWithType: GetFileMetadataBatchArg
  fullName: Dropbox.Api.Sharing.GetFileMetadataBatchArg
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Sharing.GetFileMetadataBatchResult}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Sharing.GetFileMetadataBatchResult}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<GetFileMetadataBatchResult>>
  nameWithType: Task<List<GetFileMetadataBatchResult>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Dropbox.Api.Sharing.GetFileMetadataBatchResult>>
  nameWithType.vb: Task(Of List(Of GetFileMetadataBatchResult))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Dropbox.Api.Sharing.GetFileMetadataBatchResult))
  name.vb: Task(Of List(Of GetFileMetadataBatchResult))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.GetFileMetadataBatchResult
    name: GetFileMetadataBatchResult
    nameWithType: GetFileMetadataBatchResult
    fullName: Dropbox.Api.Sharing.GetFileMetadataBatchResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.GetFileMetadataBatchResult
    name: GetFileMetadataBatchResult
    nameWithType: GetFileMetadataBatchResult
    fullName: Dropbox.Api.Sharing.GetFileMetadataBatchResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadataBatch*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadataBatch
  name: BeginGetFileMetadataBatch
  nameWithType: SharingUserRoutes.BeginGetFileMetadataBatch
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFileMetadataBatch
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFileMetadataBatch*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFileMetadataBatch
  name: EndGetFileMetadataBatch
  nameWithType: SharingUserRoutes.EndGetFileMetadataBatch
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFileMetadataBatch
- uid: System.Collections.Generic.List{Dropbox.Api.Sharing.GetFileMetadataBatchResult}
  commentId: T:System.Collections.Generic.List{Dropbox.Api.Sharing.GetFileMetadataBatchResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<GetFileMetadataBatchResult>
  nameWithType: List<GetFileMetadataBatchResult>
  fullName: System.Collections.Generic.List<Dropbox.Api.Sharing.GetFileMetadataBatchResult>
  nameWithType.vb: List(Of GetFileMetadataBatchResult)
  fullName.vb: System.Collections.Generic.List(Of Dropbox.Api.Sharing.GetFileMetadataBatchResult)
  name.vb: List(Of GetFileMetadataBatchResult)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.GetFileMetadataBatchResult
    name: GetFileMetadataBatchResult
    nameWithType: GetFileMetadataBatchResult
    fullName: Dropbox.Api.Sharing.GetFileMetadataBatchResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.GetFileMetadataBatchResult
    name: GetFileMetadataBatchResult
    nameWithType: GetFileMetadataBatchResult
    fullName: Dropbox.Api.Sharing.GetFileMetadataBatchResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.SharedFolderAccessError
  commentId: T:Dropbox.Api.Sharing.SharedFolderAccessError
  parent: Dropbox.Api.Sharing
  name: SharedFolderAccessError
  nameWithType: SharedFolderAccessError
  fullName: Dropbox.Api.Sharing.SharedFolderAccessError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFolderMetadataAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFolderMetadataAsync
  name: GetFolderMetadataAsync
  nameWithType: SharingUserRoutes.GetFolderMetadataAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetFolderMetadataAsync
- uid: Dropbox.Api.Sharing.GetMetadataArgs
  commentId: T:Dropbox.Api.Sharing.GetMetadataArgs
  parent: Dropbox.Api.Sharing
  name: GetMetadataArgs
  nameWithType: GetMetadataArgs
  fullName: Dropbox.Api.Sharing.GetMetadataArgs
- uid: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFolderMetadata}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFolderMetadata}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<SharedFolderMetadata>
  nameWithType: Task<SharedFolderMetadata>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Sharing.SharedFolderMetadata>
  nameWithType.vb: Task(Of SharedFolderMetadata)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Sharing.SharedFolderMetadata)
  name.vb: Task(Of SharedFolderMetadata)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.SharedFolderMetadata
    name: SharedFolderMetadata
    nameWithType: SharedFolderMetadata
    fullName: Dropbox.Api.Sharing.SharedFolderMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.SharedFolderMetadata
    name: SharedFolderMetadata
    nameWithType: SharedFolderMetadata
    fullName: Dropbox.Api.Sharing.SharedFolderMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFolderMetadata*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFolderMetadata
  name: BeginGetFolderMetadata
  nameWithType: SharingUserRoutes.BeginGetFolderMetadata
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetFolderMetadata
- uid: Dropbox.Api.Sharing.SharedFolderMetadata.Permissions
  commentId: P:Dropbox.Api.Sharing.SharedFolderMetadata.Permissions
  isExternal: true
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.FolderAction}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FolderAction>
  nameWithType: IEnumerable<FolderAction>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.FolderAction>
  nameWithType.vb: IEnumerable(Of FolderAction)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.FolderAction)
  name.vb: IEnumerable(Of FolderAction)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.FolderAction
    name: FolderAction
    nameWithType: FolderAction
    fullName: Dropbox.Api.Sharing.FolderAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.FolderAction
    name: FolderAction
    nameWithType: FolderAction
    fullName: Dropbox.Api.Sharing.FolderAction
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFolderMetadata*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFolderMetadata
  name: EndGetFolderMetadata
  nameWithType: SharingUserRoutes.EndGetFolderMetadata
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetFolderMetadata
- uid: Dropbox.Api.Sharing.SharedFolderMetadata
  commentId: T:Dropbox.Api.Sharing.SharedFolderMetadata
  parent: Dropbox.Api.Sharing
  name: SharedFolderMetadata
  nameWithType: SharedFolderMetadata
  fullName: Dropbox.Api.Sharing.SharedFolderMetadata
- uid: Dropbox.Api.Sharing.GetSharedLinkFileError
  commentId: T:Dropbox.Api.Sharing.GetSharedLinkFileError
  parent: Dropbox.Api.Sharing
  name: GetSharedLinkFileError
  nameWithType: GetSharedLinkFileError
  fullName: Dropbox.Api.Sharing.GetSharedLinkFileError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkFileAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkFileAsync
  name: GetSharedLinkFileAsync
  nameWithType: SharingUserRoutes.GetSharedLinkFileAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkFileAsync
- uid: Dropbox.Api.Sharing.GetSharedLinkMetadataArg
  commentId: T:Dropbox.Api.Sharing.GetSharedLinkMetadataArg
  parent: Dropbox.Api.Sharing
  name: GetSharedLinkMetadataArg
  nameWithType: GetSharedLinkMetadataArg
  fullName: Dropbox.Api.Sharing.GetSharedLinkMetadataArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Stone.IDownloadResponse{Dropbox.Api.Sharing.SharedLinkMetadata}}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Stone.IDownloadResponse{Dropbox.Api.Sharing.SharedLinkMetadata}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IDownloadResponse<SharedLinkMetadata>>
  nameWithType: Task<IDownloadResponse<SharedLinkMetadata>>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Stone.IDownloadResponse<Dropbox.Api.Sharing.SharedLinkMetadata>>
  nameWithType.vb: Task(Of IDownloadResponse(Of SharedLinkMetadata))
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Stone.IDownloadResponse(Of Dropbox.Api.Sharing.SharedLinkMetadata))
  name.vb: Task(Of IDownloadResponse(Of SharedLinkMetadata))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Stone.IDownloadResponse`1
    name: IDownloadResponse
    nameWithType: IDownloadResponse
    fullName: Dropbox.Api.Stone.IDownloadResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.SharedLinkMetadata
    name: SharedLinkMetadata
    nameWithType: SharedLinkMetadata
    fullName: Dropbox.Api.Sharing.SharedLinkMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Stone.IDownloadResponse`1
    name: IDownloadResponse
    nameWithType: IDownloadResponse
    fullName: Dropbox.Api.Stone.IDownloadResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.SharedLinkMetadata
    name: SharedLinkMetadata
    nameWithType: SharedLinkMetadata
    fullName: Dropbox.Api.Sharing.SharedLinkMetadata
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkFile*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkFile
  name: BeginGetSharedLinkFile
  nameWithType: SharingUserRoutes.BeginGetSharedLinkFile
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkFile
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinkFile*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinkFile
  name: EndGetSharedLinkFile
  nameWithType: SharingUserRoutes.EndGetSharedLinkFile
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinkFile
- uid: Dropbox.Api.Stone.IDownloadResponse{Dropbox.Api.Sharing.SharedLinkMetadata}
  commentId: T:Dropbox.Api.Stone.IDownloadResponse{Dropbox.Api.Sharing.SharedLinkMetadata}
  parent: Dropbox.Api.Stone
  definition: Dropbox.Api.Stone.IDownloadResponse`1
  name: IDownloadResponse<SharedLinkMetadata>
  nameWithType: IDownloadResponse<SharedLinkMetadata>
  fullName: Dropbox.Api.Stone.IDownloadResponse<Dropbox.Api.Sharing.SharedLinkMetadata>
  nameWithType.vb: IDownloadResponse(Of SharedLinkMetadata)
  fullName.vb: Dropbox.Api.Stone.IDownloadResponse(Of Dropbox.Api.Sharing.SharedLinkMetadata)
  name.vb: IDownloadResponse(Of SharedLinkMetadata)
  spec.csharp:
  - uid: Dropbox.Api.Stone.IDownloadResponse`1
    name: IDownloadResponse
    nameWithType: IDownloadResponse
    fullName: Dropbox.Api.Stone.IDownloadResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.SharedLinkMetadata
    name: SharedLinkMetadata
    nameWithType: SharedLinkMetadata
    fullName: Dropbox.Api.Sharing.SharedLinkMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dropbox.Api.Stone.IDownloadResponse`1
    name: IDownloadResponse
    nameWithType: IDownloadResponse
    fullName: Dropbox.Api.Stone.IDownloadResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.SharedLinkMetadata
    name: SharedLinkMetadata
    nameWithType: SharedLinkMetadata
    fullName: Dropbox.Api.Sharing.SharedLinkMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Stone.IDownloadResponse`1
  commentId: T:Dropbox.Api.Stone.IDownloadResponse`1
  name: IDownloadResponse<TResponse>
  nameWithType: IDownloadResponse<TResponse>
  fullName: Dropbox.Api.Stone.IDownloadResponse<TResponse>
  nameWithType.vb: IDownloadResponse(Of TResponse)
  fullName.vb: Dropbox.Api.Stone.IDownloadResponse(Of TResponse)
  name.vb: IDownloadResponse(Of TResponse)
  spec.csharp:
  - uid: Dropbox.Api.Stone.IDownloadResponse`1
    name: IDownloadResponse
    nameWithType: IDownloadResponse
    fullName: Dropbox.Api.Stone.IDownloadResponse
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dropbox.Api.Stone.IDownloadResponse`1
    name: IDownloadResponse
    nameWithType: IDownloadResponse
    fullName: Dropbox.Api.Stone.IDownloadResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Stone
  commentId: N:Dropbox.Api.Stone
  name: Dropbox.Api.Stone
  nameWithType: Dropbox.Api.Stone
  fullName: Dropbox.Api.Stone
- uid: Dropbox.Api.Sharing.SharedLinkError
  commentId: T:Dropbox.Api.Sharing.SharedLinkError
  parent: Dropbox.Api.Sharing
  name: SharedLinkError
  nameWithType: SharedLinkError
  fullName: Dropbox.Api.Sharing.SharedLinkError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkMetadataAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkMetadataAsync
  name: GetSharedLinkMetadataAsync
  nameWithType: SharingUserRoutes.GetSharedLinkMetadataAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinkMetadataAsync
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkMetadata*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkMetadata
  name: BeginGetSharedLinkMetadata
  nameWithType: SharingUserRoutes.BeginGetSharedLinkMetadata
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinkMetadata
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinkMetadata*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinkMetadata
  name: EndGetSharedLinkMetadata
  nameWithType: SharingUserRoutes.EndGetSharedLinkMetadata
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinkMetadata
- uid: Dropbox.Api.Sharing.LinkMetadata
  commentId: T:Dropbox.Api.Sharing.LinkMetadata
  parent: Dropbox.Api.Sharing
  name: LinkMetadata
  nameWithType: LinkMetadata
  fullName: Dropbox.Api.Sharing.LinkMetadata
- uid: Dropbox.Api.Sharing.GetSharedLinksError
  commentId: T:Dropbox.Api.Sharing.GetSharedLinksError
  parent: Dropbox.Api.Sharing
  name: GetSharedLinksError
  nameWithType: GetSharedLinksError
  fullName: Dropbox.Api.Sharing.GetSharedLinksError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinksAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinksAsync
  name: GetSharedLinksAsync
  nameWithType: SharingUserRoutes.GetSharedLinksAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinksAsync
- uid: Dropbox.Api.Sharing.GetSharedLinksArg
  commentId: T:Dropbox.Api.Sharing.GetSharedLinksArg
  parent: Dropbox.Api.Sharing
  name: GetSharedLinksArg
  nameWithType: GetSharedLinksArg
  fullName: Dropbox.Api.Sharing.GetSharedLinksArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Sharing.GetSharedLinksResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Sharing.GetSharedLinksResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<GetSharedLinksResult>
  nameWithType: Task<GetSharedLinksResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Sharing.GetSharedLinksResult>
  nameWithType.vb: Task(Of GetSharedLinksResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Sharing.GetSharedLinksResult)
  name.vb: Task(Of GetSharedLinksResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.GetSharedLinksResult
    name: GetSharedLinksResult
    nameWithType: GetSharedLinksResult
    fullName: Dropbox.Api.Sharing.GetSharedLinksResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.GetSharedLinksResult
    name: GetSharedLinksResult
    nameWithType: GetSharedLinksResult
    fullName: Dropbox.Api.Sharing.GetSharedLinksResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinks*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinks
  name: BeginGetSharedLinks
  nameWithType: SharingUserRoutes.BeginGetSharedLinks
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginGetSharedLinks
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinksAsync(Dropbox.Api.Sharing.GetSharedLinksArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.GetSharedLinksAsync(Dropbox.Api.Sharing.GetSharedLinksArg)
  isExternal: true
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinks*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinks
  name: EndGetSharedLinks
  nameWithType: SharingUserRoutes.EndGetSharedLinks
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndGetSharedLinks
- uid: Dropbox.Api.Sharing.GetSharedLinksResult
  commentId: T:Dropbox.Api.Sharing.GetSharedLinksResult
  parent: Dropbox.Api.Sharing
  name: GetSharedLinksResult
  nameWithType: GetSharedLinksResult
  fullName: Dropbox.Api.Sharing.GetSharedLinksResult
- uid: Dropbox.Api.Sharing.ListFileMembersError
  commentId: T:Dropbox.Api.Sharing.ListFileMembersError
  parent: Dropbox.Api.Sharing
  name: ListFileMembersError
  nameWithType: ListFileMembersError
  fullName: Dropbox.Api.Sharing.ListFileMembersError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersAsync
  name: ListFileMembersAsync
  nameWithType: SharingUserRoutes.ListFileMembersAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersAsync
- uid: Dropbox.Api.Sharing.ListFileMembersArg
  commentId: T:Dropbox.Api.Sharing.ListFileMembersArg
  parent: Dropbox.Api.Sharing
  name: ListFileMembersArg
  nameWithType: ListFileMembersArg
  fullName: Dropbox.Api.Sharing.ListFileMembersArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFileMembers}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFileMembers}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<SharedFileMembers>
  nameWithType: Task<SharedFileMembers>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Sharing.SharedFileMembers>
  nameWithType.vb: Task(Of SharedFileMembers)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Sharing.SharedFileMembers)
  name.vb: Task(Of SharedFileMembers)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.SharedFileMembers
    name: SharedFileMembers
    nameWithType: SharedFileMembers
    fullName: Dropbox.Api.Sharing.SharedFileMembers
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.SharedFileMembers
    name: SharedFileMembers
    nameWithType: SharedFileMembers
    fullName: Dropbox.Api.Sharing.SharedFileMembers
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembers*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembers
  name: BeginListFileMembers
  nameWithType: SharingUserRoutes.BeginListFileMembers
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembers
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.Sharing.MemberAction}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<MemberAction>
  nameWithType: IEnumerable<MemberAction>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Sharing.MemberAction>
  nameWithType.vb: IEnumerable(Of MemberAction)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Sharing.MemberAction)
  name.vb: IEnumerable(Of MemberAction)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.MemberAction
    name: MemberAction
    nameWithType: MemberAction
    fullName: Dropbox.Api.Sharing.MemberAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.MemberAction
    name: MemberAction
    nameWithType: MemberAction
    fullName: Dropbox.Api.Sharing.MemberAction
  - name: )
    nameWithType: )
    fullName: )
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembers*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembers
  name: EndListFileMembers
  nameWithType: SharingUserRoutes.EndListFileMembers
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembers
- uid: Dropbox.Api.Sharing.SharedFileMembers
  commentId: T:Dropbox.Api.Sharing.SharedFileMembers
  parent: Dropbox.Api.Sharing
  name: SharedFileMembers
  nameWithType: SharedFileMembers
  fullName: Dropbox.Api.Sharing.SharedFileMembers
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersBatchAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersBatchAsync
  name: ListFileMembersBatchAsync
  nameWithType: SharingUserRoutes.ListFileMembersBatchAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersBatchAsync
- uid: Dropbox.Api.Sharing.ListFileMembersBatchArg
  commentId: T:Dropbox.Api.Sharing.ListFileMembersBatchArg
  parent: Dropbox.Api.Sharing
  name: ListFileMembersBatchArg
  nameWithType: ListFileMembersBatchArg
  fullName: Dropbox.Api.Sharing.ListFileMembersBatchArg
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Sharing.ListFileMembersBatchResult}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Sharing.ListFileMembersBatchResult}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<ListFileMembersBatchResult>>
  nameWithType: Task<List<ListFileMembersBatchResult>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Dropbox.Api.Sharing.ListFileMembersBatchResult>>
  nameWithType.vb: Task(Of List(Of ListFileMembersBatchResult))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Dropbox.Api.Sharing.ListFileMembersBatchResult))
  name.vb: Task(Of List(Of ListFileMembersBatchResult))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.ListFileMembersBatchResult
    name: ListFileMembersBatchResult
    nameWithType: ListFileMembersBatchResult
    fullName: Dropbox.Api.Sharing.ListFileMembersBatchResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.ListFileMembersBatchResult
    name: ListFileMembersBatchResult
    nameWithType: ListFileMembersBatchResult
    fullName: Dropbox.Api.Sharing.ListFileMembersBatchResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersBatch*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersBatch
  name: BeginListFileMembersBatch
  nameWithType: SharingUserRoutes.BeginListFileMembersBatch
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersBatch
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembersBatch*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembersBatch
  name: EndListFileMembersBatch
  nameWithType: SharingUserRoutes.EndListFileMembersBatch
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembersBatch
- uid: System.Collections.Generic.List{Dropbox.Api.Sharing.ListFileMembersBatchResult}
  commentId: T:System.Collections.Generic.List{Dropbox.Api.Sharing.ListFileMembersBatchResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ListFileMembersBatchResult>
  nameWithType: List<ListFileMembersBatchResult>
  fullName: System.Collections.Generic.List<Dropbox.Api.Sharing.ListFileMembersBatchResult>
  nameWithType.vb: List(Of ListFileMembersBatchResult)
  fullName.vb: System.Collections.Generic.List(Of Dropbox.Api.Sharing.ListFileMembersBatchResult)
  name.vb: List(Of ListFileMembersBatchResult)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.ListFileMembersBatchResult
    name: ListFileMembersBatchResult
    nameWithType: ListFileMembersBatchResult
    fullName: Dropbox.Api.Sharing.ListFileMembersBatchResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.ListFileMembersBatchResult
    name: ListFileMembersBatchResult
    nameWithType: ListFileMembersBatchResult
    fullName: Dropbox.Api.Sharing.ListFileMembersBatchResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersAsync(Dropbox.Api.Sharing.ListFileMembersArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersAsync(Dropbox.Api.Sharing.ListFileMembersArg)
  isExternal: true
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersBatchAsync(Dropbox.Api.Sharing.ListFileMembersBatchArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersBatchAsync(Dropbox.Api.Sharing.ListFileMembersBatchArg)
  isExternal: true
- uid: Dropbox.Api.Sharing.ListFileMembersContinueError
  commentId: T:Dropbox.Api.Sharing.ListFileMembersContinueError
  parent: Dropbox.Api.Sharing
  name: ListFileMembersContinueError
  nameWithType: ListFileMembersContinueError
  fullName: Dropbox.Api.Sharing.ListFileMembersContinueError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersContinueAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersContinueAsync
  name: ListFileMembersContinueAsync
  nameWithType: SharingUserRoutes.ListFileMembersContinueAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersContinueAsync
- uid: Dropbox.Api.Sharing.ListFileMembersContinueArg
  commentId: T:Dropbox.Api.Sharing.ListFileMembersContinueArg
  parent: Dropbox.Api.Sharing
  name: ListFileMembersContinueArg
  nameWithType: ListFileMembersContinueArg
  fullName: Dropbox.Api.Sharing.ListFileMembersContinueArg
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersContinue*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersContinue
  name: BeginListFileMembersContinue
  nameWithType: SharingUserRoutes.BeginListFileMembersContinue
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFileMembersContinue
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersContinueAsync(Dropbox.Api.Sharing.ListFileMembersContinueArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFileMembersContinueAsync(Dropbox.Api.Sharing.ListFileMembersContinueArg)
  isExternal: true
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembersContinue*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembersContinue
  name: EndListFileMembersContinue
  nameWithType: SharingUserRoutes.EndListFileMembersContinue
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFileMembersContinue
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersAsync
  name: ListFolderMembersAsync
  nameWithType: SharingUserRoutes.ListFolderMembersAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersAsync
- uid: Dropbox.Api.Sharing.ListFolderMembersArgs
  commentId: T:Dropbox.Api.Sharing.ListFolderMembersArgs
  parent: Dropbox.Api.Sharing
  name: ListFolderMembersArgs
  nameWithType: ListFolderMembersArgs
  fullName: Dropbox.Api.Sharing.ListFolderMembersArgs
- uid: System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFolderMembers}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Sharing.SharedFolderMembers}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<SharedFolderMembers>
  nameWithType: Task<SharedFolderMembers>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Sharing.SharedFolderMembers>
  nameWithType.vb: Task(Of SharedFolderMembers)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Sharing.SharedFolderMembers)
  name.vb: Task(Of SharedFolderMembers)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.SharedFolderMembers
    name: SharedFolderMembers
    nameWithType: SharedFolderMembers
    fullName: Dropbox.Api.Sharing.SharedFolderMembers
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.SharedFolderMembers
    name: SharedFolderMembers
    nameWithType: SharedFolderMembers
    fullName: Dropbox.Api.Sharing.SharedFolderMembers
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembers*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembers
  name: BeginListFolderMembers
  nameWithType: SharingUserRoutes.BeginListFolderMembers
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembers
- uid: Dropbox.Api.Sharing.MemberPermission.Allow
  commentId: P:Dropbox.Api.Sharing.MemberPermission.Allow
  isExternal: true
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolderMembers*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolderMembers
  name: EndListFolderMembers
  nameWithType: SharingUserRoutes.EndListFolderMembers
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolderMembers
- uid: Dropbox.Api.Sharing.SharedFolderMembers
  commentId: T:Dropbox.Api.Sharing.SharedFolderMembers
  parent: Dropbox.Api.Sharing
  name: SharedFolderMembers
  nameWithType: SharedFolderMembers
  fullName: Dropbox.Api.Sharing.SharedFolderMembers
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersAsync(Dropbox.Api.Sharing.ListFolderMembersArgs)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersAsync(Dropbox.Api.Sharing.ListFolderMembersArgs)
  isExternal: true
- uid: Dropbox.Api.Sharing.ListFolderMembersContinueError
  commentId: T:Dropbox.Api.Sharing.ListFolderMembersContinueError
  parent: Dropbox.Api.Sharing
  name: ListFolderMembersContinueError
  nameWithType: ListFolderMembersContinueError
  fullName: Dropbox.Api.Sharing.ListFolderMembersContinueError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersContinueAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersContinueAsync
  name: ListFolderMembersContinueAsync
  nameWithType: SharingUserRoutes.ListFolderMembersContinueAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersContinueAsync
- uid: Dropbox.Api.Sharing.ListFolderMembersContinueArg
  commentId: T:Dropbox.Api.Sharing.ListFolderMembersContinueArg
  parent: Dropbox.Api.Sharing
  name: ListFolderMembersContinueArg
  nameWithType: ListFolderMembersContinueArg
  fullName: Dropbox.Api.Sharing.ListFolderMembersContinueArg
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembersContinue*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembersContinue
  name: BeginListFolderMembersContinue
  nameWithType: SharingUserRoutes.BeginListFolderMembersContinue
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolderMembersContinue
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersContinueAsync(Dropbox.Api.Sharing.ListFolderMembersContinueArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFolderMembersContinueAsync(Dropbox.Api.Sharing.ListFolderMembersContinueArg)
  isExternal: true
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolderMembersContinue*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolderMembersContinue
  name: EndListFolderMembersContinue
  nameWithType: SharingUserRoutes.EndListFolderMembersContinue
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolderMembersContinue
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersAsync
  name: ListFoldersAsync
  nameWithType: SharingUserRoutes.ListFoldersAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersAsync
- uid: Dropbox.Api.Sharing.ListFoldersArgs
  commentId: T:Dropbox.Api.Sharing.ListFoldersArgs
  parent: Dropbox.Api.Sharing
  name: ListFoldersArgs
  nameWithType: ListFoldersArgs
  fullName: Dropbox.Api.Sharing.ListFoldersArgs
- uid: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ListFoldersResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Sharing.ListFoldersResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ListFoldersResult>
  nameWithType: Task<ListFoldersResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Sharing.ListFoldersResult>
  nameWithType.vb: Task(Of ListFoldersResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Sharing.ListFoldersResult)
  name.vb: Task(Of ListFoldersResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.ListFoldersResult
    name: ListFoldersResult
    nameWithType: ListFoldersResult
    fullName: Dropbox.Api.Sharing.ListFoldersResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.ListFoldersResult
    name: ListFoldersResult
    nameWithType: ListFoldersResult
    fullName: Dropbox.Api.Sharing.ListFoldersResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolders*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolders
  name: BeginListFolders
  nameWithType: SharingUserRoutes.BeginListFolders
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFolders
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolders*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolders
  name: EndListFolders
  nameWithType: SharingUserRoutes.EndListFolders
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFolders
- uid: Dropbox.Api.Sharing.ListFoldersResult
  commentId: T:Dropbox.Api.Sharing.ListFoldersResult
  parent: Dropbox.Api.Sharing
  name: ListFoldersResult
  nameWithType: ListFoldersResult
  fullName: Dropbox.Api.Sharing.ListFoldersResult
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)
  isExternal: true
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersContinueAsync(Dropbox.Api.Sharing.ListFoldersContinueArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersContinueAsync(Dropbox.Api.Sharing.ListFoldersContinueArg)
  isExternal: true
- uid: Dropbox.Api.Sharing.ListFoldersContinueError
  commentId: T:Dropbox.Api.Sharing.ListFoldersContinueError
  parent: Dropbox.Api.Sharing
  name: ListFoldersContinueError
  nameWithType: ListFoldersContinueError
  fullName: Dropbox.Api.Sharing.ListFoldersContinueError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersContinueAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersContinueAsync
  name: ListFoldersContinueAsync
  nameWithType: SharingUserRoutes.ListFoldersContinueAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListFoldersContinueAsync
- uid: Dropbox.Api.Sharing.ListFoldersContinueArg
  commentId: T:Dropbox.Api.Sharing.ListFoldersContinueArg
  parent: Dropbox.Api.Sharing
  name: ListFoldersContinueArg
  nameWithType: ListFoldersContinueArg
  fullName: Dropbox.Api.Sharing.ListFoldersContinueArg
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFoldersContinue*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFoldersContinue
  name: BeginListFoldersContinue
  nameWithType: SharingUserRoutes.BeginListFoldersContinue
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListFoldersContinue
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFoldersContinue*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFoldersContinue
  name: EndListFoldersContinue
  nameWithType: SharingUserRoutes.EndListFoldersContinue
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListFoldersContinue
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersAsync
  name: ListMountableFoldersAsync
  nameWithType: SharingUserRoutes.ListMountableFoldersAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersAsync
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFolders*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFolders
  name: BeginListMountableFolders
  nameWithType: SharingUserRoutes.BeginListMountableFolders
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFolders
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListMountableFolders*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListMountableFolders
  name: EndListMountableFolders
  nameWithType: SharingUserRoutes.EndListMountableFolders
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListMountableFolders
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersAsync(Dropbox.Api.Sharing.ListFoldersArgs)
  isExternal: true
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersContinueAsync(Dropbox.Api.Sharing.ListFoldersContinueArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersContinueAsync(Dropbox.Api.Sharing.ListFoldersContinueArg)
  isExternal: true
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersContinueAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersContinueAsync
  name: ListMountableFoldersContinueAsync
  nameWithType: SharingUserRoutes.ListMountableFoldersContinueAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListMountableFoldersContinueAsync
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFoldersContinue*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFoldersContinue
  name: BeginListMountableFoldersContinue
  nameWithType: SharingUserRoutes.BeginListMountableFoldersContinue
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListMountableFoldersContinue
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListMountableFoldersContinue*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListMountableFoldersContinue
  name: EndListMountableFoldersContinue
  nameWithType: SharingUserRoutes.EndListMountableFoldersContinue
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListMountableFoldersContinue
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesAsync
  name: ListReceivedFilesAsync
  nameWithType: SharingUserRoutes.ListReceivedFilesAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesAsync
- uid: Dropbox.Api.Sharing.ListFilesArg
  commentId: T:Dropbox.Api.Sharing.ListFilesArg
  parent: Dropbox.Api.Sharing
  name: ListFilesArg
  nameWithType: ListFilesArg
  fullName: Dropbox.Api.Sharing.ListFilesArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ListFilesResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Sharing.ListFilesResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ListFilesResult>
  nameWithType: Task<ListFilesResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Sharing.ListFilesResult>
  nameWithType.vb: Task(Of ListFilesResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Sharing.ListFilesResult)
  name.vb: Task(Of ListFilesResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.ListFilesResult
    name: ListFilesResult
    nameWithType: ListFilesResult
    fullName: Dropbox.Api.Sharing.ListFilesResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.ListFilesResult
    name: ListFilesResult
    nameWithType: ListFilesResult
    fullName: Dropbox.Api.Sharing.ListFilesResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFiles*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFiles
  name: BeginListReceivedFiles
  nameWithType: SharingUserRoutes.BeginListReceivedFiles
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFiles
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListReceivedFiles*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListReceivedFiles
  name: EndListReceivedFiles
  nameWithType: SharingUserRoutes.EndListReceivedFiles
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListReceivedFiles
- uid: Dropbox.Api.Sharing.ListFilesResult
  commentId: T:Dropbox.Api.Sharing.ListFilesResult
  parent: Dropbox.Api.Sharing
  name: ListFilesResult
  nameWithType: ListFilesResult
  fullName: Dropbox.Api.Sharing.ListFilesResult
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesAsync(Dropbox.Api.Sharing.ListFilesArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesAsync(Dropbox.Api.Sharing.ListFilesArg)
  isExternal: true
- uid: Dropbox.Api.Sharing.ListFilesContinueError
  commentId: T:Dropbox.Api.Sharing.ListFilesContinueError
  parent: Dropbox.Api.Sharing
  name: ListFilesContinueError
  nameWithType: ListFilesContinueError
  fullName: Dropbox.Api.Sharing.ListFilesContinueError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesContinueAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesContinueAsync
  name: ListReceivedFilesContinueAsync
  nameWithType: SharingUserRoutes.ListReceivedFilesContinueAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListReceivedFilesContinueAsync
- uid: Dropbox.Api.Sharing.ListFilesContinueArg
  commentId: T:Dropbox.Api.Sharing.ListFilesContinueArg
  parent: Dropbox.Api.Sharing
  name: ListFilesContinueArg
  nameWithType: ListFilesContinueArg
  fullName: Dropbox.Api.Sharing.ListFilesContinueArg
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFilesContinue*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFilesContinue
  name: BeginListReceivedFilesContinue
  nameWithType: SharingUserRoutes.BeginListReceivedFilesContinue
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListReceivedFilesContinue
- uid: Dropbox.Api.Sharing.ListFilesResult.Cursor
  commentId: P:Dropbox.Api.Sharing.ListFilesResult.Cursor
  isExternal: true
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListReceivedFilesContinue*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListReceivedFilesContinue
  name: EndListReceivedFilesContinue
  nameWithType: SharingUserRoutes.EndListReceivedFilesContinue
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListReceivedFilesContinue
- uid: Dropbox.Api.Sharing.ListSharedLinksError
  commentId: T:Dropbox.Api.Sharing.ListSharedLinksError
  parent: Dropbox.Api.Sharing
  name: ListSharedLinksError
  nameWithType: ListSharedLinksError
  fullName: Dropbox.Api.Sharing.ListSharedLinksError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync
  name: ListSharedLinksAsync
  nameWithType: SharingUserRoutes.ListSharedLinksAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync
- uid: Dropbox.Api.Sharing.ListSharedLinksArg
  commentId: T:Dropbox.Api.Sharing.ListSharedLinksArg
  parent: Dropbox.Api.Sharing
  name: ListSharedLinksArg
  nameWithType: ListSharedLinksArg
  fullName: Dropbox.Api.Sharing.ListSharedLinksArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ListSharedLinksResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Sharing.ListSharedLinksResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ListSharedLinksResult>
  nameWithType: Task<ListSharedLinksResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Sharing.ListSharedLinksResult>
  nameWithType.vb: Task(Of ListSharedLinksResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Sharing.ListSharedLinksResult)
  name.vb: Task(Of ListSharedLinksResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.ListSharedLinksResult
    name: ListSharedLinksResult
    nameWithType: ListSharedLinksResult
    fullName: Dropbox.Api.Sharing.ListSharedLinksResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.ListSharedLinksResult
    name: ListSharedLinksResult
    nameWithType: ListSharedLinksResult
    fullName: Dropbox.Api.Sharing.ListSharedLinksResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListSharedLinks*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListSharedLinks
  name: BeginListSharedLinks
  nameWithType: SharingUserRoutes.BeginListSharedLinks
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginListSharedLinks
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync(Dropbox.Api.Sharing.ListSharedLinksArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ListSharedLinksAsync(Dropbox.Api.Sharing.ListSharedLinksArg)
  isExternal: true
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListSharedLinks*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListSharedLinks
  name: EndListSharedLinks
  nameWithType: SharingUserRoutes.EndListSharedLinks
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndListSharedLinks
- uid: Dropbox.Api.Sharing.ListSharedLinksResult
  commentId: T:Dropbox.Api.Sharing.ListSharedLinksResult
  parent: Dropbox.Api.Sharing
  name: ListSharedLinksResult
  nameWithType: ListSharedLinksResult
  fullName: Dropbox.Api.Sharing.ListSharedLinksResult
- uid: Dropbox.Api.Sharing.LinkPermissions.ResolvedVisibility
  commentId: P:Dropbox.Api.Sharing.LinkPermissions.ResolvedVisibility
  isExternal: true
- uid: Dropbox.Api.Sharing.LinkPermissions.RequestedVisibility
  commentId: P:Dropbox.Api.Sharing.LinkPermissions.RequestedVisibility
  isExternal: true
- uid: Dropbox.Api.Sharing.ModifySharedLinkSettingsError
  commentId: T:Dropbox.Api.Sharing.ModifySharedLinkSettingsError
  parent: Dropbox.Api.Sharing
  name: ModifySharedLinkSettingsError
  nameWithType: ModifySharedLinkSettingsError
  fullName: Dropbox.Api.Sharing.ModifySharedLinkSettingsError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ModifySharedLinkSettingsAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ModifySharedLinkSettingsAsync
  name: ModifySharedLinkSettingsAsync
  nameWithType: SharingUserRoutes.ModifySharedLinkSettingsAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ModifySharedLinkSettingsAsync
- uid: Dropbox.Api.Sharing.ModifySharedLinkSettingsArgs
  commentId: T:Dropbox.Api.Sharing.ModifySharedLinkSettingsArgs
  parent: Dropbox.Api.Sharing
  name: ModifySharedLinkSettingsArgs
  nameWithType: ModifySharedLinkSettingsArgs
  fullName: Dropbox.Api.Sharing.ModifySharedLinkSettingsArgs
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginModifySharedLinkSettings*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginModifySharedLinkSettings
  name: BeginModifySharedLinkSettings
  nameWithType: SharingUserRoutes.BeginModifySharedLinkSettings
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginModifySharedLinkSettings
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndModifySharedLinkSettings*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndModifySharedLinkSettings
  name: EndModifySharedLinkSettings
  nameWithType: SharingUserRoutes.EndModifySharedLinkSettings
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndModifySharedLinkSettings
- uid: Dropbox.Api.Sharing.MountFolderError
  commentId: T:Dropbox.Api.Sharing.MountFolderError
  parent: Dropbox.Api.Sharing
  name: MountFolderError
  nameWithType: MountFolderError
  fullName: Dropbox.Api.Sharing.MountFolderError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.MountFolderAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.MountFolderAsync
  name: MountFolderAsync
  nameWithType: SharingUserRoutes.MountFolderAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.MountFolderAsync
- uid: Dropbox.Api.Sharing.MountFolderArg
  commentId: T:Dropbox.Api.Sharing.MountFolderArg
  parent: Dropbox.Api.Sharing
  name: MountFolderArg
  nameWithType: MountFolderArg
  fullName: Dropbox.Api.Sharing.MountFolderArg
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginMountFolder*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginMountFolder
  name: BeginMountFolder
  nameWithType: SharingUserRoutes.BeginMountFolder
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginMountFolder
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndMountFolder*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndMountFolder
  name: EndMountFolder
  nameWithType: SharingUserRoutes.EndMountFolder
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndMountFolder
- uid: Dropbox.Api.Sharing.RelinquishFileMembershipError
  commentId: T:Dropbox.Api.Sharing.RelinquishFileMembershipError
  parent: Dropbox.Api.Sharing
  name: RelinquishFileMembershipError
  nameWithType: RelinquishFileMembershipError
  fullName: Dropbox.Api.Sharing.RelinquishFileMembershipError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFileMembershipAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFileMembershipAsync
  name: RelinquishFileMembershipAsync
  nameWithType: SharingUserRoutes.RelinquishFileMembershipAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFileMembershipAsync
- uid: Dropbox.Api.Sharing.RelinquishFileMembershipArg
  commentId: T:Dropbox.Api.Sharing.RelinquishFileMembershipArg
  parent: Dropbox.Api.Sharing
  name: RelinquishFileMembershipArg
  nameWithType: RelinquishFileMembershipArg
  fullName: Dropbox.Api.Sharing.RelinquishFileMembershipArg
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFileMembership*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFileMembership
  name: BeginRelinquishFileMembership
  nameWithType: SharingUserRoutes.BeginRelinquishFileMembership
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFileMembership
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRelinquishFileMembership*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRelinquishFileMembership
  name: EndRelinquishFileMembership
  nameWithType: SharingUserRoutes.EndRelinquishFileMembership
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRelinquishFileMembership
- uid: Dropbox.Api.Sharing.RelinquishFolderMembershipError
  commentId: T:Dropbox.Api.Sharing.RelinquishFolderMembershipError
  parent: Dropbox.Api.Sharing
  name: RelinquishFolderMembershipError
  nameWithType: RelinquishFolderMembershipError
  fullName: Dropbox.Api.Sharing.RelinquishFolderMembershipError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFolderMembershipAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFolderMembershipAsync
  name: RelinquishFolderMembershipAsync
  nameWithType: SharingUserRoutes.RelinquishFolderMembershipAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RelinquishFolderMembershipAsync
- uid: Dropbox.Api.Sharing.RelinquishFolderMembershipArg
  commentId: T:Dropbox.Api.Sharing.RelinquishFolderMembershipArg
  parent: Dropbox.Api.Sharing
  name: RelinquishFolderMembershipArg
  nameWithType: RelinquishFolderMembershipArg
  fullName: Dropbox.Api.Sharing.RelinquishFolderMembershipArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Async.LaunchEmptyResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Async.LaunchEmptyResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<LaunchEmptyResult>
  nameWithType: Task<LaunchEmptyResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Async.LaunchEmptyResult>
  nameWithType.vb: Task(Of LaunchEmptyResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Async.LaunchEmptyResult)
  name.vb: Task(Of LaunchEmptyResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Async.LaunchEmptyResult
    name: LaunchEmptyResult
    nameWithType: LaunchEmptyResult
    fullName: Dropbox.Api.Async.LaunchEmptyResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Async.LaunchEmptyResult
    name: LaunchEmptyResult
    nameWithType: LaunchEmptyResult
    fullName: Dropbox.Api.Async.LaunchEmptyResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFolderMembership*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFolderMembership
  name: BeginRelinquishFolderMembership
  nameWithType: SharingUserRoutes.BeginRelinquishFolderMembership
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRelinquishFolderMembership
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRelinquishFolderMembership*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRelinquishFolderMembership
  name: EndRelinquishFolderMembership
  nameWithType: SharingUserRoutes.EndRelinquishFolderMembership
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRelinquishFolderMembership
- uid: Dropbox.Api.Async.LaunchEmptyResult
  commentId: T:Dropbox.Api.Async.LaunchEmptyResult
  parent: Dropbox.Api.Async
  name: LaunchEmptyResult
  nameWithType: LaunchEmptyResult
  fullName: Dropbox.Api.Async.LaunchEmptyResult
- uid: Dropbox.Api.Sharing.RemoveFileMemberError
  commentId: T:Dropbox.Api.Sharing.RemoveFileMemberError
  parent: Dropbox.Api.Sharing
  name: RemoveFileMemberError
  nameWithType: RemoveFileMemberError
  fullName: Dropbox.Api.Sharing.RemoveFileMemberError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMemberAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMemberAsync
  name: RemoveFileMemberAsync
  nameWithType: SharingUserRoutes.RemoveFileMemberAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMemberAsync
- uid: Dropbox.Api.Sharing.RemoveFileMemberArg
  commentId: T:Dropbox.Api.Sharing.RemoveFileMemberArg
  parent: Dropbox.Api.Sharing
  name: RemoveFileMemberArg
  nameWithType: RemoveFileMemberArg
  fullName: Dropbox.Api.Sharing.RemoveFileMemberArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Sharing.FileMemberActionIndividualResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Sharing.FileMemberActionIndividualResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FileMemberActionIndividualResult>
  nameWithType: Task<FileMemberActionIndividualResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Sharing.FileMemberActionIndividualResult>
  nameWithType.vb: Task(Of FileMemberActionIndividualResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Sharing.FileMemberActionIndividualResult)
  name.vb: Task(Of FileMemberActionIndividualResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.FileMemberActionIndividualResult
    name: FileMemberActionIndividualResult
    nameWithType: FileMemberActionIndividualResult
    fullName: Dropbox.Api.Sharing.FileMemberActionIndividualResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.FileMemberActionIndividualResult
    name: FileMemberActionIndividualResult
    nameWithType: FileMemberActionIndividualResult
    fullName: Dropbox.Api.Sharing.FileMemberActionIndividualResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember
  name: BeginRemoveFileMember
  nameWithType: SharingUserRoutes.BeginRemoveFileMember
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember
- uid: Dropbox.Api.Sharing.MemberSelector
  commentId: T:Dropbox.Api.Sharing.MemberSelector
  parent: Dropbox.Api.Sharing
  name: MemberSelector
  nameWithType: MemberSelector
  fullName: Dropbox.Api.Sharing.MemberSelector
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFileMember*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFileMember
  name: EndRemoveFileMember
  nameWithType: SharingUserRoutes.EndRemoveFileMember
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFileMember
- uid: Dropbox.Api.Sharing.FileMemberActionIndividualResult
  commentId: T:Dropbox.Api.Sharing.FileMemberActionIndividualResult
  parent: Dropbox.Api.Sharing
  name: FileMemberActionIndividualResult
  nameWithType: FileMemberActionIndividualResult
  fullName: Dropbox.Api.Sharing.FileMemberActionIndividualResult
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMember2Async*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMember2Async
  name: RemoveFileMember2Async
  nameWithType: SharingUserRoutes.RemoveFileMember2Async
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFileMember2Async
- uid: System.Threading.Tasks.Task{Dropbox.Api.Sharing.FileMemberRemoveActionResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Sharing.FileMemberRemoveActionResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FileMemberRemoveActionResult>
  nameWithType: Task<FileMemberRemoveActionResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Sharing.FileMemberRemoveActionResult>
  nameWithType.vb: Task(Of FileMemberRemoveActionResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Sharing.FileMemberRemoveActionResult)
  name.vb: Task(Of FileMemberRemoveActionResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.FileMemberRemoveActionResult
    name: FileMemberRemoveActionResult
    nameWithType: FileMemberRemoveActionResult
    fullName: Dropbox.Api.Sharing.FileMemberRemoveActionResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.FileMemberRemoveActionResult
    name: FileMemberRemoveActionResult
    nameWithType: FileMemberRemoveActionResult
    fullName: Dropbox.Api.Sharing.FileMemberRemoveActionResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember2*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember2
  name: BeginRemoveFileMember2
  nameWithType: SharingUserRoutes.BeginRemoveFileMember2
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFileMember2
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFileMember2*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFileMember2
  name: EndRemoveFileMember2
  nameWithType: SharingUserRoutes.EndRemoveFileMember2
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFileMember2
- uid: Dropbox.Api.Sharing.FileMemberRemoveActionResult
  commentId: T:Dropbox.Api.Sharing.FileMemberRemoveActionResult
  parent: Dropbox.Api.Sharing
  name: FileMemberRemoveActionResult
  nameWithType: FileMemberRemoveActionResult
  fullName: Dropbox.Api.Sharing.FileMemberRemoveActionResult
- uid: Dropbox.Api.Sharing.RemoveFolderMemberError
  commentId: T:Dropbox.Api.Sharing.RemoveFolderMemberError
  parent: Dropbox.Api.Sharing
  name: RemoveFolderMemberError
  nameWithType: RemoveFolderMemberError
  fullName: Dropbox.Api.Sharing.RemoveFolderMemberError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFolderMemberAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFolderMemberAsync
  name: RemoveFolderMemberAsync
  nameWithType: SharingUserRoutes.RemoveFolderMemberAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RemoveFolderMemberAsync
- uid: Dropbox.Api.Sharing.RemoveFolderMemberArg
  commentId: T:Dropbox.Api.Sharing.RemoveFolderMemberArg
  parent: Dropbox.Api.Sharing
  name: RemoveFolderMemberArg
  nameWithType: RemoveFolderMemberArg
  fullName: Dropbox.Api.Sharing.RemoveFolderMemberArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Async.LaunchResultBase}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Async.LaunchResultBase}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<LaunchResultBase>
  nameWithType: Task<LaunchResultBase>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Async.LaunchResultBase>
  nameWithType.vb: Task(Of LaunchResultBase)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Async.LaunchResultBase)
  name.vb: Task(Of LaunchResultBase)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Async.LaunchResultBase
    name: LaunchResultBase
    nameWithType: LaunchResultBase
    fullName: Dropbox.Api.Async.LaunchResultBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Async.LaunchResultBase
    name: LaunchResultBase
    nameWithType: LaunchResultBase
    fullName: Dropbox.Api.Async.LaunchResultBase
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFolderMember*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFolderMember
  name: BeginRemoveFolderMember
  nameWithType: SharingUserRoutes.BeginRemoveFolderMember
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRemoveFolderMember
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFolderMember*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFolderMember
  name: EndRemoveFolderMember
  nameWithType: SharingUserRoutes.EndRemoveFolderMember
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRemoveFolderMember
- uid: Dropbox.Api.Async.LaunchResultBase
  commentId: T:Dropbox.Api.Async.LaunchResultBase
  parent: Dropbox.Api.Async
  name: LaunchResultBase
  nameWithType: LaunchResultBase
  fullName: Dropbox.Api.Async.LaunchResultBase
- uid: Dropbox.Api.Sharing.ListSharedLinksArg.Path
  commentId: P:Dropbox.Api.Sharing.ListSharedLinksArg.Path
  isExternal: true
- uid: Dropbox.Api.Sharing.RevokeSharedLinkError
  commentId: T:Dropbox.Api.Sharing.RevokeSharedLinkError
  parent: Dropbox.Api.Sharing
  name: RevokeSharedLinkError
  nameWithType: RevokeSharedLinkError
  fullName: Dropbox.Api.Sharing.RevokeSharedLinkError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RevokeSharedLinkAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.RevokeSharedLinkAsync
  name: RevokeSharedLinkAsync
  nameWithType: SharingUserRoutes.RevokeSharedLinkAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.RevokeSharedLinkAsync
- uid: Dropbox.Api.Sharing.RevokeSharedLinkArg
  commentId: T:Dropbox.Api.Sharing.RevokeSharedLinkArg
  parent: Dropbox.Api.Sharing
  name: RevokeSharedLinkArg
  nameWithType: RevokeSharedLinkArg
  fullName: Dropbox.Api.Sharing.RevokeSharedLinkArg
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRevokeSharedLink*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRevokeSharedLink
  name: BeginRevokeSharedLink
  nameWithType: SharingUserRoutes.BeginRevokeSharedLink
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginRevokeSharedLink
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRevokeSharedLink*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRevokeSharedLink
  name: EndRevokeSharedLink
  nameWithType: SharingUserRoutes.EndRevokeSharedLink
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndRevokeSharedLink
- uid: Dropbox.Api.Sharing.ShareFolderLaunch.AsyncJobId
  commentId: T:Dropbox.Api.Sharing.ShareFolderLaunch.AsyncJobId
  parent: Dropbox.Api.Sharing
  name: ShareFolderLaunch.AsyncJobId
  nameWithType: ShareFolderLaunch.AsyncJobId
  fullName: Dropbox.Api.Sharing.ShareFolderLaunch.AsyncJobId
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckShareJobStatusAsync(Dropbox.Api.Async.PollArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckShareJobStatusAsync(Dropbox.Api.Async.PollArg)
  isExternal: true
- uid: Dropbox.Api.Sharing.SetAccessInheritanceError
  commentId: T:Dropbox.Api.Sharing.SetAccessInheritanceError
  parent: Dropbox.Api.Sharing
  name: SetAccessInheritanceError
  nameWithType: SetAccessInheritanceError
  fullName: Dropbox.Api.Sharing.SetAccessInheritanceError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.SetAccessInheritanceAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.SetAccessInheritanceAsync
  name: SetAccessInheritanceAsync
  nameWithType: SharingUserRoutes.SetAccessInheritanceAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.SetAccessInheritanceAsync
- uid: Dropbox.Api.Sharing.SetAccessInheritanceArg
  commentId: T:Dropbox.Api.Sharing.SetAccessInheritanceArg
  parent: Dropbox.Api.Sharing
  name: SetAccessInheritanceArg
  nameWithType: SetAccessInheritanceArg
  fullName: Dropbox.Api.Sharing.SetAccessInheritanceArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Sharing.ShareFolderLaunch}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Sharing.ShareFolderLaunch}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ShareFolderLaunch>
  nameWithType: Task<ShareFolderLaunch>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Sharing.ShareFolderLaunch>
  nameWithType.vb: Task(Of ShareFolderLaunch)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Sharing.ShareFolderLaunch)
  name.vb: Task(Of ShareFolderLaunch)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.ShareFolderLaunch
    name: ShareFolderLaunch
    nameWithType: ShareFolderLaunch
    fullName: Dropbox.Api.Sharing.ShareFolderLaunch
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.ShareFolderLaunch
    name: ShareFolderLaunch
    nameWithType: ShareFolderLaunch
    fullName: Dropbox.Api.Sharing.ShareFolderLaunch
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginSetAccessInheritance*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginSetAccessInheritance
  name: BeginSetAccessInheritance
  nameWithType: SharingUserRoutes.BeginSetAccessInheritance
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginSetAccessInheritance
- uid: Dropbox.Api.Sharing.AccessInheritance
  commentId: T:Dropbox.Api.Sharing.AccessInheritance
  parent: Dropbox.Api.Sharing
  name: AccessInheritance
  nameWithType: AccessInheritance
  fullName: Dropbox.Api.Sharing.AccessInheritance
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndSetAccessInheritance*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndSetAccessInheritance
  name: EndSetAccessInheritance
  nameWithType: SharingUserRoutes.EndSetAccessInheritance
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndSetAccessInheritance
- uid: Dropbox.Api.Sharing.ShareFolderLaunch
  commentId: T:Dropbox.Api.Sharing.ShareFolderLaunch
  parent: Dropbox.Api.Sharing
  name: ShareFolderLaunch
  nameWithType: ShareFolderLaunch
  fullName: Dropbox.Api.Sharing.ShareFolderLaunch
- uid: Dropbox.Api.Sharing.ShareFolderError
  commentId: T:Dropbox.Api.Sharing.ShareFolderError
  parent: Dropbox.Api.Sharing
  name: ShareFolderError
  nameWithType: ShareFolderError
  fullName: Dropbox.Api.Sharing.ShareFolderError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ShareFolderAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.ShareFolderAsync
  name: ShareFolderAsync
  nameWithType: SharingUserRoutes.ShareFolderAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.ShareFolderAsync
- uid: Dropbox.Api.Sharing.ShareFolderArg
  commentId: T:Dropbox.Api.Sharing.ShareFolderArg
  parent: Dropbox.Api.Sharing
  name: ShareFolderArg
  nameWithType: ShareFolderArg
  fullName: Dropbox.Api.Sharing.ShareFolderArg
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginShareFolder*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginShareFolder
  name: BeginShareFolder
  nameWithType: SharingUserRoutes.BeginShareFolder
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginShareFolder
- uid: Dropbox.Api.Sharing.SharedLinkPolicy.Members
  commentId: T:Dropbox.Api.Sharing.SharedLinkPolicy.Members
  parent: Dropbox.Api.Sharing
  name: SharedLinkPolicy.Members
  nameWithType: SharedLinkPolicy.Members
  fullName: Dropbox.Api.Sharing.SharedLinkPolicy.Members
- uid: Dropbox.Api.Sharing.AclUpdatePolicy
  commentId: T:Dropbox.Api.Sharing.AclUpdatePolicy
  parent: Dropbox.Api.Sharing
  name: AclUpdatePolicy
  nameWithType: AclUpdatePolicy
  fullName: Dropbox.Api.Sharing.AclUpdatePolicy
- uid: Dropbox.Api.Sharing.MemberPolicy
  commentId: T:Dropbox.Api.Sharing.MemberPolicy
  parent: Dropbox.Api.Sharing
  name: MemberPolicy
  nameWithType: MemberPolicy
  fullName: Dropbox.Api.Sharing.MemberPolicy
- uid: Dropbox.Api.Sharing.SharedLinkPolicy
  commentId: T:Dropbox.Api.Sharing.SharedLinkPolicy
  parent: Dropbox.Api.Sharing
  name: SharedLinkPolicy
  nameWithType: SharedLinkPolicy
  fullName: Dropbox.Api.Sharing.SharedLinkPolicy
- uid: Dropbox.Api.Sharing.ViewerInfoPolicy
  commentId: T:Dropbox.Api.Sharing.ViewerInfoPolicy
  parent: Dropbox.Api.Sharing
  name: ViewerInfoPolicy
  nameWithType: ViewerInfoPolicy
  fullName: Dropbox.Api.Sharing.ViewerInfoPolicy
- uid: Dropbox.Api.Sharing.LinkSettings
  commentId: T:Dropbox.Api.Sharing.LinkSettings
  parent: Dropbox.Api.Sharing
  name: LinkSettings
  nameWithType: LinkSettings
  fullName: Dropbox.Api.Sharing.LinkSettings
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndShareFolder*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndShareFolder
  name: EndShareFolder
  nameWithType: SharingUserRoutes.EndShareFolder
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndShareFolder
- uid: Dropbox.Api.Sharing.AccessLevel.Owner
  commentId: T:Dropbox.Api.Sharing.AccessLevel.Owner
  parent: Dropbox.Api.Sharing
  name: AccessLevel.Owner
  nameWithType: AccessLevel.Owner
  fullName: Dropbox.Api.Sharing.AccessLevel.Owner
- uid: Dropbox.Api.Sharing.TransferFolderError
  commentId: T:Dropbox.Api.Sharing.TransferFolderError
  parent: Dropbox.Api.Sharing
  name: TransferFolderError
  nameWithType: TransferFolderError
  fullName: Dropbox.Api.Sharing.TransferFolderError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.TransferFolderAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.TransferFolderAsync
  name: TransferFolderAsync
  nameWithType: SharingUserRoutes.TransferFolderAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.TransferFolderAsync
- uid: Dropbox.Api.Sharing.TransferFolderArg
  commentId: T:Dropbox.Api.Sharing.TransferFolderArg
  parent: Dropbox.Api.Sharing
  name: TransferFolderArg
  nameWithType: TransferFolderArg
  fullName: Dropbox.Api.Sharing.TransferFolderArg
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginTransferFolder*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginTransferFolder
  name: BeginTransferFolder
  nameWithType: SharingUserRoutes.BeginTransferFolder
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginTransferFolder
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndTransferFolder*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndTransferFolder
  name: EndTransferFolder
  nameWithType: SharingUserRoutes.EndTransferFolder
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndTransferFolder
- uid: Dropbox.Api.Sharing.UnmountFolderError
  commentId: T:Dropbox.Api.Sharing.UnmountFolderError
  parent: Dropbox.Api.Sharing
  name: UnmountFolderError
  nameWithType: UnmountFolderError
  fullName: Dropbox.Api.Sharing.UnmountFolderError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnmountFolderAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnmountFolderAsync
  name: UnmountFolderAsync
  nameWithType: SharingUserRoutes.UnmountFolderAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnmountFolderAsync
- uid: Dropbox.Api.Sharing.UnmountFolderArg
  commentId: T:Dropbox.Api.Sharing.UnmountFolderArg
  parent: Dropbox.Api.Sharing
  name: UnmountFolderArg
  nameWithType: UnmountFolderArg
  fullName: Dropbox.Api.Sharing.UnmountFolderArg
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnmountFolder*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnmountFolder
  name: BeginUnmountFolder
  nameWithType: SharingUserRoutes.BeginUnmountFolder
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnmountFolder
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnmountFolder*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnmountFolder
  name: EndUnmountFolder
  nameWithType: SharingUserRoutes.EndUnmountFolder
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnmountFolder
- uid: Dropbox.Api.Sharing.UnshareFileError
  commentId: T:Dropbox.Api.Sharing.UnshareFileError
  parent: Dropbox.Api.Sharing
  name: UnshareFileError
  nameWithType: UnshareFileError
  fullName: Dropbox.Api.Sharing.UnshareFileError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFileAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFileAsync
  name: UnshareFileAsync
  nameWithType: SharingUserRoutes.UnshareFileAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFileAsync
- uid: Dropbox.Api.Sharing.UnshareFileArg
  commentId: T:Dropbox.Api.Sharing.UnshareFileArg
  parent: Dropbox.Api.Sharing
  name: UnshareFileArg
  nameWithType: UnshareFileArg
  fullName: Dropbox.Api.Sharing.UnshareFileArg
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFile*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFile
  name: BeginUnshareFile
  nameWithType: SharingUserRoutes.BeginUnshareFile
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFile
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnshareFile*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnshareFile
  name: EndUnshareFile
  nameWithType: SharingUserRoutes.EndUnshareFile
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnshareFile
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckJobStatusAsync(Dropbox.Api.Async.PollArg)
  commentId: M:Dropbox.Api.Sharing.Routes.SharingUserRoutes.CheckJobStatusAsync(Dropbox.Api.Async.PollArg)
  isExternal: true
- uid: Dropbox.Api.Sharing.UnshareFolderError
  commentId: T:Dropbox.Api.Sharing.UnshareFolderError
  parent: Dropbox.Api.Sharing
  name: UnshareFolderError
  nameWithType: UnshareFolderError
  fullName: Dropbox.Api.Sharing.UnshareFolderError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFolderAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFolderAsync
  name: UnshareFolderAsync
  nameWithType: SharingUserRoutes.UnshareFolderAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UnshareFolderAsync
- uid: Dropbox.Api.Sharing.UnshareFolderArg
  commentId: T:Dropbox.Api.Sharing.UnshareFolderArg
  parent: Dropbox.Api.Sharing
  name: UnshareFolderArg
  nameWithType: UnshareFolderArg
  fullName: Dropbox.Api.Sharing.UnshareFolderArg
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFolder*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFolder
  name: BeginUnshareFolder
  nameWithType: SharingUserRoutes.BeginUnshareFolder
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUnshareFolder
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnshareFolder*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnshareFolder
  name: EndUnshareFolder
  nameWithType: SharingUserRoutes.EndUnshareFolder
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUnshareFolder
- uid: Dropbox.Api.Sharing.FileMemberActionError
  commentId: T:Dropbox.Api.Sharing.FileMemberActionError
  parent: Dropbox.Api.Sharing
  name: FileMemberActionError
  nameWithType: FileMemberActionError
  fullName: Dropbox.Api.Sharing.FileMemberActionError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFileMemberAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFileMemberAsync
  name: UpdateFileMemberAsync
  nameWithType: SharingUserRoutes.UpdateFileMemberAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFileMemberAsync
- uid: Dropbox.Api.Sharing.UpdateFileMemberArgs
  commentId: T:Dropbox.Api.Sharing.UpdateFileMemberArgs
  parent: Dropbox.Api.Sharing
  name: UpdateFileMemberArgs
  nameWithType: UpdateFileMemberArgs
  fullName: Dropbox.Api.Sharing.UpdateFileMemberArgs
- uid: System.Threading.Tasks.Task{Dropbox.Api.Sharing.MemberAccessLevelResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Sharing.MemberAccessLevelResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<MemberAccessLevelResult>
  nameWithType: Task<MemberAccessLevelResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Sharing.MemberAccessLevelResult>
  nameWithType.vb: Task(Of MemberAccessLevelResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Sharing.MemberAccessLevelResult)
  name.vb: Task(Of MemberAccessLevelResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Sharing.MemberAccessLevelResult
    name: MemberAccessLevelResult
    nameWithType: MemberAccessLevelResult
    fullName: Dropbox.Api.Sharing.MemberAccessLevelResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Sharing.MemberAccessLevelResult
    name: MemberAccessLevelResult
    nameWithType: MemberAccessLevelResult
    fullName: Dropbox.Api.Sharing.MemberAccessLevelResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFileMember*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFileMember
  name: BeginUpdateFileMember
  nameWithType: SharingUserRoutes.BeginUpdateFileMember
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFileMember
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFileMember*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFileMember
  name: EndUpdateFileMember
  nameWithType: SharingUserRoutes.EndUpdateFileMember
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFileMember
- uid: Dropbox.Api.Sharing.MemberAccessLevelResult
  commentId: T:Dropbox.Api.Sharing.MemberAccessLevelResult
  parent: Dropbox.Api.Sharing
  name: MemberAccessLevelResult
  nameWithType: MemberAccessLevelResult
  fullName: Dropbox.Api.Sharing.MemberAccessLevelResult
- uid: Dropbox.Api.Sharing.UpdateFolderMemberError
  commentId: T:Dropbox.Api.Sharing.UpdateFolderMemberError
  parent: Dropbox.Api.Sharing
  name: UpdateFolderMemberError
  nameWithType: UpdateFolderMemberError
  fullName: Dropbox.Api.Sharing.UpdateFolderMemberError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderMemberAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderMemberAsync
  name: UpdateFolderMemberAsync
  nameWithType: SharingUserRoutes.UpdateFolderMemberAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderMemberAsync
- uid: Dropbox.Api.Sharing.UpdateFolderMemberArg
  commentId: T:Dropbox.Api.Sharing.UpdateFolderMemberArg
  parent: Dropbox.Api.Sharing
  name: UpdateFolderMemberArg
  nameWithType: UpdateFolderMemberArg
  fullName: Dropbox.Api.Sharing.UpdateFolderMemberArg
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderMember*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderMember
  name: BeginUpdateFolderMember
  nameWithType: SharingUserRoutes.BeginUpdateFolderMember
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderMember
- uid: Dropbox.Api.Sharing.MemberSelector.DropboxId
  commentId: T:Dropbox.Api.Sharing.MemberSelector.DropboxId
  parent: Dropbox.Api.Sharing
  name: MemberSelector.DropboxId
  nameWithType: MemberSelector.DropboxId
  fullName: Dropbox.Api.Sharing.MemberSelector.DropboxId
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFolderMember*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFolderMember
  name: EndUpdateFolderMember
  nameWithType: SharingUserRoutes.EndUpdateFolderMember
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFolderMember
- uid: Dropbox.Api.Sharing.UpdateFolderPolicyError
  commentId: T:Dropbox.Api.Sharing.UpdateFolderPolicyError
  parent: Dropbox.Api.Sharing
  name: UpdateFolderPolicyError
  nameWithType: UpdateFolderPolicyError
  fullName: Dropbox.Api.Sharing.UpdateFolderPolicyError
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderPolicyAsync*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderPolicyAsync
  name: UpdateFolderPolicyAsync
  nameWithType: SharingUserRoutes.UpdateFolderPolicyAsync
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.UpdateFolderPolicyAsync
- uid: Dropbox.Api.Sharing.UpdateFolderPolicyArg
  commentId: T:Dropbox.Api.Sharing.UpdateFolderPolicyArg
  parent: Dropbox.Api.Sharing
  name: UpdateFolderPolicyArg
  nameWithType: UpdateFolderPolicyArg
  fullName: Dropbox.Api.Sharing.UpdateFolderPolicyArg
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderPolicy*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderPolicy
  name: BeginUpdateFolderPolicy
  nameWithType: SharingUserRoutes.BeginUpdateFolderPolicy
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.BeginUpdateFolderPolicy
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFolderPolicy*
  commentId: Overload:Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFolderPolicy
  name: EndUpdateFolderPolicy
  nameWithType: SharingUserRoutes.EndUpdateFolderPolicy
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes.EndUpdateFolderPolicy
