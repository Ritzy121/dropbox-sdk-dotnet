### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Team.TeamFolderMetadata
  commentId: T:Dropbox.Api.Team.TeamFolderMetadata
  id: TeamFolderMetadata
  parent: Dropbox.Api.Team
  children:
  - Dropbox.Api.Team.TeamFolderMetadata.#ctor(System.String,System.String,Dropbox.Api.Team.TeamFolderStatus,System.Boolean,Dropbox.Api.Files.SyncSetting,System.Collections.Generic.IEnumerable{Dropbox.Api.Files.ContentSyncSetting})
  - Dropbox.Api.Team.TeamFolderMetadata.ContentSyncSettings
  - Dropbox.Api.Team.TeamFolderMetadata.IsTeamSharedDropbox
  - Dropbox.Api.Team.TeamFolderMetadata.Name
  - Dropbox.Api.Team.TeamFolderMetadata.Status
  - Dropbox.Api.Team.TeamFolderMetadata.SyncSetting
  - Dropbox.Api.Team.TeamFolderMetadata.TeamFolderId
  langs:
  - csharp
  - vb
  name: TeamFolderMetadata
  nameWithType: TeamFolderMetadata
  fullName: Dropbox.Api.Team.TeamFolderMetadata
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderMetadata
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderMetadata.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Properties of a team folder.</p>\n"
  example: []
  syntax:
    content: public class TeamFolderMetadata
    content.vb: Public Class TeamFolderMetadata
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Team.TeamFolderMetadata.#ctor(System.String,System.String,Dropbox.Api.Team.TeamFolderStatus,System.Boolean,Dropbox.Api.Files.SyncSetting,System.Collections.Generic.IEnumerable{Dropbox.Api.Files.ContentSyncSetting})
  commentId: M:Dropbox.Api.Team.TeamFolderMetadata.#ctor(System.String,System.String,Dropbox.Api.Team.TeamFolderStatus,System.Boolean,Dropbox.Api.Files.SyncSetting,System.Collections.Generic.IEnumerable{Dropbox.Api.Files.ContentSyncSetting})
  id: '#ctor(System.String,System.String,Dropbox.Api.Team.TeamFolderStatus,System.Boolean,Dropbox.Api.Files.SyncSetting,System.Collections.Generic.IEnumerable{Dropbox.Api.Files.ContentSyncSetting})'
  parent: Dropbox.Api.Team.TeamFolderMetadata
  langs:
  - csharp
  - vb
  name: TeamFolderMetadata(String, String, TeamFolderStatus, Boolean, SyncSetting, IEnumerable<ContentSyncSetting>)
  nameWithType: TeamFolderMetadata.TeamFolderMetadata(String, String, TeamFolderStatus, Boolean, SyncSetting, IEnumerable<ContentSyncSetting>)
  fullName: Dropbox.Api.Team.TeamFolderMetadata.TeamFolderMetadata(System.String, System.String, Dropbox.Api.Team.TeamFolderStatus, System.Boolean, Dropbox.Api.Files.SyncSetting, System.Collections.Generic.IEnumerable<Dropbox.Api.Files.ContentSyncSetting>)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderMetadata.cs
    startLine: 41
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Team.TeamFolderMetadata\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public TeamFolderMetadata(string teamFolderId, string name, TeamFolderStatus status, bool isTeamSharedDropbox, SyncSetting syncSetting, IEnumerable<ContentSyncSetting> contentSyncSettings)
    parameters:
    - id: teamFolderId
      type: System.String
      description: The ID of the team folder.
    - id: name
      type: System.String
      description: The name of the team folder.
    - id: status
      type: Dropbox.Api.Team.TeamFolderStatus
      description: The status of the team folder.
    - id: isTeamSharedDropbox
      type: System.Boolean
      description: >-
        True if this team folder is a shared team

        root.
    - id: syncSetting
      type: Dropbox.Api.Files.SyncSetting
      description: The sync setting applied to this team folder.
    - id: contentSyncSettings
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Files.ContentSyncSetting}
      description: >-
        Sync settings applied to contents of this team

        folder.
    content.vb: Public Sub New(teamFolderId As String, name As String, status As TeamFolderStatus, isTeamSharedDropbox As Boolean, syncSetting As SyncSetting, contentSyncSettings As IEnumerable(Of ContentSyncSetting))
  overload: Dropbox.Api.Team.TeamFolderMetadata.#ctor*
  nameWithType.vb: TeamFolderMetadata.TeamFolderMetadata(String, String, TeamFolderStatus, Boolean, SyncSetting, IEnumerable(Of ContentSyncSetting))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.TeamFolderMetadata.TeamFolderMetadata(System.String, System.String, Dropbox.Api.Team.TeamFolderStatus, System.Boolean, Dropbox.Api.Files.SyncSetting, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Files.ContentSyncSetting))
  name.vb: TeamFolderMetadata(String, String, TeamFolderStatus, Boolean, SyncSetting, IEnumerable(Of ContentSyncSetting))
- uid: Dropbox.Api.Team.TeamFolderMetadata.TeamFolderId
  commentId: P:Dropbox.Api.Team.TeamFolderMetadata.TeamFolderId
  id: TeamFolderId
  parent: Dropbox.Api.Team.TeamFolderMetadata
  langs:
  - csharp
  - vb
  name: TeamFolderId
  nameWithType: TeamFolderMetadata.TeamFolderId
  fullName: Dropbox.Api.Team.TeamFolderMetadata.TeamFolderId
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderId
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderMetadata.cs
    startLine: 101
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>The ID of the team folder.</p>\n"
  example: []
  syntax:
    content: public string TeamFolderId { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TeamFolderId As String
  overload: Dropbox.Api.Team.TeamFolderMetadata.TeamFolderId*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Team.TeamFolderMetadata.Name
  commentId: P:Dropbox.Api.Team.TeamFolderMetadata.Name
  id: Name
  parent: Dropbox.Api.Team.TeamFolderMetadata
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TeamFolderMetadata.Name
  fullName: Dropbox.Api.Team.TeamFolderMetadata.Name
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Name
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderMetadata.cs
    startLine: 106
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>The name of the team folder.</p>\n"
  example: []
  syntax:
    content: public string Name { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Dropbox.Api.Team.TeamFolderMetadata.Name*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Team.TeamFolderMetadata.Status
  commentId: P:Dropbox.Api.Team.TeamFolderMetadata.Status
  id: Status
  parent: Dropbox.Api.Team.TeamFolderMetadata
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: TeamFolderMetadata.Status
  fullName: Dropbox.Api.Team.TeamFolderMetadata.Status
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Status
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderMetadata.cs
    startLine: 111
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>The status of the team folder.</p>\n"
  example: []
  syntax:
    content: public TeamFolderStatus Status { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Team.TeamFolderStatus
    content.vb: Public Property Status As TeamFolderStatus
  overload: Dropbox.Api.Team.TeamFolderMetadata.Status*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Team.TeamFolderMetadata.IsTeamSharedDropbox
  commentId: P:Dropbox.Api.Team.TeamFolderMetadata.IsTeamSharedDropbox
  id: IsTeamSharedDropbox
  parent: Dropbox.Api.Team.TeamFolderMetadata
  langs:
  - csharp
  - vb
  name: IsTeamSharedDropbox
  nameWithType: TeamFolderMetadata.IsTeamSharedDropbox
  fullName: Dropbox.Api.Team.TeamFolderMetadata.IsTeamSharedDropbox
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsTeamSharedDropbox
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderMetadata.cs
    startLine: 116
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>True if this team folder is a shared team root.</p>\n"
  example: []
  syntax:
    content: public bool IsTeamSharedDropbox { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsTeamSharedDropbox As Boolean
  overload: Dropbox.Api.Team.TeamFolderMetadata.IsTeamSharedDropbox*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Team.TeamFolderMetadata.SyncSetting
  commentId: P:Dropbox.Api.Team.TeamFolderMetadata.SyncSetting
  id: SyncSetting
  parent: Dropbox.Api.Team.TeamFolderMetadata
  langs:
  - csharp
  - vb
  name: SyncSetting
  nameWithType: TeamFolderMetadata.SyncSetting
  fullName: Dropbox.Api.Team.TeamFolderMetadata.SyncSetting
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: SyncSetting
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderMetadata.cs
    startLine: 121
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>The sync setting applied to this team folder.</p>\n"
  example: []
  syntax:
    content: public SyncSetting SyncSetting { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Files.SyncSetting
    content.vb: Public Property SyncSetting As SyncSetting
  overload: Dropbox.Api.Team.TeamFolderMetadata.SyncSetting*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Team.TeamFolderMetadata.ContentSyncSettings
  commentId: P:Dropbox.Api.Team.TeamFolderMetadata.ContentSyncSettings
  id: ContentSyncSettings
  parent: Dropbox.Api.Team.TeamFolderMetadata
  langs:
  - csharp
  - vb
  name: ContentSyncSettings
  nameWithType: TeamFolderMetadata.ContentSyncSettings
  fullName: Dropbox.Api.Team.TeamFolderMetadata.ContentSyncSettings
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ContentSyncSettings
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderMetadata.cs
    startLine: 126
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Sync settings applied to contents of this team folder.</p>\n"
  example: []
  syntax:
    content: public IList<ContentSyncSetting> ContentSyncSettings { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Dropbox.Api.Files.ContentSyncSetting}
    content.vb: Public Property ContentSyncSettings As IList(Of ContentSyncSetting)
  overload: Dropbox.Api.Team.TeamFolderMetadata.ContentSyncSettings*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Team
  commentId: N:Dropbox.Api.Team
  name: Dropbox.Api.Team
  nameWithType: Dropbox.Api.Team
  fullName: Dropbox.Api.Team
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Team.TeamFolderMetadata
  commentId: T:Dropbox.Api.Team.TeamFolderMetadata
  parent: Dropbox.Api.Team
  name: TeamFolderMetadata
  nameWithType: TeamFolderMetadata
  fullName: Dropbox.Api.Team.TeamFolderMetadata
- uid: Dropbox.Api.Team.TeamFolderMetadata.#ctor*
  commentId: Overload:Dropbox.Api.Team.TeamFolderMetadata.#ctor
  name: TeamFolderMetadata
  nameWithType: TeamFolderMetadata.TeamFolderMetadata
  fullName: Dropbox.Api.Team.TeamFolderMetadata.TeamFolderMetadata
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dropbox.Api.Team.TeamFolderStatus
  commentId: T:Dropbox.Api.Team.TeamFolderStatus
  parent: Dropbox.Api.Team
  name: TeamFolderStatus
  nameWithType: TeamFolderStatus
  fullName: Dropbox.Api.Team.TeamFolderStatus
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Files.SyncSetting
  commentId: T:Dropbox.Api.Files.SyncSetting
  parent: Dropbox.Api.Files
  name: SyncSetting
  nameWithType: SyncSetting
  fullName: Dropbox.Api.Files.SyncSetting
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Files.ContentSyncSetting}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.Files.ContentSyncSetting}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ContentSyncSetting>
  nameWithType: IEnumerable<ContentSyncSetting>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Files.ContentSyncSetting>
  nameWithType.vb: IEnumerable(Of ContentSyncSetting)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Files.ContentSyncSetting)
  name.vb: IEnumerable(Of ContentSyncSetting)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Files.ContentSyncSetting
    name: ContentSyncSetting
    nameWithType: ContentSyncSetting
    fullName: Dropbox.Api.Files.ContentSyncSetting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Files.ContentSyncSetting
    name: ContentSyncSetting
    nameWithType: ContentSyncSetting
    fullName: Dropbox.Api.Files.ContentSyncSetting
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Dropbox.Api.Team.TeamFolderMetadata.TeamFolderId*
  commentId: Overload:Dropbox.Api.Team.TeamFolderMetadata.TeamFolderId
  name: TeamFolderId
  nameWithType: TeamFolderMetadata.TeamFolderId
  fullName: Dropbox.Api.Team.TeamFolderMetadata.TeamFolderId
- uid: Dropbox.Api.Team.TeamFolderMetadata.Name*
  commentId: Overload:Dropbox.Api.Team.TeamFolderMetadata.Name
  name: Name
  nameWithType: TeamFolderMetadata.Name
  fullName: Dropbox.Api.Team.TeamFolderMetadata.Name
- uid: Dropbox.Api.Team.TeamFolderMetadata.Status*
  commentId: Overload:Dropbox.Api.Team.TeamFolderMetadata.Status
  name: Status
  nameWithType: TeamFolderMetadata.Status
  fullName: Dropbox.Api.Team.TeamFolderMetadata.Status
- uid: Dropbox.Api.Team.TeamFolderMetadata.IsTeamSharedDropbox*
  commentId: Overload:Dropbox.Api.Team.TeamFolderMetadata.IsTeamSharedDropbox
  name: IsTeamSharedDropbox
  nameWithType: TeamFolderMetadata.IsTeamSharedDropbox
  fullName: Dropbox.Api.Team.TeamFolderMetadata.IsTeamSharedDropbox
- uid: Dropbox.Api.Team.TeamFolderMetadata.SyncSetting*
  commentId: Overload:Dropbox.Api.Team.TeamFolderMetadata.SyncSetting
  name: SyncSetting
  nameWithType: TeamFolderMetadata.SyncSetting
  fullName: Dropbox.Api.Team.TeamFolderMetadata.SyncSetting
- uid: Dropbox.Api.Team.TeamFolderMetadata.ContentSyncSettings*
  commentId: Overload:Dropbox.Api.Team.TeamFolderMetadata.ContentSyncSettings
  name: ContentSyncSettings
  nameWithType: TeamFolderMetadata.ContentSyncSettings
  fullName: Dropbox.Api.Team.TeamFolderMetadata.ContentSyncSettings
- uid: System.Collections.Generic.IList{Dropbox.Api.Files.ContentSyncSetting}
  commentId: T:System.Collections.Generic.IList{Dropbox.Api.Files.ContentSyncSetting}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ContentSyncSetting>
  nameWithType: IList<ContentSyncSetting>
  fullName: System.Collections.Generic.IList<Dropbox.Api.Files.ContentSyncSetting>
  nameWithType.vb: IList(Of ContentSyncSetting)
  fullName.vb: System.Collections.Generic.IList(Of Dropbox.Api.Files.ContentSyncSetting)
  name.vb: IList(Of ContentSyncSetting)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Files.ContentSyncSetting
    name: ContentSyncSetting
    nameWithType: ContentSyncSetting
    fullName: Dropbox.Api.Files.ContentSyncSetting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Files.ContentSyncSetting
    name: ContentSyncSetting
    nameWithType: ContentSyncSetting
    fullName: Dropbox.Api.Files.ContentSyncSetting
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
