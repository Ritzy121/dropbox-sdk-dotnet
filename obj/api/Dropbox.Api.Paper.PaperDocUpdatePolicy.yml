### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy
  commentId: T:Dropbox.Api.Paper.PaperDocUpdatePolicy
  id: PaperDocUpdatePolicy
  parent: Dropbox.Api.Paper
  children:
  - Dropbox.Api.Paper.PaperDocUpdatePolicy.#ctor
  - Dropbox.Api.Paper.PaperDocUpdatePolicy.AsAppend
  - Dropbox.Api.Paper.PaperDocUpdatePolicy.AsOther
  - Dropbox.Api.Paper.PaperDocUpdatePolicy.AsOverwriteAll
  - Dropbox.Api.Paper.PaperDocUpdatePolicy.AsPrepend
  - Dropbox.Api.Paper.PaperDocUpdatePolicy.IsAppend
  - Dropbox.Api.Paper.PaperDocUpdatePolicy.IsOther
  - Dropbox.Api.Paper.PaperDocUpdatePolicy.IsOverwriteAll
  - Dropbox.Api.Paper.PaperDocUpdatePolicy.IsPrepend
  langs:
  - csharp
  - vb
  name: PaperDocUpdatePolicy
  nameWithType: PaperDocUpdatePolicy
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/PaperDocUpdatePolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: PaperDocUpdatePolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/PaperDocUpdatePolicy.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Paper
  summary: "\n<p>The paper doc update policy object</p>\n"
  example: []
  syntax:
    content: public class PaperDocUpdatePolicy
    content.vb: Public Class PaperDocUpdatePolicy
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Paper.PaperDocUpdatePolicy.Append
  - Dropbox.Api.Paper.PaperDocUpdatePolicy.Other
  - Dropbox.Api.Paper.PaperDocUpdatePolicy.OverwriteAll
  - Dropbox.Api.Paper.PaperDocUpdatePolicy.Prepend
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.#ctor
  commentId: M:Dropbox.Api.Paper.PaperDocUpdatePolicy.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Paper.PaperDocUpdatePolicy
  langs:
  - csharp
  - vb
  name: PaperDocUpdatePolicy()
  nameWithType: PaperDocUpdatePolicy.PaperDocUpdatePolicy()
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.PaperDocUpdatePolicy()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/PaperDocUpdatePolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/PaperDocUpdatePolicy.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Paper
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Paper.PaperDocUpdatePolicy\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public PaperDocUpdatePolicy()
    content.vb: Public Sub New
  overload: Dropbox.Api.Paper.PaperDocUpdatePolicy.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.IsAppend
  commentId: P:Dropbox.Api.Paper.PaperDocUpdatePolicy.IsAppend
  id: IsAppend
  parent: Dropbox.Api.Paper.PaperDocUpdatePolicy
  langs:
  - csharp
  - vb
  name: IsAppend
  nameWithType: PaperDocUpdatePolicy.IsAppend
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.IsAppend
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/PaperDocUpdatePolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsAppend
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/PaperDocUpdatePolicy.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Paper
  summary: "\n<p>Gets a value indicating whether this instance is Append</p>\n"
  example: []
  syntax:
    content: public bool IsAppend { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAppend As Boolean
  overload: Dropbox.Api.Paper.PaperDocUpdatePolicy.IsAppend*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.AsAppend
  commentId: P:Dropbox.Api.Paper.PaperDocUpdatePolicy.AsAppend
  id: AsAppend
  parent: Dropbox.Api.Paper.PaperDocUpdatePolicy
  langs:
  - csharp
  - vb
  name: AsAppend
  nameWithType: PaperDocUpdatePolicy.AsAppend
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.AsAppend
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/PaperDocUpdatePolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsAppend
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/PaperDocUpdatePolicy.cs
    startLine: 51
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Paper
  summary: "\n<p>Gets this instance as a Append, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperDocUpdatePolicy.Append AsAppend { get; }
    parameters: []
    return:
      type: Dropbox.Api.Paper.PaperDocUpdatePolicy.Append
    content.vb: Public ReadOnly Property AsAppend As PaperDocUpdatePolicy.Append
  overload: Dropbox.Api.Paper.PaperDocUpdatePolicy.AsAppend*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.IsPrepend
  commentId: P:Dropbox.Api.Paper.PaperDocUpdatePolicy.IsPrepend
  id: IsPrepend
  parent: Dropbox.Api.Paper.PaperDocUpdatePolicy
  langs:
  - csharp
  - vb
  name: IsPrepend
  nameWithType: PaperDocUpdatePolicy.IsPrepend
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.IsPrepend
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/PaperDocUpdatePolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsPrepend
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/PaperDocUpdatePolicy.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Paper
  summary: "\n<p>Gets a value indicating whether this instance is Prepend</p>\n"
  example: []
  syntax:
    content: public bool IsPrepend { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPrepend As Boolean
  overload: Dropbox.Api.Paper.PaperDocUpdatePolicy.IsPrepend*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.AsPrepend
  commentId: P:Dropbox.Api.Paper.PaperDocUpdatePolicy.AsPrepend
  id: AsPrepend
  parent: Dropbox.Api.Paper.PaperDocUpdatePolicy
  langs:
  - csharp
  - vb
  name: AsPrepend
  nameWithType: PaperDocUpdatePolicy.AsPrepend
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.AsPrepend
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/PaperDocUpdatePolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsPrepend
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/PaperDocUpdatePolicy.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Paper
  summary: "\n<p>Gets this instance as a Prepend, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperDocUpdatePolicy.Prepend AsPrepend { get; }
    parameters: []
    return:
      type: Dropbox.Api.Paper.PaperDocUpdatePolicy.Prepend
    content.vb: Public ReadOnly Property AsPrepend As PaperDocUpdatePolicy.Prepend
  overload: Dropbox.Api.Paper.PaperDocUpdatePolicy.AsPrepend*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.IsOverwriteAll
  commentId: P:Dropbox.Api.Paper.PaperDocUpdatePolicy.IsOverwriteAll
  id: IsOverwriteAll
  parent: Dropbox.Api.Paper.PaperDocUpdatePolicy
  langs:
  - csharp
  - vb
  name: IsOverwriteAll
  nameWithType: PaperDocUpdatePolicy.IsOverwriteAll
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.IsOverwriteAll
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/PaperDocUpdatePolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOverwriteAll
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/PaperDocUpdatePolicy.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Paper
  summary: "\n<p>Gets a value indicating whether this instance is OverwriteAll</p>\n"
  example: []
  syntax:
    content: public bool IsOverwriteAll { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOverwriteAll As Boolean
  overload: Dropbox.Api.Paper.PaperDocUpdatePolicy.IsOverwriteAll*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.AsOverwriteAll
  commentId: P:Dropbox.Api.Paper.PaperDocUpdatePolicy.AsOverwriteAll
  id: AsOverwriteAll
  parent: Dropbox.Api.Paper.PaperDocUpdatePolicy
  langs:
  - csharp
  - vb
  name: AsOverwriteAll
  nameWithType: PaperDocUpdatePolicy.AsOverwriteAll
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.AsOverwriteAll
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/PaperDocUpdatePolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOverwriteAll
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/PaperDocUpdatePolicy.cs
    startLine: 95
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Paper
  summary: "\n<p>Gets this instance as a OverwriteAll, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperDocUpdatePolicy.OverwriteAll AsOverwriteAll { get; }
    parameters: []
    return:
      type: Dropbox.Api.Paper.PaperDocUpdatePolicy.OverwriteAll
    content.vb: Public ReadOnly Property AsOverwriteAll As PaperDocUpdatePolicy.OverwriteAll
  overload: Dropbox.Api.Paper.PaperDocUpdatePolicy.AsOverwriteAll*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.IsOther
  commentId: P:Dropbox.Api.Paper.PaperDocUpdatePolicy.IsOther
  id: IsOther
  parent: Dropbox.Api.Paper.PaperDocUpdatePolicy
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: PaperDocUpdatePolicy.IsOther
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/PaperDocUpdatePolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/PaperDocUpdatePolicy.cs
    startLine: 106
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Paper
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.Paper.PaperDocUpdatePolicy.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.AsOther
  commentId: P:Dropbox.Api.Paper.PaperDocUpdatePolicy.AsOther
  id: AsOther
  parent: Dropbox.Api.Paper.PaperDocUpdatePolicy
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: PaperDocUpdatePolicy.AsOther
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/PaperDocUpdatePolicy.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Paper/PaperDocUpdatePolicy.cs
    startLine: 117
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Paper
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperDocUpdatePolicy.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.Paper.PaperDocUpdatePolicy.Other
    content.vb: Public ReadOnly Property AsOther As PaperDocUpdatePolicy.Other
  overload: Dropbox.Api.Paper.PaperDocUpdatePolicy.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Paper
  commentId: N:Dropbox.Api.Paper
  name: Dropbox.Api.Paper
  nameWithType: Dropbox.Api.Paper
  fullName: Dropbox.Api.Paper
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy
  commentId: T:Dropbox.Api.Paper.PaperDocUpdatePolicy
  parent: Dropbox.Api.Paper
  name: PaperDocUpdatePolicy
  nameWithType: PaperDocUpdatePolicy
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.#ctor*
  commentId: Overload:Dropbox.Api.Paper.PaperDocUpdatePolicy.#ctor
  name: PaperDocUpdatePolicy
  nameWithType: PaperDocUpdatePolicy.PaperDocUpdatePolicy
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.PaperDocUpdatePolicy
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.IsAppend*
  commentId: Overload:Dropbox.Api.Paper.PaperDocUpdatePolicy.IsAppend
  name: IsAppend
  nameWithType: PaperDocUpdatePolicy.IsAppend
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.IsAppend
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.AsAppend*
  commentId: Overload:Dropbox.Api.Paper.PaperDocUpdatePolicy.AsAppend
  name: AsAppend
  nameWithType: PaperDocUpdatePolicy.AsAppend
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.AsAppend
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.Append
  commentId: T:Dropbox.Api.Paper.PaperDocUpdatePolicy.Append
  parent: Dropbox.Api.Paper
  name: PaperDocUpdatePolicy.Append
  nameWithType: PaperDocUpdatePolicy.Append
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.Append
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.IsPrepend*
  commentId: Overload:Dropbox.Api.Paper.PaperDocUpdatePolicy.IsPrepend
  name: IsPrepend
  nameWithType: PaperDocUpdatePolicy.IsPrepend
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.IsPrepend
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.AsPrepend*
  commentId: Overload:Dropbox.Api.Paper.PaperDocUpdatePolicy.AsPrepend
  name: AsPrepend
  nameWithType: PaperDocUpdatePolicy.AsPrepend
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.AsPrepend
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.Prepend
  commentId: T:Dropbox.Api.Paper.PaperDocUpdatePolicy.Prepend
  parent: Dropbox.Api.Paper
  name: PaperDocUpdatePolicy.Prepend
  nameWithType: PaperDocUpdatePolicy.Prepend
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.Prepend
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.IsOverwriteAll*
  commentId: Overload:Dropbox.Api.Paper.PaperDocUpdatePolicy.IsOverwriteAll
  name: IsOverwriteAll
  nameWithType: PaperDocUpdatePolicy.IsOverwriteAll
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.IsOverwriteAll
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.AsOverwriteAll*
  commentId: Overload:Dropbox.Api.Paper.PaperDocUpdatePolicy.AsOverwriteAll
  name: AsOverwriteAll
  nameWithType: PaperDocUpdatePolicy.AsOverwriteAll
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.AsOverwriteAll
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.OverwriteAll
  commentId: T:Dropbox.Api.Paper.PaperDocUpdatePolicy.OverwriteAll
  parent: Dropbox.Api.Paper
  name: PaperDocUpdatePolicy.OverwriteAll
  nameWithType: PaperDocUpdatePolicy.OverwriteAll
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.OverwriteAll
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.IsOther*
  commentId: Overload:Dropbox.Api.Paper.PaperDocUpdatePolicy.IsOther
  name: IsOther
  nameWithType: PaperDocUpdatePolicy.IsOther
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.IsOther
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.AsOther*
  commentId: Overload:Dropbox.Api.Paper.PaperDocUpdatePolicy.AsOther
  name: AsOther
  nameWithType: PaperDocUpdatePolicy.AsOther
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.AsOther
- uid: Dropbox.Api.Paper.PaperDocUpdatePolicy.Other
  commentId: T:Dropbox.Api.Paper.PaperDocUpdatePolicy.Other
  parent: Dropbox.Api.Paper
  name: PaperDocUpdatePolicy.Other
  nameWithType: PaperDocUpdatePolicy.Other
  fullName: Dropbox.Api.Paper.PaperDocUpdatePolicy.Other
