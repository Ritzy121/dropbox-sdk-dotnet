### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult
  commentId: T:Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult
  id: MembersGetAvailableTeamMemberRolesResult
  parent: Dropbox.Api.Team
  children:
  - Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult.#ctor(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.TeamMemberRole})
  - Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult.Roles
  langs:
  - csharp
  - vb
  name: MembersGetAvailableTeamMemberRolesResult
  nameWithType: MembersGetAvailableTeamMemberRolesResult
  fullName: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/MembersGetAvailableTeamMemberRolesResult.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersGetAvailableTeamMemberRolesResult
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/MembersGetAvailableTeamMemberRolesResult.cs
    startLine: 17
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Available TeamMemberRole for the connected team. To be used with <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsV2Async(Dropbox.Api.Team.MembersSetPermissions2Arg)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public class MembersGetAvailableTeamMemberRolesResult
    content.vb: Public Class MembersGetAvailableTeamMemberRolesResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult.#ctor(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.TeamMemberRole})
  commentId: M:Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult.#ctor(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.TeamMemberRole})
  id: '#ctor(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.TeamMemberRole})'
  parent: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult
  langs:
  - csharp
  - vb
  name: MembersGetAvailableTeamMemberRolesResult(IEnumerable<TeamMemberRole>)
  nameWithType: MembersGetAvailableTeamMemberRolesResult.MembersGetAvailableTeamMemberRolesResult(IEnumerable<TeamMemberRole>)
  fullName: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult.MembersGetAvailableTeamMemberRolesResult(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.TeamMemberRole>)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/MembersGetAvailableTeamMemberRolesResult.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/MembersGetAvailableTeamMemberRolesResult.cs
    startLine: 36
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public MembersGetAvailableTeamMemberRolesResult(IEnumerable<TeamMemberRole> roles)
    parameters:
    - id: roles
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.TeamMemberRole}
      description: Available roles.
    content.vb: Public Sub New(roles As IEnumerable(Of TeamMemberRole))
  overload: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult.#ctor*
  nameWithType.vb: MembersGetAvailableTeamMemberRolesResult.MembersGetAvailableTeamMemberRolesResult(IEnumerable(Of TeamMemberRole))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult.MembersGetAvailableTeamMemberRolesResult(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.TeamMemberRole))
  name.vb: MembersGetAvailableTeamMemberRolesResult(IEnumerable(Of TeamMemberRole))
- uid: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult.Roles
  commentId: P:Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult.Roles
  id: Roles
  parent: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult
  langs:
  - csharp
  - vb
  name: Roles
  nameWithType: MembersGetAvailableTeamMemberRolesResult.Roles
  fullName: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult.Roles
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/MembersGetAvailableTeamMemberRolesResult.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Roles
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/MembersGetAvailableTeamMemberRolesResult.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Available roles.</p>\n"
  example: []
  syntax:
    content: public IList<TeamMemberRole> Roles { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Dropbox.Api.Team.TeamMemberRole}
    content.vb: Public Property Roles As IList(Of TeamMemberRole)
  overload: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult.Roles*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsV2Async(Dropbox.Api.Team.MembersSetPermissions2Arg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsV2Async(Dropbox.Api.Team.MembersSetPermissions2Arg)
  isExternal: true
- uid: Dropbox.Api.Team
  commentId: N:Dropbox.Api.Team
  name: Dropbox.Api.Team
  nameWithType: Dropbox.Api.Team
  fullName: Dropbox.Api.Team
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult
  commentId: T:Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult
  parent: Dropbox.Api.Team
  name: MembersGetAvailableTeamMemberRolesResult
  nameWithType: MembersGetAvailableTeamMemberRolesResult
  fullName: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult
- uid: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult.#ctor*
  commentId: Overload:Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult.#ctor
  name: MembersGetAvailableTeamMemberRolesResult
  nameWithType: MembersGetAvailableTeamMemberRolesResult.MembersGetAvailableTeamMemberRolesResult
  fullName: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult.MembersGetAvailableTeamMemberRolesResult
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.TeamMemberRole}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.Team.TeamMemberRole}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TeamMemberRole>
  nameWithType: IEnumerable<TeamMemberRole>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Team.TeamMemberRole>
  nameWithType.vb: IEnumerable(Of TeamMemberRole)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.TeamMemberRole)
  name.vb: IEnumerable(Of TeamMemberRole)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.TeamMemberRole
    name: TeamMemberRole
    nameWithType: TeamMemberRole
    fullName: Dropbox.Api.Team.TeamMemberRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.TeamMemberRole
    name: TeamMemberRole
    nameWithType: TeamMemberRole
    fullName: Dropbox.Api.Team.TeamMemberRole
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult.Roles*
  commentId: Overload:Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult.Roles
  name: Roles
  nameWithType: MembersGetAvailableTeamMemberRolesResult.Roles
  fullName: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult.Roles
- uid: System.Collections.Generic.IList{Dropbox.Api.Team.TeamMemberRole}
  commentId: T:System.Collections.Generic.IList{Dropbox.Api.Team.TeamMemberRole}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TeamMemberRole>
  nameWithType: IList<TeamMemberRole>
  fullName: System.Collections.Generic.IList<Dropbox.Api.Team.TeamMemberRole>
  nameWithType.vb: IList(Of TeamMemberRole)
  fullName.vb: System.Collections.Generic.IList(Of Dropbox.Api.Team.TeamMemberRole)
  name.vb: IList(Of TeamMemberRole)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.TeamMemberRole
    name: TeamMemberRole
    nameWithType: TeamMemberRole
    fullName: Dropbox.Api.Team.TeamMemberRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.TeamMemberRole
    name: TeamMemberRole
    nameWithType: TeamMemberRole
    fullName: Dropbox.Api.Team.TeamMemberRole
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
