### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Users.Account
  commentId: T:Dropbox.Api.Users.Account
  id: Account
  parent: Dropbox.Api.Users
  children:
  - Dropbox.Api.Users.Account.#ctor(System.String,Dropbox.Api.Users.Name,System.String,System.Boolean,System.Boolean,System.String)
  - Dropbox.Api.Users.Account.AccountId
  - Dropbox.Api.Users.Account.Disabled
  - Dropbox.Api.Users.Account.Email
  - Dropbox.Api.Users.Account.EmailVerified
  - Dropbox.Api.Users.Account.Name
  - Dropbox.Api.Users.Account.ProfilePhotoUrl
  langs:
  - csharp
  - vb
  name: Account
  nameWithType: Account
  fullName: Dropbox.Api.Users.Account
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/Account.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Account
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/Account.cs
    startLine: 18
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Users
  summary: "\n<p>The amount of detail revealed about an account depends on the user being queried\nand the user making the query.</p>\n"
  example: []
  syntax:
    content: public class Account
    content.vb: Public Class Account
  seealso:
  - linkId: Dropbox.Api.Users.BasicAccount
    commentId: T:Dropbox.Api.Users.BasicAccount
  - linkId: Dropbox.Api.Users.FullAccount
    commentId: T:Dropbox.Api.Users.FullAccount
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Users.BasicAccount
  - Dropbox.Api.Users.FullAccount
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Users.Account.#ctor(System.String,Dropbox.Api.Users.Name,System.String,System.Boolean,System.Boolean,System.String)
  commentId: M:Dropbox.Api.Users.Account.#ctor(System.String,Dropbox.Api.Users.Name,System.String,System.Boolean,System.Boolean,System.String)
  id: '#ctor(System.String,Dropbox.Api.Users.Name,System.String,System.Boolean,System.Boolean,System.String)'
  parent: Dropbox.Api.Users.Account
  langs:
  - csharp
  - vb
  name: Account(String, Name, String, Boolean, Boolean, String)
  nameWithType: Account.Account(String, Name, String, Boolean, Boolean, String)
  fullName: Dropbox.Api.Users.Account.Account(System.String, Dropbox.Api.Users.Name, System.String, System.Boolean, System.Boolean, System.String)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/Account.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/Account.cs
    startLine: 45
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Users
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Users.Account\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public Account(string accountId, Name name, string email, bool emailVerified, bool disabled, string profilePhotoUrl = null)
    parameters:
    - id: accountId
      type: System.String
      description: The user&apos;s unique Dropbox ID.
    - id: name
      type: Dropbox.Api.Users.Name
      description: Details of a user&apos;s name.
    - id: email
      type: System.String
      description: >-
        The user&apos;s email address. Do not rely on this without checking

        the <code data-dev-comment-type="paramref" class="paramref">emailVerified</code> field. Even then, it&apos;s possible that the user

        has since lost access to their email.
    - id: emailVerified
      type: System.Boolean
      description: >-
        Whether the user has verified their email

        address.
    - id: disabled
      type: System.Boolean
      description: Whether the user has been disabled.
    - id: profilePhotoUrl
      type: System.String
      description: >-
        URL for the photo representing the user, if one is

        set.
    content.vb: Public Sub New(accountId As String, name As Name, email As String, emailVerified As Boolean, disabled As Boolean, profilePhotoUrl As String = Nothing)
  overload: Dropbox.Api.Users.Account.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Users.Account.AccountId
  commentId: P:Dropbox.Api.Users.Account.AccountId
  id: AccountId
  parent: Dropbox.Api.Users.Account
  langs:
  - csharp
  - vb
  name: AccountId
  nameWithType: Account.AccountId
  fullName: Dropbox.Api.Users.Account.AccountId
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/Account.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AccountId
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/Account.cs
    startLine: 96
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Users
  summary: "\n<p>The user&apos;s unique Dropbox ID.</p>\n"
  example: []
  syntax:
    content: public string AccountId { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AccountId As String
  overload: Dropbox.Api.Users.Account.AccountId*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Users.Account.Name
  commentId: P:Dropbox.Api.Users.Account.Name
  id: Name
  parent: Dropbox.Api.Users.Account
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Account.Name
  fullName: Dropbox.Api.Users.Account.Name
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/Account.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Name
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/Account.cs
    startLine: 101
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Users
  summary: "\n<p>Details of a user&apos;s name.</p>\n"
  example: []
  syntax:
    content: public Name Name { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Users.Name
    content.vb: Public Property Name As Name
  overload: Dropbox.Api.Users.Account.Name*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Users.Account.Email
  commentId: P:Dropbox.Api.Users.Account.Email
  id: Email
  parent: Dropbox.Api.Users.Account
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: Account.Email
  fullName: Dropbox.Api.Users.Account.Email
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/Account.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Email
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/Account.cs
    startLine: 108
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Users
  summary: "\n<p>The user&apos;s email address. Do not rely on this without checking the <xref href=\"Dropbox.Api.Users.Account.EmailVerified\" data-throw-if-not-resolved=\"false\"></xref> field. Even then, it&apos;s possible that the user has since\nlost access to their email.</p>\n"
  example: []
  syntax:
    content: public string Email { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Email As String
  overload: Dropbox.Api.Users.Account.Email*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Users.Account.EmailVerified
  commentId: P:Dropbox.Api.Users.Account.EmailVerified
  id: EmailVerified
  parent: Dropbox.Api.Users.Account
  langs:
  - csharp
  - vb
  name: EmailVerified
  nameWithType: Account.EmailVerified
  fullName: Dropbox.Api.Users.Account.EmailVerified
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/Account.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EmailVerified
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/Account.cs
    startLine: 113
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Users
  summary: "\n<p>Whether the user has verified their email address.</p>\n"
  example: []
  syntax:
    content: public bool EmailVerified { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EmailVerified As Boolean
  overload: Dropbox.Api.Users.Account.EmailVerified*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Users.Account.Disabled
  commentId: P:Dropbox.Api.Users.Account.Disabled
  id: Disabled
  parent: Dropbox.Api.Users.Account
  langs:
  - csharp
  - vb
  name: Disabled
  nameWithType: Account.Disabled
  fullName: Dropbox.Api.Users.Account.Disabled
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/Account.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Disabled
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/Account.cs
    startLine: 118
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Users
  summary: "\n<p>Whether the user has been disabled.</p>\n"
  example: []
  syntax:
    content: public bool Disabled { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Disabled As Boolean
  overload: Dropbox.Api.Users.Account.Disabled*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Users.Account.ProfilePhotoUrl
  commentId: P:Dropbox.Api.Users.Account.ProfilePhotoUrl
  id: ProfilePhotoUrl
  parent: Dropbox.Api.Users.Account
  langs:
  - csharp
  - vb
  name: ProfilePhotoUrl
  nameWithType: Account.ProfilePhotoUrl
  fullName: Dropbox.Api.Users.Account.ProfilePhotoUrl
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/Account.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ProfilePhotoUrl
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/Account.cs
    startLine: 123
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Users
  summary: "\n<p>URL for the photo representing the user, if one is set.</p>\n"
  example: []
  syntax:
    content: public string ProfilePhotoUrl { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ProfilePhotoUrl As String
  overload: Dropbox.Api.Users.Account.ProfilePhotoUrl*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Users.BasicAccount
  commentId: T:Dropbox.Api.Users.BasicAccount
  parent: Dropbox.Api.Users
  name: BasicAccount
  nameWithType: BasicAccount
  fullName: Dropbox.Api.Users.BasicAccount
- uid: Dropbox.Api.Users.FullAccount
  commentId: T:Dropbox.Api.Users.FullAccount
  parent: Dropbox.Api.Users
  name: FullAccount
  nameWithType: FullAccount
  fullName: Dropbox.Api.Users.FullAccount
- uid: Dropbox.Api.Users
  commentId: N:Dropbox.Api.Users
  name: Dropbox.Api.Users
  nameWithType: Dropbox.Api.Users
  fullName: Dropbox.Api.Users
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Users.Account
  commentId: T:Dropbox.Api.Users.Account
  parent: Dropbox.Api.Users
  name: Account
  nameWithType: Account
  fullName: Dropbox.Api.Users.Account
- uid: Dropbox.Api.Users.Account.#ctor*
  commentId: Overload:Dropbox.Api.Users.Account.#ctor
  name: Account
  nameWithType: Account.Account
  fullName: Dropbox.Api.Users.Account.Account
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dropbox.Api.Users.Name
  commentId: T:Dropbox.Api.Users.Name
  parent: Dropbox.Api.Users
  name: Name
  nameWithType: Name
  fullName: Dropbox.Api.Users.Name
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Users.Account.AccountId*
  commentId: Overload:Dropbox.Api.Users.Account.AccountId
  name: AccountId
  nameWithType: Account.AccountId
  fullName: Dropbox.Api.Users.Account.AccountId
- uid: Dropbox.Api.Users.Account.Name*
  commentId: Overload:Dropbox.Api.Users.Account.Name
  name: Name
  nameWithType: Account.Name
  fullName: Dropbox.Api.Users.Account.Name
- uid: Dropbox.Api.Users.Account.EmailVerified
  commentId: P:Dropbox.Api.Users.Account.EmailVerified
  parent: Dropbox.Api.Users.Account
  name: EmailVerified
  nameWithType: Account.EmailVerified
  fullName: Dropbox.Api.Users.Account.EmailVerified
- uid: Dropbox.Api.Users.Account.Email*
  commentId: Overload:Dropbox.Api.Users.Account.Email
  name: Email
  nameWithType: Account.Email
  fullName: Dropbox.Api.Users.Account.Email
- uid: Dropbox.Api.Users.Account.EmailVerified*
  commentId: Overload:Dropbox.Api.Users.Account.EmailVerified
  name: EmailVerified
  nameWithType: Account.EmailVerified
  fullName: Dropbox.Api.Users.Account.EmailVerified
- uid: Dropbox.Api.Users.Account.Disabled*
  commentId: Overload:Dropbox.Api.Users.Account.Disabled
  name: Disabled
  nameWithType: Account.Disabled
  fullName: Dropbox.Api.Users.Account.Disabled
- uid: Dropbox.Api.Users.Account.ProfilePhotoUrl*
  commentId: Overload:Dropbox.Api.Users.Account.ProfilePhotoUrl
  name: ProfilePhotoUrl
  nameWithType: Account.ProfilePhotoUrl
  fullName: Dropbox.Api.Users.Account.ProfilePhotoUrl
