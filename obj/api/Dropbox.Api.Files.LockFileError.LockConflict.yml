### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.LockFileError.LockConflict
  commentId: T:Dropbox.Api.Files.LockFileError.LockConflict
  id: LockFileError.LockConflict
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.LockFileError.LockConflict.#ctor(Dropbox.Api.Files.LockConflictError)
  - Dropbox.Api.Files.LockFileError.LockConflict.Value
  langs:
  - csharp
  - vb
  name: LockFileError.LockConflict
  nameWithType: LockFileError.LockConflict
  fullName: Dropbox.Api.Files.LockFileError.LockConflict
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LockFileError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LockConflict
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LockFileError.cs
    startLine: 813
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The user action conflicts with an existing lock on the file.</p>\n"
  example: []
  syntax:
    content: 'public sealed class LockConflict : LockFileError'
    content.vb: >-
      Public NotInheritable Class LockConflict
          Inherits LockFileError
  inheritance:
  - System.Object
  - Dropbox.Api.Files.LockFileError
  inheritedMembers:
  - Dropbox.Api.Files.LockFileError.IsPathLookup
  - Dropbox.Api.Files.LockFileError.AsPathLookup
  - Dropbox.Api.Files.LockFileError.IsTooManyWriteOperations
  - Dropbox.Api.Files.LockFileError.AsTooManyWriteOperations
  - Dropbox.Api.Files.LockFileError.IsTooManyFiles
  - Dropbox.Api.Files.LockFileError.AsTooManyFiles
  - Dropbox.Api.Files.LockFileError.IsNoWritePermission
  - Dropbox.Api.Files.LockFileError.AsNoWritePermission
  - Dropbox.Api.Files.LockFileError.IsCannotBeLocked
  - Dropbox.Api.Files.LockFileError.AsCannotBeLocked
  - Dropbox.Api.Files.LockFileError.IsFileNotShared
  - Dropbox.Api.Files.LockFileError.AsFileNotShared
  - Dropbox.Api.Files.LockFileError.IsLockConflict
  - Dropbox.Api.Files.LockFileError.AsLockConflict
  - Dropbox.Api.Files.LockFileError.IsInternalError
  - Dropbox.Api.Files.LockFileError.AsInternalError
  - Dropbox.Api.Files.LockFileError.IsOther
  - Dropbox.Api.Files.LockFileError.AsOther
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Dropbox.Api.Files.LockFileError.LockConflict.#ctor(Dropbox.Api.Files.LockConflictError)
  commentId: M:Dropbox.Api.Files.LockFileError.LockConflict.#ctor(Dropbox.Api.Files.LockConflictError)
  id: '#ctor(Dropbox.Api.Files.LockConflictError)'
  parent: Dropbox.Api.Files.LockFileError.LockConflict
  langs:
  - csharp
  - vb
  name: LockConflict(LockConflictError)
  nameWithType: LockFileError.LockConflict.LockConflict(LockConflictError)
  fullName: Dropbox.Api.Files.LockFileError.LockConflict.LockConflict(Dropbox.Api.Files.LockConflictError)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LockFileError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LockFileError.cs
    startLine: 832
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.LockFileError.LockConflict\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public LockConflict(LockConflictError value)
    parameters:
    - id: value
      type: Dropbox.Api.Files.LockConflictError
      description: The value
    content.vb: Public Sub New(value As LockConflictError)
  overload: Dropbox.Api.Files.LockFileError.LockConflict.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.LockFileError.LockConflict.Value
  commentId: P:Dropbox.Api.Files.LockFileError.LockConflict.Value
  id: Value
  parent: Dropbox.Api.Files.LockFileError.LockConflict
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: LockFileError.LockConflict.Value
  fullName: Dropbox.Api.Files.LockFileError.LockConflict.Value
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LockFileError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Value
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LockFileError.cs
    startLine: 847
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets the value of this instance.</p>\n"
  example: []
  syntax:
    content: public LockConflictError Value { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.LockConflictError
    content.vb: Public ReadOnly Property Value As LockConflictError
  overload: Dropbox.Api.Files.LockFileError.LockConflict.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Files.LockFileError
  commentId: T:Dropbox.Api.Files.LockFileError
  parent: Dropbox.Api.Files
  name: LockFileError
  nameWithType: LockFileError
  fullName: Dropbox.Api.Files.LockFileError
- uid: Dropbox.Api.Files.LockFileError.IsPathLookup
  commentId: P:Dropbox.Api.Files.LockFileError.IsPathLookup
  parent: Dropbox.Api.Files.LockFileError
  name: IsPathLookup
  nameWithType: LockFileError.IsPathLookup
  fullName: Dropbox.Api.Files.LockFileError.IsPathLookup
- uid: Dropbox.Api.Files.LockFileError.AsPathLookup
  commentId: P:Dropbox.Api.Files.LockFileError.AsPathLookup
  parent: Dropbox.Api.Files.LockFileError
  name: AsPathLookup
  nameWithType: LockFileError.AsPathLookup
  fullName: Dropbox.Api.Files.LockFileError.AsPathLookup
- uid: Dropbox.Api.Files.LockFileError.IsTooManyWriteOperations
  commentId: P:Dropbox.Api.Files.LockFileError.IsTooManyWriteOperations
  parent: Dropbox.Api.Files.LockFileError
  name: IsTooManyWriteOperations
  nameWithType: LockFileError.IsTooManyWriteOperations
  fullName: Dropbox.Api.Files.LockFileError.IsTooManyWriteOperations
- uid: Dropbox.Api.Files.LockFileError.AsTooManyWriteOperations
  commentId: P:Dropbox.Api.Files.LockFileError.AsTooManyWriteOperations
  parent: Dropbox.Api.Files.LockFileError
  name: AsTooManyWriteOperations
  nameWithType: LockFileError.AsTooManyWriteOperations
  fullName: Dropbox.Api.Files.LockFileError.AsTooManyWriteOperations
- uid: Dropbox.Api.Files.LockFileError.IsTooManyFiles
  commentId: P:Dropbox.Api.Files.LockFileError.IsTooManyFiles
  parent: Dropbox.Api.Files.LockFileError
  name: IsTooManyFiles
  nameWithType: LockFileError.IsTooManyFiles
  fullName: Dropbox.Api.Files.LockFileError.IsTooManyFiles
- uid: Dropbox.Api.Files.LockFileError.AsTooManyFiles
  commentId: P:Dropbox.Api.Files.LockFileError.AsTooManyFiles
  parent: Dropbox.Api.Files.LockFileError
  name: AsTooManyFiles
  nameWithType: LockFileError.AsTooManyFiles
  fullName: Dropbox.Api.Files.LockFileError.AsTooManyFiles
- uid: Dropbox.Api.Files.LockFileError.IsNoWritePermission
  commentId: P:Dropbox.Api.Files.LockFileError.IsNoWritePermission
  parent: Dropbox.Api.Files.LockFileError
  name: IsNoWritePermission
  nameWithType: LockFileError.IsNoWritePermission
  fullName: Dropbox.Api.Files.LockFileError.IsNoWritePermission
- uid: Dropbox.Api.Files.LockFileError.AsNoWritePermission
  commentId: P:Dropbox.Api.Files.LockFileError.AsNoWritePermission
  parent: Dropbox.Api.Files.LockFileError
  name: AsNoWritePermission
  nameWithType: LockFileError.AsNoWritePermission
  fullName: Dropbox.Api.Files.LockFileError.AsNoWritePermission
- uid: Dropbox.Api.Files.LockFileError.IsCannotBeLocked
  commentId: P:Dropbox.Api.Files.LockFileError.IsCannotBeLocked
  parent: Dropbox.Api.Files.LockFileError
  name: IsCannotBeLocked
  nameWithType: LockFileError.IsCannotBeLocked
  fullName: Dropbox.Api.Files.LockFileError.IsCannotBeLocked
- uid: Dropbox.Api.Files.LockFileError.AsCannotBeLocked
  commentId: P:Dropbox.Api.Files.LockFileError.AsCannotBeLocked
  parent: Dropbox.Api.Files.LockFileError
  name: AsCannotBeLocked
  nameWithType: LockFileError.AsCannotBeLocked
  fullName: Dropbox.Api.Files.LockFileError.AsCannotBeLocked
- uid: Dropbox.Api.Files.LockFileError.IsFileNotShared
  commentId: P:Dropbox.Api.Files.LockFileError.IsFileNotShared
  parent: Dropbox.Api.Files.LockFileError
  name: IsFileNotShared
  nameWithType: LockFileError.IsFileNotShared
  fullName: Dropbox.Api.Files.LockFileError.IsFileNotShared
- uid: Dropbox.Api.Files.LockFileError.AsFileNotShared
  commentId: P:Dropbox.Api.Files.LockFileError.AsFileNotShared
  parent: Dropbox.Api.Files.LockFileError
  name: AsFileNotShared
  nameWithType: LockFileError.AsFileNotShared
  fullName: Dropbox.Api.Files.LockFileError.AsFileNotShared
- uid: Dropbox.Api.Files.LockFileError.IsLockConflict
  commentId: P:Dropbox.Api.Files.LockFileError.IsLockConflict
  parent: Dropbox.Api.Files.LockFileError
  name: IsLockConflict
  nameWithType: LockFileError.IsLockConflict
  fullName: Dropbox.Api.Files.LockFileError.IsLockConflict
- uid: Dropbox.Api.Files.LockFileError.AsLockConflict
  commentId: P:Dropbox.Api.Files.LockFileError.AsLockConflict
  parent: Dropbox.Api.Files.LockFileError
  name: AsLockConflict
  nameWithType: LockFileError.AsLockConflict
  fullName: Dropbox.Api.Files.LockFileError.AsLockConflict
- uid: Dropbox.Api.Files.LockFileError.IsInternalError
  commentId: P:Dropbox.Api.Files.LockFileError.IsInternalError
  parent: Dropbox.Api.Files.LockFileError
  name: IsInternalError
  nameWithType: LockFileError.IsInternalError
  fullName: Dropbox.Api.Files.LockFileError.IsInternalError
- uid: Dropbox.Api.Files.LockFileError.AsInternalError
  commentId: P:Dropbox.Api.Files.LockFileError.AsInternalError
  parent: Dropbox.Api.Files.LockFileError
  name: AsInternalError
  nameWithType: LockFileError.AsInternalError
  fullName: Dropbox.Api.Files.LockFileError.AsInternalError
- uid: Dropbox.Api.Files.LockFileError.IsOther
  commentId: P:Dropbox.Api.Files.LockFileError.IsOther
  parent: Dropbox.Api.Files.LockFileError
  name: IsOther
  nameWithType: LockFileError.IsOther
  fullName: Dropbox.Api.Files.LockFileError.IsOther
- uid: Dropbox.Api.Files.LockFileError.AsOther
  commentId: P:Dropbox.Api.Files.LockFileError.AsOther
  parent: Dropbox.Api.Files.LockFileError
  name: AsOther
  nameWithType: LockFileError.AsOther
  fullName: Dropbox.Api.Files.LockFileError.AsOther
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Files.LockFileError.LockConflict
  commentId: T:Dropbox.Api.Files.LockFileError.LockConflict
  parent: Dropbox.Api.Files
  name: LockFileError.LockConflict
  nameWithType: LockFileError.LockConflict
  fullName: Dropbox.Api.Files.LockFileError.LockConflict
- uid: Dropbox.Api.Files.LockFileError.LockConflict.#ctor*
  commentId: Overload:Dropbox.Api.Files.LockFileError.LockConflict.#ctor
  name: LockConflict
  nameWithType: LockFileError.LockConflict.LockConflict
  fullName: Dropbox.Api.Files.LockFileError.LockConflict.LockConflict
- uid: Dropbox.Api.Files.LockConflictError
  commentId: T:Dropbox.Api.Files.LockConflictError
  parent: Dropbox.Api.Files
  name: LockConflictError
  nameWithType: LockConflictError
  fullName: Dropbox.Api.Files.LockConflictError
- uid: Dropbox.Api.Files.LockFileError.LockConflict.Value*
  commentId: Overload:Dropbox.Api.Files.LockFileError.LockConflict.Value
  name: Value
  nameWithType: LockFileError.LockConflict.Value
  fullName: Dropbox.Api.Files.LockFileError.LockConflict.Value
