### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes
  commentId: T:Dropbox.Api.Team.Routes.TeamTeamRoutes
  id: TeamTeamRoutes
  parent: Dropbox.Api.Team.Routes
  children:
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMemberDevices(Dropbox.Api.Team.ListMemberDevicesArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMemberDevices(System.String,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMembersDevices(Dropbox.Api.Team.ListMembersDevicesArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMembersDevices(System.String,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListTeamDevices(Dropbox.Api.Team.ListTeamDevicesArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListTeamDevices(System.String,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSession(Dropbox.Api.Team.RevokeDeviceSessionArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSessionBatch(Dropbox.Api.Team.RevokeDeviceSessionBatchArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSessionBatch(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeDeviceSessionArg},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginFeaturesGetValues(Dropbox.Api.Team.FeaturesGetValuesBatchArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginFeaturesGetValues(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.Feature},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGetInfo(System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsCreate(Dropbox.Api.Team.GroupCreateArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsCreate(System.String,System.Boolean,System.String,Dropbox.Api.TeamCommon.GroupManagementType,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsDelete(Dropbox.Api.Team.GroupSelector,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsGetInfo(Dropbox.Api.Team.GroupsSelector,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsJobStatusGet(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsJobStatusGet(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsList(Dropbox.Api.Team.GroupsListArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsList(System.UInt32,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsListContinue(Dropbox.Api.Team.GroupsListContinueArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsListContinue(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersAdd(Dropbox.Api.Team.GroupMembersAddArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersAdd(Dropbox.Api.Team.GroupSelector,System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAccess},System.Boolean,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersList(Dropbox.Api.Team.GroupSelector,System.UInt32,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersList(Dropbox.Api.Team.GroupsMembersListArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersListContinue(Dropbox.Api.Team.GroupsMembersListContinueArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersListContinue(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersRemove(Dropbox.Api.Team.GroupMembersRemoveArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersRemove(Dropbox.Api.Team.GroupSelector,System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.Boolean,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersSetAccessType(Dropbox.Api.Team.GroupMembersSetAccessTypeArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersSetAccessType(Dropbox.Api.Team.GroupSelector,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.GroupAccessType,System.Boolean,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsUpdate(Dropbox.Api.Team.GroupSelector,System.Boolean,System.String,System.String,Dropbox.Api.TeamCommon.GroupManagementType,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsUpdate(Dropbox.Api.Team.GroupUpdateArgs,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsCreatePolicy(Dropbox.Api.Team.LegalHoldsPolicyCreateArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsCreatePolicy(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsGetPolicy(Dropbox.Api.Team.LegalHoldsGetPolicyArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsGetPolicy(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisions(Dropbox.Api.Team.LegalHoldsListHeldRevisionsArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisions(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisionsContinue(Dropbox.Api.Team.LegalHoldsListHeldRevisionsContinueArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisionsContinue(System.String,System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListPolicies(Dropbox.Api.Team.LegalHoldsListPoliciesArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListPolicies(System.Boolean,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsReleasePolicy(Dropbox.Api.Team.LegalHoldsPolicyReleaseArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsReleasePolicy(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsUpdatePolicy(Dropbox.Api.Team.LegalHoldsPolicyUpdateArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsUpdatePolicy(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMemberLinkedApps(Dropbox.Api.Team.ListMemberAppsArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMemberLinkedApps(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMembersLinkedApps(Dropbox.Api.Team.ListMembersAppsArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMembersLinkedApps(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListTeamLinkedApps(Dropbox.Api.Team.ListTeamAppsArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListTeamLinkedApps(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedApp(Dropbox.Api.Team.RevokeLinkedApiAppArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedApp(System.String,System.String,System.Boolean,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedAppBatch(Dropbox.Api.Team.RevokeLinkedApiAppBatchArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedAppBatch(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeLinkedApiAppArg},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAdd(Dropbox.Api.Team.MembersAddArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAdd(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddArg},System.Boolean,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGet(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGet(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGetV2(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGetV2(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddV2(Dropbox.Api.Team.MembersAddV2Arg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddV2(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddV2Arg},System.Boolean,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhoto(Dropbox.Api.Team.MembersDeleteProfilePhotoArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhoto(Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhotoV2(Dropbox.Api.Team.MembersDeleteProfilePhotoArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhotoV2(Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetAvailableTeamMemberRoles(System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfo(Dropbox.Api.Team.MembersGetInfoArgs,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfo(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfoV2(Dropbox.Api.Team.MembersGetInfoV2Arg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfoV2(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersList(Dropbox.Api.Team.MembersListArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersList(System.UInt32,System.Boolean,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinue(Dropbox.Api.Team.MembersListContinueArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinue(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinueV2(Dropbox.Api.Team.MembersListContinueArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinueV2(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListV2(Dropbox.Api.Team.MembersListArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListV2(System.UInt32,System.Boolean,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFiles(Dropbox.Api.Team.MembersDataTransferArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFiles(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFilesJobStatusCheck(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFilesJobStatusCheck(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersAdd(Dropbox.Api.Team.ExcludedUsersUpdateArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersAdd(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersList(Dropbox.Api.Team.ExcludedUsersListArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersList(System.UInt32,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersListContinue(Dropbox.Api.Team.ExcludedUsersListContinueArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersListContinue(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersRemove(Dropbox.Api.Team.ExcludedUsersUpdateArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersRemove(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsGetCustomQuota(Dropbox.Api.Team.CustomQuotaUsersArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsGetCustomQuota(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsRemoveCustomQuota(Dropbox.Api.Team.CustomQuotaUsersArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsRemoveCustomQuota(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsSetCustomQuota(Dropbox.Api.Team.SetCustomQuotaArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsSetCustomQuota(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserCustomQuotaArg},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRecover(Dropbox.Api.Team.MembersRecoverArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRecover(Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemove(Dropbox.Api.Team.MembersRemoveArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemove(Dropbox.Api.Team.UserSelectorArg,System.Boolean,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemoveJobStatusGet(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemoveJobStatusGet(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsAdd(Dropbox.Api.Team.AddSecondaryEmailsArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsAdd(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsDelete(Dropbox.Api.Team.DeleteSecondaryEmailsArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsDelete(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsResendVerificationEmails(Dropbox.Api.Team.ResendVerificationEmailArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsResendVerificationEmails(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSendWelcomeEmail(Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissions(Dropbox.Api.Team.MembersSetPermissionsArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissions(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.AdminTier,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissionsV2(Dropbox.Api.Team.MembersSetPermissions2Arg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissionsV2(Dropbox.Api.Team.UserSelectorArg,System.Collections.Generic.IEnumerable{System.String},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfile(Dropbox.Api.Team.MembersSetProfileArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfile(Dropbox.Api.Team.UserSelectorArg,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhoto(Dropbox.Api.Team.MembersSetProfilePhotoArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhoto(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Account.PhotoSourceArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhotoV2(Dropbox.Api.Team.MembersSetProfilePhotoArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhotoV2(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Account.PhotoSourceArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfileV2(Dropbox.Api.Team.MembersSetProfileArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfileV2(Dropbox.Api.Team.UserSelectorArg,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSuspend(Dropbox.Api.Team.MembersDeactivateArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSuspend(Dropbox.Api.Team.UserSelectorArg,System.Boolean,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersUnsuspend(Dropbox.Api.Team.MembersUnsuspendArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersUnsuspend(Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesList(Dropbox.Api.Team.TeamNamespacesListArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesList(System.UInt32,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesListContinue(Dropbox.Api.Team.TeamNamespacesListContinueArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesListContinue(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateAdd(Dropbox.Api.FileProperties.AddTemplateArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateAdd(System.String,System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateGet(Dropbox.Api.FileProperties.GetTemplateArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateGet(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateList(System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateUpdate(Dropbox.Api.FileProperties.UpdateTemplateArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateUpdate(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetActivity(Dropbox.Api.Team.DateRange,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetActivity(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetDevices(Dropbox.Api.Team.DateRange,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetDevices(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetMembership(Dropbox.Api.Team.DateRange,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetMembership(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetStorage(Dropbox.Api.Team.DateRange,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetStorage(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderActivate(Dropbox.Api.Team.TeamFolderIdArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderActivate(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchive(Dropbox.Api.Team.TeamFolderArchiveArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchive(System.String,System.Boolean,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchiveCheck(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchiveCheck(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderCreate(Dropbox.Api.Team.TeamFolderCreateArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderCreate(System.String,Dropbox.Api.Files.SyncSettingArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderGetInfo(Dropbox.Api.Team.TeamFolderIdListArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderGetInfo(System.Collections.Generic.IEnumerable{System.String},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderList(Dropbox.Api.Team.TeamFolderListArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderList(System.UInt32,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderListContinue(Dropbox.Api.Team.TeamFolderListContinueArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderListContinue(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderPermanentlyDelete(Dropbox.Api.Team.TeamFolderIdArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderPermanentlyDelete(System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderRename(Dropbox.Api.Team.TeamFolderRenameArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderRename(System.String,System.String,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderUpdateSyncSettings(Dropbox.Api.Team.TeamFolderUpdateSyncSettingsArg,System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderUpdateSyncSettings(System.String,Dropbox.Api.Files.SyncSettingArg,System.Collections.Generic.IEnumerable{Dropbox.Api.Files.ContentSyncSettingArg},System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTokenGetAuthenticatedAdmin(System.AsyncCallback,System.Object)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMemberDevicesAsync(Dropbox.Api.Team.ListMemberDevicesArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMemberDevicesAsync(System.String,System.Boolean,System.Boolean,System.Boolean)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMembersDevicesAsync(Dropbox.Api.Team.ListMembersDevicesArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMembersDevicesAsync(System.String,System.Boolean,System.Boolean,System.Boolean)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListTeamDevicesAsync(Dropbox.Api.Team.ListTeamDevicesArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListTeamDevicesAsync(System.String,System.Boolean,System.Boolean,System.Boolean)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionAsync(Dropbox.Api.Team.RevokeDeviceSessionArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionBatchAsync(Dropbox.Api.Team.RevokeDeviceSessionBatchArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionBatchAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeDeviceSessionArg})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListMemberDevices(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListMembersDevices(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListTeamDevices(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesRevokeDeviceSession(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesRevokeDeviceSessionBatch(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndFeaturesGetValues(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGetInfo(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsCreate(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsDelete(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsGetInfo(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsJobStatusGet(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsList(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsListContinue(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersAdd(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersList(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersListContinue(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersRemove(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersSetAccessType(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsUpdate(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsCreatePolicy(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsGetPolicy(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListHeldRevisions(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListHeldRevisionsContinue(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListPolicies(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsReleasePolicy(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsUpdatePolicy(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListMemberLinkedApps(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListMembersLinkedApps(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListTeamLinkedApps(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsRevokeLinkedApp(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsRevokeLinkedAppBatch(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAdd(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddJobStatusGet(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddJobStatusGetV2(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddV2(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersDeleteProfilePhoto(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersDeleteProfilePhotoV2(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetAvailableTeamMemberRoles(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetInfo(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetInfoV2(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersList(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListContinue(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListContinueV2(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListV2(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersMoveFormerMemberFiles(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersMoveFormerMemberFilesJobStatusCheck(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersAdd(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersList(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersListContinue(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersRemove(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsGetCustomQuota(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsRemoveCustomQuota(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsSetCustomQuota(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRecover(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRemove(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRemoveJobStatusGet(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsAdd(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsDelete(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsResendVerificationEmails(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSendWelcomeEmail(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetAdminPermissions(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetAdminPermissionsV2(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfile(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfilePhoto(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfilePhotoV2(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfileV2(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSuspend(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersUnsuspend(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndNamespacesList(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndNamespacesListContinue(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateAdd(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateGet(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateList(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateUpdate(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetActivity(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetDevices(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetMembership(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetStorage(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderActivate(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderArchive(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderArchiveCheck(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderCreate(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderGetInfo(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderList(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderListContinue(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderPermanentlyDelete(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderRename(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderUpdateSyncSettings(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTokenGetAuthenticatedAdmin(System.IAsyncResult)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.FeaturesGetValuesAsync(Dropbox.Api.Team.FeaturesGetValuesBatchArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.FeaturesGetValuesAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.Feature})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GetInfoAsync
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsCreateAsync(Dropbox.Api.Team.GroupCreateArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsCreateAsync(System.String,System.Boolean,System.String,Dropbox.Api.TeamCommon.GroupManagementType)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsDeleteAsync(Dropbox.Api.Team.GroupSelector)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsGetInfoAsync(Dropbox.Api.Team.GroupsSelector)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsJobStatusGetAsync(Dropbox.Api.Async.PollArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsJobStatusGetAsync(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListAsync(Dropbox.Api.Team.GroupsListArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListAsync(System.UInt32)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListContinueAsync(Dropbox.Api.Team.GroupsListContinueArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListContinueAsync(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersAddAsync(Dropbox.Api.Team.GroupMembersAddArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersAddAsync(Dropbox.Api.Team.GroupSelector,System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAccess},System.Boolean)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListAsync(Dropbox.Api.Team.GroupSelector,System.UInt32)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListAsync(Dropbox.Api.Team.GroupsMembersListArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListContinueAsync(Dropbox.Api.Team.GroupsMembersListContinueArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListContinueAsync(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersRemoveAsync(Dropbox.Api.Team.GroupMembersRemoveArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersRemoveAsync(Dropbox.Api.Team.GroupSelector,System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.Boolean)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersSetAccessTypeAsync(Dropbox.Api.Team.GroupMembersSetAccessTypeArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersSetAccessTypeAsync(Dropbox.Api.Team.GroupSelector,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.GroupAccessType,System.Boolean)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsUpdateAsync(Dropbox.Api.Team.GroupSelector,System.Boolean,System.String,System.String,Dropbox.Api.TeamCommon.GroupManagementType)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsUpdateAsync(Dropbox.Api.Team.GroupUpdateArgs)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsCreatePolicyAsync(Dropbox.Api.Team.LegalHoldsPolicyCreateArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsCreatePolicyAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsGetPolicyAsync(Dropbox.Api.Team.LegalHoldsGetPolicyArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsGetPolicyAsync(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsAsync(Dropbox.Api.Team.LegalHoldsListHeldRevisionsArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsAsync(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsContinueAsync(Dropbox.Api.Team.LegalHoldsListHeldRevisionsContinueArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsContinueAsync(System.String,System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListPoliciesAsync(Dropbox.Api.Team.LegalHoldsListPoliciesArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListPoliciesAsync(System.Boolean)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsReleasePolicyAsync(Dropbox.Api.Team.LegalHoldsPolicyReleaseArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsReleasePolicyAsync(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsUpdatePolicyAsync(Dropbox.Api.Team.LegalHoldsPolicyUpdateArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsUpdatePolicyAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMemberLinkedAppsAsync(Dropbox.Api.Team.ListMemberAppsArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMemberLinkedAppsAsync(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMembersLinkedAppsAsync(Dropbox.Api.Team.ListMembersAppsArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMembersLinkedAppsAsync(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListTeamLinkedAppsAsync(Dropbox.Api.Team.ListTeamAppsArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListTeamLinkedAppsAsync(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppAsync(Dropbox.Api.Team.RevokeLinkedApiAppArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppAsync(System.String,System.String,System.Boolean)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppBatchAsync(Dropbox.Api.Team.RevokeLinkedApiAppBatchArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppBatchAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeLinkedApiAppArg})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddAsync(Dropbox.Api.Team.MembersAddArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddArg},System.Boolean)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetAsync(Dropbox.Api.Async.PollArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetAsync(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetV2Async(Dropbox.Api.Async.PollArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetV2Async(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddV2Async(Dropbox.Api.Team.MembersAddV2Arg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddV2Async(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddV2Arg},System.Boolean)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoAsync(Dropbox.Api.Team.MembersDeleteProfilePhotoArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoAsync(Dropbox.Api.Team.UserSelectorArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoV2Async(Dropbox.Api.Team.MembersDeleteProfilePhotoArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoV2Async(Dropbox.Api.Team.UserSelectorArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetAvailableTeamMemberRolesAsync
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoAsync(Dropbox.Api.Team.MembersGetInfoArgs)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoV2Async(Dropbox.Api.Team.MembersGetInfoV2Arg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoV2Async(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListAsync(Dropbox.Api.Team.MembersListArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListAsync(System.UInt32,System.Boolean)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueAsync(Dropbox.Api.Team.MembersListContinueArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueAsync(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueV2Async(Dropbox.Api.Team.MembersListContinueArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueV2Async(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListV2Async(Dropbox.Api.Team.MembersListArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListV2Async(System.UInt32,System.Boolean)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesAsync(Dropbox.Api.Team.MembersDataTransferArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesAsync(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesJobStatusCheckAsync(Dropbox.Api.Async.PollArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesJobStatusCheckAsync(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersAddAsync(Dropbox.Api.Team.ExcludedUsersUpdateArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersAddAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListAsync(Dropbox.Api.Team.ExcludedUsersListArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListAsync(System.UInt32)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListContinueAsync(Dropbox.Api.Team.ExcludedUsersListContinueArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListContinueAsync(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersRemoveAsync(Dropbox.Api.Team.ExcludedUsersUpdateArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersRemoveAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsGetCustomQuotaAsync(Dropbox.Api.Team.CustomQuotaUsersArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsGetCustomQuotaAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsRemoveCustomQuotaAsync(Dropbox.Api.Team.CustomQuotaUsersArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsRemoveCustomQuotaAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsSetCustomQuotaAsync(Dropbox.Api.Team.SetCustomQuotaArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsSetCustomQuotaAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserCustomQuotaArg})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRecoverAsync(Dropbox.Api.Team.MembersRecoverArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRecoverAsync(Dropbox.Api.Team.UserSelectorArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveAsync(Dropbox.Api.Team.MembersRemoveArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveAsync(Dropbox.Api.Team.UserSelectorArg,System.Boolean,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,System.Boolean,System.Boolean)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveJobStatusGetAsync(Dropbox.Api.Async.PollArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveJobStatusGetAsync(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsAddAsync(Dropbox.Api.Team.AddSecondaryEmailsArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsAddAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsDeleteAsync(Dropbox.Api.Team.DeleteSecondaryEmailsArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsDeleteAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsResendVerificationEmailsAsync(Dropbox.Api.Team.ResendVerificationEmailArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsResendVerificationEmailsAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSendWelcomeEmailAsync(Dropbox.Api.Team.UserSelectorArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsAsync(Dropbox.Api.Team.MembersSetPermissionsArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsAsync(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.AdminTier)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsV2Async(Dropbox.Api.Team.MembersSetPermissions2Arg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsV2Async(Dropbox.Api.Team.UserSelectorArg,System.Collections.Generic.IEnumerable{System.String})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileAsync(Dropbox.Api.Team.MembersSetProfileArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileAsync(Dropbox.Api.Team.UserSelectorArg,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoAsync(Dropbox.Api.Team.MembersSetProfilePhotoArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoAsync(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Account.PhotoSourceArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoV2Async(Dropbox.Api.Team.MembersSetProfilePhotoArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoV2Async(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Account.PhotoSourceArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileV2Async(Dropbox.Api.Team.MembersSetProfileArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileV2Async(Dropbox.Api.Team.UserSelectorArg,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSuspendAsync(Dropbox.Api.Team.MembersDeactivateArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSuspendAsync(Dropbox.Api.Team.UserSelectorArg,System.Boolean)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersUnsuspendAsync(Dropbox.Api.Team.MembersUnsuspendArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersUnsuspendAsync(Dropbox.Api.Team.UserSelectorArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListAsync(Dropbox.Api.Team.TeamNamespacesListArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListAsync(System.UInt32)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListContinueAsync(Dropbox.Api.Team.TeamNamespacesListContinueArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListContinueAsync(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateAddAsync(Dropbox.Api.FileProperties.AddTemplateArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateAddAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateGetAsync(Dropbox.Api.FileProperties.GetTemplateArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateGetAsync(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateListAsync
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateUpdateAsync(Dropbox.Api.FileProperties.UpdateTemplateArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateUpdateAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetActivityAsync(Dropbox.Api.Team.DateRange)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetActivityAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetDevicesAsync(Dropbox.Api.Team.DateRange)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetDevicesAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetMembershipAsync(Dropbox.Api.Team.DateRange)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetMembershipAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetStorageAsync(Dropbox.Api.Team.DateRange)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetStorageAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderActivateAsync(Dropbox.Api.Team.TeamFolderIdArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderActivateAsync(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveAsync(Dropbox.Api.Team.TeamFolderArchiveArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveAsync(System.String,System.Boolean)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveCheckAsync(Dropbox.Api.Async.PollArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveCheckAsync(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderCreateAsync(Dropbox.Api.Team.TeamFolderCreateArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderCreateAsync(System.String,Dropbox.Api.Files.SyncSettingArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderGetInfoAsync(Dropbox.Api.Team.TeamFolderIdListArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderGetInfoAsync(System.Collections.Generic.IEnumerable{System.String})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListAsync(Dropbox.Api.Team.TeamFolderListArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListAsync(System.UInt32)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListContinueAsync(Dropbox.Api.Team.TeamFolderListContinueArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListContinueAsync(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderPermanentlyDeleteAsync(Dropbox.Api.Team.TeamFolderIdArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderPermanentlyDeleteAsync(System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderRenameAsync(Dropbox.Api.Team.TeamFolderRenameArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderRenameAsync(System.String,System.String)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderUpdateSyncSettingsAsync(Dropbox.Api.Team.TeamFolderUpdateSyncSettingsArg)
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderUpdateSyncSettingsAsync(System.String,Dropbox.Api.Files.SyncSettingArg,System.Collections.Generic.IEnumerable{Dropbox.Api.Files.ContentSyncSettingArg})
  - Dropbox.Api.Team.Routes.TeamTeamRoutes.TokenGetAuthenticatedAdminAsync
  langs:
  - csharp
  - vb
  name: TeamTeamRoutes
  nameWithType: TeamTeamRoutes
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamTeamRoutes
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>The routes for the <xref href=\"Dropbox.Api.Team\" data-throw-if-not-resolved=\"false\"></xref> namespace</p>\n"
  example: []
  syntax:
    content: public class TeamTeamRoutes
    content.vb: Public Class TeamTeamRoutes
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMemberDevicesAsync(Dropbox.Api.Team.ListMemberDevicesArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMemberDevicesAsync(Dropbox.Api.Team.ListMemberDevicesArg)
  id: DevicesListMemberDevicesAsync(Dropbox.Api.Team.ListMemberDevicesArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: DevicesListMemberDevicesAsync(ListMemberDevicesArg)
  nameWithType: TeamTeamRoutes.DevicesListMemberDevicesAsync(ListMemberDevicesArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMemberDevicesAsync(Dropbox.Api.Team.ListMemberDevicesArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: DevicesListMemberDevicesAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>List all device sessions of a team&apos;s member.</p>\n"
  example: []
  syntax:
    content: public Task<ListMemberDevicesResult> DevicesListMemberDevicesAsync(ListMemberDevicesArg listMemberDevicesArg)
    parameters:
    - id: listMemberDevicesArg
      type: Dropbox.Api.Team.ListMemberDevicesArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ListMemberDevicesResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function DevicesListMemberDevicesAsync(listMemberDevicesArg As ListMemberDevicesArg) As Task(Of ListMemberDevicesResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMemberDevicesAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ListMemberDevicesError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMemberDevices(Dropbox.Api.Team.ListMemberDevicesArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMemberDevices(Dropbox.Api.Team.ListMemberDevicesArg,System.AsyncCallback,System.Object)
  id: BeginDevicesListMemberDevices(Dropbox.Api.Team.ListMemberDevicesArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginDevicesListMemberDevices(ListMemberDevicesArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginDevicesListMemberDevices(ListMemberDevicesArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMemberDevices(Dropbox.Api.Team.ListMemberDevicesArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginDevicesListMemberDevices
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 54
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the devices list member devices route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginDevicesListMemberDevices(ListMemberDevicesArg listMemberDevicesArg, AsyncCallback callback, object state = null)
    parameters:
    - id: listMemberDevicesArg
      type: Dropbox.Api.Team.ListMemberDevicesArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginDevicesListMemberDevices(listMemberDevicesArg As ListMemberDevicesArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMemberDevices*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMemberDevicesAsync(System.String,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMemberDevicesAsync(System.String,System.Boolean,System.Boolean,System.Boolean)
  id: DevicesListMemberDevicesAsync(System.String,System.Boolean,System.Boolean,System.Boolean)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: DevicesListMemberDevicesAsync(String, Boolean, Boolean, Boolean)
  nameWithType: TeamTeamRoutes.DevicesListMemberDevicesAsync(String, Boolean, Boolean, Boolean)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMemberDevicesAsync(System.String, System.Boolean, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: DevicesListMemberDevicesAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 76
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>List all device sessions of a team&apos;s member.</p>\n"
  example: []
  syntax:
    content: public Task<ListMemberDevicesResult> DevicesListMemberDevicesAsync(string teamMemberId, bool includeWebSessions = true, bool includeDesktopClients = true, bool includeMobileClients = true)
    parameters:
    - id: teamMemberId
      type: System.String
      description: The team&apos;s member id.
    - id: includeWebSessions
      type: System.Boolean
      description: >-
        Whether to list web sessions of the team&apos;s

        member.
    - id: includeDesktopClients
      type: System.Boolean
      description: >-
        Whether to list linked desktop devices of the

        team&apos;s member.
    - id: includeMobileClients
      type: System.Boolean
      description: >-
        Whether to list linked mobile devices of the

        team&apos;s member.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ListMemberDevicesResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function DevicesListMemberDevicesAsync(teamMemberId As String, includeWebSessions As Boolean = True, includeDesktopClients As Boolean = True, includeMobileClients As Boolean = True) As Task(Of ListMemberDevicesResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMemberDevicesAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ListMemberDevicesError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMemberDevices(System.String,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMemberDevices(System.String,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginDevicesListMemberDevices(System.String,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginDevicesListMemberDevices(String, Boolean, Boolean, Boolean, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginDevicesListMemberDevices(String, Boolean, Boolean, Boolean, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMemberDevices(System.String, System.Boolean, System.Boolean, System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginDevicesListMemberDevices
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 104
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the devices list member devices route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginDevicesListMemberDevices(string teamMemberId, bool includeWebSessions = true, bool includeDesktopClients = true, bool includeMobileClients = true, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: teamMemberId
      type: System.String
      description: The team&apos;s member id.
    - id: includeWebSessions
      type: System.Boolean
      description: >-
        Whether to list web sessions of the team&apos;s

        member.
    - id: includeDesktopClients
      type: System.Boolean
      description: >-
        Whether to list linked desktop devices of the

        team&apos;s member.
    - id: includeMobileClients
      type: System.Boolean
      description: >-
        Whether to list linked mobile devices of the

        team&apos;s member.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginDevicesListMemberDevices(teamMemberId As String, includeWebSessions As Boolean = True, includeDesktopClients As Boolean = True, includeMobileClients As Boolean = True, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMemberDevices*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListMemberDevices(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListMemberDevices(System.IAsyncResult)
  id: EndDevicesListMemberDevices(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndDevicesListMemberDevices(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndDevicesListMemberDevices(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListMemberDevices(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndDevicesListMemberDevices
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 129
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the devices list member devices\nroute to complete</p>\n"
  example: []
  syntax:
    content: public ListMemberDevicesResult EndDevicesListMemberDevices(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.ListMemberDevicesResult
      description: The response to the send request
    content.vb: Public Function EndDevicesListMemberDevices(asyncResult As IAsyncResult) As ListMemberDevicesResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListMemberDevices*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ListMemberDevicesError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMembersDevicesAsync(Dropbox.Api.Team.ListMembersDevicesArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMembersDevicesAsync(Dropbox.Api.Team.ListMembersDevicesArg)
  id: DevicesListMembersDevicesAsync(Dropbox.Api.Team.ListMembersDevicesArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: DevicesListMembersDevicesAsync(ListMembersDevicesArg)
  nameWithType: TeamTeamRoutes.DevicesListMembersDevicesAsync(ListMembersDevicesArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMembersDevicesAsync(Dropbox.Api.Team.ListMembersDevicesArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: DevicesListMembersDevicesAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 150
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>List all device sessions of a team.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<ListMembersDevicesResult> DevicesListMembersDevicesAsync(ListMembersDevicesArg listMembersDevicesArg)
    parameters:
    - id: listMembersDevicesArg
      type: Dropbox.Api.Team.ListMembersDevicesArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ListMembersDevicesResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function DevicesListMembersDevicesAsync(listMembersDevicesArg As ListMembersDevicesArg) As Task(Of ListMembersDevicesResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMembersDevicesAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ListMembersDevicesError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMembersDevices(Dropbox.Api.Team.ListMembersDevicesArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMembersDevices(Dropbox.Api.Team.ListMembersDevicesArg,System.AsyncCallback,System.Object)
  id: BeginDevicesListMembersDevices(Dropbox.Api.Team.ListMembersDevicesArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginDevicesListMembersDevices(ListMembersDevicesArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginDevicesListMembersDevices(ListMembersDevicesArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMembersDevices(Dropbox.Api.Team.ListMembersDevicesArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginDevicesListMembersDevices
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 164
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the devices list members devices route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginDevicesListMembersDevices(ListMembersDevicesArg listMembersDevicesArg, AsyncCallback callback, object state = null)
    parameters:
    - id: listMembersDevicesArg
      type: Dropbox.Api.Team.ListMembersDevicesArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginDevicesListMembersDevices(listMembersDevicesArg As ListMembersDevicesArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMembersDevices*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMembersDevicesAsync(System.String,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMembersDevicesAsync(System.String,System.Boolean,System.Boolean,System.Boolean)
  id: DevicesListMembersDevicesAsync(System.String,System.Boolean,System.Boolean,System.Boolean)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: DevicesListMembersDevicesAsync(String, Boolean, Boolean, Boolean)
  nameWithType: TeamTeamRoutes.DevicesListMembersDevicesAsync(String, Boolean, Boolean, Boolean)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMembersDevicesAsync(System.String, System.Boolean, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: DevicesListMembersDevicesAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 191
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>List all device sessions of a team.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<ListMembersDevicesResult> DevicesListMembersDevicesAsync(string cursor = null, bool includeWebSessions = true, bool includeDesktopClients = true, bool includeMobileClients = true)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        At the first call to the <xref href="Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMembersDevicesAsync(Dropbox.Api.Team.ListMembersDevicesArg)" data-throw-if-not-resolved="false"></xref> the

        cursor shouldn&apos;t be passed. Then, if the result of the call includes a cursor, the

        following requests should include the received cursors in order to receive the next

        sub list of team devices.
    - id: includeWebSessions
      type: System.Boolean
      description: >-
        Whether to list web sessions of the team

        members.
    - id: includeDesktopClients
      type: System.Boolean
      description: >-
        Whether to list desktop clients of the team

        members.
    - id: includeMobileClients
      type: System.Boolean
      description: >-
        Whether to list mobile clients of the team

        members.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ListMembersDevicesResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function DevicesListMembersDevicesAsync(cursor As String = Nothing, includeWebSessions As Boolean = True, includeDesktopClients As Boolean = True, includeMobileClients As Boolean = True) As Task(Of ListMembersDevicesResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMembersDevicesAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ListMembersDevicesError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMembersDevices(System.String,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMembersDevices(System.String,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginDevicesListMembersDevices(System.String,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginDevicesListMembersDevices(String, Boolean, Boolean, Boolean, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginDevicesListMembersDevices(String, Boolean, Boolean, Boolean, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMembersDevices(System.String, System.Boolean, System.Boolean, System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginDevicesListMembersDevices
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 223
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the devices list members devices route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginDevicesListMembersDevices(string cursor = null, bool includeWebSessions = true, bool includeDesktopClients = true, bool includeMobileClients = true, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        At the first call to the <xref href="Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMembersDevicesAsync(Dropbox.Api.Team.ListMembersDevicesArg)" data-throw-if-not-resolved="false"></xref> the

        cursor shouldn&apos;t be passed. Then, if the result of the call includes a cursor, the

        following requests should include the received cursors in order to receive the next

        sub list of team devices.
    - id: includeWebSessions
      type: System.Boolean
      description: >-
        Whether to list web sessions of the team

        members.
    - id: includeDesktopClients
      type: System.Boolean
      description: >-
        Whether to list desktop clients of the team

        members.
    - id: includeMobileClients
      type: System.Boolean
      description: >-
        Whether to list mobile clients of the team

        members.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginDevicesListMembersDevices(cursor As String = Nothing, includeWebSessions As Boolean = True, includeDesktopClients As Boolean = True, includeMobileClients As Boolean = True, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMembersDevices*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListMembersDevices(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListMembersDevices(System.IAsyncResult)
  id: EndDevicesListMembersDevices(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndDevicesListMembersDevices(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndDevicesListMembersDevices(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListMembersDevices(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndDevicesListMembersDevices
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 248
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the devices list members devices\nroute to complete</p>\n"
  example: []
  syntax:
    content: public ListMembersDevicesResult EndDevicesListMembersDevices(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.ListMembersDevicesResult
      description: The response to the send request
    content.vb: Public Function EndDevicesListMembersDevices(asyncResult As IAsyncResult) As ListMembersDevicesResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListMembersDevices*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ListMembersDevicesError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListTeamDevicesAsync(Dropbox.Api.Team.ListTeamDevicesArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListTeamDevicesAsync(Dropbox.Api.Team.ListTeamDevicesArg)
  id: DevicesListTeamDevicesAsync(Dropbox.Api.Team.ListTeamDevicesArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: DevicesListTeamDevicesAsync(ListTeamDevicesArg)
  nameWithType: TeamTeamRoutes.DevicesListTeamDevicesAsync(ListTeamDevicesArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListTeamDevicesAsync(Dropbox.Api.Team.ListTeamDevicesArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: DevicesListTeamDevicesAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 269
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>List all device sessions of a team.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use DevicesListMembersDevicesAsync instead.")]

      public Task<ListTeamDevicesResult> DevicesListTeamDevicesAsync(ListTeamDevicesArg listTeamDevicesArg)
    parameters:
    - id: listTeamDevicesArg
      type: Dropbox.Api.Team.ListTeamDevicesArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ListTeamDevicesResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated, please use DevicesListMembersDevicesAsync instead.")>

      Public Function DevicesListTeamDevicesAsync(listTeamDevicesArg As ListTeamDevicesArg) As Task(Of ListTeamDevicesResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListTeamDevicesAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ListTeamDevicesError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use DevicesListMembersDevicesAsync instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListTeamDevices(Dropbox.Api.Team.ListTeamDevicesArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListTeamDevices(Dropbox.Api.Team.ListTeamDevicesArg,System.AsyncCallback,System.Object)
  id: BeginDevicesListTeamDevices(Dropbox.Api.Team.ListTeamDevicesArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginDevicesListTeamDevices(ListTeamDevicesArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginDevicesListTeamDevices(ListTeamDevicesArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListTeamDevices(Dropbox.Api.Team.ListTeamDevicesArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginDevicesListTeamDevices
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 284
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the devices list team devices route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use BeginDevicesListMembersDevices instead.")]

      public IAsyncResult BeginDevicesListTeamDevices(ListTeamDevicesArg listTeamDevicesArg, AsyncCallback callback, object state = null)
    parameters:
    - id: listTeamDevicesArg
      type: Dropbox.Api.Team.ListTeamDevicesArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated, please use BeginDevicesListMembersDevices instead.")>

      Public Function BeginDevicesListTeamDevices(listTeamDevicesArg As ListTeamDevicesArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListTeamDevices*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use BeginDevicesListMembersDevices instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListTeamDevicesAsync(System.String,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListTeamDevicesAsync(System.String,System.Boolean,System.Boolean,System.Boolean)
  id: DevicesListTeamDevicesAsync(System.String,System.Boolean,System.Boolean,System.Boolean)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: DevicesListTeamDevicesAsync(String, Boolean, Boolean, Boolean)
  nameWithType: TeamTeamRoutes.DevicesListTeamDevicesAsync(String, Boolean, Boolean, Boolean)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListTeamDevicesAsync(System.String, System.Boolean, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: DevicesListTeamDevicesAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 312
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>List all device sessions of a team.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use DevicesListMembersDevicesAsync instead.")]

      public Task<ListTeamDevicesResult> DevicesListTeamDevicesAsync(string cursor = null, bool includeWebSessions = true, bool includeDesktopClients = true, bool includeMobileClients = true)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        At the first call to the <xref href="Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListTeamDevicesAsync(Dropbox.Api.Team.ListTeamDevicesArg)" data-throw-if-not-resolved="false"></xref> the

        cursor shouldn&apos;t be passed. Then, if the result of the call includes a cursor, the

        following requests should include the received cursors in order to receive the next

        sub list of team devices.
    - id: includeWebSessions
      type: System.Boolean
      description: >-
        Whether to list web sessions of the team

        members.
    - id: includeDesktopClients
      type: System.Boolean
      description: >-
        Whether to list desktop clients of the team

        members.
    - id: includeMobileClients
      type: System.Boolean
      description: >-
        Whether to list mobile clients of the team

        members.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ListTeamDevicesResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated, please use DevicesListMembersDevicesAsync instead.")>

      Public Function DevicesListTeamDevicesAsync(cursor As String = Nothing, includeWebSessions As Boolean = True, includeDesktopClients As Boolean = True, includeMobileClients As Boolean = True) As Task(Of ListTeamDevicesResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListTeamDevicesAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ListTeamDevicesError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use DevicesListMembersDevicesAsync instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListTeamDevices(System.String,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListTeamDevices(System.String,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginDevicesListTeamDevices(System.String,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginDevicesListTeamDevices(String, Boolean, Boolean, Boolean, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginDevicesListTeamDevices(String, Boolean, Boolean, Boolean, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListTeamDevices(System.String, System.Boolean, System.Boolean, System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginDevicesListTeamDevices
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 345
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the devices list team devices route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use BeginDevicesListMembersDevices instead.")]

      public IAsyncResult BeginDevicesListTeamDevices(string cursor = null, bool includeWebSessions = true, bool includeDesktopClients = true, bool includeMobileClients = true, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        At the first call to the <xref href="Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListTeamDevicesAsync(Dropbox.Api.Team.ListTeamDevicesArg)" data-throw-if-not-resolved="false"></xref> the

        cursor shouldn&apos;t be passed. Then, if the result of the call includes a cursor, the

        following requests should include the received cursors in order to receive the next

        sub list of team devices.
    - id: includeWebSessions
      type: System.Boolean
      description: >-
        Whether to list web sessions of the team

        members.
    - id: includeDesktopClients
      type: System.Boolean
      description: >-
        Whether to list desktop clients of the team

        members.
    - id: includeMobileClients
      type: System.Boolean
      description: >-
        Whether to list mobile clients of the team

        members.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated, please use BeginDevicesListMembersDevices instead.")>

      Public Function BeginDevicesListTeamDevices(cursor As String = Nothing, includeWebSessions As Boolean = True, includeDesktopClients As Boolean = True, includeMobileClients As Boolean = True, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListTeamDevices*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use BeginDevicesListMembersDevices instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListTeamDevices(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListTeamDevices(System.IAsyncResult)
  id: EndDevicesListTeamDevices(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndDevicesListTeamDevices(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndDevicesListTeamDevices(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListTeamDevices(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndDevicesListTeamDevices
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 371
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the devices list team devices\nroute to complete</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use EndDevicesListMembersDevices instead.")]

      public ListTeamDevicesResult EndDevicesListTeamDevices(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.ListTeamDevicesResult
      description: The response to the send request
    content.vb: >-
      <Obsolete("This function is deprecated, please use EndDevicesListMembersDevices instead.")>

      Public Function EndDevicesListTeamDevices(asyncResult As IAsyncResult) As ListTeamDevicesResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListTeamDevices*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ListTeamDevicesError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use EndDevicesListMembersDevices instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionAsync(Dropbox.Api.Team.RevokeDeviceSessionArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionAsync(Dropbox.Api.Team.RevokeDeviceSessionArg)
  id: DevicesRevokeDeviceSessionAsync(Dropbox.Api.Team.RevokeDeviceSessionArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: DevicesRevokeDeviceSessionAsync(RevokeDeviceSessionArg)
  nameWithType: TeamTeamRoutes.DevicesRevokeDeviceSessionAsync(RevokeDeviceSessionArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionAsync(Dropbox.Api.Team.RevokeDeviceSessionArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: DevicesRevokeDeviceSessionAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 391
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Revoke a device session of a team&apos;s member.</p>\n"
  example: []
  syntax:
    content: public Task DevicesRevokeDeviceSessionAsync(RevokeDeviceSessionArg revokeDeviceSessionArg)
    parameters:
    - id: revokeDeviceSessionArg
      type: Dropbox.Api.Team.RevokeDeviceSessionArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function DevicesRevokeDeviceSessionAsync(revokeDeviceSessionArg As RevokeDeviceSessionArg) As Task
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.RevokeDeviceSessionError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSession(Dropbox.Api.Team.RevokeDeviceSessionArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSession(Dropbox.Api.Team.RevokeDeviceSessionArg,System.AsyncCallback,System.Object)
  id: BeginDevicesRevokeDeviceSession(Dropbox.Api.Team.RevokeDeviceSessionArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginDevicesRevokeDeviceSession(RevokeDeviceSessionArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginDevicesRevokeDeviceSession(RevokeDeviceSessionArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSession(Dropbox.Api.Team.RevokeDeviceSessionArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginDevicesRevokeDeviceSession
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 406
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the devices revoke device session\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginDevicesRevokeDeviceSession(RevokeDeviceSessionArg revokeDeviceSessionArg, AsyncCallback callback, object state = null)
    parameters:
    - id: revokeDeviceSessionArg
      type: Dropbox.Api.Team.RevokeDeviceSessionArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginDevicesRevokeDeviceSession(revokeDeviceSessionArg As RevokeDeviceSessionArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSession*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesRevokeDeviceSession(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesRevokeDeviceSession(System.IAsyncResult)
  id: EndDevicesRevokeDeviceSession(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndDevicesRevokeDeviceSession(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndDevicesRevokeDeviceSession(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesRevokeDeviceSession(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndDevicesRevokeDeviceSession
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 422
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the devices revoke device session\nroute to complete</p>\n"
  example: []
  syntax:
    content: public void EndDevicesRevokeDeviceSession(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    content.vb: Public Sub EndDevicesRevokeDeviceSession(asyncResult As IAsyncResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesRevokeDeviceSession*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.RevokeDeviceSessionError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionBatchAsync(Dropbox.Api.Team.RevokeDeviceSessionBatchArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionBatchAsync(Dropbox.Api.Team.RevokeDeviceSessionBatchArg)
  id: DevicesRevokeDeviceSessionBatchAsync(Dropbox.Api.Team.RevokeDeviceSessionBatchArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: DevicesRevokeDeviceSessionBatchAsync(RevokeDeviceSessionBatchArg)
  nameWithType: TeamTeamRoutes.DevicesRevokeDeviceSessionBatchAsync(RevokeDeviceSessionBatchArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionBatchAsync(Dropbox.Api.Team.RevokeDeviceSessionBatchArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: DevicesRevokeDeviceSessionBatchAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 440
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Revoke a list of device sessions of team members.</p>\n"
  example: []
  syntax:
    content: public Task<RevokeDeviceSessionBatchResult> DevicesRevokeDeviceSessionBatchAsync(RevokeDeviceSessionBatchArg revokeDeviceSessionBatchArg)
    parameters:
    - id: revokeDeviceSessionBatchArg
      type: Dropbox.Api.Team.RevokeDeviceSessionBatchArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.RevokeDeviceSessionBatchResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function DevicesRevokeDeviceSessionBatchAsync(revokeDeviceSessionBatchArg As RevokeDeviceSessionBatchArg) As Task(Of RevokeDeviceSessionBatchResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionBatchAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.RevokeDeviceSessionBatchError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSessionBatch(Dropbox.Api.Team.RevokeDeviceSessionBatchArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSessionBatch(Dropbox.Api.Team.RevokeDeviceSessionBatchArg,System.AsyncCallback,System.Object)
  id: BeginDevicesRevokeDeviceSessionBatch(Dropbox.Api.Team.RevokeDeviceSessionBatchArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginDevicesRevokeDeviceSessionBatch(RevokeDeviceSessionBatchArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginDevicesRevokeDeviceSessionBatch(RevokeDeviceSessionBatchArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSessionBatch(Dropbox.Api.Team.RevokeDeviceSessionBatchArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginDevicesRevokeDeviceSessionBatch
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 455
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the devices revoke device session batch\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginDevicesRevokeDeviceSessionBatch(RevokeDeviceSessionBatchArg revokeDeviceSessionBatchArg, AsyncCallback callback, object state = null)
    parameters:
    - id: revokeDeviceSessionBatchArg
      type: Dropbox.Api.Team.RevokeDeviceSessionBatchArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginDevicesRevokeDeviceSessionBatch(revokeDeviceSessionBatchArg As RevokeDeviceSessionBatchArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSessionBatch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionBatchAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeDeviceSessionArg})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionBatchAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeDeviceSessionArg})
  id: DevicesRevokeDeviceSessionBatchAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeDeviceSessionArg})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: DevicesRevokeDeviceSessionBatchAsync(IEnumerable<RevokeDeviceSessionArg>)
  nameWithType: TeamTeamRoutes.DevicesRevokeDeviceSessionBatchAsync(IEnumerable<RevokeDeviceSessionArg>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionBatchAsync(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.RevokeDeviceSessionArg>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: DevicesRevokeDeviceSessionBatchAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 471
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Revoke a list of device sessions of team members.</p>\n"
  example: []
  syntax:
    content: public Task<RevokeDeviceSessionBatchResult> DevicesRevokeDeviceSessionBatchAsync(IEnumerable<RevokeDeviceSessionArg> revokeDevices)
    parameters:
    - id: revokeDevices
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeDeviceSessionArg}
      description: The revoke devices
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.RevokeDeviceSessionBatchResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function DevicesRevokeDeviceSessionBatchAsync(revokeDevices As IEnumerable(Of RevokeDeviceSessionArg)) As Task(Of RevokeDeviceSessionBatchResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionBatchAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.RevokeDeviceSessionBatchError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: TeamTeamRoutes.DevicesRevokeDeviceSessionBatchAsync(IEnumerable(Of RevokeDeviceSessionArg))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionBatchAsync(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.RevokeDeviceSessionArg))
  name.vb: DevicesRevokeDeviceSessionBatchAsync(IEnumerable(Of RevokeDeviceSessionArg))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSessionBatch(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeDeviceSessionArg},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSessionBatch(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeDeviceSessionArg},System.AsyncCallback,System.Object)
  id: BeginDevicesRevokeDeviceSessionBatch(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeDeviceSessionArg},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginDevicesRevokeDeviceSessionBatch(IEnumerable<RevokeDeviceSessionArg>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginDevicesRevokeDeviceSessionBatch(IEnumerable<RevokeDeviceSessionArg>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSessionBatch(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.RevokeDeviceSessionArg>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginDevicesRevokeDeviceSessionBatch
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 488
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the devices revoke device session batch\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginDevicesRevokeDeviceSessionBatch(IEnumerable<RevokeDeviceSessionArg> revokeDevices, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: revokeDevices
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeDeviceSessionArg}
      description: The revoke devices
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginDevicesRevokeDeviceSessionBatch(revokeDevices As IEnumerable(Of RevokeDeviceSessionArg), callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSessionBatch*
  nameWithType.vb: TeamTeamRoutes.BeginDevicesRevokeDeviceSessionBatch(IEnumerable(Of RevokeDeviceSessionArg), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSessionBatch(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.RevokeDeviceSessionArg), System.AsyncCallback, System.Object)
  name.vb: BeginDevicesRevokeDeviceSessionBatch(IEnumerable(Of RevokeDeviceSessionArg), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesRevokeDeviceSessionBatch(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesRevokeDeviceSessionBatch(System.IAsyncResult)
  id: EndDevicesRevokeDeviceSessionBatch(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndDevicesRevokeDeviceSessionBatch(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndDevicesRevokeDeviceSessionBatch(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesRevokeDeviceSessionBatch(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndDevicesRevokeDeviceSessionBatch
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 507
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the devices revoke device session\nbatch route to complete</p>\n"
  example: []
  syntax:
    content: public RevokeDeviceSessionBatchResult EndDevicesRevokeDeviceSessionBatch(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.RevokeDeviceSessionBatchResult
      description: The response to the send request
    content.vb: Public Function EndDevicesRevokeDeviceSessionBatch(asyncResult As IAsyncResult) As RevokeDeviceSessionBatchResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesRevokeDeviceSessionBatch*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.RevokeDeviceSessionBatchError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.FeaturesGetValuesAsync(Dropbox.Api.Team.FeaturesGetValuesBatchArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.FeaturesGetValuesAsync(Dropbox.Api.Team.FeaturesGetValuesBatchArg)
  id: FeaturesGetValuesAsync(Dropbox.Api.Team.FeaturesGetValuesBatchArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: FeaturesGetValuesAsync(FeaturesGetValuesBatchArg)
  nameWithType: TeamTeamRoutes.FeaturesGetValuesAsync(FeaturesGetValuesBatchArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.FeaturesGetValuesAsync(Dropbox.Api.Team.FeaturesGetValuesBatchArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: FeaturesGetValuesAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 530
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Get the values for one or more featues. This route allows you to check your\naccount&apos;s capability for what feature you can access or what value you have for\ncertain features.</p>\n<p>Permission : Team information.</p>\n"
  example: []
  syntax:
    content: public Task<FeaturesGetValuesBatchResult> FeaturesGetValuesAsync(FeaturesGetValuesBatchArg featuresGetValuesBatchArg)
    parameters:
    - id: featuresGetValuesBatchArg
      type: Dropbox.Api.Team.FeaturesGetValuesBatchArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.FeaturesGetValuesBatchResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function FeaturesGetValuesAsync(featuresGetValuesBatchArg As FeaturesGetValuesBatchArg) As Task(Of FeaturesGetValuesBatchResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.FeaturesGetValuesAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.FeaturesGetValuesBatchError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginFeaturesGetValues(Dropbox.Api.Team.FeaturesGetValuesBatchArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginFeaturesGetValues(Dropbox.Api.Team.FeaturesGetValuesBatchArg,System.AsyncCallback,System.Object)
  id: BeginFeaturesGetValues(Dropbox.Api.Team.FeaturesGetValuesBatchArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginFeaturesGetValues(FeaturesGetValuesBatchArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginFeaturesGetValues(FeaturesGetValuesBatchArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginFeaturesGetValues(Dropbox.Api.Team.FeaturesGetValuesBatchArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginFeaturesGetValues
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 544
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the features get values route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginFeaturesGetValues(FeaturesGetValuesBatchArg featuresGetValuesBatchArg, AsyncCallback callback, object state = null)
    parameters:
    - id: featuresGetValuesBatchArg
      type: Dropbox.Api.Team.FeaturesGetValuesBatchArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginFeaturesGetValues(featuresGetValuesBatchArg As FeaturesGetValuesBatchArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginFeaturesGetValues*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.FeaturesGetValuesAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.Feature})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.FeaturesGetValuesAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.Feature})
  id: FeaturesGetValuesAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.Feature})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: FeaturesGetValuesAsync(IEnumerable<Feature>)
  nameWithType: TeamTeamRoutes.FeaturesGetValuesAsync(IEnumerable<Feature>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.FeaturesGetValuesAsync(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.Feature>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: FeaturesGetValuesAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 564
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Get the values for one or more featues. This route allows you to check your\naccount&apos;s capability for what feature you can access or what value you have for\ncertain features.</p>\n<p>Permission : Team information.</p>\n"
  example: []
  syntax:
    content: public Task<FeaturesGetValuesBatchResult> FeaturesGetValuesAsync(IEnumerable<Feature> features)
    parameters:
    - id: features
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.Feature}
      description: >-
        A list of features in <xref href="Dropbox.Api.Team.Feature" data-throw-if-not-resolved="false"></xref>. If the list is

        empty, this route will return <xref href="Dropbox.Api.Team.FeaturesGetValuesBatchError" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.FeaturesGetValuesBatchResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function FeaturesGetValuesAsync(features As IEnumerable(Of Feature)) As Task(Of FeaturesGetValuesBatchResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.FeaturesGetValuesAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.FeaturesGetValuesBatchError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: TeamTeamRoutes.FeaturesGetValuesAsync(IEnumerable(Of Feature))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.FeaturesGetValuesAsync(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.Feature))
  name.vb: FeaturesGetValuesAsync(IEnumerable(Of Feature))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginFeaturesGetValues(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.Feature},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginFeaturesGetValues(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.Feature},System.AsyncCallback,System.Object)
  id: BeginFeaturesGetValues(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.Feature},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginFeaturesGetValues(IEnumerable<Feature>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginFeaturesGetValues(IEnumerable<Feature>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginFeaturesGetValues(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.Feature>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginFeaturesGetValues
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 581
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the features get values route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginFeaturesGetValues(IEnumerable<Feature> features, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: features
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.Feature}
      description: >-
        A list of features in <xref href="Dropbox.Api.Team.Feature" data-throw-if-not-resolved="false"></xref>. If the list is

        empty, this route will return <xref href="Dropbox.Api.Team.FeaturesGetValuesBatchError" data-throw-if-not-resolved="false"></xref>.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginFeaturesGetValues(features As IEnumerable(Of Feature), callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginFeaturesGetValues*
  nameWithType.vb: TeamTeamRoutes.BeginFeaturesGetValues(IEnumerable(Of Feature), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginFeaturesGetValues(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.Feature), System.AsyncCallback, System.Object)
  name.vb: BeginFeaturesGetValues(IEnumerable(Of Feature), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndFeaturesGetValues(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndFeaturesGetValues(System.IAsyncResult)
  id: EndFeaturesGetValues(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndFeaturesGetValues(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndFeaturesGetValues(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndFeaturesGetValues(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndFeaturesGetValues
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 600
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the features get values route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public FeaturesGetValuesBatchResult EndFeaturesGetValues(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.FeaturesGetValuesBatchResult
      description: The response to the send request
    content.vb: Public Function EndFeaturesGetValues(asyncResult As IAsyncResult) As FeaturesGetValuesBatchResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndFeaturesGetValues*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.FeaturesGetValuesBatchError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GetInfoAsync
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GetInfoAsync
  id: GetInfoAsync
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GetInfoAsync()
  nameWithType: TeamTeamRoutes.GetInfoAsync()
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GetInfoAsync()
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GetInfoAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 616
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Retrieves information about a team.</p>\n"
  example: []
  syntax:
    content: public Task<TeamGetInfoResult> GetInfoAsync()
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamGetInfoResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GetInfoAsync As Task(Of TeamGetInfoResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GetInfoAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGetInfo(System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGetInfo(System.AsyncCallback,System.Object)
  id: BeginGetInfo(System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGetInfo(AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGetInfo(AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGetInfo(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGetInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 629
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the get info route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGetInfo(AsyncCallback callback, object state = null)
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGetInfo(callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGetInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGetInfo(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGetInfo(System.IAsyncResult)
  id: EndGetInfo(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndGetInfo(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndGetInfo(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGetInfo(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndGetInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 643
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the get info route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public TeamGetInfoResult EndGetInfo(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.TeamGetInfoResult
      description: The response to the send request
    content.vb: Public Function EndGetInfo(asyncResult As IAsyncResult) As TeamGetInfoResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGetInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsCreateAsync(Dropbox.Api.Team.GroupCreateArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsCreateAsync(Dropbox.Api.Team.GroupCreateArg)
  id: GroupsCreateAsync(Dropbox.Api.Team.GroupCreateArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsCreateAsync(GroupCreateArg)
  nameWithType: TeamTeamRoutes.GroupsCreateAsync(GroupCreateArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsCreateAsync(Dropbox.Api.Team.GroupCreateArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsCreateAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 664
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Creates a new, empty group, with a requested name.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<GroupFullInfo> GroupsCreateAsync(GroupCreateArg groupCreateArg)
    parameters:
    - id: groupCreateArg
      type: Dropbox.Api.Team.GroupCreateArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GroupFullInfo}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsCreateAsync(groupCreateArg As GroupCreateArg) As Task(Of GroupFullInfo)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsCreateAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupCreateError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsCreate(Dropbox.Api.Team.GroupCreateArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsCreate(Dropbox.Api.Team.GroupCreateArg,System.AsyncCallback,System.Object)
  id: BeginGroupsCreate(Dropbox.Api.Team.GroupCreateArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsCreate(GroupCreateArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsCreate(GroupCreateArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsCreate(Dropbox.Api.Team.GroupCreateArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsCreate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 678
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups create route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsCreate(GroupCreateArg groupCreateArg, AsyncCallback callback, object state = null)
    parameters:
    - id: groupCreateArg
      type: Dropbox.Api.Team.GroupCreateArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsCreate(groupCreateArg As GroupCreateArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsCreate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsCreateAsync(System.String,System.Boolean,System.String,Dropbox.Api.TeamCommon.GroupManagementType)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsCreateAsync(System.String,System.Boolean,System.String,Dropbox.Api.TeamCommon.GroupManagementType)
  id: GroupsCreateAsync(System.String,System.Boolean,System.String,Dropbox.Api.TeamCommon.GroupManagementType)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsCreateAsync(String, Boolean, String, GroupManagementType)
  nameWithType: TeamTeamRoutes.GroupsCreateAsync(String, Boolean, String, GroupManagementType)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsCreateAsync(System.String, System.Boolean, System.String, Dropbox.Api.TeamCommon.GroupManagementType)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsCreateAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 700
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Creates a new, empty group, with a requested name.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<GroupFullInfo> GroupsCreateAsync(string groupName, bool addCreatorAsOwner = false, string groupExternalId = null, GroupManagementType groupManagementType = null)
    parameters:
    - id: groupName
      type: System.String
      description: Group name.
    - id: addCreatorAsOwner
      type: System.Boolean
      description: Automatically add the creator of the group.
    - id: groupExternalId
      type: System.String
      description: >-
        The creator of a team can associate an arbitrary

        external ID to the group.
    - id: groupManagementType
      type: Dropbox.Api.TeamCommon.GroupManagementType
      description: >-
        Whether the team can be managed by selected

        users, or only by team admins.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GroupFullInfo}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsCreateAsync(groupName As String, addCreatorAsOwner As Boolean = False, groupExternalId As String = Nothing, groupManagementType As GroupManagementType = Nothing) As Task(Of GroupFullInfo)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsCreateAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupCreateError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsCreate(System.String,System.Boolean,System.String,Dropbox.Api.TeamCommon.GroupManagementType,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsCreate(System.String,System.Boolean,System.String,Dropbox.Api.TeamCommon.GroupManagementType,System.AsyncCallback,System.Object)
  id: BeginGroupsCreate(System.String,System.Boolean,System.String,Dropbox.Api.TeamCommon.GroupManagementType,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsCreate(String, Boolean, String, GroupManagementType, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsCreate(String, Boolean, String, GroupManagementType, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsCreate(System.String, System.Boolean, System.String, Dropbox.Api.TeamCommon.GroupManagementType, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsCreate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 727
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups create route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsCreate(string groupName, bool addCreatorAsOwner = false, string groupExternalId = null, GroupManagementType groupManagementType = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: groupName
      type: System.String
      description: Group name.
    - id: addCreatorAsOwner
      type: System.Boolean
      description: Automatically add the creator of the group.
    - id: groupExternalId
      type: System.String
      description: >-
        The creator of a team can associate an arbitrary

        external ID to the group.
    - id: groupManagementType
      type: Dropbox.Api.TeamCommon.GroupManagementType
      description: >-
        Whether the team can be managed by selected

        users, or only by team admins.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsCreate(groupName As String, addCreatorAsOwner As Boolean = False, groupExternalId As String = Nothing, groupManagementType As GroupManagementType = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsCreate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsCreate(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsCreate(System.IAsyncResult)
  id: EndGroupsCreate(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndGroupsCreate(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndGroupsCreate(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsCreate(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndGroupsCreate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 752
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the groups create route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public GroupFullInfo EndGroupsCreate(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.GroupFullInfo
      description: The response to the send request
    content.vb: Public Function EndGroupsCreate(asyncResult As IAsyncResult) As GroupFullInfo
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsCreate*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupCreateError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsDeleteAsync(Dropbox.Api.Team.GroupSelector)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsDeleteAsync(Dropbox.Api.Team.GroupSelector)
  id: GroupsDeleteAsync(Dropbox.Api.Team.GroupSelector)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsDeleteAsync(GroupSelector)
  nameWithType: TeamTeamRoutes.GroupsDeleteAsync(GroupSelector)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsDeleteAsync(Dropbox.Api.Team.GroupSelector)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsDeleteAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 777
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Deletes a group.</p>\n<p>The group is deleted immediately. However the revoking of group-owned\nresources may take additional time. Use the <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsJobStatusGetAsync(Dropbox.Api.Async.PollArg)\" data-throw-if-not-resolved=\"false\"></xref> to\ndetermine whether this process has completed.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<LaunchEmptyResult> GroupsDeleteAsync(GroupSelector groupSelector)
    parameters:
    - id: groupSelector
      type: Dropbox.Api.Team.GroupSelector
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Async.LaunchEmptyResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsDeleteAsync(groupSelector As GroupSelector) As Task(Of LaunchEmptyResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsDeleteAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupDeleteError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsDelete(Dropbox.Api.Team.GroupSelector,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsDelete(Dropbox.Api.Team.GroupSelector,System.AsyncCallback,System.Object)
  id: BeginGroupsDelete(Dropbox.Api.Team.GroupSelector,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsDelete(GroupSelector, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsDelete(GroupSelector, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsDelete(Dropbox.Api.Team.GroupSelector, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsDelete
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 791
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups delete route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsDelete(GroupSelector groupSelector, AsyncCallback callback, object state = null)
    parameters:
    - id: groupSelector
      type: Dropbox.Api.Team.GroupSelector
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsDelete(groupSelector As GroupSelector, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsDelete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsDelete(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsDelete(System.IAsyncResult)
  id: EndGroupsDelete(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndGroupsDelete(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndGroupsDelete(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsDelete(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndGroupsDelete
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 808
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the groups delete route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public LaunchEmptyResult EndGroupsDelete(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Async.LaunchEmptyResult
      description: The response to the send request
    content.vb: Public Function EndGroupsDelete(asyncResult As IAsyncResult) As LaunchEmptyResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsDelete*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupDeleteError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsGetInfoAsync(Dropbox.Api.Team.GroupsSelector)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsGetInfoAsync(Dropbox.Api.Team.GroupsSelector)
  id: GroupsGetInfoAsync(Dropbox.Api.Team.GroupsSelector)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsGetInfoAsync(GroupsSelector)
  nameWithType: TeamTeamRoutes.GroupsGetInfoAsync(GroupsSelector)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsGetInfoAsync(Dropbox.Api.Team.GroupsSelector)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsGetInfoAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 831
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Retrieves information about one or more groups. Note that the optional field\n<xref href=\"Dropbox.Api.Team.GroupFullInfo.Members\" data-throw-if-not-resolved=\"false\"></xref> is not returned for\nsystem-managed groups.</p>\n<p>Permission : Team Information.</p>\n"
  example: []
  syntax:
    content: public Task<List<GroupsGetInfoItem>> GroupsGetInfoAsync(GroupsSelector groupsSelector)
    parameters:
    - id: groupsSelector
      type: Dropbox.Api.Team.GroupsSelector
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.GroupsGetInfoItem}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsGetInfoAsync(groupsSelector As GroupsSelector) As Task(Of List(Of GroupsGetInfoItem))
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsGetInfoAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupsGetInfoError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsGetInfo(Dropbox.Api.Team.GroupsSelector,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsGetInfo(Dropbox.Api.Team.GroupsSelector,System.AsyncCallback,System.Object)
  id: BeginGroupsGetInfo(Dropbox.Api.Team.GroupsSelector,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsGetInfo(GroupsSelector, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsGetInfo(GroupsSelector, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsGetInfo(Dropbox.Api.Team.GroupsSelector, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsGetInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 845
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups get info route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsGetInfo(GroupsSelector groupsSelector, AsyncCallback callback, object state = null)
    parameters:
    - id: groupsSelector
      type: Dropbox.Api.Team.GroupsSelector
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsGetInfo(groupsSelector As GroupsSelector, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsGetInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsGetInfo(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsGetInfo(System.IAsyncResult)
  id: EndGroupsGetInfo(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndGroupsGetInfo(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndGroupsGetInfo(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsGetInfo(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndGroupsGetInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 862
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the groups get info route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public List<GroupsGetInfoItem> EndGroupsGetInfo(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: System.Collections.Generic.List{Dropbox.Api.Team.GroupsGetInfoItem}
      description: The response to the send request
    content.vb: Public Function EndGroupsGetInfo(asyncResult As IAsyncResult) As List(Of GroupsGetInfoItem)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsGetInfo*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupsGetInfoError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsJobStatusGetAsync(Dropbox.Api.Async.PollArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsJobStatusGetAsync(Dropbox.Api.Async.PollArg)
  id: GroupsJobStatusGetAsync(Dropbox.Api.Async.PollArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsJobStatusGetAsync(PollArg)
  nameWithType: TeamTeamRoutes.GroupsJobStatusGetAsync(PollArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsJobStatusGetAsync(Dropbox.Api.Async.PollArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsJobStatusGetAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 888
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once an async_job_id is returned from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsDeleteAsync(Dropbox.Api.Team.GroupSelector)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersAddAsync(Dropbox.Api.Team.GroupMembersAddArg)\" data-throw-if-not-resolved=\"false\"></xref> , or <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersRemoveAsync(Dropbox.Api.Team.GroupMembersRemoveArg)\" data-throw-if-not-resolved=\"false\"></xref> use this\nmethod to poll the status of granting/revoking group members&apos; access to group-owned\nresources.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<PollEmptyResult> GroupsJobStatusGetAsync(PollArg pollArg)
    parameters:
    - id: pollArg
      type: Dropbox.Api.Async.PollArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Async.PollEmptyResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsJobStatusGetAsync(pollArg As PollArg) As Task(Of PollEmptyResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsJobStatusGetAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupsPollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsJobStatusGet(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsJobStatusGet(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  id: BeginGroupsJobStatusGet(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsJobStatusGet(PollArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsJobStatusGet(PollArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsJobStatusGet(Dropbox.Api.Async.PollArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsJobStatusGet
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 902
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups job status get route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsJobStatusGet(PollArg pollArg, AsyncCallback callback, object state = null)
    parameters:
    - id: pollArg
      type: Dropbox.Api.Async.PollArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsJobStatusGet(pollArg As PollArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsJobStatusGet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsJobStatusGetAsync(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsJobStatusGetAsync(System.String)
  id: GroupsJobStatusGetAsync(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsJobStatusGetAsync(String)
  nameWithType: TeamTeamRoutes.GroupsJobStatusGetAsync(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsJobStatusGetAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsJobStatusGetAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 925
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once an async_job_id is returned from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsDeleteAsync(Dropbox.Api.Team.GroupSelector)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersAddAsync(Dropbox.Api.Team.GroupMembersAddArg)\" data-throw-if-not-resolved=\"false\"></xref> , or <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersRemoveAsync(Dropbox.Api.Team.GroupMembersRemoveArg)\" data-throw-if-not-resolved=\"false\"></xref> use this\nmethod to poll the status of granting/revoking group members&apos; access to group-owned\nresources.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<PollEmptyResult> GroupsJobStatusGetAsync(string asyncJobId)
    parameters:
    - id: asyncJobId
      type: System.String
      description: >-
        Id of the asynchronous job. This is the value of a

        response returned from the method that launched the job.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Async.PollEmptyResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsJobStatusGetAsync(asyncJobId As String) As Task(Of PollEmptyResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsJobStatusGetAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupsPollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsJobStatusGet(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsJobStatusGet(System.String,System.AsyncCallback,System.Object)
  id: BeginGroupsJobStatusGet(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsJobStatusGet(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsJobStatusGet(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsJobStatusGet(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsJobStatusGet
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 942
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups job status get route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsJobStatusGet(string asyncJobId, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: asyncJobId
      type: System.String
      description: >-
        Id of the asynchronous job. This is the value of a

        response returned from the method that launched the job.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsJobStatusGet(asyncJobId As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsJobStatusGet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsJobStatusGet(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsJobStatusGet(System.IAsyncResult)
  id: EndGroupsJobStatusGet(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndGroupsJobStatusGet(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndGroupsJobStatusGet(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsJobStatusGet(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndGroupsJobStatusGet
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 961
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the groups job status get route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public PollEmptyResult EndGroupsJobStatusGet(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Async.PollEmptyResult
      description: The response to the send request
    content.vb: Public Function EndGroupsJobStatusGet(asyncResult As IAsyncResult) As PollEmptyResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsJobStatusGet*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupsPollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListAsync(Dropbox.Api.Team.GroupsListArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListAsync(Dropbox.Api.Team.GroupsListArg)
  id: GroupsListAsync(Dropbox.Api.Team.GroupsListArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsListAsync(GroupsListArg)
  nameWithType: TeamTeamRoutes.GroupsListAsync(GroupsListArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListAsync(Dropbox.Api.Team.GroupsListArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsListAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 979
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Lists groups on a team.</p>\n<p>Permission : Team Information.</p>\n"
  example: []
  syntax:
    content: public Task<GroupsListResult> GroupsListAsync(GroupsListArg groupsListArg)
    parameters:
    - id: groupsListArg
      type: Dropbox.Api.Team.GroupsListArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GroupsListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsListAsync(groupsListArg As GroupsListArg) As Task(Of GroupsListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsList(Dropbox.Api.Team.GroupsListArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsList(Dropbox.Api.Team.GroupsListArg,System.AsyncCallback,System.Object)
  id: BeginGroupsList(Dropbox.Api.Team.GroupsListArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsList(GroupsListArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsList(GroupsListArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsList(Dropbox.Api.Team.GroupsListArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 993
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups list route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsList(GroupsListArg groupsListArg, AsyncCallback callback, object state = null)
    parameters:
    - id: groupsListArg
      type: Dropbox.Api.Team.GroupsListArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsList(groupsListArg As GroupsListArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListAsync(System.UInt32)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListAsync(System.UInt32)
  id: GroupsListAsync(System.UInt32)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsListAsync(UInt32)
  nameWithType: TeamTeamRoutes.GroupsListAsync(UInt32)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListAsync(System.UInt32)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsListAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1007
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Lists groups on a team.</p>\n<p>Permission : Team Information.</p>\n"
  example: []
  syntax:
    content: public Task<GroupsListResult> GroupsListAsync(uint limit = 1000U)
    parameters:
    - id: limit
      type: System.UInt32
      description: Number of results to return per call.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GroupsListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsListAsync(limit As UInteger = 1000UI) As Task(Of GroupsListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsList(System.UInt32,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsList(System.UInt32,System.AsyncCallback,System.Object)
  id: BeginGroupsList(System.UInt32,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsList(UInt32, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsList(UInt32, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsList(System.UInt32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1023
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups list route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsList(uint limit = 1000U, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: limit
      type: System.UInt32
      description: Number of results to return per call.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsList(limit As UInteger = 1000UI, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsList(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsList(System.IAsyncResult)
  id: EndGroupsList(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndGroupsList(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndGroupsList(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsList(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndGroupsList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1039
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the groups list route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public GroupsListResult EndGroupsList(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.GroupsListResult
      description: The response to the send request
    content.vb: Public Function EndGroupsList(asyncResult As IAsyncResult) As GroupsListResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListContinueAsync(Dropbox.Api.Team.GroupsListContinueArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListContinueAsync(Dropbox.Api.Team.GroupsListContinueArg)
  id: GroupsListContinueAsync(Dropbox.Api.Team.GroupsListContinueArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsListContinueAsync(GroupsListContinueArg)
  nameWithType: TeamTeamRoutes.GroupsListContinueAsync(GroupsListContinueArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListContinueAsync(Dropbox.Api.Team.GroupsListContinueArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsListContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1062
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once a cursor has been retrieved from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListAsync(Dropbox.Api.Team.GroupsListArg)\" data-throw-if-not-resolved=\"false\"></xref>, use this to\npaginate through all groups.</p>\n<p>Permission : Team Information.</p>\n"
  example: []
  syntax:
    content: public Task<GroupsListResult> GroupsListContinueAsync(GroupsListContinueArg groupsListContinueArg)
    parameters:
    - id: groupsListContinueArg
      type: Dropbox.Api.Team.GroupsListContinueArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GroupsListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsListContinueAsync(groupsListContinueArg As GroupsListContinueArg) As Task(Of GroupsListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupsListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsListContinue(Dropbox.Api.Team.GroupsListContinueArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsListContinue(Dropbox.Api.Team.GroupsListContinueArg,System.AsyncCallback,System.Object)
  id: BeginGroupsListContinue(Dropbox.Api.Team.GroupsListContinueArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsListContinue(GroupsListContinueArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsListContinue(GroupsListContinueArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsListContinue(Dropbox.Api.Team.GroupsListContinueArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsListContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1076
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups list continue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsListContinue(GroupsListContinueArg groupsListContinueArg, AsyncCallback callback, object state = null)
    parameters:
    - id: groupsListContinueArg
      type: Dropbox.Api.Team.GroupsListContinueArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsListContinue(groupsListContinueArg As GroupsListContinueArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsListContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListContinueAsync(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListContinueAsync(System.String)
  id: GroupsListContinueAsync(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsListContinueAsync(String)
  nameWithType: TeamTeamRoutes.GroupsListContinueAsync(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListContinueAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsListContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1096
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once a cursor has been retrieved from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListAsync(Dropbox.Api.Team.GroupsListArg)\" data-throw-if-not-resolved=\"false\"></xref>, use this to\npaginate through all groups.</p>\n<p>Permission : Team Information.</p>\n"
  example: []
  syntax:
    content: public Task<GroupsListResult> GroupsListContinueAsync(string cursor)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        Indicates from what point to get the next set of

        groups.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GroupsListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsListContinueAsync(cursor As String) As Task(Of GroupsListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupsListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsListContinue(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsListContinue(System.String,System.AsyncCallback,System.Object)
  id: BeginGroupsListContinue(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsListContinue(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsListContinue(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsListContinue(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsListContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1113
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups list continue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsListContinue(string cursor, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        Indicates from what point to get the next set of

        groups.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsListContinue(cursor As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsListContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsListContinue(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsListContinue(System.IAsyncResult)
  id: EndGroupsListContinue(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndGroupsListContinue(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndGroupsListContinue(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsListContinue(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndGroupsListContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1132
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the groups list continue route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public GroupsListResult EndGroupsListContinue(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.GroupsListResult
      description: The response to the send request
    content.vb: Public Function EndGroupsListContinue(asyncResult As IAsyncResult) As GroupsListResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsListContinue*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupsListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersAddAsync(Dropbox.Api.Team.GroupMembersAddArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersAddAsync(Dropbox.Api.Team.GroupMembersAddArg)
  id: GroupsMembersAddAsync(Dropbox.Api.Team.GroupMembersAddArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsMembersAddAsync(GroupMembersAddArg)
  nameWithType: TeamTeamRoutes.GroupsMembersAddAsync(GroupMembersAddArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersAddAsync(Dropbox.Api.Team.GroupMembersAddArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsMembersAddAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1157
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Adds members to a group.</p>\n<p>The members are added immediately. However the granting of group-owned\nresources may take additional time. Use the <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsJobStatusGetAsync(Dropbox.Api.Async.PollArg)\" data-throw-if-not-resolved=\"false\"></xref> to\ndetermine whether this process has completed.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<GroupMembersChangeResult> GroupsMembersAddAsync(GroupMembersAddArg groupMembersAddArg)
    parameters:
    - id: groupMembersAddArg
      type: Dropbox.Api.Team.GroupMembersAddArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GroupMembersChangeResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsMembersAddAsync(groupMembersAddArg As GroupMembersAddArg) As Task(Of GroupMembersChangeResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersAddAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupMembersAddError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersAdd(Dropbox.Api.Team.GroupMembersAddArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersAdd(Dropbox.Api.Team.GroupMembersAddArg,System.AsyncCallback,System.Object)
  id: BeginGroupsMembersAdd(Dropbox.Api.Team.GroupMembersAddArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsMembersAdd(GroupMembersAddArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsMembersAdd(GroupMembersAddArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersAdd(Dropbox.Api.Team.GroupMembersAddArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsMembersAdd
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1171
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups members add route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsMembersAdd(GroupMembersAddArg groupMembersAddArg, AsyncCallback callback, object state = null)
    parameters:
    - id: groupMembersAddArg
      type: Dropbox.Api.Team.GroupMembersAddArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsMembersAdd(groupMembersAddArg As GroupMembersAddArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersAdd*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersAddAsync(Dropbox.Api.Team.GroupSelector,System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAccess},System.Boolean)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersAddAsync(Dropbox.Api.Team.GroupSelector,System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAccess},System.Boolean)
  id: GroupsMembersAddAsync(Dropbox.Api.Team.GroupSelector,System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAccess},System.Boolean)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsMembersAddAsync(GroupSelector, IEnumerable<MemberAccess>, Boolean)
  nameWithType: TeamTeamRoutes.GroupsMembersAddAsync(GroupSelector, IEnumerable<MemberAccess>, Boolean)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersAddAsync(Dropbox.Api.Team.GroupSelector, System.Collections.Generic.IEnumerable<Dropbox.Api.Team.MemberAccess>, System.Boolean)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsMembersAddAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1196
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Adds members to a group.</p>\n<p>The members are added immediately. However the granting of group-owned\nresources may take additional time. Use the <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsJobStatusGetAsync(Dropbox.Api.Async.PollArg)\" data-throw-if-not-resolved=\"false\"></xref> to\ndetermine whether this process has completed.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<GroupMembersChangeResult> GroupsMembersAddAsync(GroupSelector group, IEnumerable<MemberAccess> members, bool returnMembers = true)
    parameters:
    - id: group
      type: Dropbox.Api.Team.GroupSelector
      description: Group to which users will be added.
    - id: members
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAccess}
      description: List of users to be added to the group.
    - id: returnMembers
      type: System.Boolean
      description: >-
        Whether to return the list of members in the group.

        Note that the default value will cause all the group members  to be returned in the

        response. This may take a long time for large groups.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GroupMembersChangeResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsMembersAddAsync(group As GroupSelector, members As IEnumerable(Of MemberAccess), returnMembers As Boolean = True) As Task(Of GroupMembersChangeResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersAddAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupMembersAddError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: TeamTeamRoutes.GroupsMembersAddAsync(GroupSelector, IEnumerable(Of MemberAccess), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersAddAsync(Dropbox.Api.Team.GroupSelector, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.MemberAccess), System.Boolean)
  name.vb: GroupsMembersAddAsync(GroupSelector, IEnumerable(Of MemberAccess), Boolean)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersAdd(Dropbox.Api.Team.GroupSelector,System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAccess},System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersAdd(Dropbox.Api.Team.GroupSelector,System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAccess},System.Boolean,System.AsyncCallback,System.Object)
  id: BeginGroupsMembersAdd(Dropbox.Api.Team.GroupSelector,System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAccess},System.Boolean,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsMembersAdd(GroupSelector, IEnumerable<MemberAccess>, Boolean, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsMembersAdd(GroupSelector, IEnumerable<MemberAccess>, Boolean, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersAdd(Dropbox.Api.Team.GroupSelector, System.Collections.Generic.IEnumerable<Dropbox.Api.Team.MemberAccess>, System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsMembersAdd
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1220
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups members add route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsMembersAdd(GroupSelector group, IEnumerable<MemberAccess> members, bool returnMembers = true, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: group
      type: Dropbox.Api.Team.GroupSelector
      description: Group to which users will be added.
    - id: members
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAccess}
      description: List of users to be added to the group.
    - id: returnMembers
      type: System.Boolean
      description: >-
        Whether to return the list of members in the group.

        Note that the default value will cause all the group members  to be returned in the

        response. This may take a long time for large groups.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsMembersAdd(group As GroupSelector, members As IEnumerable(Of MemberAccess), returnMembers As Boolean = True, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersAdd*
  nameWithType.vb: TeamTeamRoutes.BeginGroupsMembersAdd(GroupSelector, IEnumerable(Of MemberAccess), Boolean, AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersAdd(Dropbox.Api.Team.GroupSelector, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.MemberAccess), System.Boolean, System.AsyncCallback, System.Object)
  name.vb: BeginGroupsMembersAdd(GroupSelector, IEnumerable(Of MemberAccess), Boolean, AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersAdd(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersAdd(System.IAsyncResult)
  id: EndGroupsMembersAdd(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndGroupsMembersAdd(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndGroupsMembersAdd(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersAdd(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndGroupsMembersAdd
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1243
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the groups members add route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public GroupMembersChangeResult EndGroupsMembersAdd(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.GroupMembersChangeResult
      description: The response to the send request
    content.vb: Public Function EndGroupsMembersAdd(asyncResult As IAsyncResult) As GroupMembersChangeResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersAdd*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupMembersAddError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListAsync(Dropbox.Api.Team.GroupsMembersListArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListAsync(Dropbox.Api.Team.GroupsMembersListArg)
  id: GroupsMembersListAsync(Dropbox.Api.Team.GroupsMembersListArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsMembersListAsync(GroupsMembersListArg)
  nameWithType: TeamTeamRoutes.GroupsMembersListAsync(GroupsMembersListArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListAsync(Dropbox.Api.Team.GroupsMembersListArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsMembersListAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1264
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Lists members of a group.</p>\n<p>Permission : Team Information.</p>\n"
  example: []
  syntax:
    content: public Task<GroupsMembersListResult> GroupsMembersListAsync(GroupsMembersListArg groupsMembersListArg)
    parameters:
    - id: groupsMembersListArg
      type: Dropbox.Api.Team.GroupsMembersListArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GroupsMembersListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsMembersListAsync(groupsMembersListArg As GroupsMembersListArg) As Task(Of GroupsMembersListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupSelectorError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersList(Dropbox.Api.Team.GroupsMembersListArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersList(Dropbox.Api.Team.GroupsMembersListArg,System.AsyncCallback,System.Object)
  id: BeginGroupsMembersList(Dropbox.Api.Team.GroupsMembersListArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsMembersList(GroupsMembersListArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsMembersList(GroupsMembersListArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersList(Dropbox.Api.Team.GroupsMembersListArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsMembersList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1278
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups members list route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsMembersList(GroupsMembersListArg groupsMembersListArg, AsyncCallback callback, object state = null)
    parameters:
    - id: groupsMembersListArg
      type: Dropbox.Api.Team.GroupsMembersListArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsMembersList(groupsMembersListArg As GroupsMembersListArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListAsync(Dropbox.Api.Team.GroupSelector,System.UInt32)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListAsync(Dropbox.Api.Team.GroupSelector,System.UInt32)
  id: GroupsMembersListAsync(Dropbox.Api.Team.GroupSelector,System.UInt32)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsMembersListAsync(GroupSelector, UInt32)
  nameWithType: TeamTeamRoutes.GroupsMembersListAsync(GroupSelector, UInt32)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListAsync(Dropbox.Api.Team.GroupSelector, System.UInt32)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsMembersListAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1296
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Lists members of a group.</p>\n<p>Permission : Team Information.</p>\n"
  example: []
  syntax:
    content: public Task<GroupsMembersListResult> GroupsMembersListAsync(GroupSelector group, uint limit = 1000U)
    parameters:
    - id: group
      type: Dropbox.Api.Team.GroupSelector
      description: The group whose members are to be listed.
    - id: limit
      type: System.UInt32
      description: Number of results to return per call.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GroupsMembersListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsMembersListAsync(group As GroupSelector, limit As UInteger = 1000UI) As Task(Of GroupsMembersListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupSelectorError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersList(Dropbox.Api.Team.GroupSelector,System.UInt32,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersList(Dropbox.Api.Team.GroupSelector,System.UInt32,System.AsyncCallback,System.Object)
  id: BeginGroupsMembersList(Dropbox.Api.Team.GroupSelector,System.UInt32,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsMembersList(GroupSelector, UInt32, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsMembersList(GroupSelector, UInt32, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersList(Dropbox.Api.Team.GroupSelector, System.UInt32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsMembersList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1315
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups members list route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsMembersList(GroupSelector group, uint limit = 1000U, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: group
      type: Dropbox.Api.Team.GroupSelector
      description: The group whose members are to be listed.
    - id: limit
      type: System.UInt32
      description: Number of results to return per call.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsMembersList(group As GroupSelector, limit As UInteger = 1000UI, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersList(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersList(System.IAsyncResult)
  id: EndGroupsMembersList(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndGroupsMembersList(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndGroupsMembersList(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersList(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndGroupsMembersList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1336
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the groups members list route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public GroupsMembersListResult EndGroupsMembersList(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.GroupsMembersListResult
      description: The response to the send request
    content.vb: Public Function EndGroupsMembersList(asyncResult As IAsyncResult) As GroupsMembersListResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersList*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupSelectorError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListContinueAsync(Dropbox.Api.Team.GroupsMembersListContinueArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListContinueAsync(Dropbox.Api.Team.GroupsMembersListContinueArg)
  id: GroupsMembersListContinueAsync(Dropbox.Api.Team.GroupsMembersListContinueArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsMembersListContinueAsync(GroupsMembersListContinueArg)
  nameWithType: TeamTeamRoutes.GroupsMembersListContinueAsync(GroupsMembersListContinueArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListContinueAsync(Dropbox.Api.Team.GroupsMembersListContinueArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsMembersListContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1359
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once a cursor has been retrieved from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListAsync(Dropbox.Api.Team.GroupsMembersListArg)\" data-throw-if-not-resolved=\"false\"></xref>, use this\nto paginate through all members of the group.</p>\n<p>Permission : Team information.</p>\n"
  example: []
  syntax:
    content: public Task<GroupsMembersListResult> GroupsMembersListContinueAsync(GroupsMembersListContinueArg groupsMembersListContinueArg)
    parameters:
    - id: groupsMembersListContinueArg
      type: Dropbox.Api.Team.GroupsMembersListContinueArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GroupsMembersListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsMembersListContinueAsync(groupsMembersListContinueArg As GroupsMembersListContinueArg) As Task(Of GroupsMembersListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupsMembersListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersListContinue(Dropbox.Api.Team.GroupsMembersListContinueArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersListContinue(Dropbox.Api.Team.GroupsMembersListContinueArg,System.AsyncCallback,System.Object)
  id: BeginGroupsMembersListContinue(Dropbox.Api.Team.GroupsMembersListContinueArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsMembersListContinue(GroupsMembersListContinueArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsMembersListContinue(GroupsMembersListContinueArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersListContinue(Dropbox.Api.Team.GroupsMembersListContinueArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsMembersListContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1373
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups members list continue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsMembersListContinue(GroupsMembersListContinueArg groupsMembersListContinueArg, AsyncCallback callback, object state = null)
    parameters:
    - id: groupsMembersListContinueArg
      type: Dropbox.Api.Team.GroupsMembersListContinueArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsMembersListContinue(groupsMembersListContinueArg As GroupsMembersListContinueArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersListContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListContinueAsync(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListContinueAsync(System.String)
  id: GroupsMembersListContinueAsync(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsMembersListContinueAsync(String)
  nameWithType: TeamTeamRoutes.GroupsMembersListContinueAsync(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListContinueAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsMembersListContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1393
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once a cursor has been retrieved from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListAsync(Dropbox.Api.Team.GroupsMembersListArg)\" data-throw-if-not-resolved=\"false\"></xref>, use this\nto paginate through all members of the group.</p>\n<p>Permission : Team information.</p>\n"
  example: []
  syntax:
    content: public Task<GroupsMembersListResult> GroupsMembersListContinueAsync(string cursor)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        Indicates from what point to get the next set of

        groups.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GroupsMembersListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsMembersListContinueAsync(cursor As String) As Task(Of GroupsMembersListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupsMembersListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersListContinue(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersListContinue(System.String,System.AsyncCallback,System.Object)
  id: BeginGroupsMembersListContinue(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsMembersListContinue(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsMembersListContinue(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersListContinue(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsMembersListContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1410
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups members list continue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsMembersListContinue(string cursor, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        Indicates from what point to get the next set of

        groups.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsMembersListContinue(cursor As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersListContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersListContinue(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersListContinue(System.IAsyncResult)
  id: EndGroupsMembersListContinue(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndGroupsMembersListContinue(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndGroupsMembersListContinue(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersListContinue(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndGroupsMembersListContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1429
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the groups members list continue\nroute to complete</p>\n"
  example: []
  syntax:
    content: public GroupsMembersListResult EndGroupsMembersListContinue(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.GroupsMembersListResult
      description: The response to the send request
    content.vb: Public Function EndGroupsMembersListContinue(asyncResult As IAsyncResult) As GroupsMembersListResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersListContinue*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupsMembersListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersRemoveAsync(Dropbox.Api.Team.GroupMembersRemoveArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersRemoveAsync(Dropbox.Api.Team.GroupMembersRemoveArg)
  id: GroupsMembersRemoveAsync(Dropbox.Api.Team.GroupMembersRemoveArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsMembersRemoveAsync(GroupMembersRemoveArg)
  nameWithType: TeamTeamRoutes.GroupsMembersRemoveAsync(GroupMembersRemoveArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersRemoveAsync(Dropbox.Api.Team.GroupMembersRemoveArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsMembersRemoveAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1456
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Removes members from a group.</p>\n<p>The members are removed immediately. However the revoking of group-owned\nresources may take additional time. Use the <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsJobStatusGetAsync(Dropbox.Api.Async.PollArg)\" data-throw-if-not-resolved=\"false\"></xref> to\ndetermine whether this process has completed.</p>\n<p>This method permits removing the only owner of a group, even in cases where\nthis is not possible via the web client.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<GroupMembersChangeResult> GroupsMembersRemoveAsync(GroupMembersRemoveArg groupMembersRemoveArg)
    parameters:
    - id: groupMembersRemoveArg
      type: Dropbox.Api.Team.GroupMembersRemoveArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GroupMembersChangeResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsMembersRemoveAsync(groupMembersRemoveArg As GroupMembersRemoveArg) As Task(Of GroupMembersChangeResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersRemoveAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupMembersRemoveError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersRemove(Dropbox.Api.Team.GroupMembersRemoveArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersRemove(Dropbox.Api.Team.GroupMembersRemoveArg,System.AsyncCallback,System.Object)
  id: BeginGroupsMembersRemove(Dropbox.Api.Team.GroupMembersRemoveArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsMembersRemove(GroupMembersRemoveArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsMembersRemove(GroupMembersRemoveArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersRemove(Dropbox.Api.Team.GroupMembersRemoveArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsMembersRemove
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1470
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups members remove route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsMembersRemove(GroupMembersRemoveArg groupMembersRemoveArg, AsyncCallback callback, object state = null)
    parameters:
    - id: groupMembersRemoveArg
      type: Dropbox.Api.Team.GroupMembersRemoveArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsMembersRemove(groupMembersRemoveArg As GroupMembersRemoveArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersRemove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersRemoveAsync(Dropbox.Api.Team.GroupSelector,System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.Boolean)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersRemoveAsync(Dropbox.Api.Team.GroupSelector,System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.Boolean)
  id: GroupsMembersRemoveAsync(Dropbox.Api.Team.GroupSelector,System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.Boolean)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsMembersRemoveAsync(GroupSelector, IEnumerable<UserSelectorArg>, Boolean)
  nameWithType: TeamTeamRoutes.GroupsMembersRemoveAsync(GroupSelector, IEnumerable<UserSelectorArg>, Boolean)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersRemoveAsync(Dropbox.Api.Team.GroupSelector, System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSelectorArg>, System.Boolean)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsMembersRemoveAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1497
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Removes members from a group.</p>\n<p>The members are removed immediately. However the revoking of group-owned\nresources may take additional time. Use the <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsJobStatusGetAsync(Dropbox.Api.Async.PollArg)\" data-throw-if-not-resolved=\"false\"></xref> to\ndetermine whether this process has completed.</p>\n<p>This method permits removing the only owner of a group, even in cases where\nthis is not possible via the web client.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<GroupMembersChangeResult> GroupsMembersRemoveAsync(GroupSelector group, IEnumerable<UserSelectorArg> users, bool returnMembers = true)
    parameters:
    - id: group
      type: Dropbox.Api.Team.GroupSelector
      description: Group from which users will be removed.
    - id: users
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg}
      description: List of users to be removed from the group.
    - id: returnMembers
      type: System.Boolean
      description: >-
        Whether to return the list of members in the group.

        Note that the default value will cause all the group members  to be returned in the

        response. This may take a long time for large groups.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GroupMembersChangeResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsMembersRemoveAsync(group As GroupSelector, users As IEnumerable(Of UserSelectorArg), returnMembers As Boolean = True) As Task(Of GroupMembersChangeResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersRemoveAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupMembersRemoveError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: TeamTeamRoutes.GroupsMembersRemoveAsync(GroupSelector, IEnumerable(Of UserSelectorArg), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersRemoveAsync(Dropbox.Api.Team.GroupSelector, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSelectorArg), System.Boolean)
  name.vb: GroupsMembersRemoveAsync(GroupSelector, IEnumerable(Of UserSelectorArg), Boolean)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersRemove(Dropbox.Api.Team.GroupSelector,System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersRemove(Dropbox.Api.Team.GroupSelector,System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.Boolean,System.AsyncCallback,System.Object)
  id: BeginGroupsMembersRemove(Dropbox.Api.Team.GroupSelector,System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.Boolean,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsMembersRemove(GroupSelector, IEnumerable<UserSelectorArg>, Boolean, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsMembersRemove(GroupSelector, IEnumerable<UserSelectorArg>, Boolean, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersRemove(Dropbox.Api.Team.GroupSelector, System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSelectorArg>, System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsMembersRemove
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1521
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups members remove route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsMembersRemove(GroupSelector group, IEnumerable<UserSelectorArg> users, bool returnMembers = true, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: group
      type: Dropbox.Api.Team.GroupSelector
      description: Group from which users will be removed.
    - id: users
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg}
      description: List of users to be removed from the group.
    - id: returnMembers
      type: System.Boolean
      description: >-
        Whether to return the list of members in the group.

        Note that the default value will cause all the group members  to be returned in the

        response. This may take a long time for large groups.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsMembersRemove(group As GroupSelector, users As IEnumerable(Of UserSelectorArg), returnMembers As Boolean = True, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersRemove*
  nameWithType.vb: TeamTeamRoutes.BeginGroupsMembersRemove(GroupSelector, IEnumerable(Of UserSelectorArg), Boolean, AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersRemove(Dropbox.Api.Team.GroupSelector, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSelectorArg), System.Boolean, System.AsyncCallback, System.Object)
  name.vb: BeginGroupsMembersRemove(GroupSelector, IEnumerable(Of UserSelectorArg), Boolean, AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersRemove(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersRemove(System.IAsyncResult)
  id: EndGroupsMembersRemove(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndGroupsMembersRemove(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndGroupsMembersRemove(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersRemove(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndGroupsMembersRemove
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1544
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the groups members remove route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public GroupMembersChangeResult EndGroupsMembersRemove(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.GroupMembersChangeResult
      description: The response to the send request
    content.vb: Public Function EndGroupsMembersRemove(asyncResult As IAsyncResult) As GroupMembersChangeResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersRemove*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupMembersRemoveError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersSetAccessTypeAsync(Dropbox.Api.Team.GroupMembersSetAccessTypeArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersSetAccessTypeAsync(Dropbox.Api.Team.GroupMembersSetAccessTypeArg)
  id: GroupsMembersSetAccessTypeAsync(Dropbox.Api.Team.GroupMembersSetAccessTypeArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsMembersSetAccessTypeAsync(GroupMembersSetAccessTypeArg)
  nameWithType: TeamTeamRoutes.GroupsMembersSetAccessTypeAsync(GroupMembersSetAccessTypeArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersSetAccessTypeAsync(Dropbox.Api.Team.GroupMembersSetAccessTypeArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsMembersSetAccessTypeAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1565
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Sets a member&apos;s access type in a group.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<List<GroupsGetInfoItem>> GroupsMembersSetAccessTypeAsync(GroupMembersSetAccessTypeArg groupMembersSetAccessTypeArg)
    parameters:
    - id: groupMembersSetAccessTypeArg
      type: Dropbox.Api.Team.GroupMembersSetAccessTypeArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.GroupsGetInfoItem}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsMembersSetAccessTypeAsync(groupMembersSetAccessTypeArg As GroupMembersSetAccessTypeArg) As Task(Of List(Of GroupsGetInfoItem))
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersSetAccessTypeAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupMemberSetAccessTypeError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersSetAccessType(Dropbox.Api.Team.GroupMembersSetAccessTypeArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersSetAccessType(Dropbox.Api.Team.GroupMembersSetAccessTypeArg,System.AsyncCallback,System.Object)
  id: BeginGroupsMembersSetAccessType(Dropbox.Api.Team.GroupMembersSetAccessTypeArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsMembersSetAccessType(GroupMembersSetAccessTypeArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsMembersSetAccessType(GroupMembersSetAccessTypeArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersSetAccessType(Dropbox.Api.Team.GroupMembersSetAccessTypeArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsMembersSetAccessType
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1580
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups members set access type\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsMembersSetAccessType(GroupMembersSetAccessTypeArg groupMembersSetAccessTypeArg, AsyncCallback callback, object state = null)
    parameters:
    - id: groupMembersSetAccessTypeArg
      type: Dropbox.Api.Team.GroupMembersSetAccessTypeArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsMembersSetAccessType(groupMembersSetAccessTypeArg As GroupMembersSetAccessTypeArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersSetAccessType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersSetAccessTypeAsync(Dropbox.Api.Team.GroupSelector,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.GroupAccessType,System.Boolean)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersSetAccessTypeAsync(Dropbox.Api.Team.GroupSelector,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.GroupAccessType,System.Boolean)
  id: GroupsMembersSetAccessTypeAsync(Dropbox.Api.Team.GroupSelector,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.GroupAccessType,System.Boolean)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsMembersSetAccessTypeAsync(GroupSelector, UserSelectorArg, GroupAccessType, Boolean)
  nameWithType: TeamTeamRoutes.GroupsMembersSetAccessTypeAsync(GroupSelector, UserSelectorArg, GroupAccessType, Boolean)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersSetAccessTypeAsync(Dropbox.Api.Team.GroupSelector, Dropbox.Api.Team.UserSelectorArg, Dropbox.Api.Team.GroupAccessType, System.Boolean)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsMembersSetAccessTypeAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1603
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Sets a member&apos;s access type in a group.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<List<GroupsGetInfoItem>> GroupsMembersSetAccessTypeAsync(GroupSelector group, UserSelectorArg user, GroupAccessType accessType, bool returnMembers = true)
    parameters:
    - id: group
      type: Dropbox.Api.Team.GroupSelector
      description: Specify a group.
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: Identity of a user that is a member of <code data-dev-comment-type="paramref" class="paramref">group</code>.
    - id: accessType
      type: Dropbox.Api.Team.GroupAccessType
      description: New group access type the user will have.
    - id: returnMembers
      type: System.Boolean
      description: >-
        Whether to return the list of members in the group.

        Note that the default value will cause all the group members  to be returned in the

        response. This may take a long time for large groups.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.GroupsGetInfoItem}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsMembersSetAccessTypeAsync(group As GroupSelector, user As UserSelectorArg, accessType As GroupAccessType, returnMembers As Boolean = True) As Task(Of List(Of GroupsGetInfoItem))
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersSetAccessTypeAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupMemberSetAccessTypeError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersSetAccessType(Dropbox.Api.Team.GroupSelector,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.GroupAccessType,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersSetAccessType(Dropbox.Api.Team.GroupSelector,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.GroupAccessType,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginGroupsMembersSetAccessType(Dropbox.Api.Team.GroupSelector,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.GroupAccessType,System.Boolean,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsMembersSetAccessType(GroupSelector, UserSelectorArg, GroupAccessType, Boolean, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsMembersSetAccessType(GroupSelector, UserSelectorArg, GroupAccessType, Boolean, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersSetAccessType(Dropbox.Api.Team.GroupSelector, Dropbox.Api.Team.UserSelectorArg, Dropbox.Api.Team.GroupAccessType, System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsMembersSetAccessType
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1632
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups members set access type\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsMembersSetAccessType(GroupSelector group, UserSelectorArg user, GroupAccessType accessType, bool returnMembers = true, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: group
      type: Dropbox.Api.Team.GroupSelector
      description: Specify a group.
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: Identity of a user that is a member of <code data-dev-comment-type="paramref" class="paramref">group</code>.
    - id: accessType
      type: Dropbox.Api.Team.GroupAccessType
      description: New group access type the user will have.
    - id: returnMembers
      type: System.Boolean
      description: >-
        Whether to return the list of members in the group.

        Note that the default value will cause all the group members  to be returned in the

        response. This may take a long time for large groups.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsMembersSetAccessType(group As GroupSelector, user As UserSelectorArg, accessType As GroupAccessType, returnMembers As Boolean = True, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersSetAccessType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersSetAccessType(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersSetAccessType(System.IAsyncResult)
  id: EndGroupsMembersSetAccessType(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndGroupsMembersSetAccessType(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndGroupsMembersSetAccessType(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersSetAccessType(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndGroupsMembersSetAccessType
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1657
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the groups members set access type\nroute to complete</p>\n"
  example: []
  syntax:
    content: public List<GroupsGetInfoItem> EndGroupsMembersSetAccessType(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: System.Collections.Generic.List{Dropbox.Api.Team.GroupsGetInfoItem}
      description: The response to the send request
    content.vb: Public Function EndGroupsMembersSetAccessType(asyncResult As IAsyncResult) As List(Of GroupsGetInfoItem)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersSetAccessType*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupMemberSetAccessTypeError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsUpdateAsync(Dropbox.Api.Team.GroupUpdateArgs)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsUpdateAsync(Dropbox.Api.Team.GroupUpdateArgs)
  id: GroupsUpdateAsync(Dropbox.Api.Team.GroupUpdateArgs)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsUpdateAsync(GroupUpdateArgs)
  nameWithType: TeamTeamRoutes.GroupsUpdateAsync(GroupUpdateArgs)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsUpdateAsync(Dropbox.Api.Team.GroupUpdateArgs)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsUpdateAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1678
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Updates a group&apos;s name and/or external ID.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<GroupFullInfo> GroupsUpdateAsync(GroupUpdateArgs groupUpdateArgs)
    parameters:
    - id: groupUpdateArgs
      type: Dropbox.Api.Team.GroupUpdateArgs
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GroupFullInfo}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsUpdateAsync(groupUpdateArgs As GroupUpdateArgs) As Task(Of GroupFullInfo)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsUpdateAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupUpdateError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsUpdate(Dropbox.Api.Team.GroupUpdateArgs,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsUpdate(Dropbox.Api.Team.GroupUpdateArgs,System.AsyncCallback,System.Object)
  id: BeginGroupsUpdate(Dropbox.Api.Team.GroupUpdateArgs,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsUpdate(GroupUpdateArgs, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsUpdate(GroupUpdateArgs, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsUpdate(Dropbox.Api.Team.GroupUpdateArgs, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsUpdate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1692
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups update route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsUpdate(GroupUpdateArgs groupUpdateArgs, AsyncCallback callback, object state = null)
    parameters:
    - id: groupUpdateArgs
      type: Dropbox.Api.Team.GroupUpdateArgs
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsUpdate(groupUpdateArgs As GroupUpdateArgs, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsUpdate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsUpdateAsync(Dropbox.Api.Team.GroupSelector,System.Boolean,System.String,System.String,Dropbox.Api.TeamCommon.GroupManagementType)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsUpdateAsync(Dropbox.Api.Team.GroupSelector,System.Boolean,System.String,System.String,Dropbox.Api.TeamCommon.GroupManagementType)
  id: GroupsUpdateAsync(Dropbox.Api.Team.GroupSelector,System.Boolean,System.String,System.String,Dropbox.Api.TeamCommon.GroupManagementType)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: GroupsUpdateAsync(GroupSelector, Boolean, String, String, GroupManagementType)
  nameWithType: TeamTeamRoutes.GroupsUpdateAsync(GroupSelector, Boolean, String, String, GroupManagementType)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsUpdateAsync(Dropbox.Api.Team.GroupSelector, System.Boolean, System.String, System.String, Dropbox.Api.TeamCommon.GroupManagementType)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GroupsUpdateAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1719
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Updates a group&apos;s name and/or external ID.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<GroupFullInfo> GroupsUpdateAsync(GroupSelector group, bool returnMembers = true, string newGroupName = null, string newGroupExternalId = null, GroupManagementType newGroupManagementType = null)
    parameters:
    - id: group
      type: Dropbox.Api.Team.GroupSelector
      description: Specify a group.
    - id: returnMembers
      type: System.Boolean
      description: >-
        Whether to return the list of members in the group.

        Note that the default value will cause all the group members  to be returned in the

        response. This may take a long time for large groups.
    - id: newGroupName
      type: System.String
      description: >-
        Optional argument. Set group name to this if

        provided.
    - id: newGroupExternalId
      type: System.String
      description: >-
        Optional argument. New group external ID. If the

        argument is None, the group&apos;s external_id won&apos;t be updated. If the argument is

        empty string, the group&apos;s external id will be cleared.
    - id: newGroupManagementType
      type: Dropbox.Api.TeamCommon.GroupManagementType
      description: >-
        Set new group management type, if

        provided.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GroupFullInfo}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function GroupsUpdateAsync(group As GroupSelector, returnMembers As Boolean = True, newGroupName As String = Nothing, newGroupExternalId As String = Nothing, newGroupManagementType As GroupManagementType = Nothing) As Task(Of GroupFullInfo)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsUpdateAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupUpdateError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsUpdate(Dropbox.Api.Team.GroupSelector,System.Boolean,System.String,System.String,Dropbox.Api.TeamCommon.GroupManagementType,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsUpdate(Dropbox.Api.Team.GroupSelector,System.Boolean,System.String,System.String,Dropbox.Api.TeamCommon.GroupManagementType,System.AsyncCallback,System.Object)
  id: BeginGroupsUpdate(Dropbox.Api.Team.GroupSelector,System.Boolean,System.String,System.String,Dropbox.Api.TeamCommon.GroupManagementType,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginGroupsUpdate(GroupSelector, Boolean, String, String, GroupManagementType, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginGroupsUpdate(GroupSelector, Boolean, String, String, GroupManagementType, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsUpdate(Dropbox.Api.Team.GroupSelector, System.Boolean, System.String, System.String, Dropbox.Api.TeamCommon.GroupManagementType, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginGroupsUpdate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1753
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the groups update route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginGroupsUpdate(GroupSelector group, bool returnMembers = true, string newGroupName = null, string newGroupExternalId = null, GroupManagementType newGroupManagementType = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: group
      type: Dropbox.Api.Team.GroupSelector
      description: Specify a group.
    - id: returnMembers
      type: System.Boolean
      description: >-
        Whether to return the list of members in the group.

        Note that the default value will cause all the group members  to be returned in the

        response. This may take a long time for large groups.
    - id: newGroupName
      type: System.String
      description: >-
        Optional argument. Set group name to this if

        provided.
    - id: newGroupExternalId
      type: System.String
      description: >-
        Optional argument. New group external ID. If the

        argument is None, the group&apos;s external_id won&apos;t be updated. If the argument is

        empty string, the group&apos;s external id will be cleared.
    - id: newGroupManagementType
      type: Dropbox.Api.TeamCommon.GroupManagementType
      description: >-
        Set new group management type, if

        provided.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginGroupsUpdate(group As GroupSelector, returnMembers As Boolean = True, newGroupName As String = Nothing, newGroupExternalId As String = Nothing, newGroupManagementType As GroupManagementType = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsUpdate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsUpdate(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsUpdate(System.IAsyncResult)
  id: EndGroupsUpdate(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndGroupsUpdate(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndGroupsUpdate(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsUpdate(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndGroupsUpdate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1780
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the groups update route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public GroupFullInfo EndGroupsUpdate(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.GroupFullInfo
      description: The response to the send request
    content.vb: Public Function EndGroupsUpdate(asyncResult As IAsyncResult) As GroupFullInfo
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsUpdate*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.GroupUpdateError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsCreatePolicyAsync(Dropbox.Api.Team.LegalHoldsPolicyCreateArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsCreatePolicyAsync(Dropbox.Api.Team.LegalHoldsPolicyCreateArg)
  id: LegalHoldsCreatePolicyAsync(Dropbox.Api.Team.LegalHoldsPolicyCreateArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LegalHoldsCreatePolicyAsync(LegalHoldsPolicyCreateArg)
  nameWithType: TeamTeamRoutes.LegalHoldsCreatePolicyAsync(LegalHoldsPolicyCreateArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsCreatePolicyAsync(Dropbox.Api.Team.LegalHoldsPolicyCreateArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LegalHoldsCreatePolicyAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1802
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Creates new legal hold policy. Note: Legal Holds is a paid add-on. Not all\nteams have the feature.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<LegalHoldPolicy> LegalHoldsCreatePolicyAsync(LegalHoldsPolicyCreateArg legalHoldsPolicyCreateArg)
    parameters:
    - id: legalHoldsPolicyCreateArg
      type: Dropbox.Api.Team.LegalHoldsPolicyCreateArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.LegalHoldPolicy}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function LegalHoldsCreatePolicyAsync(legalHoldsPolicyCreateArg As LegalHoldsPolicyCreateArg) As Task(Of LegalHoldPolicy)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsCreatePolicyAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsPolicyCreateError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsCreatePolicy(Dropbox.Api.Team.LegalHoldsPolicyCreateArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsCreatePolicy(Dropbox.Api.Team.LegalHoldsPolicyCreateArg,System.AsyncCallback,System.Object)
  id: BeginLegalHoldsCreatePolicy(Dropbox.Api.Team.LegalHoldsPolicyCreateArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLegalHoldsCreatePolicy(LegalHoldsPolicyCreateArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLegalHoldsCreatePolicy(LegalHoldsPolicyCreateArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsCreatePolicy(Dropbox.Api.Team.LegalHoldsPolicyCreateArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLegalHoldsCreatePolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1816
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the legal holds create policy route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLegalHoldsCreatePolicy(LegalHoldsPolicyCreateArg legalHoldsPolicyCreateArg, AsyncCallback callback, object state = null)
    parameters:
    - id: legalHoldsPolicyCreateArg
      type: Dropbox.Api.Team.LegalHoldsPolicyCreateArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLegalHoldsCreatePolicy(legalHoldsPolicyCreateArg As LegalHoldsPolicyCreateArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsCreatePolicy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsCreatePolicyAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsCreatePolicyAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: LegalHoldsCreatePolicyAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LegalHoldsCreatePolicyAsync(String, IEnumerable<String>, String, Nullable<DateTime>, Nullable<DateTime>)
  nameWithType: TeamTeamRoutes.LegalHoldsCreatePolicyAsync(String, IEnumerable<String>, String, Nullable<DateTime>, Nullable<DateTime>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsCreatePolicyAsync(System.String, System.Collections.Generic.IEnumerable<System.String>, System.String, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LegalHoldsCreatePolicyAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1838
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Creates new legal hold policy. Note: Legal Holds is a paid add-on. Not all\nteams have the feature.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<LegalHoldPolicy> LegalHoldsCreatePolicyAsync(string name, IEnumerable<string> members, string description = null, DateTime? startDate = null, DateTime? endDate = null)
    parameters:
    - id: name
      type: System.String
      description: Policy name.
    - id: members
      type: System.Collections.Generic.IEnumerable{System.String}
      description: List of team member IDs added to the hold.
    - id: description
      type: System.String
      description: A description of the legal hold policy.
    - id: startDate
      type: System.Nullable{System.DateTime}
      description: start date of the legal hold policy.
    - id: endDate
      type: System.Nullable{System.DateTime}
      description: end date of the legal hold policy.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.LegalHoldPolicy}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function LegalHoldsCreatePolicyAsync(name As String, members As IEnumerable(Of String), description As String = Nothing, startDate As Date? = Nothing, endDate As Date? = Nothing) As Task(Of LegalHoldPolicy)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsCreatePolicyAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsPolicyCreateError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: TeamTeamRoutes.LegalHoldsCreatePolicyAsync(String, IEnumerable(Of String), String, Nullable(Of DateTime), Nullable(Of DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsCreatePolicyAsync(System.String, System.Collections.Generic.IEnumerable(Of System.String), System.String, System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime))
  name.vb: LegalHoldsCreatePolicyAsync(String, IEnumerable(Of String), String, Nullable(Of DateTime), Nullable(Of DateTime))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsCreatePolicy(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsCreatePolicy(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  id: BeginLegalHoldsCreatePolicy(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLegalHoldsCreatePolicy(String, IEnumerable<String>, String, Nullable<DateTime>, Nullable<DateTime>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLegalHoldsCreatePolicy(String, IEnumerable<String>, String, Nullable<DateTime>, Nullable<DateTime>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsCreatePolicy(System.String, System.Collections.Generic.IEnumerable<System.String>, System.String, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLegalHoldsCreatePolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1866
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the legal holds create policy route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLegalHoldsCreatePolicy(string name, IEnumerable<string> members, string description = null, DateTime? startDate = null, DateTime? endDate = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: name
      type: System.String
      description: Policy name.
    - id: members
      type: System.Collections.Generic.IEnumerable{System.String}
      description: List of team member IDs added to the hold.
    - id: description
      type: System.String
      description: A description of the legal hold policy.
    - id: startDate
      type: System.Nullable{System.DateTime}
      description: start date of the legal hold policy.
    - id: endDate
      type: System.Nullable{System.DateTime}
      description: end date of the legal hold policy.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLegalHoldsCreatePolicy(name As String, members As IEnumerable(Of String), description As String = Nothing, startDate As Date? = Nothing, endDate As Date? = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsCreatePolicy*
  nameWithType.vb: TeamTeamRoutes.BeginLegalHoldsCreatePolicy(String, IEnumerable(Of String), String, Nullable(Of DateTime), Nullable(Of DateTime), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsCreatePolicy(System.String, System.Collections.Generic.IEnumerable(Of System.String), System.String, System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.AsyncCallback, System.Object)
  name.vb: BeginLegalHoldsCreatePolicy(String, IEnumerable(Of String), String, Nullable(Of DateTime), Nullable(Of DateTime), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsCreatePolicy(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsCreatePolicy(System.IAsyncResult)
  id: EndLegalHoldsCreatePolicy(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndLegalHoldsCreatePolicy(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndLegalHoldsCreatePolicy(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsCreatePolicy(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndLegalHoldsCreatePolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1893
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the legal holds create policy\nroute to complete</p>\n"
  example: []
  syntax:
    content: public LegalHoldPolicy EndLegalHoldsCreatePolicy(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.LegalHoldPolicy
      description: The response to the send request
    content.vb: Public Function EndLegalHoldsCreatePolicy(asyncResult As IAsyncResult) As LegalHoldPolicy
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsCreatePolicy*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsPolicyCreateError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsGetPolicyAsync(Dropbox.Api.Team.LegalHoldsGetPolicyArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsGetPolicyAsync(Dropbox.Api.Team.LegalHoldsGetPolicyArg)
  id: LegalHoldsGetPolicyAsync(Dropbox.Api.Team.LegalHoldsGetPolicyArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LegalHoldsGetPolicyAsync(LegalHoldsGetPolicyArg)
  nameWithType: TeamTeamRoutes.LegalHoldsGetPolicyAsync(LegalHoldsGetPolicyArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsGetPolicyAsync(Dropbox.Api.Team.LegalHoldsGetPolicyArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LegalHoldsGetPolicyAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1915
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Gets a legal hold by Id. Note: Legal Holds is a paid add-on. Not all teams\nhave the feature.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<LegalHoldPolicy> LegalHoldsGetPolicyAsync(LegalHoldsGetPolicyArg legalHoldsGetPolicyArg)
    parameters:
    - id: legalHoldsGetPolicyArg
      type: Dropbox.Api.Team.LegalHoldsGetPolicyArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.LegalHoldPolicy}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function LegalHoldsGetPolicyAsync(legalHoldsGetPolicyArg As LegalHoldsGetPolicyArg) As Task(Of LegalHoldPolicy)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsGetPolicyAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsGetPolicyError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsGetPolicy(Dropbox.Api.Team.LegalHoldsGetPolicyArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsGetPolicy(Dropbox.Api.Team.LegalHoldsGetPolicyArg,System.AsyncCallback,System.Object)
  id: BeginLegalHoldsGetPolicy(Dropbox.Api.Team.LegalHoldsGetPolicyArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLegalHoldsGetPolicy(LegalHoldsGetPolicyArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLegalHoldsGetPolicy(LegalHoldsGetPolicyArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsGetPolicy(Dropbox.Api.Team.LegalHoldsGetPolicyArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLegalHoldsGetPolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1929
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the legal holds get policy route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLegalHoldsGetPolicy(LegalHoldsGetPolicyArg legalHoldsGetPolicyArg, AsyncCallback callback, object state = null)
    parameters:
    - id: legalHoldsGetPolicyArg
      type: Dropbox.Api.Team.LegalHoldsGetPolicyArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLegalHoldsGetPolicy(legalHoldsGetPolicyArg As LegalHoldsGetPolicyArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsGetPolicy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsGetPolicyAsync(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsGetPolicyAsync(System.String)
  id: LegalHoldsGetPolicyAsync(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LegalHoldsGetPolicyAsync(String)
  nameWithType: TeamTeamRoutes.LegalHoldsGetPolicyAsync(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsGetPolicyAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LegalHoldsGetPolicyAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1947
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Gets a legal hold by Id. Note: Legal Holds is a paid add-on. Not all teams\nhave the feature.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<LegalHoldPolicy> LegalHoldsGetPolicyAsync(string id)
    parameters:
    - id: id
      type: System.String
      description: The legal hold Id.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.LegalHoldPolicy}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function LegalHoldsGetPolicyAsync(id As String) As Task(Of LegalHoldPolicy)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsGetPolicyAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsGetPolicyError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsGetPolicy(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsGetPolicy(System.String,System.AsyncCallback,System.Object)
  id: BeginLegalHoldsGetPolicy(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLegalHoldsGetPolicy(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLegalHoldsGetPolicy(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsGetPolicy(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLegalHoldsGetPolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1963
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the legal holds get policy route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLegalHoldsGetPolicy(string id, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: id
      type: System.String
      description: The legal hold Id.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLegalHoldsGetPolicy(id As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsGetPolicy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsGetPolicy(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsGetPolicy(System.IAsyncResult)
  id: EndLegalHoldsGetPolicy(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndLegalHoldsGetPolicy(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndLegalHoldsGetPolicy(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsGetPolicy(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndLegalHoldsGetPolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 1982
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the legal holds get policy route\nto complete</p>\n"
  example: []
  syntax:
    content: public LegalHoldPolicy EndLegalHoldsGetPolicy(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.LegalHoldPolicy
      description: The response to the send request
    content.vb: Public Function EndLegalHoldsGetPolicy(asyncResult As IAsyncResult) As LegalHoldPolicy
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsGetPolicy*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsGetPolicyError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsAsync(Dropbox.Api.Team.LegalHoldsListHeldRevisionsArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsAsync(Dropbox.Api.Team.LegalHoldsListHeldRevisionsArg)
  id: LegalHoldsListHeldRevisionsAsync(Dropbox.Api.Team.LegalHoldsListHeldRevisionsArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LegalHoldsListHeldRevisionsAsync(LegalHoldsListHeldRevisionsArg)
  nameWithType: TeamTeamRoutes.LegalHoldsListHeldRevisionsAsync(LegalHoldsListHeldRevisionsArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsAsync(Dropbox.Api.Team.LegalHoldsListHeldRevisionsArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LegalHoldsListHeldRevisionsAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2004
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>List the file metadata that&apos;s under the hold. Note: Legal Holds is a paid\nadd-on. Not all teams have the feature.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<LegalHoldsListHeldRevisionResult> LegalHoldsListHeldRevisionsAsync(LegalHoldsListHeldRevisionsArg legalHoldsListHeldRevisionsArg)
    parameters:
    - id: legalHoldsListHeldRevisionsArg
      type: Dropbox.Api.Team.LegalHoldsListHeldRevisionsArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.LegalHoldsListHeldRevisionResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function LegalHoldsListHeldRevisionsAsync(legalHoldsListHeldRevisionsArg As LegalHoldsListHeldRevisionsArg) As Task(Of LegalHoldsListHeldRevisionResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsListHeldRevisionsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisions(Dropbox.Api.Team.LegalHoldsListHeldRevisionsArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisions(Dropbox.Api.Team.LegalHoldsListHeldRevisionsArg,System.AsyncCallback,System.Object)
  id: BeginLegalHoldsListHeldRevisions(Dropbox.Api.Team.LegalHoldsListHeldRevisionsArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLegalHoldsListHeldRevisions(LegalHoldsListHeldRevisionsArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLegalHoldsListHeldRevisions(LegalHoldsListHeldRevisionsArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisions(Dropbox.Api.Team.LegalHoldsListHeldRevisionsArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLegalHoldsListHeldRevisions
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2019
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the legal holds list held revisions\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLegalHoldsListHeldRevisions(LegalHoldsListHeldRevisionsArg legalHoldsListHeldRevisionsArg, AsyncCallback callback, object state = null)
    parameters:
    - id: legalHoldsListHeldRevisionsArg
      type: Dropbox.Api.Team.LegalHoldsListHeldRevisionsArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLegalHoldsListHeldRevisions(legalHoldsListHeldRevisionsArg As LegalHoldsListHeldRevisionsArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisions*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsAsync(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsAsync(System.String)
  id: LegalHoldsListHeldRevisionsAsync(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LegalHoldsListHeldRevisionsAsync(String)
  nameWithType: TeamTeamRoutes.LegalHoldsListHeldRevisionsAsync(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LegalHoldsListHeldRevisionsAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2037
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>List the file metadata that&apos;s under the hold. Note: Legal Holds is a paid\nadd-on. Not all teams have the feature.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<LegalHoldsListHeldRevisionResult> LegalHoldsListHeldRevisionsAsync(string id)
    parameters:
    - id: id
      type: System.String
      description: The legal hold Id.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.LegalHoldsListHeldRevisionResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function LegalHoldsListHeldRevisionsAsync(id As String) As Task(Of LegalHoldsListHeldRevisionResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsListHeldRevisionsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisions(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisions(System.String,System.AsyncCallback,System.Object)
  id: BeginLegalHoldsListHeldRevisions(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLegalHoldsListHeldRevisions(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLegalHoldsListHeldRevisions(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisions(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLegalHoldsListHeldRevisions
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2054
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the legal holds list held revisions\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLegalHoldsListHeldRevisions(string id, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: id
      type: System.String
      description: The legal hold Id.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLegalHoldsListHeldRevisions(id As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisions*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListHeldRevisions(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListHeldRevisions(System.IAsyncResult)
  id: EndLegalHoldsListHeldRevisions(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndLegalHoldsListHeldRevisions(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndLegalHoldsListHeldRevisions(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListHeldRevisions(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndLegalHoldsListHeldRevisions
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2073
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the legal holds list held\nrevisions route to complete</p>\n"
  example: []
  syntax:
    content: public LegalHoldsListHeldRevisionResult EndLegalHoldsListHeldRevisions(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult
      description: The response to the send request
    content.vb: Public Function EndLegalHoldsListHeldRevisions(asyncResult As IAsyncResult) As LegalHoldsListHeldRevisionResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListHeldRevisions*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsListHeldRevisionsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsContinueAsync(Dropbox.Api.Team.LegalHoldsListHeldRevisionsContinueArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsContinueAsync(Dropbox.Api.Team.LegalHoldsListHeldRevisionsContinueArg)
  id: LegalHoldsListHeldRevisionsContinueAsync(Dropbox.Api.Team.LegalHoldsListHeldRevisionsContinueArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LegalHoldsListHeldRevisionsContinueAsync(LegalHoldsListHeldRevisionsContinueArg)
  nameWithType: TeamTeamRoutes.LegalHoldsListHeldRevisionsContinueAsync(LegalHoldsListHeldRevisionsContinueArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsContinueAsync(Dropbox.Api.Team.LegalHoldsListHeldRevisionsContinueArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LegalHoldsListHeldRevisionsContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2095
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Continue listing the file metadata that&apos;s under the hold. Note: Legal Holds\nis a paid add-on. Not all teams have the feature.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<LegalHoldsListHeldRevisionResult> LegalHoldsListHeldRevisionsContinueAsync(LegalHoldsListHeldRevisionsContinueArg legalHoldsListHeldRevisionsContinueArg)
    parameters:
    - id: legalHoldsListHeldRevisionsContinueArg
      type: Dropbox.Api.Team.LegalHoldsListHeldRevisionsContinueArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.LegalHoldsListHeldRevisionResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function LegalHoldsListHeldRevisionsContinueAsync(legalHoldsListHeldRevisionsContinueArg As LegalHoldsListHeldRevisionsContinueArg) As Task(Of LegalHoldsListHeldRevisionResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsListHeldRevisionsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisionsContinue(Dropbox.Api.Team.LegalHoldsListHeldRevisionsContinueArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisionsContinue(Dropbox.Api.Team.LegalHoldsListHeldRevisionsContinueArg,System.AsyncCallback,System.Object)
  id: BeginLegalHoldsListHeldRevisionsContinue(Dropbox.Api.Team.LegalHoldsListHeldRevisionsContinueArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLegalHoldsListHeldRevisionsContinue(LegalHoldsListHeldRevisionsContinueArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLegalHoldsListHeldRevisionsContinue(LegalHoldsListHeldRevisionsContinueArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisionsContinue(Dropbox.Api.Team.LegalHoldsListHeldRevisionsContinueArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLegalHoldsListHeldRevisionsContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2111
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the legal holds list held revisions continue\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLegalHoldsListHeldRevisionsContinue(LegalHoldsListHeldRevisionsContinueArg legalHoldsListHeldRevisionsContinueArg, AsyncCallback callback, object state = null)
    parameters:
    - id: legalHoldsListHeldRevisionsContinueArg
      type: Dropbox.Api.Team.LegalHoldsListHeldRevisionsContinueArg
      description: >-
        The request

        parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLegalHoldsListHeldRevisionsContinue(legalHoldsListHeldRevisionsContinueArg As LegalHoldsListHeldRevisionsContinueArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisionsContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsContinueAsync(System.String,System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsContinueAsync(System.String,System.String)
  id: LegalHoldsListHeldRevisionsContinueAsync(System.String,System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LegalHoldsListHeldRevisionsContinueAsync(String, String)
  nameWithType: TeamTeamRoutes.LegalHoldsListHeldRevisionsContinueAsync(String, String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsContinueAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LegalHoldsListHeldRevisionsContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2132
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Continue listing the file metadata that&apos;s under the hold. Note: Legal Holds\nis a paid add-on. Not all teams have the feature.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<LegalHoldsListHeldRevisionResult> LegalHoldsListHeldRevisionsContinueAsync(string id, string cursor = null)
    parameters:
    - id: id
      type: System.String
      description: The legal hold Id.
    - id: cursor
      type: System.String
      description: >-
        The cursor idicates where to continue reading file metadata

        entries for the next API call. When there are no more entries, the cursor will

        return none.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.LegalHoldsListHeldRevisionResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function LegalHoldsListHeldRevisionsContinueAsync(id As String, cursor As String = Nothing) As Task(Of LegalHoldsListHeldRevisionResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsListHeldRevisionsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisionsContinue(System.String,System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisionsContinue(System.String,System.String,System.AsyncCallback,System.Object)
  id: BeginLegalHoldsListHeldRevisionsContinue(System.String,System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLegalHoldsListHeldRevisionsContinue(String, String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLegalHoldsListHeldRevisionsContinue(String, String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisionsContinue(System.String, System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLegalHoldsListHeldRevisionsContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2154
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the legal holds list held revisions continue\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLegalHoldsListHeldRevisionsContinue(string id, string cursor = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: id
      type: System.String
      description: The legal hold Id.
    - id: cursor
      type: System.String
      description: >-
        The cursor idicates where to continue reading file metadata

        entries for the next API call. When there are no more entries, the cursor will

        return none.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLegalHoldsListHeldRevisionsContinue(id As String, cursor As String = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisionsContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListHeldRevisionsContinue(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListHeldRevisionsContinue(System.IAsyncResult)
  id: EndLegalHoldsListHeldRevisionsContinue(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndLegalHoldsListHeldRevisionsContinue(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndLegalHoldsListHeldRevisionsContinue(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListHeldRevisionsContinue(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndLegalHoldsListHeldRevisionsContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2175
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the legal holds list held\nrevisions continue route to complete</p>\n"
  example: []
  syntax:
    content: public LegalHoldsListHeldRevisionResult EndLegalHoldsListHeldRevisionsContinue(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult
      description: The response to the send request
    content.vb: Public Function EndLegalHoldsListHeldRevisionsContinue(asyncResult As IAsyncResult) As LegalHoldsListHeldRevisionResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListHeldRevisionsContinue*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsListHeldRevisionsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListPoliciesAsync(Dropbox.Api.Team.LegalHoldsListPoliciesArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListPoliciesAsync(Dropbox.Api.Team.LegalHoldsListPoliciesArg)
  id: LegalHoldsListPoliciesAsync(Dropbox.Api.Team.LegalHoldsListPoliciesArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LegalHoldsListPoliciesAsync(LegalHoldsListPoliciesArg)
  nameWithType: TeamTeamRoutes.LegalHoldsListPoliciesAsync(LegalHoldsListPoliciesArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListPoliciesAsync(Dropbox.Api.Team.LegalHoldsListPoliciesArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LegalHoldsListPoliciesAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2197
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Lists legal holds on a team. Note: Legal Holds is a paid add-on. Not all\nteams have the feature.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<LegalHoldsListPoliciesResult> LegalHoldsListPoliciesAsync(LegalHoldsListPoliciesArg legalHoldsListPoliciesArg)
    parameters:
    - id: legalHoldsListPoliciesArg
      type: Dropbox.Api.Team.LegalHoldsListPoliciesArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.LegalHoldsListPoliciesResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function LegalHoldsListPoliciesAsync(legalHoldsListPoliciesArg As LegalHoldsListPoliciesArg) As Task(Of LegalHoldsListPoliciesResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListPoliciesAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsListPoliciesError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListPolicies(Dropbox.Api.Team.LegalHoldsListPoliciesArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListPolicies(Dropbox.Api.Team.LegalHoldsListPoliciesArg,System.AsyncCallback,System.Object)
  id: BeginLegalHoldsListPolicies(Dropbox.Api.Team.LegalHoldsListPoliciesArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLegalHoldsListPolicies(LegalHoldsListPoliciesArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLegalHoldsListPolicies(LegalHoldsListPoliciesArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListPolicies(Dropbox.Api.Team.LegalHoldsListPoliciesArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLegalHoldsListPolicies
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2211
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the legal holds list policies route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLegalHoldsListPolicies(LegalHoldsListPoliciesArg legalHoldsListPoliciesArg, AsyncCallback callback, object state = null)
    parameters:
    - id: legalHoldsListPoliciesArg
      type: Dropbox.Api.Team.LegalHoldsListPoliciesArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLegalHoldsListPolicies(legalHoldsListPoliciesArg As LegalHoldsListPoliciesArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListPolicies*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListPoliciesAsync(System.Boolean)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListPoliciesAsync(System.Boolean)
  id: LegalHoldsListPoliciesAsync(System.Boolean)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LegalHoldsListPoliciesAsync(Boolean)
  nameWithType: TeamTeamRoutes.LegalHoldsListPoliciesAsync(Boolean)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListPoliciesAsync(System.Boolean)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LegalHoldsListPoliciesAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2229
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Lists legal holds on a team. Note: Legal Holds is a paid add-on. Not all\nteams have the feature.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<LegalHoldsListPoliciesResult> LegalHoldsListPoliciesAsync(bool includeReleased = false)
    parameters:
    - id: includeReleased
      type: System.Boolean
      description: Whether to return holds that were released.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.LegalHoldsListPoliciesResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function LegalHoldsListPoliciesAsync(includeReleased As Boolean = False) As Task(Of LegalHoldsListPoliciesResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListPoliciesAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsListPoliciesError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListPolicies(System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListPolicies(System.Boolean,System.AsyncCallback,System.Object)
  id: BeginLegalHoldsListPolicies(System.Boolean,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLegalHoldsListPolicies(Boolean, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLegalHoldsListPolicies(Boolean, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListPolicies(System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLegalHoldsListPolicies
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2245
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the legal holds list policies route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLegalHoldsListPolicies(bool includeReleased = false, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: includeReleased
      type: System.Boolean
      description: Whether to return holds that were released.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLegalHoldsListPolicies(includeReleased As Boolean = False, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListPolicies*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListPolicies(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListPolicies(System.IAsyncResult)
  id: EndLegalHoldsListPolicies(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndLegalHoldsListPolicies(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndLegalHoldsListPolicies(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListPolicies(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndLegalHoldsListPolicies
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2264
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the legal holds list policies\nroute to complete</p>\n"
  example: []
  syntax:
    content: public LegalHoldsListPoliciesResult EndLegalHoldsListPolicies(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.LegalHoldsListPoliciesResult
      description: The response to the send request
    content.vb: Public Function EndLegalHoldsListPolicies(asyncResult As IAsyncResult) As LegalHoldsListPoliciesResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListPolicies*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsListPoliciesError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsReleasePolicyAsync(Dropbox.Api.Team.LegalHoldsPolicyReleaseArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsReleasePolicyAsync(Dropbox.Api.Team.LegalHoldsPolicyReleaseArg)
  id: LegalHoldsReleasePolicyAsync(Dropbox.Api.Team.LegalHoldsPolicyReleaseArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LegalHoldsReleasePolicyAsync(LegalHoldsPolicyReleaseArg)
  nameWithType: TeamTeamRoutes.LegalHoldsReleasePolicyAsync(LegalHoldsPolicyReleaseArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsReleasePolicyAsync(Dropbox.Api.Team.LegalHoldsPolicyReleaseArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LegalHoldsReleasePolicyAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2285
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Releases a legal hold by Id. Note: Legal Holds is a paid add-on. Not all\nteams have the feature.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task LegalHoldsReleasePolicyAsync(LegalHoldsPolicyReleaseArg legalHoldsPolicyReleaseArg)
    parameters:
    - id: legalHoldsPolicyReleaseArg
      type: Dropbox.Api.Team.LegalHoldsPolicyReleaseArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function LegalHoldsReleasePolicyAsync(legalHoldsPolicyReleaseArg As LegalHoldsPolicyReleaseArg) As Task
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsReleasePolicyAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsPolicyReleaseError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsReleasePolicy(Dropbox.Api.Team.LegalHoldsPolicyReleaseArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsReleasePolicy(Dropbox.Api.Team.LegalHoldsPolicyReleaseArg,System.AsyncCallback,System.Object)
  id: BeginLegalHoldsReleasePolicy(Dropbox.Api.Team.LegalHoldsPolicyReleaseArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLegalHoldsReleasePolicy(LegalHoldsPolicyReleaseArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLegalHoldsReleasePolicy(LegalHoldsPolicyReleaseArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsReleasePolicy(Dropbox.Api.Team.LegalHoldsPolicyReleaseArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLegalHoldsReleasePolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2299
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the legal holds release policy route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLegalHoldsReleasePolicy(LegalHoldsPolicyReleaseArg legalHoldsPolicyReleaseArg, AsyncCallback callback, object state = null)
    parameters:
    - id: legalHoldsPolicyReleaseArg
      type: Dropbox.Api.Team.LegalHoldsPolicyReleaseArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLegalHoldsReleasePolicy(legalHoldsPolicyReleaseArg As LegalHoldsPolicyReleaseArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsReleasePolicy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsReleasePolicyAsync(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsReleasePolicyAsync(System.String)
  id: LegalHoldsReleasePolicyAsync(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LegalHoldsReleasePolicyAsync(String)
  nameWithType: TeamTeamRoutes.LegalHoldsReleasePolicyAsync(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsReleasePolicyAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LegalHoldsReleasePolicyAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2316
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Releases a legal hold by Id. Note: Legal Holds is a paid add-on. Not all\nteams have the feature.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task LegalHoldsReleasePolicyAsync(string id)
    parameters:
    - id: id
      type: System.String
      description: The legal hold Id.
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function LegalHoldsReleasePolicyAsync(id As String) As Task
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsReleasePolicyAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsPolicyReleaseError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsReleasePolicy(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsReleasePolicy(System.String,System.AsyncCallback,System.Object)
  id: BeginLegalHoldsReleasePolicy(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLegalHoldsReleasePolicy(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLegalHoldsReleasePolicy(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsReleasePolicy(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLegalHoldsReleasePolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2332
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the legal holds release policy route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLegalHoldsReleasePolicy(string id, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: id
      type: System.String
      description: The legal hold Id.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLegalHoldsReleasePolicy(id As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsReleasePolicy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsReleasePolicy(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsReleasePolicy(System.IAsyncResult)
  id: EndLegalHoldsReleasePolicy(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndLegalHoldsReleasePolicy(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndLegalHoldsReleasePolicy(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsReleasePolicy(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndLegalHoldsReleasePolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2350
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the legal holds release policy\nroute to complete</p>\n"
  example: []
  syntax:
    content: public void EndLegalHoldsReleasePolicy(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    content.vb: Public Sub EndLegalHoldsReleasePolicy(asyncResult As IAsyncResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsReleasePolicy*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsPolicyReleaseError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsUpdatePolicyAsync(Dropbox.Api.Team.LegalHoldsPolicyUpdateArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsUpdatePolicyAsync(Dropbox.Api.Team.LegalHoldsPolicyUpdateArg)
  id: LegalHoldsUpdatePolicyAsync(Dropbox.Api.Team.LegalHoldsPolicyUpdateArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LegalHoldsUpdatePolicyAsync(LegalHoldsPolicyUpdateArg)
  nameWithType: TeamTeamRoutes.LegalHoldsUpdatePolicyAsync(LegalHoldsPolicyUpdateArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsUpdatePolicyAsync(Dropbox.Api.Team.LegalHoldsPolicyUpdateArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LegalHoldsUpdatePolicyAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2370
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Updates a legal hold. Note: Legal Holds is a paid add-on. Not all teams have\nthe feature.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<LegalHoldPolicy> LegalHoldsUpdatePolicyAsync(LegalHoldsPolicyUpdateArg legalHoldsPolicyUpdateArg)
    parameters:
    - id: legalHoldsPolicyUpdateArg
      type: Dropbox.Api.Team.LegalHoldsPolicyUpdateArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.LegalHoldPolicy}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function LegalHoldsUpdatePolicyAsync(legalHoldsPolicyUpdateArg As LegalHoldsPolicyUpdateArg) As Task(Of LegalHoldPolicy)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsUpdatePolicyAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsPolicyUpdateError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsUpdatePolicy(Dropbox.Api.Team.LegalHoldsPolicyUpdateArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsUpdatePolicy(Dropbox.Api.Team.LegalHoldsPolicyUpdateArg,System.AsyncCallback,System.Object)
  id: BeginLegalHoldsUpdatePolicy(Dropbox.Api.Team.LegalHoldsPolicyUpdateArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLegalHoldsUpdatePolicy(LegalHoldsPolicyUpdateArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLegalHoldsUpdatePolicy(LegalHoldsPolicyUpdateArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsUpdatePolicy(Dropbox.Api.Team.LegalHoldsPolicyUpdateArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLegalHoldsUpdatePolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2384
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the legal holds update policy route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLegalHoldsUpdatePolicy(LegalHoldsPolicyUpdateArg legalHoldsPolicyUpdateArg, AsyncCallback callback, object state = null)
    parameters:
    - id: legalHoldsPolicyUpdateArg
      type: Dropbox.Api.Team.LegalHoldsPolicyUpdateArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLegalHoldsUpdatePolicy(legalHoldsPolicyUpdateArg As LegalHoldsPolicyUpdateArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsUpdatePolicy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsUpdatePolicyAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsUpdatePolicyAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})
  id: LegalHoldsUpdatePolicyAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LegalHoldsUpdatePolicyAsync(String, String, String, IEnumerable<String>)
  nameWithType: TeamTeamRoutes.LegalHoldsUpdatePolicyAsync(String, String, String, IEnumerable<String>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsUpdatePolicyAsync(System.String, System.String, System.String, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LegalHoldsUpdatePolicyAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2405
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Updates a legal hold. Note: Legal Holds is a paid add-on. Not all teams have\nthe feature.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<LegalHoldPolicy> LegalHoldsUpdatePolicyAsync(string id, string name = null, string description = null, IEnumerable<string> members = null)
    parameters:
    - id: id
      type: System.String
      description: The legal hold Id.
    - id: name
      type: System.String
      description: Policy new name.
    - id: description
      type: System.String
      description: Policy new description.
    - id: members
      type: System.Collections.Generic.IEnumerable{System.String}
      description: List of team member IDs to apply the policy on.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.LegalHoldPolicy}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function LegalHoldsUpdatePolicyAsync(id As String, name As String = Nothing, description As String = Nothing, members As IEnumerable(Of String) = Nothing) As Task(Of LegalHoldPolicy)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsUpdatePolicyAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsPolicyUpdateError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: TeamTeamRoutes.LegalHoldsUpdatePolicyAsync(String, String, String, IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsUpdatePolicyAsync(System.String, System.String, System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: LegalHoldsUpdatePolicyAsync(String, String, String, IEnumerable(Of String))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsUpdatePolicy(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsUpdatePolicy(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.AsyncCallback,System.Object)
  id: BeginLegalHoldsUpdatePolicy(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLegalHoldsUpdatePolicy(String, String, String, IEnumerable<String>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLegalHoldsUpdatePolicy(String, String, String, IEnumerable<String>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsUpdatePolicy(System.String, System.String, System.String, System.Collections.Generic.IEnumerable<System.String>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLegalHoldsUpdatePolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2430
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the legal holds update policy route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLegalHoldsUpdatePolicy(string id, string name = null, string description = null, IEnumerable<string> members = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: id
      type: System.String
      description: The legal hold Id.
    - id: name
      type: System.String
      description: Policy new name.
    - id: description
      type: System.String
      description: Policy new description.
    - id: members
      type: System.Collections.Generic.IEnumerable{System.String}
      description: List of team member IDs to apply the policy on.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLegalHoldsUpdatePolicy(id As String, name As String = Nothing, description As String = Nothing, members As IEnumerable(Of String) = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsUpdatePolicy*
  nameWithType.vb: TeamTeamRoutes.BeginLegalHoldsUpdatePolicy(String, String, String, IEnumerable(Of String), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsUpdatePolicy(System.String, System.String, System.String, System.Collections.Generic.IEnumerable(Of System.String), System.AsyncCallback, System.Object)
  name.vb: BeginLegalHoldsUpdatePolicy(String, String, String, IEnumerable(Of String), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsUpdatePolicy(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsUpdatePolicy(System.IAsyncResult)
  id: EndLegalHoldsUpdatePolicy(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndLegalHoldsUpdatePolicy(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndLegalHoldsUpdatePolicy(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsUpdatePolicy(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndLegalHoldsUpdatePolicy
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2455
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the legal holds update policy\nroute to complete</p>\n"
  example: []
  syntax:
    content: public LegalHoldPolicy EndLegalHoldsUpdatePolicy(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.LegalHoldPolicy
      description: The response to the send request
    content.vb: Public Function EndLegalHoldsUpdatePolicy(asyncResult As IAsyncResult) As LegalHoldPolicy
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsUpdatePolicy*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.LegalHoldsPolicyUpdateError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMemberLinkedAppsAsync(Dropbox.Api.Team.ListMemberAppsArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMemberLinkedAppsAsync(Dropbox.Api.Team.ListMemberAppsArg)
  id: LinkedAppsListMemberLinkedAppsAsync(Dropbox.Api.Team.ListMemberAppsArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LinkedAppsListMemberLinkedAppsAsync(ListMemberAppsArg)
  nameWithType: TeamTeamRoutes.LinkedAppsListMemberLinkedAppsAsync(ListMemberAppsArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMemberLinkedAppsAsync(Dropbox.Api.Team.ListMemberAppsArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LinkedAppsListMemberLinkedAppsAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2476
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>List all linked applications of the team member.</p>\n<p>Note, this endpoint does not list any team-linked applications.</p>\n"
  example: []
  syntax:
    content: public Task<ListMemberAppsResult> LinkedAppsListMemberLinkedAppsAsync(ListMemberAppsArg listMemberAppsArg)
    parameters:
    - id: listMemberAppsArg
      type: Dropbox.Api.Team.ListMemberAppsArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ListMemberAppsResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function LinkedAppsListMemberLinkedAppsAsync(listMemberAppsArg As ListMemberAppsArg) As Task(Of ListMemberAppsResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMemberLinkedAppsAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ListMemberAppsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMemberLinkedApps(Dropbox.Api.Team.ListMemberAppsArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMemberLinkedApps(Dropbox.Api.Team.ListMemberAppsArg,System.AsyncCallback,System.Object)
  id: BeginLinkedAppsListMemberLinkedApps(Dropbox.Api.Team.ListMemberAppsArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLinkedAppsListMemberLinkedApps(ListMemberAppsArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLinkedAppsListMemberLinkedApps(ListMemberAppsArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMemberLinkedApps(Dropbox.Api.Team.ListMemberAppsArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLinkedAppsListMemberLinkedApps
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2491
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the linked apps list member linked apps\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLinkedAppsListMemberLinkedApps(ListMemberAppsArg listMemberAppsArg, AsyncCallback callback, object state = null)
    parameters:
    - id: listMemberAppsArg
      type: Dropbox.Api.Team.ListMemberAppsArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLinkedAppsListMemberLinkedApps(listMemberAppsArg As ListMemberAppsArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMemberLinkedApps*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMemberLinkedAppsAsync(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMemberLinkedAppsAsync(System.String)
  id: LinkedAppsListMemberLinkedAppsAsync(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LinkedAppsListMemberLinkedAppsAsync(String)
  nameWithType: TeamTeamRoutes.LinkedAppsListMemberLinkedAppsAsync(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMemberLinkedAppsAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LinkedAppsListMemberLinkedAppsAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2508
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>List all linked applications of the team member.</p>\n<p>Note, this endpoint does not list any team-linked applications.</p>\n"
  example: []
  syntax:
    content: public Task<ListMemberAppsResult> LinkedAppsListMemberLinkedAppsAsync(string teamMemberId)
    parameters:
    - id: teamMemberId
      type: System.String
      description: The team member id.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ListMemberAppsResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function LinkedAppsListMemberLinkedAppsAsync(teamMemberId As String) As Task(Of ListMemberAppsResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMemberLinkedAppsAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ListMemberAppsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMemberLinkedApps(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMemberLinkedApps(System.String,System.AsyncCallback,System.Object)
  id: BeginLinkedAppsListMemberLinkedApps(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLinkedAppsListMemberLinkedApps(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLinkedAppsListMemberLinkedApps(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMemberLinkedApps(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLinkedAppsListMemberLinkedApps
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2525
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the linked apps list member linked apps\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLinkedAppsListMemberLinkedApps(string teamMemberId, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: teamMemberId
      type: System.String
      description: The team member id.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLinkedAppsListMemberLinkedApps(teamMemberId As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMemberLinkedApps*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListMemberLinkedApps(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListMemberLinkedApps(System.IAsyncResult)
  id: EndLinkedAppsListMemberLinkedApps(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndLinkedAppsListMemberLinkedApps(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndLinkedAppsListMemberLinkedApps(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListMemberLinkedApps(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndLinkedAppsListMemberLinkedApps
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2544
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the linked apps list member linked\napps route to complete</p>\n"
  example: []
  syntax:
    content: public ListMemberAppsResult EndLinkedAppsListMemberLinkedApps(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.ListMemberAppsResult
      description: The response to the send request
    content.vb: Public Function EndLinkedAppsListMemberLinkedApps(asyncResult As IAsyncResult) As ListMemberAppsResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListMemberLinkedApps*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ListMemberAppsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMembersLinkedAppsAsync(Dropbox.Api.Team.ListMembersAppsArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMembersLinkedAppsAsync(Dropbox.Api.Team.ListMembersAppsArg)
  id: LinkedAppsListMembersLinkedAppsAsync(Dropbox.Api.Team.ListMembersAppsArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LinkedAppsListMembersLinkedAppsAsync(ListMembersAppsArg)
  nameWithType: TeamTeamRoutes.LinkedAppsListMembersLinkedAppsAsync(ListMembersAppsArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMembersLinkedAppsAsync(Dropbox.Api.Team.ListMembersAppsArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LinkedAppsListMembersLinkedAppsAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2565
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>List all applications linked to the team members&apos; accounts.</p>\n<p>Note, this endpoint does not list any team-linked applications.</p>\n"
  example: []
  syntax:
    content: public Task<ListMembersAppsResult> LinkedAppsListMembersLinkedAppsAsync(ListMembersAppsArg listMembersAppsArg)
    parameters:
    - id: listMembersAppsArg
      type: Dropbox.Api.Team.ListMembersAppsArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ListMembersAppsResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function LinkedAppsListMembersLinkedAppsAsync(listMembersAppsArg As ListMembersAppsArg) As Task(Of ListMembersAppsResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMembersLinkedAppsAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ListMembersAppsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMembersLinkedApps(Dropbox.Api.Team.ListMembersAppsArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMembersLinkedApps(Dropbox.Api.Team.ListMembersAppsArg,System.AsyncCallback,System.Object)
  id: BeginLinkedAppsListMembersLinkedApps(Dropbox.Api.Team.ListMembersAppsArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLinkedAppsListMembersLinkedApps(ListMembersAppsArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLinkedAppsListMembersLinkedApps(ListMembersAppsArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMembersLinkedApps(Dropbox.Api.Team.ListMembersAppsArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLinkedAppsListMembersLinkedApps
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2580
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the linked apps list members linked apps\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLinkedAppsListMembersLinkedApps(ListMembersAppsArg listMembersAppsArg, AsyncCallback callback, object state = null)
    parameters:
    - id: listMembersAppsArg
      type: Dropbox.Api.Team.ListMembersAppsArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLinkedAppsListMembersLinkedApps(listMembersAppsArg As ListMembersAppsArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMembersLinkedApps*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMembersLinkedAppsAsync(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMembersLinkedAppsAsync(System.String)
  id: LinkedAppsListMembersLinkedAppsAsync(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LinkedAppsListMembersLinkedAppsAsync(String)
  nameWithType: TeamTeamRoutes.LinkedAppsListMembersLinkedAppsAsync(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMembersLinkedAppsAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LinkedAppsListMembersLinkedAppsAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2601
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>List all applications linked to the team members&apos; accounts.</p>\n<p>Note, this endpoint does not list any team-linked applications.</p>\n"
  example: []
  syntax:
    content: public Task<ListMembersAppsResult> LinkedAppsListMembersLinkedAppsAsync(string cursor = null)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        At the first call to the <xref href="Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMembersLinkedAppsAsync(Dropbox.Api.Team.ListMembersAppsArg)" data-throw-if-not-resolved="false"></xref> the cursor shouldn&apos;t be passed. Then, if the result of the call includes a

        cursor, the following requests should include the received cursors in order to

        receive the next sub list of the team applications.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ListMembersAppsResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function LinkedAppsListMembersLinkedAppsAsync(cursor As String = Nothing) As Task(Of ListMembersAppsResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMembersLinkedAppsAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ListMembersAppsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMembersLinkedApps(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMembersLinkedApps(System.String,System.AsyncCallback,System.Object)
  id: BeginLinkedAppsListMembersLinkedApps(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLinkedAppsListMembersLinkedApps(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLinkedAppsListMembersLinkedApps(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMembersLinkedApps(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLinkedAppsListMembersLinkedApps
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2622
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the linked apps list members linked apps\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLinkedAppsListMembersLinkedApps(string cursor = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        At the first call to the <xref href="Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMembersLinkedAppsAsync(Dropbox.Api.Team.ListMembersAppsArg)" data-throw-if-not-resolved="false"></xref> the cursor shouldn&apos;t be passed. Then, if the result of the call includes a

        cursor, the following requests should include the received cursors in order to

        receive the next sub list of the team applications.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLinkedAppsListMembersLinkedApps(cursor As String = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMembersLinkedApps*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListMembersLinkedApps(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListMembersLinkedApps(System.IAsyncResult)
  id: EndLinkedAppsListMembersLinkedApps(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndLinkedAppsListMembersLinkedApps(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndLinkedAppsListMembersLinkedApps(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListMembersLinkedApps(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndLinkedAppsListMembersLinkedApps
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2641
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the linked apps list members\nlinked apps route to complete</p>\n"
  example: []
  syntax:
    content: public ListMembersAppsResult EndLinkedAppsListMembersLinkedApps(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.ListMembersAppsResult
      description: The response to the send request
    content.vb: Public Function EndLinkedAppsListMembersLinkedApps(asyncResult As IAsyncResult) As ListMembersAppsResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListMembersLinkedApps*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ListMembersAppsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListTeamLinkedAppsAsync(Dropbox.Api.Team.ListTeamAppsArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListTeamLinkedAppsAsync(Dropbox.Api.Team.ListTeamAppsArg)
  id: LinkedAppsListTeamLinkedAppsAsync(Dropbox.Api.Team.ListTeamAppsArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LinkedAppsListTeamLinkedAppsAsync(ListTeamAppsArg)
  nameWithType: TeamTeamRoutes.LinkedAppsListTeamLinkedAppsAsync(ListTeamAppsArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListTeamLinkedAppsAsync(Dropbox.Api.Team.ListTeamAppsArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LinkedAppsListTeamLinkedAppsAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2662
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>List all applications linked to the team members&apos; accounts.</p>\n<p>Note, this endpoint doesn&apos;t list any team-linked applications.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use LinkedAppsListMembersLinkedAppsAsync instead.")]

      public Task<ListTeamAppsResult> LinkedAppsListTeamLinkedAppsAsync(ListTeamAppsArg listTeamAppsArg)
    parameters:
    - id: listTeamAppsArg
      type: Dropbox.Api.Team.ListTeamAppsArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ListTeamAppsResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated, please use LinkedAppsListMembersLinkedAppsAsync instead.")>

      Public Function LinkedAppsListTeamLinkedAppsAsync(listTeamAppsArg As ListTeamAppsArg) As Task(Of ListTeamAppsResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListTeamLinkedAppsAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ListTeamAppsError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use LinkedAppsListMembersLinkedAppsAsync instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListTeamLinkedApps(Dropbox.Api.Team.ListTeamAppsArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListTeamLinkedApps(Dropbox.Api.Team.ListTeamAppsArg,System.AsyncCallback,System.Object)
  id: BeginLinkedAppsListTeamLinkedApps(Dropbox.Api.Team.ListTeamAppsArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLinkedAppsListTeamLinkedApps(ListTeamAppsArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLinkedAppsListTeamLinkedApps(ListTeamAppsArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListTeamLinkedApps(Dropbox.Api.Team.ListTeamAppsArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLinkedAppsListTeamLinkedApps
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2678
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the linked apps list team linked apps\nroute.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use BeginLinkedAppsListMembersLinkedApps instead.")]

      public IAsyncResult BeginLinkedAppsListTeamLinkedApps(ListTeamAppsArg listTeamAppsArg, AsyncCallback callback, object state = null)
    parameters:
    - id: listTeamAppsArg
      type: Dropbox.Api.Team.ListTeamAppsArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated, please use BeginLinkedAppsListMembersLinkedApps instead.")>

      Public Function BeginLinkedAppsListTeamLinkedApps(listTeamAppsArg As ListTeamAppsArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListTeamLinkedApps*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use BeginLinkedAppsListMembersLinkedApps instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListTeamLinkedAppsAsync(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListTeamLinkedAppsAsync(System.String)
  id: LinkedAppsListTeamLinkedAppsAsync(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LinkedAppsListTeamLinkedAppsAsync(String)
  nameWithType: TeamTeamRoutes.LinkedAppsListTeamLinkedAppsAsync(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListTeamLinkedAppsAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LinkedAppsListTeamLinkedAppsAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2700
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>List all applications linked to the team members&apos; accounts.</p>\n<p>Note, this endpoint doesn&apos;t list any team-linked applications.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use LinkedAppsListMembersLinkedAppsAsync instead.")]

      public Task<ListTeamAppsResult> LinkedAppsListTeamLinkedAppsAsync(string cursor = null)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        At the first call to the <xref href="Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListTeamLinkedAppsAsync(Dropbox.Api.Team.ListTeamAppsArg)" data-throw-if-not-resolved="false"></xref>

        the cursor shouldn&apos;t be passed. Then, if the result of the call includes a cursor,

        the following requests should include the received cursors in order to receive the

        next sub list of the team applications.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ListTeamAppsResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated, please use LinkedAppsListMembersLinkedAppsAsync instead.")>

      Public Function LinkedAppsListTeamLinkedAppsAsync(cursor As String = Nothing) As Task(Of ListTeamAppsResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListTeamLinkedAppsAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ListTeamAppsError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use LinkedAppsListMembersLinkedAppsAsync instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListTeamLinkedApps(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListTeamLinkedApps(System.String,System.AsyncCallback,System.Object)
  id: BeginLinkedAppsListTeamLinkedApps(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLinkedAppsListTeamLinkedApps(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLinkedAppsListTeamLinkedApps(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListTeamLinkedApps(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLinkedAppsListTeamLinkedApps
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2722
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the linked apps list team linked apps\nroute.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use BeginLinkedAppsListMembersLinkedApps instead.")]

      public IAsyncResult BeginLinkedAppsListTeamLinkedApps(string cursor = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        At the first call to the <xref href="Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListTeamLinkedAppsAsync(Dropbox.Api.Team.ListTeamAppsArg)" data-throw-if-not-resolved="false"></xref>

        the cursor shouldn&apos;t be passed. Then, if the result of the call includes a cursor,

        the following requests should include the received cursors in order to receive the

        next sub list of the team applications.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated, please use BeginLinkedAppsListMembersLinkedApps instead.")>

      Public Function BeginLinkedAppsListTeamLinkedApps(cursor As String = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListTeamLinkedApps*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use BeginLinkedAppsListMembersLinkedApps instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListTeamLinkedApps(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListTeamLinkedApps(System.IAsyncResult)
  id: EndLinkedAppsListTeamLinkedApps(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndLinkedAppsListTeamLinkedApps(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndLinkedAppsListTeamLinkedApps(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListTeamLinkedApps(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndLinkedAppsListTeamLinkedApps
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2742
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the linked apps list team linked\napps route to complete</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated, please use EndLinkedAppsListMembersLinkedApps instead.")]

      public ListTeamAppsResult EndLinkedAppsListTeamLinkedApps(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.ListTeamAppsResult
      description: The response to the send request
    content.vb: >-
      <Obsolete("This function is deprecated, please use EndLinkedAppsListMembersLinkedApps instead.")>

      Public Function EndLinkedAppsListTeamLinkedApps(asyncResult As IAsyncResult) As ListTeamAppsResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListTeamLinkedApps*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ListTeamAppsError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated, please use EndLinkedAppsListMembersLinkedApps instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppAsync(Dropbox.Api.Team.RevokeLinkedApiAppArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppAsync(Dropbox.Api.Team.RevokeLinkedApiAppArg)
  id: LinkedAppsRevokeLinkedAppAsync(Dropbox.Api.Team.RevokeLinkedApiAppArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LinkedAppsRevokeLinkedAppAsync(RevokeLinkedApiAppArg)
  nameWithType: TeamTeamRoutes.LinkedAppsRevokeLinkedAppAsync(RevokeLinkedApiAppArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppAsync(Dropbox.Api.Team.RevokeLinkedApiAppArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LinkedAppsRevokeLinkedAppAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2762
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Revoke a linked application of the team member.</p>\n"
  example: []
  syntax:
    content: public Task LinkedAppsRevokeLinkedAppAsync(RevokeLinkedApiAppArg revokeLinkedApiAppArg)
    parameters:
    - id: revokeLinkedApiAppArg
      type: Dropbox.Api.Team.RevokeLinkedApiAppArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function LinkedAppsRevokeLinkedAppAsync(revokeLinkedApiAppArg As RevokeLinkedApiAppArg) As Task
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.RevokeLinkedAppError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedApp(Dropbox.Api.Team.RevokeLinkedApiAppArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedApp(Dropbox.Api.Team.RevokeLinkedApiAppArg,System.AsyncCallback,System.Object)
  id: BeginLinkedAppsRevokeLinkedApp(Dropbox.Api.Team.RevokeLinkedApiAppArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLinkedAppsRevokeLinkedApp(RevokeLinkedApiAppArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLinkedAppsRevokeLinkedApp(RevokeLinkedApiAppArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedApp(Dropbox.Api.Team.RevokeLinkedApiAppArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLinkedAppsRevokeLinkedApp
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2777
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the linked apps revoke linked app\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLinkedAppsRevokeLinkedApp(RevokeLinkedApiAppArg revokeLinkedApiAppArg, AsyncCallback callback, object state = null)
    parameters:
    - id: revokeLinkedApiAppArg
      type: Dropbox.Api.Team.RevokeLinkedApiAppArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLinkedAppsRevokeLinkedApp(revokeLinkedApiAppArg As RevokeLinkedApiAppArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedApp*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppAsync(System.String,System.String,System.Boolean)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppAsync(System.String,System.String,System.Boolean)
  id: LinkedAppsRevokeLinkedAppAsync(System.String,System.String,System.Boolean)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LinkedAppsRevokeLinkedAppAsync(String, String, Boolean)
  nameWithType: TeamTeamRoutes.LinkedAppsRevokeLinkedAppAsync(String, String, Boolean)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppAsync(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LinkedAppsRevokeLinkedAppAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2795
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Revoke a linked application of the team member.</p>\n"
  example: []
  syntax:
    content: public Task LinkedAppsRevokeLinkedAppAsync(string appId, string teamMemberId, bool keepAppFolder = true)
    parameters:
    - id: appId
      type: System.String
      description: The application&apos;s unique id.
    - id: teamMemberId
      type: System.String
      description: The unique id of the member owning the device.
    - id: keepAppFolder
      type: System.Boolean
      description: >-
        This flag is not longer supported, the application

        dedicated folder (in case the application uses  one) will be kept.
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function LinkedAppsRevokeLinkedAppAsync(appId As String, teamMemberId As String, keepAppFolder As Boolean = True) As Task
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.RevokeLinkedAppError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedApp(System.String,System.String,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedApp(System.String,System.String,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginLinkedAppsRevokeLinkedApp(System.String,System.String,System.Boolean,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLinkedAppsRevokeLinkedApp(String, String, Boolean, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLinkedAppsRevokeLinkedApp(String, String, Boolean, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedApp(System.String, System.String, System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLinkedAppsRevokeLinkedApp
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2819
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the linked apps revoke linked app\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLinkedAppsRevokeLinkedApp(string appId, string teamMemberId, bool keepAppFolder = true, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: appId
      type: System.String
      description: The application&apos;s unique id.
    - id: teamMemberId
      type: System.String
      description: The unique id of the member owning the device.
    - id: keepAppFolder
      type: System.Boolean
      description: >-
        This flag is not longer supported, the application

        dedicated folder (in case the application uses  one) will be kept.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLinkedAppsRevokeLinkedApp(appId As String, teamMemberId As String, keepAppFolder As Boolean = True, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedApp*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsRevokeLinkedApp(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsRevokeLinkedApp(System.IAsyncResult)
  id: EndLinkedAppsRevokeLinkedApp(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndLinkedAppsRevokeLinkedApp(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndLinkedAppsRevokeLinkedApp(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsRevokeLinkedApp(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndLinkedAppsRevokeLinkedApp
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2841
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the linked apps revoke linked app\nroute to complete</p>\n"
  example: []
  syntax:
    content: public void EndLinkedAppsRevokeLinkedApp(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    content.vb: Public Sub EndLinkedAppsRevokeLinkedApp(asyncResult As IAsyncResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsRevokeLinkedApp*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.RevokeLinkedAppError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppBatchAsync(Dropbox.Api.Team.RevokeLinkedApiAppBatchArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppBatchAsync(Dropbox.Api.Team.RevokeLinkedApiAppBatchArg)
  id: LinkedAppsRevokeLinkedAppBatchAsync(Dropbox.Api.Team.RevokeLinkedApiAppBatchArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LinkedAppsRevokeLinkedAppBatchAsync(RevokeLinkedApiAppBatchArg)
  nameWithType: TeamTeamRoutes.LinkedAppsRevokeLinkedAppBatchAsync(RevokeLinkedApiAppBatchArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppBatchAsync(Dropbox.Api.Team.RevokeLinkedApiAppBatchArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LinkedAppsRevokeLinkedAppBatchAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2859
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Revoke a list of linked applications of the team members.</p>\n"
  example: []
  syntax:
    content: public Task<RevokeLinkedAppBatchResult> LinkedAppsRevokeLinkedAppBatchAsync(RevokeLinkedApiAppBatchArg revokeLinkedApiAppBatchArg)
    parameters:
    - id: revokeLinkedApiAppBatchArg
      type: Dropbox.Api.Team.RevokeLinkedApiAppBatchArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.RevokeLinkedAppBatchResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function LinkedAppsRevokeLinkedAppBatchAsync(revokeLinkedApiAppBatchArg As RevokeLinkedApiAppBatchArg) As Task(Of RevokeLinkedAppBatchResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppBatchAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.RevokeLinkedAppBatchError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedAppBatch(Dropbox.Api.Team.RevokeLinkedApiAppBatchArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedAppBatch(Dropbox.Api.Team.RevokeLinkedApiAppBatchArg,System.AsyncCallback,System.Object)
  id: BeginLinkedAppsRevokeLinkedAppBatch(Dropbox.Api.Team.RevokeLinkedApiAppBatchArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLinkedAppsRevokeLinkedAppBatch(RevokeLinkedApiAppBatchArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLinkedAppsRevokeLinkedAppBatch(RevokeLinkedApiAppBatchArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedAppBatch(Dropbox.Api.Team.RevokeLinkedApiAppBatchArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLinkedAppsRevokeLinkedAppBatch
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2874
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the linked apps revoke linked app batch\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLinkedAppsRevokeLinkedAppBatch(RevokeLinkedApiAppBatchArg revokeLinkedApiAppBatchArg, AsyncCallback callback, object state = null)
    parameters:
    - id: revokeLinkedApiAppBatchArg
      type: Dropbox.Api.Team.RevokeLinkedApiAppBatchArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLinkedAppsRevokeLinkedAppBatch(revokeLinkedApiAppBatchArg As RevokeLinkedApiAppBatchArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedAppBatch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppBatchAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeLinkedApiAppArg})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppBatchAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeLinkedApiAppArg})
  id: LinkedAppsRevokeLinkedAppBatchAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeLinkedApiAppArg})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: LinkedAppsRevokeLinkedAppBatchAsync(IEnumerable<RevokeLinkedApiAppArg>)
  nameWithType: TeamTeamRoutes.LinkedAppsRevokeLinkedAppBatchAsync(IEnumerable<RevokeLinkedApiAppArg>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppBatchAsync(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.RevokeLinkedApiAppArg>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LinkedAppsRevokeLinkedAppBatchAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2890
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Revoke a list of linked applications of the team members.</p>\n"
  example: []
  syntax:
    content: public Task<RevokeLinkedAppBatchResult> LinkedAppsRevokeLinkedAppBatchAsync(IEnumerable<RevokeLinkedApiAppArg> revokeLinkedApp)
    parameters:
    - id: revokeLinkedApp
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeLinkedApiAppArg}
      description: The revoke linked app
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.RevokeLinkedAppBatchResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function LinkedAppsRevokeLinkedAppBatchAsync(revokeLinkedApp As IEnumerable(Of RevokeLinkedApiAppArg)) As Task(Of RevokeLinkedAppBatchResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppBatchAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.RevokeLinkedAppBatchError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: TeamTeamRoutes.LinkedAppsRevokeLinkedAppBatchAsync(IEnumerable(Of RevokeLinkedApiAppArg))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppBatchAsync(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.RevokeLinkedApiAppArg))
  name.vb: LinkedAppsRevokeLinkedAppBatchAsync(IEnumerable(Of RevokeLinkedApiAppArg))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedAppBatch(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeLinkedApiAppArg},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedAppBatch(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeLinkedApiAppArg},System.AsyncCallback,System.Object)
  id: BeginLinkedAppsRevokeLinkedAppBatch(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeLinkedApiAppArg},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginLinkedAppsRevokeLinkedAppBatch(IEnumerable<RevokeLinkedApiAppArg>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginLinkedAppsRevokeLinkedAppBatch(IEnumerable<RevokeLinkedApiAppArg>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedAppBatch(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.RevokeLinkedApiAppArg>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginLinkedAppsRevokeLinkedAppBatch
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2907
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the linked apps revoke linked app batch\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginLinkedAppsRevokeLinkedAppBatch(IEnumerable<RevokeLinkedApiAppArg> revokeLinkedApp, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: revokeLinkedApp
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeLinkedApiAppArg}
      description: The revoke linked app
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginLinkedAppsRevokeLinkedAppBatch(revokeLinkedApp As IEnumerable(Of RevokeLinkedApiAppArg), callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedAppBatch*
  nameWithType.vb: TeamTeamRoutes.BeginLinkedAppsRevokeLinkedAppBatch(IEnumerable(Of RevokeLinkedApiAppArg), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedAppBatch(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.RevokeLinkedApiAppArg), System.AsyncCallback, System.Object)
  name.vb: BeginLinkedAppsRevokeLinkedAppBatch(IEnumerable(Of RevokeLinkedApiAppArg), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsRevokeLinkedAppBatch(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsRevokeLinkedAppBatch(System.IAsyncResult)
  id: EndLinkedAppsRevokeLinkedAppBatch(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndLinkedAppsRevokeLinkedAppBatch(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndLinkedAppsRevokeLinkedAppBatch(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsRevokeLinkedAppBatch(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndLinkedAppsRevokeLinkedAppBatch
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2926
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the linked apps revoke linked app\nbatch route to complete</p>\n"
  example: []
  syntax:
    content: public RevokeLinkedAppBatchResult EndLinkedAppsRevokeLinkedAppBatch(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.RevokeLinkedAppBatchResult
      description: The response to the send request
    content.vb: Public Function EndLinkedAppsRevokeLinkedAppBatch(asyncResult As IAsyncResult) As RevokeLinkedAppBatchResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsRevokeLinkedAppBatch*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.RevokeLinkedAppBatchError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersAddAsync(Dropbox.Api.Team.ExcludedUsersUpdateArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersAddAsync(Dropbox.Api.Team.ExcludedUsersUpdateArg)
  id: MemberSpaceLimitsExcludedUsersAddAsync(Dropbox.Api.Team.ExcludedUsersUpdateArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MemberSpaceLimitsExcludedUsersAddAsync(ExcludedUsersUpdateArg)
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsExcludedUsersAddAsync(ExcludedUsersUpdateArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersAddAsync(Dropbox.Api.Team.ExcludedUsersUpdateArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MemberSpaceLimitsExcludedUsersAddAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2946
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Add users to member space limits excluded users list.</p>\n"
  example: []
  syntax:
    content: public Task<ExcludedUsersUpdateResult> MemberSpaceLimitsExcludedUsersAddAsync(ExcludedUsersUpdateArg excludedUsersUpdateArg)
    parameters:
    - id: excludedUsersUpdateArg
      type: Dropbox.Api.Team.ExcludedUsersUpdateArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ExcludedUsersUpdateResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MemberSpaceLimitsExcludedUsersAddAsync(excludedUsersUpdateArg As ExcludedUsersUpdateArg) As Task(Of ExcludedUsersUpdateResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersAddAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ExcludedUsersUpdateError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersAdd(Dropbox.Api.Team.ExcludedUsersUpdateArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersAdd(Dropbox.Api.Team.ExcludedUsersUpdateArg,System.AsyncCallback,System.Object)
  id: BeginMemberSpaceLimitsExcludedUsersAdd(Dropbox.Api.Team.ExcludedUsersUpdateArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMemberSpaceLimitsExcludedUsersAdd(ExcludedUsersUpdateArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersAdd(ExcludedUsersUpdateArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersAdd(Dropbox.Api.Team.ExcludedUsersUpdateArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMemberSpaceLimitsExcludedUsersAdd
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2961
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the member space limits excluded users add\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMemberSpaceLimitsExcludedUsersAdd(ExcludedUsersUpdateArg excludedUsersUpdateArg, AsyncCallback callback, object state = null)
    parameters:
    - id: excludedUsersUpdateArg
      type: Dropbox.Api.Team.ExcludedUsersUpdateArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMemberSpaceLimitsExcludedUsersAdd(excludedUsersUpdateArg As ExcludedUsersUpdateArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersAdd*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersAddAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersAddAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  id: MemberSpaceLimitsExcludedUsersAddAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MemberSpaceLimitsExcludedUsersAddAsync(IEnumerable<UserSelectorArg>)
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsExcludedUsersAddAsync(IEnumerable<UserSelectorArg>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersAddAsync(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSelectorArg>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MemberSpaceLimitsExcludedUsersAddAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2977
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Add users to member space limits excluded users list.</p>\n"
  example: []
  syntax:
    content: public Task<ExcludedUsersUpdateResult> MemberSpaceLimitsExcludedUsersAddAsync(IEnumerable<UserSelectorArg> users = null)
    parameters:
    - id: users
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg}
      description: List of users to be added/removed.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ExcludedUsersUpdateResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MemberSpaceLimitsExcludedUsersAddAsync(users As IEnumerable(Of UserSelectorArg) = Nothing) As Task(Of ExcludedUsersUpdateResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersAddAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ExcludedUsersUpdateError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: TeamTeamRoutes.MemberSpaceLimitsExcludedUsersAddAsync(IEnumerable(Of UserSelectorArg))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersAddAsync(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSelectorArg))
  name.vb: MemberSpaceLimitsExcludedUsersAddAsync(IEnumerable(Of UserSelectorArg))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersAdd(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersAdd(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  id: BeginMemberSpaceLimitsExcludedUsersAdd(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMemberSpaceLimitsExcludedUsersAdd(IEnumerable<UserSelectorArg>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersAdd(IEnumerable<UserSelectorArg>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersAdd(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSelectorArg>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMemberSpaceLimitsExcludedUsersAdd
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 2994
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the member space limits excluded users add\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMemberSpaceLimitsExcludedUsersAdd(IEnumerable<UserSelectorArg> users = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: users
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg}
      description: List of users to be added/removed.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMemberSpaceLimitsExcludedUsersAdd(users As IEnumerable(Of UserSelectorArg) = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersAdd*
  nameWithType.vb: TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersAdd(IEnumerable(Of UserSelectorArg), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersAdd(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSelectorArg), System.AsyncCallback, System.Object)
  name.vb: BeginMemberSpaceLimitsExcludedUsersAdd(IEnumerable(Of UserSelectorArg), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersAdd(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersAdd(System.IAsyncResult)
  id: EndMemberSpaceLimitsExcludedUsersAdd(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMemberSpaceLimitsExcludedUsersAdd(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersAdd(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersAdd(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMemberSpaceLimitsExcludedUsersAdd
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3013
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the member space limits excluded\nusers add route to complete</p>\n"
  example: []
  syntax:
    content: public ExcludedUsersUpdateResult EndMemberSpaceLimitsExcludedUsersAdd(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.ExcludedUsersUpdateResult
      description: The response to the send request
    content.vb: Public Function EndMemberSpaceLimitsExcludedUsersAdd(asyncResult As IAsyncResult) As ExcludedUsersUpdateResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersAdd*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ExcludedUsersUpdateError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListAsync(Dropbox.Api.Team.ExcludedUsersListArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListAsync(Dropbox.Api.Team.ExcludedUsersListArg)
  id: MemberSpaceLimitsExcludedUsersListAsync(Dropbox.Api.Team.ExcludedUsersListArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MemberSpaceLimitsExcludedUsersListAsync(ExcludedUsersListArg)
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListAsync(ExcludedUsersListArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListAsync(Dropbox.Api.Team.ExcludedUsersListArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MemberSpaceLimitsExcludedUsersListAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3033
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>List member space limits excluded users.</p>\n"
  example: []
  syntax:
    content: public Task<ExcludedUsersListResult> MemberSpaceLimitsExcludedUsersListAsync(ExcludedUsersListArg excludedUsersListArg)
    parameters:
    - id: excludedUsersListArg
      type: Dropbox.Api.Team.ExcludedUsersListArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ExcludedUsersListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MemberSpaceLimitsExcludedUsersListAsync(excludedUsersListArg As ExcludedUsersListArg) As Task(Of ExcludedUsersListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ExcludedUsersListError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersList(Dropbox.Api.Team.ExcludedUsersListArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersList(Dropbox.Api.Team.ExcludedUsersListArg,System.AsyncCallback,System.Object)
  id: BeginMemberSpaceLimitsExcludedUsersList(Dropbox.Api.Team.ExcludedUsersListArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMemberSpaceLimitsExcludedUsersList(ExcludedUsersListArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersList(ExcludedUsersListArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersList(Dropbox.Api.Team.ExcludedUsersListArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMemberSpaceLimitsExcludedUsersList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3048
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the member space limits excluded users list\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMemberSpaceLimitsExcludedUsersList(ExcludedUsersListArg excludedUsersListArg, AsyncCallback callback, object state = null)
    parameters:
    - id: excludedUsersListArg
      type: Dropbox.Api.Team.ExcludedUsersListArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMemberSpaceLimitsExcludedUsersList(excludedUsersListArg As ExcludedUsersListArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListAsync(System.UInt32)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListAsync(System.UInt32)
  id: MemberSpaceLimitsExcludedUsersListAsync(System.UInt32)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MemberSpaceLimitsExcludedUsersListAsync(UInt32)
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListAsync(UInt32)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListAsync(System.UInt32)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MemberSpaceLimitsExcludedUsersListAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3064
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>List member space limits excluded users.</p>\n"
  example: []
  syntax:
    content: public Task<ExcludedUsersListResult> MemberSpaceLimitsExcludedUsersListAsync(uint limit = 1000U)
    parameters:
    - id: limit
      type: System.UInt32
      description: Number of results to return per call.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ExcludedUsersListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MemberSpaceLimitsExcludedUsersListAsync(limit As UInteger = 1000UI) As Task(Of ExcludedUsersListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ExcludedUsersListError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersList(System.UInt32,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersList(System.UInt32,System.AsyncCallback,System.Object)
  id: BeginMemberSpaceLimitsExcludedUsersList(System.UInt32,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMemberSpaceLimitsExcludedUsersList(UInt32, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersList(UInt32, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersList(System.UInt32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMemberSpaceLimitsExcludedUsersList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3081
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the member space limits excluded users list\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMemberSpaceLimitsExcludedUsersList(uint limit = 1000U, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: limit
      type: System.UInt32
      description: Number of results to return per call.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMemberSpaceLimitsExcludedUsersList(limit As UInteger = 1000UI, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersList(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersList(System.IAsyncResult)
  id: EndMemberSpaceLimitsExcludedUsersList(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMemberSpaceLimitsExcludedUsersList(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersList(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersList(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMemberSpaceLimitsExcludedUsersList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3100
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the member space limits excluded\nusers list route to complete</p>\n"
  example: []
  syntax:
    content: public ExcludedUsersListResult EndMemberSpaceLimitsExcludedUsersList(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.ExcludedUsersListResult
      description: The response to the send request
    content.vb: Public Function EndMemberSpaceLimitsExcludedUsersList(asyncResult As IAsyncResult) As ExcludedUsersListResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersList*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ExcludedUsersListError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListContinueAsync(Dropbox.Api.Team.ExcludedUsersListContinueArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListContinueAsync(Dropbox.Api.Team.ExcludedUsersListContinueArg)
  id: MemberSpaceLimitsExcludedUsersListContinueAsync(Dropbox.Api.Team.ExcludedUsersListContinueArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MemberSpaceLimitsExcludedUsersListContinueAsync(ExcludedUsersListContinueArg)
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListContinueAsync(ExcludedUsersListContinueArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListContinueAsync(Dropbox.Api.Team.ExcludedUsersListContinueArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MemberSpaceLimitsExcludedUsersListContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3120
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Continue listing member space limits excluded users.</p>\n"
  example: []
  syntax:
    content: public Task<ExcludedUsersListResult> MemberSpaceLimitsExcludedUsersListContinueAsync(ExcludedUsersListContinueArg excludedUsersListContinueArg)
    parameters:
    - id: excludedUsersListContinueArg
      type: Dropbox.Api.Team.ExcludedUsersListContinueArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ExcludedUsersListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MemberSpaceLimitsExcludedUsersListContinueAsync(excludedUsersListContinueArg As ExcludedUsersListContinueArg) As Task(Of ExcludedUsersListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ExcludedUsersListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersListContinue(Dropbox.Api.Team.ExcludedUsersListContinueArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersListContinue(Dropbox.Api.Team.ExcludedUsersListContinueArg,System.AsyncCallback,System.Object)
  id: BeginMemberSpaceLimitsExcludedUsersListContinue(Dropbox.Api.Team.ExcludedUsersListContinueArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMemberSpaceLimitsExcludedUsersListContinue(ExcludedUsersListContinueArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersListContinue(ExcludedUsersListContinueArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersListContinue(Dropbox.Api.Team.ExcludedUsersListContinueArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMemberSpaceLimitsExcludedUsersListContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3135
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the member space limits excluded users list\ncontinue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMemberSpaceLimitsExcludedUsersListContinue(ExcludedUsersListContinueArg excludedUsersListContinueArg, AsyncCallback callback, object state = null)
    parameters:
    - id: excludedUsersListContinueArg
      type: Dropbox.Api.Team.ExcludedUsersListContinueArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMemberSpaceLimitsExcludedUsersListContinue(excludedUsersListContinueArg As ExcludedUsersListContinueArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersListContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListContinueAsync(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListContinueAsync(System.String)
  id: MemberSpaceLimitsExcludedUsersListContinueAsync(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MemberSpaceLimitsExcludedUsersListContinueAsync(String)
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListContinueAsync(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListContinueAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MemberSpaceLimitsExcludedUsersListContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3152
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Continue listing member space limits excluded users.</p>\n"
  example: []
  syntax:
    content: public Task<ExcludedUsersListResult> MemberSpaceLimitsExcludedUsersListContinueAsync(string cursor)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        Indicates from what point to get the next set of

        users.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ExcludedUsersListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MemberSpaceLimitsExcludedUsersListContinueAsync(cursor As String) As Task(Of ExcludedUsersListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ExcludedUsersListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersListContinue(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersListContinue(System.String,System.AsyncCallback,System.Object)
  id: BeginMemberSpaceLimitsExcludedUsersListContinue(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMemberSpaceLimitsExcludedUsersListContinue(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersListContinue(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersListContinue(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMemberSpaceLimitsExcludedUsersListContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3170
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the member space limits excluded users list\ncontinue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMemberSpaceLimitsExcludedUsersListContinue(string cursor, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        Indicates from what point to get the next set of

        users.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMemberSpaceLimitsExcludedUsersListContinue(cursor As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersListContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersListContinue(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersListContinue(System.IAsyncResult)
  id: EndMemberSpaceLimitsExcludedUsersListContinue(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMemberSpaceLimitsExcludedUsersListContinue(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersListContinue(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersListContinue(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMemberSpaceLimitsExcludedUsersListContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3189
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the member space limits excluded\nusers list continue route to complete</p>\n"
  example: []
  syntax:
    content: public ExcludedUsersListResult EndMemberSpaceLimitsExcludedUsersListContinue(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.ExcludedUsersListResult
      description: The response to the send request
    content.vb: Public Function EndMemberSpaceLimitsExcludedUsersListContinue(asyncResult As IAsyncResult) As ExcludedUsersListResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersListContinue*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ExcludedUsersListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersRemoveAsync(Dropbox.Api.Team.ExcludedUsersUpdateArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersRemoveAsync(Dropbox.Api.Team.ExcludedUsersUpdateArg)
  id: MemberSpaceLimitsExcludedUsersRemoveAsync(Dropbox.Api.Team.ExcludedUsersUpdateArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MemberSpaceLimitsExcludedUsersRemoveAsync(ExcludedUsersUpdateArg)
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsExcludedUsersRemoveAsync(ExcludedUsersUpdateArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersRemoveAsync(Dropbox.Api.Team.ExcludedUsersUpdateArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MemberSpaceLimitsExcludedUsersRemoveAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3209
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Remove users from member space limits excluded users list.</p>\n"
  example: []
  syntax:
    content: public Task<ExcludedUsersUpdateResult> MemberSpaceLimitsExcludedUsersRemoveAsync(ExcludedUsersUpdateArg excludedUsersUpdateArg)
    parameters:
    - id: excludedUsersUpdateArg
      type: Dropbox.Api.Team.ExcludedUsersUpdateArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ExcludedUsersUpdateResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MemberSpaceLimitsExcludedUsersRemoveAsync(excludedUsersUpdateArg As ExcludedUsersUpdateArg) As Task(Of ExcludedUsersUpdateResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersRemoveAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ExcludedUsersUpdateError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersRemove(Dropbox.Api.Team.ExcludedUsersUpdateArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersRemove(Dropbox.Api.Team.ExcludedUsersUpdateArg,System.AsyncCallback,System.Object)
  id: BeginMemberSpaceLimitsExcludedUsersRemove(Dropbox.Api.Team.ExcludedUsersUpdateArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMemberSpaceLimitsExcludedUsersRemove(ExcludedUsersUpdateArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersRemove(ExcludedUsersUpdateArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersRemove(Dropbox.Api.Team.ExcludedUsersUpdateArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMemberSpaceLimitsExcludedUsersRemove
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3224
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the member space limits excluded users remove\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMemberSpaceLimitsExcludedUsersRemove(ExcludedUsersUpdateArg excludedUsersUpdateArg, AsyncCallback callback, object state = null)
    parameters:
    - id: excludedUsersUpdateArg
      type: Dropbox.Api.Team.ExcludedUsersUpdateArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMemberSpaceLimitsExcludedUsersRemove(excludedUsersUpdateArg As ExcludedUsersUpdateArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersRemove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersRemoveAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersRemoveAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  id: MemberSpaceLimitsExcludedUsersRemoveAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MemberSpaceLimitsExcludedUsersRemoveAsync(IEnumerable<UserSelectorArg>)
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsExcludedUsersRemoveAsync(IEnumerable<UserSelectorArg>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersRemoveAsync(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSelectorArg>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MemberSpaceLimitsExcludedUsersRemoveAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3240
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Remove users from member space limits excluded users list.</p>\n"
  example: []
  syntax:
    content: public Task<ExcludedUsersUpdateResult> MemberSpaceLimitsExcludedUsersRemoveAsync(IEnumerable<UserSelectorArg> users = null)
    parameters:
    - id: users
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg}
      description: List of users to be added/removed.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ExcludedUsersUpdateResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MemberSpaceLimitsExcludedUsersRemoveAsync(users As IEnumerable(Of UserSelectorArg) = Nothing) As Task(Of ExcludedUsersUpdateResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersRemoveAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ExcludedUsersUpdateError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: TeamTeamRoutes.MemberSpaceLimitsExcludedUsersRemoveAsync(IEnumerable(Of UserSelectorArg))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersRemoveAsync(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSelectorArg))
  name.vb: MemberSpaceLimitsExcludedUsersRemoveAsync(IEnumerable(Of UserSelectorArg))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersRemove(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersRemove(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  id: BeginMemberSpaceLimitsExcludedUsersRemove(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMemberSpaceLimitsExcludedUsersRemove(IEnumerable<UserSelectorArg>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersRemove(IEnumerable<UserSelectorArg>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersRemove(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSelectorArg>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMemberSpaceLimitsExcludedUsersRemove
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3257
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the member space limits excluded users remove\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMemberSpaceLimitsExcludedUsersRemove(IEnumerable<UserSelectorArg> users = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: users
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg}
      description: List of users to be added/removed.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMemberSpaceLimitsExcludedUsersRemove(users As IEnumerable(Of UserSelectorArg) = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersRemove*
  nameWithType.vb: TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersRemove(IEnumerable(Of UserSelectorArg), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersRemove(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSelectorArg), System.AsyncCallback, System.Object)
  name.vb: BeginMemberSpaceLimitsExcludedUsersRemove(IEnumerable(Of UserSelectorArg), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersRemove(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersRemove(System.IAsyncResult)
  id: EndMemberSpaceLimitsExcludedUsersRemove(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMemberSpaceLimitsExcludedUsersRemove(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersRemove(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersRemove(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMemberSpaceLimitsExcludedUsersRemove
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3276
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the member space limits excluded\nusers remove route to complete</p>\n"
  example: []
  syntax:
    content: public ExcludedUsersUpdateResult EndMemberSpaceLimitsExcludedUsersRemove(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.ExcludedUsersUpdateResult
      description: The response to the send request
    content.vb: Public Function EndMemberSpaceLimitsExcludedUsersRemove(asyncResult As IAsyncResult) As ExcludedUsersUpdateResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersRemove*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.ExcludedUsersUpdateError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsGetCustomQuotaAsync(Dropbox.Api.Team.CustomQuotaUsersArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsGetCustomQuotaAsync(Dropbox.Api.Team.CustomQuotaUsersArg)
  id: MemberSpaceLimitsGetCustomQuotaAsync(Dropbox.Api.Team.CustomQuotaUsersArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MemberSpaceLimitsGetCustomQuotaAsync(CustomQuotaUsersArg)
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsGetCustomQuotaAsync(CustomQuotaUsersArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsGetCustomQuotaAsync(Dropbox.Api.Team.CustomQuotaUsersArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MemberSpaceLimitsGetCustomQuotaAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3297
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Get users custom quota. Returns none as the custom quota if none was set. A\nmaximum of 1000 members can be specified in a single call.</p>\n"
  example: []
  syntax:
    content: public Task<List<CustomQuotaResult>> MemberSpaceLimitsGetCustomQuotaAsync(CustomQuotaUsersArg customQuotaUsersArg)
    parameters:
    - id: customQuotaUsersArg
      type: Dropbox.Api.Team.CustomQuotaUsersArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.CustomQuotaResult}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MemberSpaceLimitsGetCustomQuotaAsync(customQuotaUsersArg As CustomQuotaUsersArg) As Task(Of List(Of CustomQuotaResult))
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsGetCustomQuotaAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.CustomQuotaError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsGetCustomQuota(Dropbox.Api.Team.CustomQuotaUsersArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsGetCustomQuota(Dropbox.Api.Team.CustomQuotaUsersArg,System.AsyncCallback,System.Object)
  id: BeginMemberSpaceLimitsGetCustomQuota(Dropbox.Api.Team.CustomQuotaUsersArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMemberSpaceLimitsGetCustomQuota(CustomQuotaUsersArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsGetCustomQuota(CustomQuotaUsersArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsGetCustomQuota(Dropbox.Api.Team.CustomQuotaUsersArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMemberSpaceLimitsGetCustomQuota
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3312
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the member space limits get custom quota\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMemberSpaceLimitsGetCustomQuota(CustomQuotaUsersArg customQuotaUsersArg, AsyncCallback callback, object state = null)
    parameters:
    - id: customQuotaUsersArg
      type: Dropbox.Api.Team.CustomQuotaUsersArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMemberSpaceLimitsGetCustomQuota(customQuotaUsersArg As CustomQuotaUsersArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsGetCustomQuota*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsGetCustomQuotaAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsGetCustomQuotaAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  id: MemberSpaceLimitsGetCustomQuotaAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MemberSpaceLimitsGetCustomQuotaAsync(IEnumerable<UserSelectorArg>)
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsGetCustomQuotaAsync(IEnumerable<UserSelectorArg>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsGetCustomQuotaAsync(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSelectorArg>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MemberSpaceLimitsGetCustomQuotaAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3329
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Get users custom quota. Returns none as the custom quota if none was set. A\nmaximum of 1000 members can be specified in a single call.</p>\n"
  example: []
  syntax:
    content: public Task<List<CustomQuotaResult>> MemberSpaceLimitsGetCustomQuotaAsync(IEnumerable<UserSelectorArg> users)
    parameters:
    - id: users
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg}
      description: List of users.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.CustomQuotaResult}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MemberSpaceLimitsGetCustomQuotaAsync(users As IEnumerable(Of UserSelectorArg)) As Task(Of List(Of CustomQuotaResult))
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsGetCustomQuotaAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.CustomQuotaError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: TeamTeamRoutes.MemberSpaceLimitsGetCustomQuotaAsync(IEnumerable(Of UserSelectorArg))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsGetCustomQuotaAsync(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSelectorArg))
  name.vb: MemberSpaceLimitsGetCustomQuotaAsync(IEnumerable(Of UserSelectorArg))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsGetCustomQuota(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsGetCustomQuota(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  id: BeginMemberSpaceLimitsGetCustomQuota(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMemberSpaceLimitsGetCustomQuota(IEnumerable<UserSelectorArg>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsGetCustomQuota(IEnumerable<UserSelectorArg>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsGetCustomQuota(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSelectorArg>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMemberSpaceLimitsGetCustomQuota
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3346
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the member space limits get custom quota\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMemberSpaceLimitsGetCustomQuota(IEnumerable<UserSelectorArg> users, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: users
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg}
      description: List of users.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMemberSpaceLimitsGetCustomQuota(users As IEnumerable(Of UserSelectorArg), callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsGetCustomQuota*
  nameWithType.vb: TeamTeamRoutes.BeginMemberSpaceLimitsGetCustomQuota(IEnumerable(Of UserSelectorArg), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsGetCustomQuota(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSelectorArg), System.AsyncCallback, System.Object)
  name.vb: BeginMemberSpaceLimitsGetCustomQuota(IEnumerable(Of UserSelectorArg), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsGetCustomQuota(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsGetCustomQuota(System.IAsyncResult)
  id: EndMemberSpaceLimitsGetCustomQuota(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMemberSpaceLimitsGetCustomQuota(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMemberSpaceLimitsGetCustomQuota(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsGetCustomQuota(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMemberSpaceLimitsGetCustomQuota
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3365
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the member space limits get custom\nquota route to complete</p>\n"
  example: []
  syntax:
    content: public List<CustomQuotaResult> EndMemberSpaceLimitsGetCustomQuota(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: System.Collections.Generic.List{Dropbox.Api.Team.CustomQuotaResult}
      description: The response to the send request
    content.vb: Public Function EndMemberSpaceLimitsGetCustomQuota(asyncResult As IAsyncResult) As List(Of CustomQuotaResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsGetCustomQuota*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.CustomQuotaError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsRemoveCustomQuotaAsync(Dropbox.Api.Team.CustomQuotaUsersArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsRemoveCustomQuotaAsync(Dropbox.Api.Team.CustomQuotaUsersArg)
  id: MemberSpaceLimitsRemoveCustomQuotaAsync(Dropbox.Api.Team.CustomQuotaUsersArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MemberSpaceLimitsRemoveCustomQuotaAsync(CustomQuotaUsersArg)
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsRemoveCustomQuotaAsync(CustomQuotaUsersArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsRemoveCustomQuotaAsync(Dropbox.Api.Team.CustomQuotaUsersArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MemberSpaceLimitsRemoveCustomQuotaAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3386
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Remove users custom quota. A maximum of 1000 members can be specified in a\nsingle call.</p>\n"
  example: []
  syntax:
    content: public Task<List<RemoveCustomQuotaResult>> MemberSpaceLimitsRemoveCustomQuotaAsync(CustomQuotaUsersArg customQuotaUsersArg)
    parameters:
    - id: customQuotaUsersArg
      type: Dropbox.Api.Team.CustomQuotaUsersArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.RemoveCustomQuotaResult}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MemberSpaceLimitsRemoveCustomQuotaAsync(customQuotaUsersArg As CustomQuotaUsersArg) As Task(Of List(Of RemoveCustomQuotaResult))
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsRemoveCustomQuotaAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.CustomQuotaError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsRemoveCustomQuota(Dropbox.Api.Team.CustomQuotaUsersArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsRemoveCustomQuota(Dropbox.Api.Team.CustomQuotaUsersArg,System.AsyncCallback,System.Object)
  id: BeginMemberSpaceLimitsRemoveCustomQuota(Dropbox.Api.Team.CustomQuotaUsersArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMemberSpaceLimitsRemoveCustomQuota(CustomQuotaUsersArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsRemoveCustomQuota(CustomQuotaUsersArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsRemoveCustomQuota(Dropbox.Api.Team.CustomQuotaUsersArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMemberSpaceLimitsRemoveCustomQuota
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3401
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the member space limits remove custom quota\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMemberSpaceLimitsRemoveCustomQuota(CustomQuotaUsersArg customQuotaUsersArg, AsyncCallback callback, object state = null)
    parameters:
    - id: customQuotaUsersArg
      type: Dropbox.Api.Team.CustomQuotaUsersArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMemberSpaceLimitsRemoveCustomQuota(customQuotaUsersArg As CustomQuotaUsersArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsRemoveCustomQuota*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsRemoveCustomQuotaAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsRemoveCustomQuotaAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  id: MemberSpaceLimitsRemoveCustomQuotaAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MemberSpaceLimitsRemoveCustomQuotaAsync(IEnumerable<UserSelectorArg>)
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsRemoveCustomQuotaAsync(IEnumerable<UserSelectorArg>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsRemoveCustomQuotaAsync(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSelectorArg>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MemberSpaceLimitsRemoveCustomQuotaAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3418
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Remove users custom quota. A maximum of 1000 members can be specified in a\nsingle call.</p>\n"
  example: []
  syntax:
    content: public Task<List<RemoveCustomQuotaResult>> MemberSpaceLimitsRemoveCustomQuotaAsync(IEnumerable<UserSelectorArg> users)
    parameters:
    - id: users
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg}
      description: List of users.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.RemoveCustomQuotaResult}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MemberSpaceLimitsRemoveCustomQuotaAsync(users As IEnumerable(Of UserSelectorArg)) As Task(Of List(Of RemoveCustomQuotaResult))
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsRemoveCustomQuotaAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.CustomQuotaError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: TeamTeamRoutes.MemberSpaceLimitsRemoveCustomQuotaAsync(IEnumerable(Of UserSelectorArg))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsRemoveCustomQuotaAsync(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSelectorArg))
  name.vb: MemberSpaceLimitsRemoveCustomQuotaAsync(IEnumerable(Of UserSelectorArg))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsRemoveCustomQuota(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsRemoveCustomQuota(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  id: BeginMemberSpaceLimitsRemoveCustomQuota(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMemberSpaceLimitsRemoveCustomQuota(IEnumerable<UserSelectorArg>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsRemoveCustomQuota(IEnumerable<UserSelectorArg>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsRemoveCustomQuota(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSelectorArg>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMemberSpaceLimitsRemoveCustomQuota
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3435
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the member space limits remove custom quota\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMemberSpaceLimitsRemoveCustomQuota(IEnumerable<UserSelectorArg> users, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: users
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg}
      description: List of users.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMemberSpaceLimitsRemoveCustomQuota(users As IEnumerable(Of UserSelectorArg), callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsRemoveCustomQuota*
  nameWithType.vb: TeamTeamRoutes.BeginMemberSpaceLimitsRemoveCustomQuota(IEnumerable(Of UserSelectorArg), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsRemoveCustomQuota(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSelectorArg), System.AsyncCallback, System.Object)
  name.vb: BeginMemberSpaceLimitsRemoveCustomQuota(IEnumerable(Of UserSelectorArg), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsRemoveCustomQuota(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsRemoveCustomQuota(System.IAsyncResult)
  id: EndMemberSpaceLimitsRemoveCustomQuota(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMemberSpaceLimitsRemoveCustomQuota(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMemberSpaceLimitsRemoveCustomQuota(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsRemoveCustomQuota(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMemberSpaceLimitsRemoveCustomQuota
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3454
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the member space limits remove\ncustom quota route to complete</p>\n"
  example: []
  syntax:
    content: public List<RemoveCustomQuotaResult> EndMemberSpaceLimitsRemoveCustomQuota(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: System.Collections.Generic.List{Dropbox.Api.Team.RemoveCustomQuotaResult}
      description: The response to the send request
    content.vb: Public Function EndMemberSpaceLimitsRemoveCustomQuota(asyncResult As IAsyncResult) As List(Of RemoveCustomQuotaResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsRemoveCustomQuota*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.CustomQuotaError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsSetCustomQuotaAsync(Dropbox.Api.Team.SetCustomQuotaArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsSetCustomQuotaAsync(Dropbox.Api.Team.SetCustomQuotaArg)
  id: MemberSpaceLimitsSetCustomQuotaAsync(Dropbox.Api.Team.SetCustomQuotaArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MemberSpaceLimitsSetCustomQuotaAsync(SetCustomQuotaArg)
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsSetCustomQuotaAsync(SetCustomQuotaArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsSetCustomQuotaAsync(Dropbox.Api.Team.SetCustomQuotaArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MemberSpaceLimitsSetCustomQuotaAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3475
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Set users custom quota. Custom quota has to be at least 15GB. A maximum of\n1000 members can be specified in a single call.</p>\n"
  example: []
  syntax:
    content: public Task<List<CustomQuotaResult>> MemberSpaceLimitsSetCustomQuotaAsync(SetCustomQuotaArg setCustomQuotaArg)
    parameters:
    - id: setCustomQuotaArg
      type: Dropbox.Api.Team.SetCustomQuotaArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.CustomQuotaResult}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MemberSpaceLimitsSetCustomQuotaAsync(setCustomQuotaArg As SetCustomQuotaArg) As Task(Of List(Of CustomQuotaResult))
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsSetCustomQuotaAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.SetCustomQuotaError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsSetCustomQuota(Dropbox.Api.Team.SetCustomQuotaArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsSetCustomQuota(Dropbox.Api.Team.SetCustomQuotaArg,System.AsyncCallback,System.Object)
  id: BeginMemberSpaceLimitsSetCustomQuota(Dropbox.Api.Team.SetCustomQuotaArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMemberSpaceLimitsSetCustomQuota(SetCustomQuotaArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsSetCustomQuota(SetCustomQuotaArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsSetCustomQuota(Dropbox.Api.Team.SetCustomQuotaArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMemberSpaceLimitsSetCustomQuota
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3490
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the member space limits set custom quota\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMemberSpaceLimitsSetCustomQuota(SetCustomQuotaArg setCustomQuotaArg, AsyncCallback callback, object state = null)
    parameters:
    - id: setCustomQuotaArg
      type: Dropbox.Api.Team.SetCustomQuotaArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMemberSpaceLimitsSetCustomQuota(setCustomQuotaArg As SetCustomQuotaArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsSetCustomQuota*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsSetCustomQuotaAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserCustomQuotaArg})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsSetCustomQuotaAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserCustomQuotaArg})
  id: MemberSpaceLimitsSetCustomQuotaAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserCustomQuotaArg})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MemberSpaceLimitsSetCustomQuotaAsync(IEnumerable<UserCustomQuotaArg>)
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsSetCustomQuotaAsync(IEnumerable<UserCustomQuotaArg>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsSetCustomQuotaAsync(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserCustomQuotaArg>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MemberSpaceLimitsSetCustomQuotaAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3507
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Set users custom quota. Custom quota has to be at least 15GB. A maximum of\n1000 members can be specified in a single call.</p>\n"
  example: []
  syntax:
    content: public Task<List<CustomQuotaResult>> MemberSpaceLimitsSetCustomQuotaAsync(IEnumerable<UserCustomQuotaArg> usersAndQuotas)
    parameters:
    - id: usersAndQuotas
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserCustomQuotaArg}
      description: List of users and their custom quotas.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.CustomQuotaResult}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MemberSpaceLimitsSetCustomQuotaAsync(usersAndQuotas As IEnumerable(Of UserCustomQuotaArg)) As Task(Of List(Of CustomQuotaResult))
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsSetCustomQuotaAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.SetCustomQuotaError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: TeamTeamRoutes.MemberSpaceLimitsSetCustomQuotaAsync(IEnumerable(Of UserCustomQuotaArg))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsSetCustomQuotaAsync(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserCustomQuotaArg))
  name.vb: MemberSpaceLimitsSetCustomQuotaAsync(IEnumerable(Of UserCustomQuotaArg))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsSetCustomQuota(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserCustomQuotaArg},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsSetCustomQuota(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserCustomQuotaArg},System.AsyncCallback,System.Object)
  id: BeginMemberSpaceLimitsSetCustomQuota(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserCustomQuotaArg},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMemberSpaceLimitsSetCustomQuota(IEnumerable<UserCustomQuotaArg>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsSetCustomQuota(IEnumerable<UserCustomQuotaArg>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsSetCustomQuota(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserCustomQuotaArg>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMemberSpaceLimitsSetCustomQuota
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3524
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the member space limits set custom quota\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMemberSpaceLimitsSetCustomQuota(IEnumerable<UserCustomQuotaArg> usersAndQuotas, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: usersAndQuotas
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserCustomQuotaArg}
      description: List of users and their custom quotas.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMemberSpaceLimitsSetCustomQuota(usersAndQuotas As IEnumerable(Of UserCustomQuotaArg), callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsSetCustomQuota*
  nameWithType.vb: TeamTeamRoutes.BeginMemberSpaceLimitsSetCustomQuota(IEnumerable(Of UserCustomQuotaArg), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsSetCustomQuota(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserCustomQuotaArg), System.AsyncCallback, System.Object)
  name.vb: BeginMemberSpaceLimitsSetCustomQuota(IEnumerable(Of UserCustomQuotaArg), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsSetCustomQuota(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsSetCustomQuota(System.IAsyncResult)
  id: EndMemberSpaceLimitsSetCustomQuota(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMemberSpaceLimitsSetCustomQuota(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMemberSpaceLimitsSetCustomQuota(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsSetCustomQuota(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMemberSpaceLimitsSetCustomQuota
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3543
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the member space limits set custom\nquota route to complete</p>\n"
  example: []
  syntax:
    content: public List<CustomQuotaResult> EndMemberSpaceLimitsSetCustomQuota(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: System.Collections.Generic.List{Dropbox.Api.Team.CustomQuotaResult}
      description: The response to the send request
    content.vb: Public Function EndMemberSpaceLimitsSetCustomQuota(asyncResult As IAsyncResult) As List(Of CustomQuotaResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsSetCustomQuota*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.SetCustomQuotaError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddV2Async(Dropbox.Api.Team.MembersAddV2Arg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddV2Async(Dropbox.Api.Team.MembersAddV2Arg)
  id: MembersAddV2Async(Dropbox.Api.Team.MembersAddV2Arg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersAddV2Async(MembersAddV2Arg)
  nameWithType: TeamTeamRoutes.MembersAddV2Async(MembersAddV2Arg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddV2Async(Dropbox.Api.Team.MembersAddV2Arg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersAddV2Async
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3572
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Adds members to a team.</p>\n<p>Permission : Team member management</p>\n<p>A maximum of 20 members can be specified in a single call.</p>\n<p>If no Dropbox account exists with the email address specified, a new Dropbox\naccount will be created with the given email address, and that account will be\ninvited to the team.</p>\n<p>If a personal Dropbox account exists with the email address specified in the\ncall, this call will create a placeholder Dropbox account for the user on the team\nand send an email inviting the user to migrate their existing personal account onto\nthe team.</p>\n<p>Team member management apps are required to set an initial given_name and\nsurname for a user to use in the team invitation and for &apos;Perform as team member&apos;\nactions taken on the user before they become &apos;active&apos;.</p>\n"
  example: []
  syntax:
    content: public Task<MembersAddLaunchV2Result> MembersAddV2Async(MembersAddV2Arg membersAddV2Arg)
    parameters:
    - id: membersAddV2Arg
      type: Dropbox.Api.Team.MembersAddV2Arg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersAddLaunchV2Result}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersAddV2Async(membersAddV2Arg As MembersAddV2Arg) As Task(Of MembersAddLaunchV2Result)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddV2Async*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddV2(Dropbox.Api.Team.MembersAddV2Arg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddV2(Dropbox.Api.Team.MembersAddV2Arg,System.AsyncCallback,System.Object)
  id: BeginMembersAddV2(Dropbox.Api.Team.MembersAddV2Arg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersAddV2(MembersAddV2Arg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersAddV2(MembersAddV2Arg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddV2(Dropbox.Api.Team.MembersAddV2Arg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersAddV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3586
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members add route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersAddV2(MembersAddV2Arg membersAddV2Arg, AsyncCallback callback, object state = null)
    parameters:
    - id: membersAddV2Arg
      type: Dropbox.Api.Team.MembersAddV2Arg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersAddV2(membersAddV2Arg As MembersAddV2Arg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddV2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddV2Async(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddV2Arg},System.Boolean)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddV2Async(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddV2Arg},System.Boolean)
  id: MembersAddV2Async(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddV2Arg},System.Boolean)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersAddV2Async(IEnumerable<MemberAddV2Arg>, Boolean)
  nameWithType: TeamTeamRoutes.MembersAddV2Async(IEnumerable<MemberAddV2Arg>, Boolean)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddV2Async(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.MemberAddV2Arg>, System.Boolean)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersAddV2Async
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3612
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Adds members to a team.</p>\n<p>Permission : Team member management</p>\n<p>A maximum of 20 members can be specified in a single call.</p>\n<p>If no Dropbox account exists with the email address specified, a new Dropbox\naccount will be created with the given email address, and that account will be\ninvited to the team.</p>\n<p>If a personal Dropbox account exists with the email address specified in the\ncall, this call will create a placeholder Dropbox account for the user on the team\nand send an email inviting the user to migrate their existing personal account onto\nthe team.</p>\n<p>Team member management apps are required to set an initial given_name and\nsurname for a user to use in the team invitation and for &apos;Perform as team member&apos;\nactions taken on the user before they become &apos;active&apos;.</p>\n"
  example: []
  syntax:
    content: public Task<MembersAddLaunchV2Result> MembersAddV2Async(IEnumerable<MemberAddV2Arg> newMembers, bool forceAsync = false)
    parameters:
    - id: newMembers
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddV2Arg}
      description: Details of new members to be added to the team.
    - id: forceAsync
      type: System.Boolean
      description: Whether to force the add to happen asynchronously.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersAddLaunchV2Result}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersAddV2Async(newMembers As IEnumerable(Of MemberAddV2Arg), forceAsync As Boolean = False) As Task(Of MembersAddLaunchV2Result)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddV2Async*
  nameWithType.vb: TeamTeamRoutes.MembersAddV2Async(IEnumerable(Of MemberAddV2Arg), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddV2Async(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.MemberAddV2Arg), System.Boolean)
  name.vb: MembersAddV2Async(IEnumerable(Of MemberAddV2Arg), Boolean)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddV2(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddV2Arg},System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddV2(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddV2Arg},System.Boolean,System.AsyncCallback,System.Object)
  id: BeginMembersAddV2(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddV2Arg},System.Boolean,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersAddV2(IEnumerable<MemberAddV2Arg>, Boolean, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersAddV2(IEnumerable<MemberAddV2Arg>, Boolean, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddV2(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.MemberAddV2Arg>, System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersAddV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3631
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members add route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersAddV2(IEnumerable<MemberAddV2Arg> newMembers, bool forceAsync = false, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: newMembers
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddV2Arg}
      description: Details of new members to be added to the team.
    - id: forceAsync
      type: System.Boolean
      description: Whether to force the add to happen asynchronously.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersAddV2(newMembers As IEnumerable(Of MemberAddV2Arg), forceAsync As Boolean = False, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddV2*
  nameWithType.vb: TeamTeamRoutes.BeginMembersAddV2(IEnumerable(Of MemberAddV2Arg), Boolean, AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddV2(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.MemberAddV2Arg), System.Boolean, System.AsyncCallback, System.Object)
  name.vb: BeginMembersAddV2(IEnumerable(Of MemberAddV2Arg), Boolean, AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddV2(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddV2(System.IAsyncResult)
  id: EndMembersAddV2(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersAddV2(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersAddV2(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddV2(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersAddV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3649
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members add route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public MembersAddLaunchV2Result EndMembersAddV2(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.MembersAddLaunchV2Result
      description: The response to the send request
    content.vb: Public Function EndMembersAddV2(asyncResult As IAsyncResult) As MembersAddLaunchV2Result
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddV2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddAsync(Dropbox.Api.Team.MembersAddArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddAsync(Dropbox.Api.Team.MembersAddArg)
  id: MembersAddAsync(Dropbox.Api.Team.MembersAddArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersAddAsync(MembersAddArg)
  nameWithType: TeamTeamRoutes.MembersAddAsync(MembersAddArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddAsync(Dropbox.Api.Team.MembersAddArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersAddAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3678
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Adds members to a team.</p>\n<p>Permission : Team member management</p>\n<p>A maximum of 20 members can be specified in a single call.</p>\n<p>If no Dropbox account exists with the email address specified, a new Dropbox\naccount will be created with the given email address, and that account will be\ninvited to the team.</p>\n<p>If a personal Dropbox account exists with the email address specified in the\ncall, this call will create a placeholder Dropbox account for the user on the team\nand send an email inviting the user to migrate their existing personal account onto\nthe team.</p>\n<p>Team member management apps are required to set an initial given_name and\nsurname for a user to use in the team invitation and for &apos;Perform as team member&apos;\nactions taken on the user before they become &apos;active&apos;.</p>\n"
  example: []
  syntax:
    content: public Task<MembersAddLaunch> MembersAddAsync(MembersAddArg membersAddArg)
    parameters:
    - id: membersAddArg
      type: Dropbox.Api.Team.MembersAddArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersAddLaunch}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersAddAsync(membersAddArg As MembersAddArg) As Task(Of MembersAddLaunch)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAdd(Dropbox.Api.Team.MembersAddArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAdd(Dropbox.Api.Team.MembersAddArg,System.AsyncCallback,System.Object)
  id: BeginMembersAdd(Dropbox.Api.Team.MembersAddArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersAdd(MembersAddArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersAdd(MembersAddArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAdd(Dropbox.Api.Team.MembersAddArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersAdd
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3692
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members add route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersAdd(MembersAddArg membersAddArg, AsyncCallback callback, object state = null)
    parameters:
    - id: membersAddArg
      type: Dropbox.Api.Team.MembersAddArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersAdd(membersAddArg As MembersAddArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAdd*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddArg},System.Boolean)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddArg},System.Boolean)
  id: MembersAddAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddArg},System.Boolean)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersAddAsync(IEnumerable<MemberAddArg>, Boolean)
  nameWithType: TeamTeamRoutes.MembersAddAsync(IEnumerable<MemberAddArg>, Boolean)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddAsync(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.MemberAddArg>, System.Boolean)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersAddAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3718
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Adds members to a team.</p>\n<p>Permission : Team member management</p>\n<p>A maximum of 20 members can be specified in a single call.</p>\n<p>If no Dropbox account exists with the email address specified, a new Dropbox\naccount will be created with the given email address, and that account will be\ninvited to the team.</p>\n<p>If a personal Dropbox account exists with the email address specified in the\ncall, this call will create a placeholder Dropbox account for the user on the team\nand send an email inviting the user to migrate their existing personal account onto\nthe team.</p>\n<p>Team member management apps are required to set an initial given_name and\nsurname for a user to use in the team invitation and for &apos;Perform as team member&apos;\nactions taken on the user before they become &apos;active&apos;.</p>\n"
  example: []
  syntax:
    content: public Task<MembersAddLaunch> MembersAddAsync(IEnumerable<MemberAddArg> newMembers, bool forceAsync = false)
    parameters:
    - id: newMembers
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddArg}
      description: Details of new members to be added to the team.
    - id: forceAsync
      type: System.Boolean
      description: Whether to force the add to happen asynchronously.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersAddLaunch}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersAddAsync(newMembers As IEnumerable(Of MemberAddArg), forceAsync As Boolean = False) As Task(Of MembersAddLaunch)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddAsync*
  nameWithType.vb: TeamTeamRoutes.MembersAddAsync(IEnumerable(Of MemberAddArg), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddAsync(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.MemberAddArg), System.Boolean)
  name.vb: MembersAddAsync(IEnumerable(Of MemberAddArg), Boolean)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAdd(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddArg},System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAdd(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddArg},System.Boolean,System.AsyncCallback,System.Object)
  id: BeginMembersAdd(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddArg},System.Boolean,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersAdd(IEnumerable<MemberAddArg>, Boolean, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersAdd(IEnumerable<MemberAddArg>, Boolean, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAdd(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.MemberAddArg>, System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersAdd
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3737
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members add route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersAdd(IEnumerable<MemberAddArg> newMembers, bool forceAsync = false, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: newMembers
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddArg}
      description: Details of new members to be added to the team.
    - id: forceAsync
      type: System.Boolean
      description: Whether to force the add to happen asynchronously.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersAdd(newMembers As IEnumerable(Of MemberAddArg), forceAsync As Boolean = False, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAdd*
  nameWithType.vb: TeamTeamRoutes.BeginMembersAdd(IEnumerable(Of MemberAddArg), Boolean, AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAdd(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.MemberAddArg), System.Boolean, System.AsyncCallback, System.Object)
  name.vb: BeginMembersAdd(IEnumerable(Of MemberAddArg), Boolean, AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAdd(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAdd(System.IAsyncResult)
  id: EndMembersAdd(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersAdd(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersAdd(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAdd(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersAdd
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3755
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members add route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public MembersAddLaunch EndMembersAdd(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.MembersAddLaunch
      description: The response to the send request
    content.vb: Public Function EndMembersAdd(asyncResult As IAsyncResult) As MembersAddLaunch
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAdd*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetV2Async(Dropbox.Api.Async.PollArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetV2Async(Dropbox.Api.Async.PollArg)
  id: MembersAddJobStatusGetV2Async(Dropbox.Api.Async.PollArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersAddJobStatusGetV2Async(PollArg)
  nameWithType: TeamTeamRoutes.MembersAddJobStatusGetV2Async(PollArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetV2Async(Dropbox.Api.Async.PollArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersAddJobStatusGetV2Async
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3778
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once an async_job_id is returned from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddV2Async(Dropbox.Api.Team.MembersAddV2Arg)\" data-throw-if-not-resolved=\"false\"></xref> , use this to\npoll the status of the asynchronous request.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<MembersAddJobStatusV2Result> MembersAddJobStatusGetV2Async(PollArg pollArg)
    parameters:
    - id: pollArg
      type: Dropbox.Api.Async.PollArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersAddJobStatusV2Result}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersAddJobStatusGetV2Async(pollArg As PollArg) As Task(Of MembersAddJobStatusV2Result)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetV2Async*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGetV2(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGetV2(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  id: BeginMembersAddJobStatusGetV2(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersAddJobStatusGetV2(PollArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersAddJobStatusGetV2(PollArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGetV2(Dropbox.Api.Async.PollArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersAddJobStatusGetV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3792
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members add job status get route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersAddJobStatusGetV2(PollArg pollArg, AsyncCallback callback, object state = null)
    parameters:
    - id: pollArg
      type: Dropbox.Api.Async.PollArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersAddJobStatusGetV2(pollArg As PollArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGetV2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetV2Async(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetV2Async(System.String)
  id: MembersAddJobStatusGetV2Async(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersAddJobStatusGetV2Async(String)
  nameWithType: TeamTeamRoutes.MembersAddJobStatusGetV2Async(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetV2Async(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersAddJobStatusGetV2Async
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3812
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once an async_job_id is returned from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddV2Async(Dropbox.Api.Team.MembersAddV2Arg)\" data-throw-if-not-resolved=\"false\"></xref> , use this to\npoll the status of the asynchronous request.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<MembersAddJobStatusV2Result> MembersAddJobStatusGetV2Async(string asyncJobId)
    parameters:
    - id: asyncJobId
      type: System.String
      description: >-
        Id of the asynchronous job. This is the value of a

        response returned from the method that launched the job.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersAddJobStatusV2Result}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersAddJobStatusGetV2Async(asyncJobId As String) As Task(Of MembersAddJobStatusV2Result)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetV2Async*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGetV2(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGetV2(System.String,System.AsyncCallback,System.Object)
  id: BeginMembersAddJobStatusGetV2(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersAddJobStatusGetV2(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersAddJobStatusGetV2(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGetV2(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersAddJobStatusGetV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3829
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members add job status get route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersAddJobStatusGetV2(string asyncJobId, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: asyncJobId
      type: System.String
      description: >-
        Id of the asynchronous job. This is the value of a

        response returned from the method that launched the job.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersAddJobStatusGetV2(asyncJobId As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGetV2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddJobStatusGetV2(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddJobStatusGetV2(System.IAsyncResult)
  id: EndMembersAddJobStatusGetV2(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersAddJobStatusGetV2(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersAddJobStatusGetV2(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddJobStatusGetV2(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersAddJobStatusGetV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3848
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members add job status get\nroute to complete</p>\n"
  example: []
  syntax:
    content: public MembersAddJobStatusV2Result EndMembersAddJobStatusGetV2(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.MembersAddJobStatusV2Result
      description: The response to the send request
    content.vb: Public Function EndMembersAddJobStatusGetV2(asyncResult As IAsyncResult) As MembersAddJobStatusV2Result
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddJobStatusGetV2*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetAsync(Dropbox.Api.Async.PollArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetAsync(Dropbox.Api.Async.PollArg)
  id: MembersAddJobStatusGetAsync(Dropbox.Api.Async.PollArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersAddJobStatusGetAsync(PollArg)
  nameWithType: TeamTeamRoutes.MembersAddJobStatusGetAsync(PollArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetAsync(Dropbox.Api.Async.PollArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersAddJobStatusGetAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3871
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once an async_job_id is returned from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddAsync(Dropbox.Api.Team.MembersAddArg)\" data-throw-if-not-resolved=\"false\"></xref> , use this to poll\nthe status of the asynchronous request.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<MembersAddJobStatus> MembersAddJobStatusGetAsync(PollArg pollArg)
    parameters:
    - id: pollArg
      type: Dropbox.Api.Async.PollArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersAddJobStatus}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersAddJobStatusGetAsync(pollArg As PollArg) As Task(Of MembersAddJobStatus)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGet(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGet(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  id: BeginMembersAddJobStatusGet(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersAddJobStatusGet(PollArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersAddJobStatusGet(PollArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGet(Dropbox.Api.Async.PollArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersAddJobStatusGet
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3885
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members add job status get route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersAddJobStatusGet(PollArg pollArg, AsyncCallback callback, object state = null)
    parameters:
    - id: pollArg
      type: Dropbox.Api.Async.PollArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersAddJobStatusGet(pollArg As PollArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetAsync(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetAsync(System.String)
  id: MembersAddJobStatusGetAsync(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersAddJobStatusGetAsync(String)
  nameWithType: TeamTeamRoutes.MembersAddJobStatusGetAsync(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersAddJobStatusGetAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3905
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once an async_job_id is returned from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddAsync(Dropbox.Api.Team.MembersAddArg)\" data-throw-if-not-resolved=\"false\"></xref> , use this to poll\nthe status of the asynchronous request.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<MembersAddJobStatus> MembersAddJobStatusGetAsync(string asyncJobId)
    parameters:
    - id: asyncJobId
      type: System.String
      description: >-
        Id of the asynchronous job. This is the value of a

        response returned from the method that launched the job.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersAddJobStatus}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersAddJobStatusGetAsync(asyncJobId As String) As Task(Of MembersAddJobStatus)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGet(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGet(System.String,System.AsyncCallback,System.Object)
  id: BeginMembersAddJobStatusGet(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersAddJobStatusGet(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersAddJobStatusGet(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGet(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersAddJobStatusGet
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3922
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members add job status get route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersAddJobStatusGet(string asyncJobId, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: asyncJobId
      type: System.String
      description: >-
        Id of the asynchronous job. This is the value of a

        response returned from the method that launched the job.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersAddJobStatusGet(asyncJobId As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddJobStatusGet(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddJobStatusGet(System.IAsyncResult)
  id: EndMembersAddJobStatusGet(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersAddJobStatusGet(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersAddJobStatusGet(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddJobStatusGet(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersAddJobStatusGet
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3941
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members add job status get\nroute to complete</p>\n"
  example: []
  syntax:
    content: public MembersAddJobStatus EndMembersAddJobStatusGet(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.MembersAddJobStatus
      description: The response to the send request
    content.vb: Public Function EndMembersAddJobStatusGet(asyncResult As IAsyncResult) As MembersAddJobStatus
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddJobStatusGet*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoV2Async(Dropbox.Api.Team.MembersDeleteProfilePhotoArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoV2Async(Dropbox.Api.Team.MembersDeleteProfilePhotoArg)
  id: MembersDeleteProfilePhotoV2Async(Dropbox.Api.Team.MembersDeleteProfilePhotoArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersDeleteProfilePhotoV2Async(MembersDeleteProfilePhotoArg)
  nameWithType: TeamTeamRoutes.MembersDeleteProfilePhotoV2Async(MembersDeleteProfilePhotoArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoV2Async(Dropbox.Api.Team.MembersDeleteProfilePhotoArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersDeleteProfilePhotoV2Async
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3962
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Deletes a team member&apos;s profile photo.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<TeamMemberInfoV2Result> MembersDeleteProfilePhotoV2Async(MembersDeleteProfilePhotoArg membersDeleteProfilePhotoArg)
    parameters:
    - id: membersDeleteProfilePhotoArg
      type: Dropbox.Api.Team.MembersDeleteProfilePhotoArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamMemberInfoV2Result}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersDeleteProfilePhotoV2Async(membersDeleteProfilePhotoArg As MembersDeleteProfilePhotoArg) As Task(Of TeamMemberInfoV2Result)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoV2Async*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersDeleteProfilePhotoError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhotoV2(Dropbox.Api.Team.MembersDeleteProfilePhotoArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhotoV2(Dropbox.Api.Team.MembersDeleteProfilePhotoArg,System.AsyncCallback,System.Object)
  id: BeginMembersDeleteProfilePhotoV2(Dropbox.Api.Team.MembersDeleteProfilePhotoArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersDeleteProfilePhotoV2(MembersDeleteProfilePhotoArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersDeleteProfilePhotoV2(MembersDeleteProfilePhotoArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhotoV2(Dropbox.Api.Team.MembersDeleteProfilePhotoArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersDeleteProfilePhotoV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3976
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members delete profile photo route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersDeleteProfilePhotoV2(MembersDeleteProfilePhotoArg membersDeleteProfilePhotoArg, AsyncCallback callback, object state = null)
    parameters:
    - id: membersDeleteProfilePhotoArg
      type: Dropbox.Api.Team.MembersDeleteProfilePhotoArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersDeleteProfilePhotoV2(membersDeleteProfilePhotoArg As MembersDeleteProfilePhotoArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhotoV2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoV2Async(Dropbox.Api.Team.UserSelectorArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoV2Async(Dropbox.Api.Team.UserSelectorArg)
  id: MembersDeleteProfilePhotoV2Async(Dropbox.Api.Team.UserSelectorArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersDeleteProfilePhotoV2Async(UserSelectorArg)
  nameWithType: TeamTeamRoutes.MembersDeleteProfilePhotoV2Async(UserSelectorArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoV2Async(Dropbox.Api.Team.UserSelectorArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersDeleteProfilePhotoV2Async
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 3994
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Deletes a team member&apos;s profile photo.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<TeamMemberInfoV2Result> MembersDeleteProfilePhotoV2Async(UserSelectorArg user)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        Identity of the user whose profile photo will be

        deleted.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamMemberInfoV2Result}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersDeleteProfilePhotoV2Async(user As UserSelectorArg) As Task(Of TeamMemberInfoV2Result)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoV2Async*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersDeleteProfilePhotoError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhotoV2(Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhotoV2(Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  id: BeginMembersDeleteProfilePhotoV2(Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersDeleteProfilePhotoV2(UserSelectorArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersDeleteProfilePhotoV2(UserSelectorArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhotoV2(Dropbox.Api.Team.UserSelectorArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersDeleteProfilePhotoV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4011
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members delete profile photo route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersDeleteProfilePhotoV2(UserSelectorArg user, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        Identity of the user whose profile photo will be

        deleted.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersDeleteProfilePhotoV2(user As UserSelectorArg, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhotoV2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersDeleteProfilePhotoV2(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersDeleteProfilePhotoV2(System.IAsyncResult)
  id: EndMembersDeleteProfilePhotoV2(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersDeleteProfilePhotoV2(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersDeleteProfilePhotoV2(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersDeleteProfilePhotoV2(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersDeleteProfilePhotoV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4030
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members delete profile photo\nroute to complete</p>\n"
  example: []
  syntax:
    content: public TeamMemberInfoV2Result EndMembersDeleteProfilePhotoV2(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.TeamMemberInfoV2Result
      description: The response to the send request
    content.vb: Public Function EndMembersDeleteProfilePhotoV2(asyncResult As IAsyncResult) As TeamMemberInfoV2Result
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersDeleteProfilePhotoV2*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersDeleteProfilePhotoError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoAsync(Dropbox.Api.Team.MembersDeleteProfilePhotoArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoAsync(Dropbox.Api.Team.MembersDeleteProfilePhotoArg)
  id: MembersDeleteProfilePhotoAsync(Dropbox.Api.Team.MembersDeleteProfilePhotoArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersDeleteProfilePhotoAsync(MembersDeleteProfilePhotoArg)
  nameWithType: TeamTeamRoutes.MembersDeleteProfilePhotoAsync(MembersDeleteProfilePhotoArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoAsync(Dropbox.Api.Team.MembersDeleteProfilePhotoArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersDeleteProfilePhotoAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4051
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Deletes a team member&apos;s profile photo.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<TeamMemberInfo> MembersDeleteProfilePhotoAsync(MembersDeleteProfilePhotoArg membersDeleteProfilePhotoArg)
    parameters:
    - id: membersDeleteProfilePhotoArg
      type: Dropbox.Api.Team.MembersDeleteProfilePhotoArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamMemberInfo}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersDeleteProfilePhotoAsync(membersDeleteProfilePhotoArg As MembersDeleteProfilePhotoArg) As Task(Of TeamMemberInfo)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersDeleteProfilePhotoError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhoto(Dropbox.Api.Team.MembersDeleteProfilePhotoArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhoto(Dropbox.Api.Team.MembersDeleteProfilePhotoArg,System.AsyncCallback,System.Object)
  id: BeginMembersDeleteProfilePhoto(Dropbox.Api.Team.MembersDeleteProfilePhotoArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersDeleteProfilePhoto(MembersDeleteProfilePhotoArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersDeleteProfilePhoto(MembersDeleteProfilePhotoArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhoto(Dropbox.Api.Team.MembersDeleteProfilePhotoArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersDeleteProfilePhoto
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4065
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members delete profile photo route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersDeleteProfilePhoto(MembersDeleteProfilePhotoArg membersDeleteProfilePhotoArg, AsyncCallback callback, object state = null)
    parameters:
    - id: membersDeleteProfilePhotoArg
      type: Dropbox.Api.Team.MembersDeleteProfilePhotoArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersDeleteProfilePhoto(membersDeleteProfilePhotoArg As MembersDeleteProfilePhotoArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhoto*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoAsync(Dropbox.Api.Team.UserSelectorArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoAsync(Dropbox.Api.Team.UserSelectorArg)
  id: MembersDeleteProfilePhotoAsync(Dropbox.Api.Team.UserSelectorArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersDeleteProfilePhotoAsync(UserSelectorArg)
  nameWithType: TeamTeamRoutes.MembersDeleteProfilePhotoAsync(UserSelectorArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoAsync(Dropbox.Api.Team.UserSelectorArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersDeleteProfilePhotoAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4083
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Deletes a team member&apos;s profile photo.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<TeamMemberInfo> MembersDeleteProfilePhotoAsync(UserSelectorArg user)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        Identity of the user whose profile photo will be

        deleted.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamMemberInfo}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersDeleteProfilePhotoAsync(user As UserSelectorArg) As Task(Of TeamMemberInfo)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersDeleteProfilePhotoError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhoto(Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhoto(Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  id: BeginMembersDeleteProfilePhoto(Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersDeleteProfilePhoto(UserSelectorArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersDeleteProfilePhoto(UserSelectorArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhoto(Dropbox.Api.Team.UserSelectorArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersDeleteProfilePhoto
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4100
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members delete profile photo route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersDeleteProfilePhoto(UserSelectorArg user, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        Identity of the user whose profile photo will be

        deleted.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersDeleteProfilePhoto(user As UserSelectorArg, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhoto*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersDeleteProfilePhoto(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersDeleteProfilePhoto(System.IAsyncResult)
  id: EndMembersDeleteProfilePhoto(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersDeleteProfilePhoto(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersDeleteProfilePhoto(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersDeleteProfilePhoto(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersDeleteProfilePhoto
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4119
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members delete profile photo\nroute to complete</p>\n"
  example: []
  syntax:
    content: public TeamMemberInfo EndMembersDeleteProfilePhoto(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.TeamMemberInfo
      description: The response to the send request
    content.vb: Public Function EndMembersDeleteProfilePhoto(asyncResult As IAsyncResult) As TeamMemberInfo
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersDeleteProfilePhoto*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersDeleteProfilePhotoError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetAvailableTeamMemberRolesAsync
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetAvailableTeamMemberRolesAsync
  id: MembersGetAvailableTeamMemberRolesAsync
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersGetAvailableTeamMemberRolesAsync()
  nameWithType: TeamTeamRoutes.MembersGetAvailableTeamMemberRolesAsync()
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetAvailableTeamMemberRolesAsync()
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersGetAvailableTeamMemberRolesAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4138
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Get available TeamMemberRoles for the connected team. To be used with <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsV2Async(Dropbox.Api.Team.MembersSetPermissions2Arg)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<MembersGetAvailableTeamMemberRolesResult> MembersGetAvailableTeamMemberRolesAsync()
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersGetAvailableTeamMemberRolesAsync As Task(Of MembersGetAvailableTeamMemberRolesResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetAvailableTeamMemberRolesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetAvailableTeamMemberRoles(System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetAvailableTeamMemberRoles(System.AsyncCallback,System.Object)
  id: BeginMembersGetAvailableTeamMemberRoles(System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersGetAvailableTeamMemberRoles(AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersGetAvailableTeamMemberRoles(AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetAvailableTeamMemberRoles(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersGetAvailableTeamMemberRoles
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4152
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members get available team member roles\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersGetAvailableTeamMemberRoles(AsyncCallback callback, object state = null)
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersGetAvailableTeamMemberRoles(callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetAvailableTeamMemberRoles*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetAvailableTeamMemberRoles(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetAvailableTeamMemberRoles(System.IAsyncResult)
  id: EndMembersGetAvailableTeamMemberRoles(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersGetAvailableTeamMemberRoles(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersGetAvailableTeamMemberRoles(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetAvailableTeamMemberRoles(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersGetAvailableTeamMemberRoles
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4166
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members get available team\nmember roles route to complete</p>\n"
  example: []
  syntax:
    content: public MembersGetAvailableTeamMemberRolesResult EndMembersGetAvailableTeamMemberRoles(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult
      description: The response to the send request
    content.vb: Public Function EndMembersGetAvailableTeamMemberRoles(asyncResult As IAsyncResult) As MembersGetAvailableTeamMemberRolesResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetAvailableTeamMemberRoles*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoV2Async(Dropbox.Api.Team.MembersGetInfoV2Arg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoV2Async(Dropbox.Api.Team.MembersGetInfoV2Arg)
  id: MembersGetInfoV2Async(Dropbox.Api.Team.MembersGetInfoV2Arg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersGetInfoV2Async(MembersGetInfoV2Arg)
  nameWithType: TeamTeamRoutes.MembersGetInfoV2Async(MembersGetInfoV2Arg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoV2Async(Dropbox.Api.Team.MembersGetInfoV2Arg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersGetInfoV2Async
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4190
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Returns information about multiple team members.</p>\n<p>Permission : Team information</p>\n<p>This endpoint will return <xref href=\"Dropbox.Api.Team.MembersGetInfoItem.IdNotFound\" data-throw-if-not-resolved=\"false\"></xref>, for IDs (or emails) that\ncannot be matched to a valid team member.</p>\n"
  example: []
  syntax:
    content: public Task<MembersGetInfoV2Result> MembersGetInfoV2Async(MembersGetInfoV2Arg membersGetInfoV2Arg)
    parameters:
    - id: membersGetInfoV2Arg
      type: Dropbox.Api.Team.MembersGetInfoV2Arg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersGetInfoV2Result}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersGetInfoV2Async(membersGetInfoV2Arg As MembersGetInfoV2Arg) As Task(Of MembersGetInfoV2Result)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoV2Async*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersGetInfoError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfoV2(Dropbox.Api.Team.MembersGetInfoV2Arg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfoV2(Dropbox.Api.Team.MembersGetInfoV2Arg,System.AsyncCallback,System.Object)
  id: BeginMembersGetInfoV2(Dropbox.Api.Team.MembersGetInfoV2Arg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersGetInfoV2(MembersGetInfoV2Arg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersGetInfoV2(MembersGetInfoV2Arg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfoV2(Dropbox.Api.Team.MembersGetInfoV2Arg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersGetInfoV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4204
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members get info route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersGetInfoV2(MembersGetInfoV2Arg membersGetInfoV2Arg, AsyncCallback callback, object state = null)
    parameters:
    - id: membersGetInfoV2Arg
      type: Dropbox.Api.Team.MembersGetInfoV2Arg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersGetInfoV2(membersGetInfoV2Arg As MembersGetInfoV2Arg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfoV2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoV2Async(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoV2Async(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  id: MembersGetInfoV2Async(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersGetInfoV2Async(IEnumerable<UserSelectorArg>)
  nameWithType: TeamTeamRoutes.MembersGetInfoV2Async(IEnumerable<UserSelectorArg>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoV2Async(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSelectorArg>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersGetInfoV2Async
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4224
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Returns information about multiple team members.</p>\n<p>Permission : Team information</p>\n<p>This endpoint will return <xref href=\"Dropbox.Api.Team.MembersGetInfoItem.IdNotFound\" data-throw-if-not-resolved=\"false\"></xref>, for IDs (or emails) that\ncannot be matched to a valid team member.</p>\n"
  example: []
  syntax:
    content: public Task<MembersGetInfoV2Result> MembersGetInfoV2Async(IEnumerable<UserSelectorArg> members)
    parameters:
    - id: members
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg}
      description: List of team members.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersGetInfoV2Result}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersGetInfoV2Async(members As IEnumerable(Of UserSelectorArg)) As Task(Of MembersGetInfoV2Result)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoV2Async*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersGetInfoError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: TeamTeamRoutes.MembersGetInfoV2Async(IEnumerable(Of UserSelectorArg))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoV2Async(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSelectorArg))
  name.vb: MembersGetInfoV2Async(IEnumerable(Of UserSelectorArg))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfoV2(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfoV2(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  id: BeginMembersGetInfoV2(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersGetInfoV2(IEnumerable<UserSelectorArg>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersGetInfoV2(IEnumerable<UserSelectorArg>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfoV2(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSelectorArg>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersGetInfoV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4240
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members get info route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersGetInfoV2(IEnumerable<UserSelectorArg> members, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: members
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg}
      description: List of team members.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersGetInfoV2(members As IEnumerable(Of UserSelectorArg), callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfoV2*
  nameWithType.vb: TeamTeamRoutes.BeginMembersGetInfoV2(IEnumerable(Of UserSelectorArg), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfoV2(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSelectorArg), System.AsyncCallback, System.Object)
  name.vb: BeginMembersGetInfoV2(IEnumerable(Of UserSelectorArg), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetInfoV2(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetInfoV2(System.IAsyncResult)
  id: EndMembersGetInfoV2(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersGetInfoV2(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersGetInfoV2(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetInfoV2(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersGetInfoV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4259
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members get info route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public MembersGetInfoV2Result EndMembersGetInfoV2(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.MembersGetInfoV2Result
      description: The response to the send request
    content.vb: Public Function EndMembersGetInfoV2(asyncResult As IAsyncResult) As MembersGetInfoV2Result
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetInfoV2*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersGetInfoError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoAsync(Dropbox.Api.Team.MembersGetInfoArgs)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoAsync(Dropbox.Api.Team.MembersGetInfoArgs)
  id: MembersGetInfoAsync(Dropbox.Api.Team.MembersGetInfoArgs)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersGetInfoAsync(MembersGetInfoArgs)
  nameWithType: TeamTeamRoutes.MembersGetInfoAsync(MembersGetInfoArgs)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoAsync(Dropbox.Api.Team.MembersGetInfoArgs)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersGetInfoAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4283
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Returns information about multiple team members.</p>\n<p>Permission : Team information</p>\n<p>This endpoint will return <xref href=\"Dropbox.Api.Team.MembersGetInfoItem.IdNotFound\" data-throw-if-not-resolved=\"false\"></xref>, for IDs (or emails) that\ncannot be matched to a valid team member.</p>\n"
  example: []
  syntax:
    content: public Task<List<MembersGetInfoItem>> MembersGetInfoAsync(MembersGetInfoArgs membersGetInfoArgs)
    parameters:
    - id: membersGetInfoArgs
      type: Dropbox.Api.Team.MembersGetInfoArgs
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.MembersGetInfoItem}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersGetInfoAsync(membersGetInfoArgs As MembersGetInfoArgs) As Task(Of List(Of MembersGetInfoItem))
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersGetInfoError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfo(Dropbox.Api.Team.MembersGetInfoArgs,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfo(Dropbox.Api.Team.MembersGetInfoArgs,System.AsyncCallback,System.Object)
  id: BeginMembersGetInfo(Dropbox.Api.Team.MembersGetInfoArgs,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersGetInfo(MembersGetInfoArgs, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersGetInfo(MembersGetInfoArgs, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfo(Dropbox.Api.Team.MembersGetInfoArgs, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersGetInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4297
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members get info route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersGetInfo(MembersGetInfoArgs membersGetInfoArgs, AsyncCallback callback, object state = null)
    parameters:
    - id: membersGetInfoArgs
      type: Dropbox.Api.Team.MembersGetInfoArgs
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersGetInfo(membersGetInfoArgs As MembersGetInfoArgs, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  id: MembersGetInfoAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersGetInfoAsync(IEnumerable<UserSelectorArg>)
  nameWithType: TeamTeamRoutes.MembersGetInfoAsync(IEnumerable<UserSelectorArg>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoAsync(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSelectorArg>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersGetInfoAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4317
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Returns information about multiple team members.</p>\n<p>Permission : Team information</p>\n<p>This endpoint will return <xref href=\"Dropbox.Api.Team.MembersGetInfoItem.IdNotFound\" data-throw-if-not-resolved=\"false\"></xref>, for IDs (or emails) that\ncannot be matched to a valid team member.</p>\n"
  example: []
  syntax:
    content: public Task<List<MembersGetInfoItem>> MembersGetInfoAsync(IEnumerable<UserSelectorArg> members)
    parameters:
    - id: members
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg}
      description: List of team members.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.MembersGetInfoItem}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersGetInfoAsync(members As IEnumerable(Of UserSelectorArg)) As Task(Of List(Of MembersGetInfoItem))
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersGetInfoError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: TeamTeamRoutes.MembersGetInfoAsync(IEnumerable(Of UserSelectorArg))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoAsync(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSelectorArg))
  name.vb: MembersGetInfoAsync(IEnumerable(Of UserSelectorArg))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfo(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfo(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  id: BeginMembersGetInfo(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersGetInfo(IEnumerable<UserSelectorArg>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersGetInfo(IEnumerable<UserSelectorArg>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfo(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSelectorArg>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersGetInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4333
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members get info route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersGetInfo(IEnumerable<UserSelectorArg> members, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: members
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg}
      description: List of team members.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersGetInfo(members As IEnumerable(Of UserSelectorArg), callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfo*
  nameWithType.vb: TeamTeamRoutes.BeginMembersGetInfo(IEnumerable(Of UserSelectorArg), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfo(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSelectorArg), System.AsyncCallback, System.Object)
  name.vb: BeginMembersGetInfo(IEnumerable(Of UserSelectorArg), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetInfo(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetInfo(System.IAsyncResult)
  id: EndMembersGetInfo(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersGetInfo(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersGetInfo(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetInfo(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersGetInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4352
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members get info route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public List<MembersGetInfoItem> EndMembersGetInfo(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: System.Collections.Generic.List{Dropbox.Api.Team.MembersGetInfoItem}
      description: The response to the send request
    content.vb: Public Function EndMembersGetInfo(asyncResult As IAsyncResult) As List(Of MembersGetInfoItem)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetInfo*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersGetInfoError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListV2Async(Dropbox.Api.Team.MembersListArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListV2Async(Dropbox.Api.Team.MembersListArg)
  id: MembersListV2Async(Dropbox.Api.Team.MembersListArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersListV2Async(MembersListArg)
  nameWithType: TeamTeamRoutes.MembersListV2Async(MembersListArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListV2Async(Dropbox.Api.Team.MembersListArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersListV2Async
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4373
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Lists members of a team.</p>\n<p>Permission : Team information.</p>\n"
  example: []
  syntax:
    content: public Task<MembersListV2Result> MembersListV2Async(MembersListArg membersListArg)
    parameters:
    - id: membersListArg
      type: Dropbox.Api.Team.MembersListArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersListV2Result}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersListV2Async(membersListArg As MembersListArg) As Task(Of MembersListV2Result)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListV2Async*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersListError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListV2(Dropbox.Api.Team.MembersListArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListV2(Dropbox.Api.Team.MembersListArg,System.AsyncCallback,System.Object)
  id: BeginMembersListV2(Dropbox.Api.Team.MembersListArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersListV2(MembersListArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersListV2(MembersListArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListV2(Dropbox.Api.Team.MembersListArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersListV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4387
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members list route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersListV2(MembersListArg membersListArg, AsyncCallback callback, object state = null)
    parameters:
    - id: membersListArg
      type: Dropbox.Api.Team.MembersListArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersListV2(membersListArg As MembersListArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListV2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListV2Async(System.UInt32,System.Boolean)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListV2Async(System.UInt32,System.Boolean)
  id: MembersListV2Async(System.UInt32,System.Boolean)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersListV2Async(UInt32, Boolean)
  nameWithType: TeamTeamRoutes.MembersListV2Async(UInt32, Boolean)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListV2Async(System.UInt32, System.Boolean)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersListV2Async
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4405
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Lists members of a team.</p>\n<p>Permission : Team information.</p>\n"
  example: []
  syntax:
    content: public Task<MembersListV2Result> MembersListV2Async(uint limit = 1000U, bool includeRemoved = false)
    parameters:
    - id: limit
      type: System.UInt32
      description: Number of results to return per call.
    - id: includeRemoved
      type: System.Boolean
      description: Whether to return removed members.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersListV2Result}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersListV2Async(limit As UInteger = 1000UI, includeRemoved As Boolean = False) As Task(Of MembersListV2Result)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListV2Async*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersListError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListV2(System.UInt32,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListV2(System.UInt32,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginMembersListV2(System.UInt32,System.Boolean,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersListV2(UInt32, Boolean, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersListV2(UInt32, Boolean, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListV2(System.UInt32, System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersListV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4424
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members list route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersListV2(uint limit = 1000U, bool includeRemoved = false, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: limit
      type: System.UInt32
      description: Number of results to return per call.
    - id: includeRemoved
      type: System.Boolean
      description: Whether to return removed members.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersListV2(limit As UInteger = 1000UI, includeRemoved As Boolean = False, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListV2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListV2(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListV2(System.IAsyncResult)
  id: EndMembersListV2(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersListV2(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersListV2(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListV2(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersListV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4445
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members list route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public MembersListV2Result EndMembersListV2(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.MembersListV2Result
      description: The response to the send request
    content.vb: Public Function EndMembersListV2(asyncResult As IAsyncResult) As MembersListV2Result
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListV2*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersListError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListAsync(Dropbox.Api.Team.MembersListArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListAsync(Dropbox.Api.Team.MembersListArg)
  id: MembersListAsync(Dropbox.Api.Team.MembersListArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersListAsync(MembersListArg)
  nameWithType: TeamTeamRoutes.MembersListAsync(MembersListArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListAsync(Dropbox.Api.Team.MembersListArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersListAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4466
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Lists members of a team.</p>\n<p>Permission : Team information.</p>\n"
  example: []
  syntax:
    content: public Task<MembersListResult> MembersListAsync(MembersListArg membersListArg)
    parameters:
    - id: membersListArg
      type: Dropbox.Api.Team.MembersListArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersListAsync(membersListArg As MembersListArg) As Task(Of MembersListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersListError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersList(Dropbox.Api.Team.MembersListArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersList(Dropbox.Api.Team.MembersListArg,System.AsyncCallback,System.Object)
  id: BeginMembersList(Dropbox.Api.Team.MembersListArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersList(MembersListArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersList(MembersListArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersList(Dropbox.Api.Team.MembersListArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4480
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members list route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersList(MembersListArg membersListArg, AsyncCallback callback, object state = null)
    parameters:
    - id: membersListArg
      type: Dropbox.Api.Team.MembersListArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersList(membersListArg As MembersListArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListAsync(System.UInt32,System.Boolean)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListAsync(System.UInt32,System.Boolean)
  id: MembersListAsync(System.UInt32,System.Boolean)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersListAsync(UInt32, Boolean)
  nameWithType: TeamTeamRoutes.MembersListAsync(UInt32, Boolean)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListAsync(System.UInt32, System.Boolean)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersListAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4498
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Lists members of a team.</p>\n<p>Permission : Team information.</p>\n"
  example: []
  syntax:
    content: public Task<MembersListResult> MembersListAsync(uint limit = 1000U, bool includeRemoved = false)
    parameters:
    - id: limit
      type: System.UInt32
      description: Number of results to return per call.
    - id: includeRemoved
      type: System.Boolean
      description: Whether to return removed members.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersListAsync(limit As UInteger = 1000UI, includeRemoved As Boolean = False) As Task(Of MembersListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersListError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersList(System.UInt32,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersList(System.UInt32,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginMembersList(System.UInt32,System.Boolean,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersList(UInt32, Boolean, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersList(UInt32, Boolean, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersList(System.UInt32, System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4517
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members list route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersList(uint limit = 1000U, bool includeRemoved = false, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: limit
      type: System.UInt32
      description: Number of results to return per call.
    - id: includeRemoved
      type: System.Boolean
      description: Whether to return removed members.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersList(limit As UInteger = 1000UI, includeRemoved As Boolean = False, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersList(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersList(System.IAsyncResult)
  id: EndMembersList(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersList(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersList(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersList(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4538
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members list route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public MembersListResult EndMembersList(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.MembersListResult
      description: The response to the send request
    content.vb: Public Function EndMembersList(asyncResult As IAsyncResult) As MembersListResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersList*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersListError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueV2Async(Dropbox.Api.Team.MembersListContinueArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueV2Async(Dropbox.Api.Team.MembersListContinueArg)
  id: MembersListContinueV2Async(Dropbox.Api.Team.MembersListContinueArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersListContinueV2Async(MembersListContinueArg)
  nameWithType: TeamTeamRoutes.MembersListContinueV2Async(MembersListContinueArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueV2Async(Dropbox.Api.Team.MembersListContinueArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersListContinueV2Async
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4561
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once a cursor has been retrieved from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListV2Async(Dropbox.Api.Team.MembersListArg)\" data-throw-if-not-resolved=\"false\"></xref>, use this to\npaginate through all team members.</p>\n<p>Permission : Team information.</p>\n"
  example: []
  syntax:
    content: public Task<MembersListV2Result> MembersListContinueV2Async(MembersListContinueArg membersListContinueArg)
    parameters:
    - id: membersListContinueArg
      type: Dropbox.Api.Team.MembersListContinueArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersListV2Result}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersListContinueV2Async(membersListContinueArg As MembersListContinueArg) As Task(Of MembersListV2Result)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueV2Async*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinueV2(Dropbox.Api.Team.MembersListContinueArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinueV2(Dropbox.Api.Team.MembersListContinueArg,System.AsyncCallback,System.Object)
  id: BeginMembersListContinueV2(Dropbox.Api.Team.MembersListContinueArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersListContinueV2(MembersListContinueArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersListContinueV2(MembersListContinueArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinueV2(Dropbox.Api.Team.MembersListContinueArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersListContinueV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4575
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members list continue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersListContinueV2(MembersListContinueArg membersListContinueArg, AsyncCallback callback, object state = null)
    parameters:
    - id: membersListContinueArg
      type: Dropbox.Api.Team.MembersListContinueArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersListContinueV2(membersListContinueArg As MembersListContinueArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinueV2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueV2Async(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueV2Async(System.String)
  id: MembersListContinueV2Async(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersListContinueV2Async(String)
  nameWithType: TeamTeamRoutes.MembersListContinueV2Async(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueV2Async(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersListContinueV2Async
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4595
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once a cursor has been retrieved from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListV2Async(Dropbox.Api.Team.MembersListArg)\" data-throw-if-not-resolved=\"false\"></xref>, use this to\npaginate through all team members.</p>\n<p>Permission : Team information.</p>\n"
  example: []
  syntax:
    content: public Task<MembersListV2Result> MembersListContinueV2Async(string cursor)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        Indicates from what point to get the next set of

        members.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersListV2Result}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersListContinueV2Async(cursor As String) As Task(Of MembersListV2Result)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueV2Async*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinueV2(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinueV2(System.String,System.AsyncCallback,System.Object)
  id: BeginMembersListContinueV2(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersListContinueV2(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersListContinueV2(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinueV2(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersListContinueV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4612
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members list continue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersListContinueV2(string cursor, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        Indicates from what point to get the next set of

        members.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersListContinueV2(cursor As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinueV2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListContinueV2(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListContinueV2(System.IAsyncResult)
  id: EndMembersListContinueV2(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersListContinueV2(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersListContinueV2(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListContinueV2(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersListContinueV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4631
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members list continue route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public MembersListV2Result EndMembersListContinueV2(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.MembersListV2Result
      description: The response to the send request
    content.vb: Public Function EndMembersListContinueV2(asyncResult As IAsyncResult) As MembersListV2Result
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListContinueV2*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueAsync(Dropbox.Api.Team.MembersListContinueArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueAsync(Dropbox.Api.Team.MembersListContinueArg)
  id: MembersListContinueAsync(Dropbox.Api.Team.MembersListContinueArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersListContinueAsync(MembersListContinueArg)
  nameWithType: TeamTeamRoutes.MembersListContinueAsync(MembersListContinueArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueAsync(Dropbox.Api.Team.MembersListContinueArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersListContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4654
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once a cursor has been retrieved from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListAsync(Dropbox.Api.Team.MembersListArg)\" data-throw-if-not-resolved=\"false\"></xref>, use this to\npaginate through all team members.</p>\n<p>Permission : Team information.</p>\n"
  example: []
  syntax:
    content: public Task<MembersListResult> MembersListContinueAsync(MembersListContinueArg membersListContinueArg)
    parameters:
    - id: membersListContinueArg
      type: Dropbox.Api.Team.MembersListContinueArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersListContinueAsync(membersListContinueArg As MembersListContinueArg) As Task(Of MembersListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinue(Dropbox.Api.Team.MembersListContinueArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinue(Dropbox.Api.Team.MembersListContinueArg,System.AsyncCallback,System.Object)
  id: BeginMembersListContinue(Dropbox.Api.Team.MembersListContinueArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersListContinue(MembersListContinueArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersListContinue(MembersListContinueArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinue(Dropbox.Api.Team.MembersListContinueArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersListContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4668
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members list continue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersListContinue(MembersListContinueArg membersListContinueArg, AsyncCallback callback, object state = null)
    parameters:
    - id: membersListContinueArg
      type: Dropbox.Api.Team.MembersListContinueArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersListContinue(membersListContinueArg As MembersListContinueArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueAsync(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueAsync(System.String)
  id: MembersListContinueAsync(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersListContinueAsync(String)
  nameWithType: TeamTeamRoutes.MembersListContinueAsync(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersListContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4688
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once a cursor has been retrieved from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListAsync(Dropbox.Api.Team.MembersListArg)\" data-throw-if-not-resolved=\"false\"></xref>, use this to\npaginate through all team members.</p>\n<p>Permission : Team information.</p>\n"
  example: []
  syntax:
    content: public Task<MembersListResult> MembersListContinueAsync(string cursor)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        Indicates from what point to get the next set of

        members.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersListContinueAsync(cursor As String) As Task(Of MembersListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinue(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinue(System.String,System.AsyncCallback,System.Object)
  id: BeginMembersListContinue(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersListContinue(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersListContinue(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinue(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersListContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4705
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members list continue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersListContinue(string cursor, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        Indicates from what point to get the next set of

        members.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersListContinue(cursor As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListContinue(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListContinue(System.IAsyncResult)
  id: EndMembersListContinue(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersListContinue(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersListContinue(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListContinue(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersListContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4724
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members list continue route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public MembersListResult EndMembersListContinue(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.MembersListResult
      description: The response to the send request
    content.vb: Public Function EndMembersListContinue(asyncResult As IAsyncResult) As MembersListResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListContinue*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesAsync(Dropbox.Api.Team.MembersDataTransferArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesAsync(Dropbox.Api.Team.MembersDataTransferArg)
  id: MembersMoveFormerMemberFilesAsync(Dropbox.Api.Team.MembersDataTransferArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersMoveFormerMemberFilesAsync(MembersDataTransferArg)
  nameWithType: TeamTeamRoutes.MembersMoveFormerMemberFilesAsync(MembersDataTransferArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesAsync(Dropbox.Api.Team.MembersDataTransferArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersMoveFormerMemberFilesAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4749
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Moves removed member&apos;s files to a different member. This endpoint initiates\nan asynchronous job. To obtain the final result of the job, the client should\nperiodically poll <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesJobStatusCheckAsync(Dropbox.Api.Async.PollArg)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<LaunchEmptyResult> MembersMoveFormerMemberFilesAsync(MembersDataTransferArg membersDataTransferArg)
    parameters:
    - id: membersDataTransferArg
      type: Dropbox.Api.Team.MembersDataTransferArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Async.LaunchEmptyResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersMoveFormerMemberFilesAsync(membersDataTransferArg As MembersDataTransferArg) As Task(Of LaunchEmptyResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersTransferFormerMembersFilesError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFiles(Dropbox.Api.Team.MembersDataTransferArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFiles(Dropbox.Api.Team.MembersDataTransferArg,System.AsyncCallback,System.Object)
  id: BeginMembersMoveFormerMemberFiles(Dropbox.Api.Team.MembersDataTransferArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersMoveFormerMemberFiles(MembersDataTransferArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersMoveFormerMemberFiles(MembersDataTransferArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFiles(Dropbox.Api.Team.MembersDataTransferArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersMoveFormerMemberFiles
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4764
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members move former member files\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersMoveFormerMemberFiles(MembersDataTransferArg membersDataTransferArg, AsyncCallback callback, object state = null)
    parameters:
    - id: membersDataTransferArg
      type: Dropbox.Api.Team.MembersDataTransferArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersMoveFormerMemberFiles(membersDataTransferArg As MembersDataTransferArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFiles*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesAsync(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesAsync(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg)
  id: MembersMoveFormerMemberFilesAsync(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersMoveFormerMemberFilesAsync(UserSelectorArg, UserSelectorArg, UserSelectorArg)
  nameWithType: TeamTeamRoutes.MembersMoveFormerMemberFilesAsync(UserSelectorArg, UserSelectorArg, UserSelectorArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesAsync(Dropbox.Api.Team.UserSelectorArg, Dropbox.Api.Team.UserSelectorArg, Dropbox.Api.Team.UserSelectorArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersMoveFormerMemberFilesAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4790
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Moves removed member&apos;s files to a different member. This endpoint initiates\nan asynchronous job. To obtain the final result of the job, the client should\nperiodically poll <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesJobStatusCheckAsync(Dropbox.Api.Async.PollArg)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<LaunchEmptyResult> MembersMoveFormerMemberFilesAsync(UserSelectorArg user, UserSelectorArg transferDestId, UserSelectorArg transferAdminId)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        Identity of user to remove/suspend/have their files

        moved.
    - id: transferDestId
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        Files from the deleted member account will be

        transferred to this user.
    - id: transferAdminId
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        Errors during the transfer process will be sent via

        email to this user.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Async.LaunchEmptyResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersMoveFormerMemberFilesAsync(user As UserSelectorArg, transferDestId As UserSelectorArg, transferAdminId As UserSelectorArg) As Task(Of LaunchEmptyResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersTransferFormerMembersFilesError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFiles(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFiles(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  id: BeginMembersMoveFormerMemberFiles(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersMoveFormerMemberFiles(UserSelectorArg, UserSelectorArg, UserSelectorArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersMoveFormerMemberFiles(UserSelectorArg, UserSelectorArg, UserSelectorArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFiles(Dropbox.Api.Team.UserSelectorArg, Dropbox.Api.Team.UserSelectorArg, Dropbox.Api.Team.UserSelectorArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersMoveFormerMemberFiles
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4816
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members move former member files\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersMoveFormerMemberFiles(UserSelectorArg user, UserSelectorArg transferDestId, UserSelectorArg transferAdminId, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        Identity of user to remove/suspend/have their files

        moved.
    - id: transferDestId
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        Files from the deleted member account will be

        transferred to this user.
    - id: transferAdminId
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        Errors during the transfer process will be sent via

        email to this user.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersMoveFormerMemberFiles(user As UserSelectorArg, transferDestId As UserSelectorArg, transferAdminId As UserSelectorArg, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFiles*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersMoveFormerMemberFiles(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersMoveFormerMemberFiles(System.IAsyncResult)
  id: EndMembersMoveFormerMemberFiles(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersMoveFormerMemberFiles(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersMoveFormerMemberFiles(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersMoveFormerMemberFiles(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersMoveFormerMemberFiles
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4839
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members move former member\nfiles route to complete</p>\n"
  example: []
  syntax:
    content: public LaunchEmptyResult EndMembersMoveFormerMemberFiles(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Async.LaunchEmptyResult
      description: The response to the send request
    content.vb: Public Function EndMembersMoveFormerMemberFiles(asyncResult As IAsyncResult) As LaunchEmptyResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersMoveFormerMemberFiles*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersTransferFormerMembersFilesError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesJobStatusCheckAsync(Dropbox.Api.Async.PollArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesJobStatusCheckAsync(Dropbox.Api.Async.PollArg)
  id: MembersMoveFormerMemberFilesJobStatusCheckAsync(Dropbox.Api.Async.PollArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersMoveFormerMemberFilesJobStatusCheckAsync(PollArg)
  nameWithType: TeamTeamRoutes.MembersMoveFormerMemberFilesJobStatusCheckAsync(PollArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesJobStatusCheckAsync(Dropbox.Api.Async.PollArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersMoveFormerMemberFilesJobStatusCheckAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4862
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once an async_job_id is returned from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesAsync(Dropbox.Api.Team.MembersDataTransferArg)\" data-throw-if-not-resolved=\"false\"></xref>\n, use this to poll the status of the asynchronous request.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<PollEmptyResult> MembersMoveFormerMemberFilesJobStatusCheckAsync(PollArg pollArg)
    parameters:
    - id: pollArg
      type: Dropbox.Api.Async.PollArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Async.PollEmptyResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersMoveFormerMemberFilesJobStatusCheckAsync(pollArg As PollArg) As Task(Of PollEmptyResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesJobStatusCheckAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFilesJobStatusCheck(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFilesJobStatusCheck(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  id: BeginMembersMoveFormerMemberFilesJobStatusCheck(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersMoveFormerMemberFilesJobStatusCheck(PollArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersMoveFormerMemberFilesJobStatusCheck(PollArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFilesJobStatusCheck(Dropbox.Api.Async.PollArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersMoveFormerMemberFilesJobStatusCheck
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4877
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members move former member files job\nstatus check route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersMoveFormerMemberFilesJobStatusCheck(PollArg pollArg, AsyncCallback callback, object state = null)
    parameters:
    - id: pollArg
      type: Dropbox.Api.Async.PollArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersMoveFormerMemberFilesJobStatusCheck(pollArg As PollArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFilesJobStatusCheck*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesJobStatusCheckAsync(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesJobStatusCheckAsync(System.String)
  id: MembersMoveFormerMemberFilesJobStatusCheckAsync(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersMoveFormerMemberFilesJobStatusCheckAsync(String)
  nameWithType: TeamTeamRoutes.MembersMoveFormerMemberFilesJobStatusCheckAsync(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesJobStatusCheckAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersMoveFormerMemberFilesJobStatusCheckAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4897
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once an async_job_id is returned from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesAsync(Dropbox.Api.Team.MembersDataTransferArg)\" data-throw-if-not-resolved=\"false\"></xref>\n, use this to poll the status of the asynchronous request.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<PollEmptyResult> MembersMoveFormerMemberFilesJobStatusCheckAsync(string asyncJobId)
    parameters:
    - id: asyncJobId
      type: System.String
      description: >-
        Id of the asynchronous job. This is the value of a

        response returned from the method that launched the job.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Async.PollEmptyResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersMoveFormerMemberFilesJobStatusCheckAsync(asyncJobId As String) As Task(Of PollEmptyResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesJobStatusCheckAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFilesJobStatusCheck(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFilesJobStatusCheck(System.String,System.AsyncCallback,System.Object)
  id: BeginMembersMoveFormerMemberFilesJobStatusCheck(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersMoveFormerMemberFilesJobStatusCheck(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersMoveFormerMemberFilesJobStatusCheck(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFilesJobStatusCheck(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersMoveFormerMemberFilesJobStatusCheck
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4915
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members move former member files job\nstatus check route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersMoveFormerMemberFilesJobStatusCheck(string asyncJobId, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: asyncJobId
      type: System.String
      description: >-
        Id of the asynchronous job. This is the value of a

        response returned from the method that launched the job.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersMoveFormerMemberFilesJobStatusCheck(asyncJobId As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFilesJobStatusCheck*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersMoveFormerMemberFilesJobStatusCheck(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersMoveFormerMemberFilesJobStatusCheck(System.IAsyncResult)
  id: EndMembersMoveFormerMemberFilesJobStatusCheck(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersMoveFormerMemberFilesJobStatusCheck(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersMoveFormerMemberFilesJobStatusCheck(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersMoveFormerMemberFilesJobStatusCheck(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersMoveFormerMemberFilesJobStatusCheck
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4934
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members move former member\nfiles job status check route to complete</p>\n"
  example: []
  syntax:
    content: public PollEmptyResult EndMembersMoveFormerMemberFilesJobStatusCheck(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Async.PollEmptyResult
      description: The response to the send request
    content.vb: Public Function EndMembersMoveFormerMemberFilesJobStatusCheck(asyncResult As IAsyncResult) As PollEmptyResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersMoveFormerMemberFilesJobStatusCheck*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRecoverAsync(Dropbox.Api.Team.MembersRecoverArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRecoverAsync(Dropbox.Api.Team.MembersRecoverArg)
  id: MembersRecoverAsync(Dropbox.Api.Team.MembersRecoverArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersRecoverAsync(MembersRecoverArg)
  nameWithType: TeamTeamRoutes.MembersRecoverAsync(MembersRecoverArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRecoverAsync(Dropbox.Api.Team.MembersRecoverArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersRecoverAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4956
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Recover a deleted member.</p>\n<p>Permission : Team member management</p>\n<p>Exactly one of team_member_id, email, or external_id must be provided to\nidentify the user account.</p>\n"
  example: []
  syntax:
    content: public Task MembersRecoverAsync(MembersRecoverArg membersRecoverArg)
    parameters:
    - id: membersRecoverArg
      type: Dropbox.Api.Team.MembersRecoverArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function MembersRecoverAsync(membersRecoverArg As MembersRecoverArg) As Task
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRecoverAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersRecoverError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRecover(Dropbox.Api.Team.MembersRecoverArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRecover(Dropbox.Api.Team.MembersRecoverArg,System.AsyncCallback,System.Object)
  id: BeginMembersRecover(Dropbox.Api.Team.MembersRecoverArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersRecover(MembersRecoverArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersRecover(MembersRecoverArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRecover(Dropbox.Api.Team.MembersRecoverArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersRecover
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4970
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members recover route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersRecover(MembersRecoverArg membersRecoverArg, AsyncCallback callback, object state = null)
    parameters:
    - id: membersRecoverArg
      type: Dropbox.Api.Team.MembersRecoverArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersRecover(membersRecoverArg As MembersRecoverArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRecover*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRecoverAsync(Dropbox.Api.Team.UserSelectorArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRecoverAsync(Dropbox.Api.Team.UserSelectorArg)
  id: MembersRecoverAsync(Dropbox.Api.Team.UserSelectorArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersRecoverAsync(UserSelectorArg)
  nameWithType: TeamTeamRoutes.MembersRecoverAsync(UserSelectorArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRecoverAsync(Dropbox.Api.Team.UserSelectorArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersRecoverAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 4988
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Recover a deleted member.</p>\n<p>Permission : Team member management</p>\n<p>Exactly one of team_member_id, email, or external_id must be provided to\nidentify the user account.</p>\n"
  example: []
  syntax:
    content: public Task MembersRecoverAsync(UserSelectorArg user)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: Identity of user to recover.
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function MembersRecoverAsync(user As UserSelectorArg) As Task
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRecoverAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersRecoverError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRecover(Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRecover(Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  id: BeginMembersRecover(Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersRecover(UserSelectorArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersRecover(UserSelectorArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRecover(Dropbox.Api.Team.UserSelectorArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersRecover
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5004
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members recover route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersRecover(UserSelectorArg user, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: Identity of user to recover.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersRecover(user As UserSelectorArg, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRecover*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRecover(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRecover(System.IAsyncResult)
  id: EndMembersRecover(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersRecover(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersRecover(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRecover(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersRecover
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5022
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members recover route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public void EndMembersRecover(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    content.vb: Public Sub EndMembersRecover(asyncResult As IAsyncResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRecover*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersRecoverError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveAsync(Dropbox.Api.Team.MembersRemoveArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveAsync(Dropbox.Api.Team.MembersRemoveArg)
  id: MembersRemoveAsync(Dropbox.Api.Team.MembersRemoveArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersRemoveAsync(MembersRemoveArg)
  nameWithType: TeamTeamRoutes.MembersRemoveAsync(MembersRemoveArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveAsync(Dropbox.Api.Team.MembersRemoveArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersRemoveAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5057
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Removes a member from a team.</p>\n<p>Permission : Team member management</p>\n<p>Exactly one of team_member_id, email, or external_id must be provided to\nidentify the user account.</p>\n<p>Accounts can be recovered via <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRecoverAsync(Dropbox.Api.Team.MembersRecoverArg)\" data-throw-if-not-resolved=\"false\"></xref> for a 7 day\nperiod or until the account has been permanently deleted or transferred to another\naccount (whichever comes first). Calling <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddAsync(Dropbox.Api.Team.MembersAddArg)\" data-throw-if-not-resolved=\"false\"></xref> while a user is\nstill recoverable on your team will return with <xref href=\"Dropbox.Api.Team.MemberAddResult.UserAlreadyOnTeam\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Accounts can have their files transferred via the admin console for a limited\ntime, based on the version history length associated with the team (180 days for\nmost teams).</p>\n<p>This endpoint may initiate an asynchronous job. To obtain the final result of\nthe job, the client should periodically poll <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveJobStatusGetAsync(Dropbox.Api.Async.PollArg)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public Task<LaunchEmptyResult> MembersRemoveAsync(MembersRemoveArg membersRemoveArg)
    parameters:
    - id: membersRemoveArg
      type: Dropbox.Api.Team.MembersRemoveArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Async.LaunchEmptyResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersRemoveAsync(membersRemoveArg As MembersRemoveArg) As Task(Of LaunchEmptyResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersRemoveError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemove(Dropbox.Api.Team.MembersRemoveArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemove(Dropbox.Api.Team.MembersRemoveArg,System.AsyncCallback,System.Object)
  id: BeginMembersRemove(Dropbox.Api.Team.MembersRemoveArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersRemove(MembersRemoveArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersRemove(MembersRemoveArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemove(Dropbox.Api.Team.MembersRemoveArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersRemove
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5071
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members remove route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersRemove(MembersRemoveArg membersRemoveArg, AsyncCallback callback, object state = null)
    parameters:
    - id: membersRemoveArg
      type: Dropbox.Api.Team.MembersRemoveArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersRemove(membersRemoveArg As MembersRemoveArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveAsync(Dropbox.Api.Team.UserSelectorArg,System.Boolean,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,System.Boolean,System.Boolean)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveAsync(Dropbox.Api.Team.UserSelectorArg,System.Boolean,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,System.Boolean,System.Boolean)
  id: MembersRemoveAsync(Dropbox.Api.Team.UserSelectorArg,System.Boolean,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,System.Boolean,System.Boolean)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersRemoveAsync(UserSelectorArg, Boolean, UserSelectorArg, UserSelectorArg, Boolean, Boolean)
  nameWithType: TeamTeamRoutes.MembersRemoveAsync(UserSelectorArg, Boolean, UserSelectorArg, UserSelectorArg, Boolean, Boolean)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveAsync(Dropbox.Api.Team.UserSelectorArg, System.Boolean, Dropbox.Api.Team.UserSelectorArg, Dropbox.Api.Team.UserSelectorArg, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersRemoveAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5123
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Removes a member from a team.</p>\n<p>Permission : Team member management</p>\n<p>Exactly one of team_member_id, email, or external_id must be provided to\nidentify the user account.</p>\n<p>Accounts can be recovered via <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRecoverAsync(Dropbox.Api.Team.MembersRecoverArg)\" data-throw-if-not-resolved=\"false\"></xref> for a 7 day\nperiod or until the account has been permanently deleted or transferred to another\naccount (whichever comes first). Calling <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddAsync(Dropbox.Api.Team.MembersAddArg)\" data-throw-if-not-resolved=\"false\"></xref> while a user is\nstill recoverable on your team will return with <xref href=\"Dropbox.Api.Team.MemberAddResult.UserAlreadyOnTeam\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Accounts can have their files transferred via the admin console for a limited\ntime, based on the version history length associated with the team (180 days for\nmost teams).</p>\n<p>This endpoint may initiate an asynchronous job. To obtain the final result of\nthe job, the client should periodically poll <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveJobStatusGetAsync(Dropbox.Api.Async.PollArg)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public Task<LaunchEmptyResult> MembersRemoveAsync(UserSelectorArg user, bool wipeData = true, UserSelectorArg transferDestId = null, UserSelectorArg transferAdminId = null, bool keepAccount = false, bool retainTeamShares = false)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        Identity of user to remove/suspend/have their files

        moved.
    - id: wipeData
      type: System.Boolean
      description: >-
        If provided, controls if the user&apos;s data will be deleted on

        their linked devices.
    - id: transferDestId
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        If provided, files from the deleted member account

        will be transferred to this user.
    - id: transferAdminId
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        If provided, errors during the transfer process will

        be sent via email to this user. If the transfer_dest_id argument was provided, then

        this argument must be provided as well.
    - id: keepAccount
      type: System.Boolean
      description: >-
        Downgrade the member to a Basic account. The user will

        retain the email address associated with their Dropbox  account and data in their

        account that is not restricted to team members. In order to keep the account the

        argument <code data-dev-comment-type="paramref" class="paramref">wipeData</code> should be set to <code>false</code>.
    - id: retainTeamShares
      type: System.Boolean
      description: >-
        If provided, allows removed users to keep access to

        Dropbox folders (not Dropbox Paper folders) already explicitly shared with them

        (not via a group) when they are downgraded to a Basic account. Users will not

        retain access to folders that do not allow external sharing. In order to keep the

        sharing relationships, the arguments <code data-dev-comment-type="paramref" class="paramref">wipeData</code> should be set to

        <code>false</code> and <code data-dev-comment-type="paramref" class="paramref">keepAccount</code> should be set to

        <code>true</code>.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Async.LaunchEmptyResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersRemoveAsync(user As UserSelectorArg, wipeData As Boolean = True, transferDestId As UserSelectorArg = Nothing, transferAdminId As UserSelectorArg = Nothing, keepAccount As Boolean = False, retainTeamShares As Boolean = False) As Task(Of LaunchEmptyResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersRemoveError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemove(Dropbox.Api.Team.UserSelectorArg,System.Boolean,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemove(Dropbox.Api.Team.UserSelectorArg,System.Boolean,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginMembersRemove(Dropbox.Api.Team.UserSelectorArg,System.Boolean,Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.UserSelectorArg,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersRemove(UserSelectorArg, Boolean, UserSelectorArg, UserSelectorArg, Boolean, Boolean, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersRemove(UserSelectorArg, Boolean, UserSelectorArg, UserSelectorArg, Boolean, Boolean, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemove(Dropbox.Api.Team.UserSelectorArg, System.Boolean, Dropbox.Api.Team.UserSelectorArg, Dropbox.Api.Team.UserSelectorArg, System.Boolean, System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersRemove
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5168
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members remove route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersRemove(UserSelectorArg user, bool wipeData = true, UserSelectorArg transferDestId = null, UserSelectorArg transferAdminId = null, bool keepAccount = false, bool retainTeamShares = false, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        Identity of user to remove/suspend/have their files

        moved.
    - id: wipeData
      type: System.Boolean
      description: >-
        If provided, controls if the user&apos;s data will be deleted on

        their linked devices.
    - id: transferDestId
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        If provided, files from the deleted member account

        will be transferred to this user.
    - id: transferAdminId
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        If provided, errors during the transfer process will

        be sent via email to this user. If the transfer_dest_id argument was provided, then

        this argument must be provided as well.
    - id: keepAccount
      type: System.Boolean
      description: >-
        Downgrade the member to a Basic account. The user will

        retain the email address associated with their Dropbox  account and data in their

        account that is not restricted to team members. In order to keep the account the

        argument <code data-dev-comment-type="paramref" class="paramref">wipeData</code> should be set to <code>false</code>.
    - id: retainTeamShares
      type: System.Boolean
      description: >-
        If provided, allows removed users to keep access to

        Dropbox folders (not Dropbox Paper folders) already explicitly shared with them

        (not via a group) when they are downgraded to a Basic account. Users will not

        retain access to folders that do not allow external sharing. In order to keep the

        sharing relationships, the arguments <code data-dev-comment-type="paramref" class="paramref">wipeData</code> should be set to

        <code>false</code> and <code data-dev-comment-type="paramref" class="paramref">keepAccount</code> should be set to

        <code>true</code>.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersRemove(user As UserSelectorArg, wipeData As Boolean = True, transferDestId As UserSelectorArg = Nothing, transferAdminId As UserSelectorArg = Nothing, keepAccount As Boolean = False, retainTeamShares As Boolean = False, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRemove(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRemove(System.IAsyncResult)
  id: EndMembersRemove(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersRemove(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersRemove(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRemove(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersRemove
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5197
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members remove route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public LaunchEmptyResult EndMembersRemove(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Async.LaunchEmptyResult
      description: The response to the send request
    content.vb: Public Function EndMembersRemove(asyncResult As IAsyncResult) As LaunchEmptyResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRemove*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersRemoveError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveJobStatusGetAsync(Dropbox.Api.Async.PollArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveJobStatusGetAsync(Dropbox.Api.Async.PollArg)
  id: MembersRemoveJobStatusGetAsync(Dropbox.Api.Async.PollArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersRemoveJobStatusGetAsync(PollArg)
  nameWithType: TeamTeamRoutes.MembersRemoveJobStatusGetAsync(PollArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveJobStatusGetAsync(Dropbox.Api.Async.PollArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersRemoveJobStatusGetAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5220
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once an async_job_id is returned from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveAsync(Dropbox.Api.Team.MembersRemoveArg)\" data-throw-if-not-resolved=\"false\"></xref> , use this to\npoll the status of the asynchronous request.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<PollEmptyResult> MembersRemoveJobStatusGetAsync(PollArg pollArg)
    parameters:
    - id: pollArg
      type: Dropbox.Api.Async.PollArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Async.PollEmptyResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersRemoveJobStatusGetAsync(pollArg As PollArg) As Task(Of PollEmptyResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveJobStatusGetAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemoveJobStatusGet(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemoveJobStatusGet(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  id: BeginMembersRemoveJobStatusGet(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersRemoveJobStatusGet(PollArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersRemoveJobStatusGet(PollArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemoveJobStatusGet(Dropbox.Api.Async.PollArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersRemoveJobStatusGet
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5235
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members remove job status get\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersRemoveJobStatusGet(PollArg pollArg, AsyncCallback callback, object state = null)
    parameters:
    - id: pollArg
      type: Dropbox.Api.Async.PollArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersRemoveJobStatusGet(pollArg As PollArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemoveJobStatusGet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveJobStatusGetAsync(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveJobStatusGetAsync(System.String)
  id: MembersRemoveJobStatusGetAsync(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersRemoveJobStatusGetAsync(String)
  nameWithType: TeamTeamRoutes.MembersRemoveJobStatusGetAsync(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveJobStatusGetAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersRemoveJobStatusGetAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5255
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once an async_job_id is returned from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveAsync(Dropbox.Api.Team.MembersRemoveArg)\" data-throw-if-not-resolved=\"false\"></xref> , use this to\npoll the status of the asynchronous request.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<PollEmptyResult> MembersRemoveJobStatusGetAsync(string asyncJobId)
    parameters:
    - id: asyncJobId
      type: System.String
      description: >-
        Id of the asynchronous job. This is the value of a

        response returned from the method that launched the job.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Async.PollEmptyResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersRemoveJobStatusGetAsync(asyncJobId As String) As Task(Of PollEmptyResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveJobStatusGetAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemoveJobStatusGet(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemoveJobStatusGet(System.String,System.AsyncCallback,System.Object)
  id: BeginMembersRemoveJobStatusGet(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersRemoveJobStatusGet(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersRemoveJobStatusGet(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemoveJobStatusGet(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersRemoveJobStatusGet
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5273
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members remove job status get\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersRemoveJobStatusGet(string asyncJobId, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: asyncJobId
      type: System.String
      description: >-
        Id of the asynchronous job. This is the value of a

        response returned from the method that launched the job.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersRemoveJobStatusGet(asyncJobId As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemoveJobStatusGet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRemoveJobStatusGet(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRemoveJobStatusGet(System.IAsyncResult)
  id: EndMembersRemoveJobStatusGet(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersRemoveJobStatusGet(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersRemoveJobStatusGet(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRemoveJobStatusGet(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersRemoveJobStatusGet
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5292
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members remove job status get\nroute to complete</p>\n"
  example: []
  syntax:
    content: public PollEmptyResult EndMembersRemoveJobStatusGet(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Async.PollEmptyResult
      description: The response to the send request
    content.vb: Public Function EndMembersRemoveJobStatusGet(asyncResult As IAsyncResult) As PollEmptyResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRemoveJobStatusGet*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsAddAsync(Dropbox.Api.Team.AddSecondaryEmailsArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsAddAsync(Dropbox.Api.Team.AddSecondaryEmailsArg)
  id: MembersSecondaryEmailsAddAsync(Dropbox.Api.Team.AddSecondaryEmailsArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSecondaryEmailsAddAsync(AddSecondaryEmailsArg)
  nameWithType: TeamTeamRoutes.MembersSecondaryEmailsAddAsync(AddSecondaryEmailsArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsAddAsync(Dropbox.Api.Team.AddSecondaryEmailsArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSecondaryEmailsAddAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5315
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Add secondary emails to users.</p>\n<p>Permission : Team member management.</p>\n<p>Emails that are on verified domains will be verified automatically. For each\nemail address not on a verified domain a verification email will be sent.</p>\n"
  example: []
  syntax:
    content: public Task<AddSecondaryEmailsResult> MembersSecondaryEmailsAddAsync(AddSecondaryEmailsArg addSecondaryEmailsArg)
    parameters:
    - id: addSecondaryEmailsArg
      type: Dropbox.Api.Team.AddSecondaryEmailsArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.AddSecondaryEmailsResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersSecondaryEmailsAddAsync(addSecondaryEmailsArg As AddSecondaryEmailsArg) As Task(Of AddSecondaryEmailsResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsAddAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.AddSecondaryEmailsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsAdd(Dropbox.Api.Team.AddSecondaryEmailsArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsAdd(Dropbox.Api.Team.AddSecondaryEmailsArg,System.AsyncCallback,System.Object)
  id: BeginMembersSecondaryEmailsAdd(Dropbox.Api.Team.AddSecondaryEmailsArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSecondaryEmailsAdd(AddSecondaryEmailsArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSecondaryEmailsAdd(AddSecondaryEmailsArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsAdd(Dropbox.Api.Team.AddSecondaryEmailsArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSecondaryEmailsAdd
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5329
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members secondary emails add route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSecondaryEmailsAdd(AddSecondaryEmailsArg addSecondaryEmailsArg, AsyncCallback callback, object state = null)
    parameters:
    - id: addSecondaryEmailsArg
      type: Dropbox.Api.Team.AddSecondaryEmailsArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSecondaryEmailsAdd(addSecondaryEmailsArg As AddSecondaryEmailsArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsAdd*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsAddAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsAddAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg})
  id: MembersSecondaryEmailsAddAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSecondaryEmailsAddAsync(IEnumerable<UserSecondaryEmailsArg>)
  nameWithType: TeamTeamRoutes.MembersSecondaryEmailsAddAsync(IEnumerable<UserSecondaryEmailsArg>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsAddAsync(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSecondaryEmailsArg>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSecondaryEmailsAddAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5348
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Add secondary emails to users.</p>\n<p>Permission : Team member management.</p>\n<p>Emails that are on verified domains will be verified automatically. For each\nemail address not on a verified domain a verification email will be sent.</p>\n"
  example: []
  syntax:
    content: public Task<AddSecondaryEmailsResult> MembersSecondaryEmailsAddAsync(IEnumerable<UserSecondaryEmailsArg> newSecondaryEmails)
    parameters:
    - id: newSecondaryEmails
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg}
      description: List of users and secondary emails to add.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.AddSecondaryEmailsResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersSecondaryEmailsAddAsync(newSecondaryEmails As IEnumerable(Of UserSecondaryEmailsArg)) As Task(Of AddSecondaryEmailsResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsAddAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.AddSecondaryEmailsError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: TeamTeamRoutes.MembersSecondaryEmailsAddAsync(IEnumerable(Of UserSecondaryEmailsArg))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsAddAsync(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSecondaryEmailsArg))
  name.vb: MembersSecondaryEmailsAddAsync(IEnumerable(Of UserSecondaryEmailsArg))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsAdd(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsAdd(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg},System.AsyncCallback,System.Object)
  id: BeginMembersSecondaryEmailsAdd(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSecondaryEmailsAdd(IEnumerable<UserSecondaryEmailsArg>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSecondaryEmailsAdd(IEnumerable<UserSecondaryEmailsArg>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsAdd(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSecondaryEmailsArg>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSecondaryEmailsAdd
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5364
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members secondary emails add route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSecondaryEmailsAdd(IEnumerable<UserSecondaryEmailsArg> newSecondaryEmails, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: newSecondaryEmails
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg}
      description: List of users and secondary emails to add.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSecondaryEmailsAdd(newSecondaryEmails As IEnumerable(Of UserSecondaryEmailsArg), callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsAdd*
  nameWithType.vb: TeamTeamRoutes.BeginMembersSecondaryEmailsAdd(IEnumerable(Of UserSecondaryEmailsArg), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsAdd(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSecondaryEmailsArg), System.AsyncCallback, System.Object)
  name.vb: BeginMembersSecondaryEmailsAdd(IEnumerable(Of UserSecondaryEmailsArg), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsAdd(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsAdd(System.IAsyncResult)
  id: EndMembersSecondaryEmailsAdd(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersSecondaryEmailsAdd(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersSecondaryEmailsAdd(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsAdd(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersSecondaryEmailsAdd
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5383
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members secondary emails add\nroute to complete</p>\n"
  example: []
  syntax:
    content: public AddSecondaryEmailsResult EndMembersSecondaryEmailsAdd(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.AddSecondaryEmailsResult
      description: The response to the send request
    content.vb: Public Function EndMembersSecondaryEmailsAdd(asyncResult As IAsyncResult) As AddSecondaryEmailsResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsAdd*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.AddSecondaryEmailsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsDeleteAsync(Dropbox.Api.Team.DeleteSecondaryEmailsArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsDeleteAsync(Dropbox.Api.Team.DeleteSecondaryEmailsArg)
  id: MembersSecondaryEmailsDeleteAsync(Dropbox.Api.Team.DeleteSecondaryEmailsArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSecondaryEmailsDeleteAsync(DeleteSecondaryEmailsArg)
  nameWithType: TeamTeamRoutes.MembersSecondaryEmailsDeleteAsync(DeleteSecondaryEmailsArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsDeleteAsync(Dropbox.Api.Team.DeleteSecondaryEmailsArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSecondaryEmailsDeleteAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5403
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Delete secondary emails from users</p>\n<p>Permission : Team member management.</p>\n<p>Users will be notified of deletions of verified secondary emails at both the\nsecondary email and their primary email.</p>\n"
  example: []
  syntax:
    content: public Task<DeleteSecondaryEmailsResult> MembersSecondaryEmailsDeleteAsync(DeleteSecondaryEmailsArg deleteSecondaryEmailsArg)
    parameters:
    - id: deleteSecondaryEmailsArg
      type: Dropbox.Api.Team.DeleteSecondaryEmailsArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.DeleteSecondaryEmailsResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersSecondaryEmailsDeleteAsync(deleteSecondaryEmailsArg As DeleteSecondaryEmailsArg) As Task(Of DeleteSecondaryEmailsResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsDeleteAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsDelete(Dropbox.Api.Team.DeleteSecondaryEmailsArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsDelete(Dropbox.Api.Team.DeleteSecondaryEmailsArg,System.AsyncCallback,System.Object)
  id: BeginMembersSecondaryEmailsDelete(Dropbox.Api.Team.DeleteSecondaryEmailsArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSecondaryEmailsDelete(DeleteSecondaryEmailsArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSecondaryEmailsDelete(DeleteSecondaryEmailsArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsDelete(Dropbox.Api.Team.DeleteSecondaryEmailsArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSecondaryEmailsDelete
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5418
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members secondary emails delete\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSecondaryEmailsDelete(DeleteSecondaryEmailsArg deleteSecondaryEmailsArg, AsyncCallback callback, object state = null)
    parameters:
    - id: deleteSecondaryEmailsArg
      type: Dropbox.Api.Team.DeleteSecondaryEmailsArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSecondaryEmailsDelete(deleteSecondaryEmailsArg As DeleteSecondaryEmailsArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsDelete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsDeleteAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsDeleteAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg})
  id: MembersSecondaryEmailsDeleteAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSecondaryEmailsDeleteAsync(IEnumerable<UserSecondaryEmailsArg>)
  nameWithType: TeamTeamRoutes.MembersSecondaryEmailsDeleteAsync(IEnumerable<UserSecondaryEmailsArg>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsDeleteAsync(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSecondaryEmailsArg>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSecondaryEmailsDeleteAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5435
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Delete secondary emails from users</p>\n<p>Permission : Team member management.</p>\n<p>Users will be notified of deletions of verified secondary emails at both the\nsecondary email and their primary email.</p>\n"
  example: []
  syntax:
    content: public Task<DeleteSecondaryEmailsResult> MembersSecondaryEmailsDeleteAsync(IEnumerable<UserSecondaryEmailsArg> emailsToDelete)
    parameters:
    - id: emailsToDelete
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg}
      description: >-
        List of users and their secondary emails to

        delete.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.DeleteSecondaryEmailsResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersSecondaryEmailsDeleteAsync(emailsToDelete As IEnumerable(Of UserSecondaryEmailsArg)) As Task(Of DeleteSecondaryEmailsResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsDeleteAsync*
  nameWithType.vb: TeamTeamRoutes.MembersSecondaryEmailsDeleteAsync(IEnumerable(Of UserSecondaryEmailsArg))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsDeleteAsync(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSecondaryEmailsArg))
  name.vb: MembersSecondaryEmailsDeleteAsync(IEnumerable(Of UserSecondaryEmailsArg))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsDelete(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsDelete(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg},System.AsyncCallback,System.Object)
  id: BeginMembersSecondaryEmailsDelete(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSecondaryEmailsDelete(IEnumerable<UserSecondaryEmailsArg>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSecondaryEmailsDelete(IEnumerable<UserSecondaryEmailsArg>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsDelete(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSecondaryEmailsArg>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSecondaryEmailsDelete
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5453
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members secondary emails delete\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSecondaryEmailsDelete(IEnumerable<UserSecondaryEmailsArg> emailsToDelete, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: emailsToDelete
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg}
      description: >-
        List of users and their secondary emails to

        delete.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSecondaryEmailsDelete(emailsToDelete As IEnumerable(Of UserSecondaryEmailsArg), callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsDelete*
  nameWithType.vb: TeamTeamRoutes.BeginMembersSecondaryEmailsDelete(IEnumerable(Of UserSecondaryEmailsArg), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsDelete(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSecondaryEmailsArg), System.AsyncCallback, System.Object)
  name.vb: BeginMembersSecondaryEmailsDelete(IEnumerable(Of UserSecondaryEmailsArg), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsDelete(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsDelete(System.IAsyncResult)
  id: EndMembersSecondaryEmailsDelete(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersSecondaryEmailsDelete(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersSecondaryEmailsDelete(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsDelete(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersSecondaryEmailsDelete
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5469
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members secondary emails\ndelete route to complete</p>\n"
  example: []
  syntax:
    content: public DeleteSecondaryEmailsResult EndMembersSecondaryEmailsDelete(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.DeleteSecondaryEmailsResult
      description: The response to the send request
    content.vb: Public Function EndMembersSecondaryEmailsDelete(asyncResult As IAsyncResult) As DeleteSecondaryEmailsResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsDelete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsResendVerificationEmailsAsync(Dropbox.Api.Team.ResendVerificationEmailArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsResendVerificationEmailsAsync(Dropbox.Api.Team.ResendVerificationEmailArg)
  id: MembersSecondaryEmailsResendVerificationEmailsAsync(Dropbox.Api.Team.ResendVerificationEmailArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSecondaryEmailsResendVerificationEmailsAsync(ResendVerificationEmailArg)
  nameWithType: TeamTeamRoutes.MembersSecondaryEmailsResendVerificationEmailsAsync(ResendVerificationEmailArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsResendVerificationEmailsAsync(Dropbox.Api.Team.ResendVerificationEmailArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSecondaryEmailsResendVerificationEmailsAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5487
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Resend secondary email verification emails.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<ResendVerificationEmailResult> MembersSecondaryEmailsResendVerificationEmailsAsync(ResendVerificationEmailArg resendVerificationEmailArg)
    parameters:
    - id: resendVerificationEmailArg
      type: Dropbox.Api.Team.ResendVerificationEmailArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ResendVerificationEmailResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersSecondaryEmailsResendVerificationEmailsAsync(resendVerificationEmailArg As ResendVerificationEmailArg) As Task(Of ResendVerificationEmailResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsResendVerificationEmailsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsResendVerificationEmails(Dropbox.Api.Team.ResendVerificationEmailArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsResendVerificationEmails(Dropbox.Api.Team.ResendVerificationEmailArg,System.AsyncCallback,System.Object)
  id: BeginMembersSecondaryEmailsResendVerificationEmails(Dropbox.Api.Team.ResendVerificationEmailArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSecondaryEmailsResendVerificationEmails(ResendVerificationEmailArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSecondaryEmailsResendVerificationEmails(ResendVerificationEmailArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsResendVerificationEmails(Dropbox.Api.Team.ResendVerificationEmailArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSecondaryEmailsResendVerificationEmails
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5502
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members secondary emails resend\nverification emails route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSecondaryEmailsResendVerificationEmails(ResendVerificationEmailArg resendVerificationEmailArg, AsyncCallback callback, object state = null)
    parameters:
    - id: resendVerificationEmailArg
      type: Dropbox.Api.Team.ResendVerificationEmailArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSecondaryEmailsResendVerificationEmails(resendVerificationEmailArg As ResendVerificationEmailArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsResendVerificationEmails*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsResendVerificationEmailsAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsResendVerificationEmailsAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg})
  id: MembersSecondaryEmailsResendVerificationEmailsAsync(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSecondaryEmailsResendVerificationEmailsAsync(IEnumerable<UserSecondaryEmailsArg>)
  nameWithType: TeamTeamRoutes.MembersSecondaryEmailsResendVerificationEmailsAsync(IEnumerable<UserSecondaryEmailsArg>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsResendVerificationEmailsAsync(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSecondaryEmailsArg>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSecondaryEmailsResendVerificationEmailsAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5517
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Resend secondary email verification emails.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<ResendVerificationEmailResult> MembersSecondaryEmailsResendVerificationEmailsAsync(IEnumerable<UserSecondaryEmailsArg> emailsToResend)
    parameters:
    - id: emailsToResend
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg}
      description: >-
        List of users and secondary emails to resend

        verification emails to.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.ResendVerificationEmailResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersSecondaryEmailsResendVerificationEmailsAsync(emailsToResend As IEnumerable(Of UserSecondaryEmailsArg)) As Task(Of ResendVerificationEmailResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsResendVerificationEmailsAsync*
  nameWithType.vb: TeamTeamRoutes.MembersSecondaryEmailsResendVerificationEmailsAsync(IEnumerable(Of UserSecondaryEmailsArg))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsResendVerificationEmailsAsync(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSecondaryEmailsArg))
  name.vb: MembersSecondaryEmailsResendVerificationEmailsAsync(IEnumerable(Of UserSecondaryEmailsArg))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsResendVerificationEmails(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsResendVerificationEmails(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg},System.AsyncCallback,System.Object)
  id: BeginMembersSecondaryEmailsResendVerificationEmails(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSecondaryEmailsResendVerificationEmails(IEnumerable<UserSecondaryEmailsArg>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSecondaryEmailsResendVerificationEmails(IEnumerable<UserSecondaryEmailsArg>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsResendVerificationEmails(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSecondaryEmailsArg>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSecondaryEmailsResendVerificationEmails
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5535
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members secondary emails resend\nverification emails route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSecondaryEmailsResendVerificationEmails(IEnumerable<UserSecondaryEmailsArg> emailsToResend, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: emailsToResend
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg}
      description: >-
        List of users and secondary emails to resend

        verification emails to.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSecondaryEmailsResendVerificationEmails(emailsToResend As IEnumerable(Of UserSecondaryEmailsArg), callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsResendVerificationEmails*
  nameWithType.vb: TeamTeamRoutes.BeginMembersSecondaryEmailsResendVerificationEmails(IEnumerable(Of UserSecondaryEmailsArg), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsResendVerificationEmails(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSecondaryEmailsArg), System.AsyncCallback, System.Object)
  name.vb: BeginMembersSecondaryEmailsResendVerificationEmails(IEnumerable(Of UserSecondaryEmailsArg), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsResendVerificationEmails(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsResendVerificationEmails(System.IAsyncResult)
  id: EndMembersSecondaryEmailsResendVerificationEmails(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersSecondaryEmailsResendVerificationEmails(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersSecondaryEmailsResendVerificationEmails(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsResendVerificationEmails(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersSecondaryEmailsResendVerificationEmails
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5551
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members secondary emails\nresend verification emails route to complete</p>\n"
  example: []
  syntax:
    content: public ResendVerificationEmailResult EndMembersSecondaryEmailsResendVerificationEmails(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.ResendVerificationEmailResult
      description: The response to the send request
    content.vb: Public Function EndMembersSecondaryEmailsResendVerificationEmails(asyncResult As IAsyncResult) As ResendVerificationEmailResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsResendVerificationEmails*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSendWelcomeEmailAsync(Dropbox.Api.Team.UserSelectorArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSendWelcomeEmailAsync(Dropbox.Api.Team.UserSelectorArg)
  id: MembersSendWelcomeEmailAsync(Dropbox.Api.Team.UserSelectorArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSendWelcomeEmailAsync(UserSelectorArg)
  nameWithType: TeamTeamRoutes.MembersSendWelcomeEmailAsync(UserSelectorArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSendWelcomeEmailAsync(Dropbox.Api.Team.UserSelectorArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSendWelcomeEmailAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5574
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Sends welcome email to pending team member.</p>\n<p>Permission : Team member management</p>\n<p>Exactly one of team_member_id, email, or external_id must be provided to\nidentify the user account.</p>\n<p>No-op if team member is not pending.</p>\n"
  example: []
  syntax:
    content: public Task MembersSendWelcomeEmailAsync(UserSelectorArg userSelectorArg)
    parameters:
    - id: userSelectorArg
      type: Dropbox.Api.Team.UserSelectorArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function MembersSendWelcomeEmailAsync(userSelectorArg As UserSelectorArg) As Task
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSendWelcomeEmailAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSendWelcomeError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSendWelcomeEmail(Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSendWelcomeEmail(Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  id: BeginMembersSendWelcomeEmail(Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSendWelcomeEmail(UserSelectorArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSendWelcomeEmail(UserSelectorArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSendWelcomeEmail(Dropbox.Api.Team.UserSelectorArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSendWelcomeEmail
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5588
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members send welcome email route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSendWelcomeEmail(UserSelectorArg userSelectorArg, AsyncCallback callback, object state = null)
    parameters:
    - id: userSelectorArg
      type: Dropbox.Api.Team.UserSelectorArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSendWelcomeEmail(userSelectorArg As UserSelectorArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSendWelcomeEmail*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSendWelcomeEmail(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSendWelcomeEmail(System.IAsyncResult)
  id: EndMembersSendWelcomeEmail(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersSendWelcomeEmail(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersSendWelcomeEmail(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSendWelcomeEmail(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersSendWelcomeEmail
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5604
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members send welcome email\nroute to complete</p>\n"
  example: []
  syntax:
    content: public void EndMembersSendWelcomeEmail(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    content.vb: Public Sub EndMembersSendWelcomeEmail(asyncResult As IAsyncResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSendWelcomeEmail*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSendWelcomeError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsV2Async(Dropbox.Api.Team.MembersSetPermissions2Arg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsV2Async(Dropbox.Api.Team.MembersSetPermissions2Arg)
  id: MembersSetAdminPermissionsV2Async(Dropbox.Api.Team.MembersSetPermissions2Arg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSetAdminPermissionsV2Async(MembersSetPermissions2Arg)
  nameWithType: TeamTeamRoutes.MembersSetAdminPermissionsV2Async(MembersSetPermissions2Arg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsV2Async(Dropbox.Api.Team.MembersSetPermissions2Arg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSetAdminPermissionsV2Async
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5623
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Updates a team member&apos;s permissions.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<MembersSetPermissions2Result> MembersSetAdminPermissionsV2Async(MembersSetPermissions2Arg membersSetPermissions2Arg)
    parameters:
    - id: membersSetPermissions2Arg
      type: Dropbox.Api.Team.MembersSetPermissions2Arg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersSetPermissions2Result}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersSetAdminPermissionsV2Async(membersSetPermissions2Arg As MembersSetPermissions2Arg) As Task(Of MembersSetPermissions2Result)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsV2Async*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSetPermissions2Error" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissionsV2(Dropbox.Api.Team.MembersSetPermissions2Arg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissionsV2(Dropbox.Api.Team.MembersSetPermissions2Arg,System.AsyncCallback,System.Object)
  id: BeginMembersSetAdminPermissionsV2(Dropbox.Api.Team.MembersSetPermissions2Arg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSetAdminPermissionsV2(MembersSetPermissions2Arg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSetAdminPermissionsV2(MembersSetPermissions2Arg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissionsV2(Dropbox.Api.Team.MembersSetPermissions2Arg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSetAdminPermissionsV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5638
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members set admin permissions\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSetAdminPermissionsV2(MembersSetPermissions2Arg membersSetPermissions2Arg, AsyncCallback callback, object state = null)
    parameters:
    - id: membersSetPermissions2Arg
      type: Dropbox.Api.Team.MembersSetPermissions2Arg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSetAdminPermissionsV2(membersSetPermissions2Arg As MembersSetPermissions2Arg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissionsV2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsV2Async(Dropbox.Api.Team.UserSelectorArg,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsV2Async(Dropbox.Api.Team.UserSelectorArg,System.Collections.Generic.IEnumerable{System.String})
  id: MembersSetAdminPermissionsV2Async(Dropbox.Api.Team.UserSelectorArg,System.Collections.Generic.IEnumerable{System.String})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSetAdminPermissionsV2Async(UserSelectorArg, IEnumerable<String>)
  nameWithType: TeamTeamRoutes.MembersSetAdminPermissionsV2Async(UserSelectorArg, IEnumerable<String>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsV2Async(Dropbox.Api.Team.UserSelectorArg, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSetAdminPermissionsV2Async
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5657
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Updates a team member&apos;s permissions.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<MembersSetPermissions2Result> MembersSetAdminPermissionsV2Async(UserSelectorArg user, IEnumerable<string> newRoles = null)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: Identity of user whose role will be set.
    - id: newRoles
      type: System.Collections.Generic.IEnumerable{System.String}
      description: >-
        The new roles for the member. Send empty list to make user

        member only. For now, only up to one role is allowed.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersSetPermissions2Result}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersSetAdminPermissionsV2Async(user As UserSelectorArg, newRoles As IEnumerable(Of String) = Nothing) As Task(Of MembersSetPermissions2Result)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsV2Async*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSetPermissions2Error" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: TeamTeamRoutes.MembersSetAdminPermissionsV2Async(UserSelectorArg, IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsV2Async(Dropbox.Api.Team.UserSelectorArg, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: MembersSetAdminPermissionsV2Async(UserSelectorArg, IEnumerable(Of String))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissionsV2(Dropbox.Api.Team.UserSelectorArg,System.Collections.Generic.IEnumerable{System.String},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissionsV2(Dropbox.Api.Team.UserSelectorArg,System.Collections.Generic.IEnumerable{System.String},System.AsyncCallback,System.Object)
  id: BeginMembersSetAdminPermissionsV2(Dropbox.Api.Team.UserSelectorArg,System.Collections.Generic.IEnumerable{System.String},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSetAdminPermissionsV2(UserSelectorArg, IEnumerable<String>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSetAdminPermissionsV2(UserSelectorArg, IEnumerable<String>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissionsV2(Dropbox.Api.Team.UserSelectorArg, System.Collections.Generic.IEnumerable<System.String>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSetAdminPermissionsV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5678
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members set admin permissions\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSetAdminPermissionsV2(UserSelectorArg user, IEnumerable<string> newRoles = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: Identity of user whose role will be set.
    - id: newRoles
      type: System.Collections.Generic.IEnumerable{System.String}
      description: >-
        The new roles for the member. Send empty list to make user

        member only. For now, only up to one role is allowed.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSetAdminPermissionsV2(user As UserSelectorArg, newRoles As IEnumerable(Of String) = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissionsV2*
  nameWithType.vb: TeamTeamRoutes.BeginMembersSetAdminPermissionsV2(UserSelectorArg, IEnumerable(Of String), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissionsV2(Dropbox.Api.Team.UserSelectorArg, System.Collections.Generic.IEnumerable(Of System.String), System.AsyncCallback, System.Object)
  name.vb: BeginMembersSetAdminPermissionsV2(UserSelectorArg, IEnumerable(Of String), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetAdminPermissionsV2(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetAdminPermissionsV2(System.IAsyncResult)
  id: EndMembersSetAdminPermissionsV2(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersSetAdminPermissionsV2(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersSetAdminPermissionsV2(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetAdminPermissionsV2(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersSetAdminPermissionsV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5699
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members set admin permissions\nroute to complete</p>\n"
  example: []
  syntax:
    content: public MembersSetPermissions2Result EndMembersSetAdminPermissionsV2(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.MembersSetPermissions2Result
      description: The response to the send request
    content.vb: Public Function EndMembersSetAdminPermissionsV2(asyncResult As IAsyncResult) As MembersSetPermissions2Result
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetAdminPermissionsV2*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSetPermissions2Error" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsAsync(Dropbox.Api.Team.MembersSetPermissionsArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsAsync(Dropbox.Api.Team.MembersSetPermissionsArg)
  id: MembersSetAdminPermissionsAsync(Dropbox.Api.Team.MembersSetPermissionsArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSetAdminPermissionsAsync(MembersSetPermissionsArg)
  nameWithType: TeamTeamRoutes.MembersSetAdminPermissionsAsync(MembersSetPermissionsArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsAsync(Dropbox.Api.Team.MembersSetPermissionsArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSetAdminPermissionsAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5720
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Updates a team member&apos;s permissions.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<MembersSetPermissionsResult> MembersSetAdminPermissionsAsync(MembersSetPermissionsArg membersSetPermissionsArg)
    parameters:
    - id: membersSetPermissionsArg
      type: Dropbox.Api.Team.MembersSetPermissionsArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersSetPermissionsResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersSetAdminPermissionsAsync(membersSetPermissionsArg As MembersSetPermissionsArg) As Task(Of MembersSetPermissionsResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSetPermissionsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissions(Dropbox.Api.Team.MembersSetPermissionsArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissions(Dropbox.Api.Team.MembersSetPermissionsArg,System.AsyncCallback,System.Object)
  id: BeginMembersSetAdminPermissions(Dropbox.Api.Team.MembersSetPermissionsArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSetAdminPermissions(MembersSetPermissionsArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSetAdminPermissions(MembersSetPermissionsArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissions(Dropbox.Api.Team.MembersSetPermissionsArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSetAdminPermissions
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5735
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members set admin permissions\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSetAdminPermissions(MembersSetPermissionsArg membersSetPermissionsArg, AsyncCallback callback, object state = null)
    parameters:
    - id: membersSetPermissionsArg
      type: Dropbox.Api.Team.MembersSetPermissionsArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSetAdminPermissions(membersSetPermissionsArg As MembersSetPermissionsArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissions*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsAsync(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.AdminTier)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsAsync(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.AdminTier)
  id: MembersSetAdminPermissionsAsync(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.AdminTier)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSetAdminPermissionsAsync(UserSelectorArg, AdminTier)
  nameWithType: TeamTeamRoutes.MembersSetAdminPermissionsAsync(UserSelectorArg, AdminTier)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsAsync(Dropbox.Api.Team.UserSelectorArg, Dropbox.Api.Team.AdminTier)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSetAdminPermissionsAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5753
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Updates a team member&apos;s permissions.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<MembersSetPermissionsResult> MembersSetAdminPermissionsAsync(UserSelectorArg user, AdminTier newRole)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: Identity of user whose role will be set.
    - id: newRole
      type: Dropbox.Api.Team.AdminTier
      description: The new role of the member.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersSetPermissionsResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersSetAdminPermissionsAsync(user As UserSelectorArg, newRole As AdminTier) As Task(Of MembersSetPermissionsResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSetPermissionsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissions(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.AdminTier,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissions(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.AdminTier,System.AsyncCallback,System.Object)
  id: BeginMembersSetAdminPermissions(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Team.AdminTier,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSetAdminPermissions(UserSelectorArg, AdminTier, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSetAdminPermissions(UserSelectorArg, AdminTier, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissions(Dropbox.Api.Team.UserSelectorArg, Dropbox.Api.Team.AdminTier, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSetAdminPermissions
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5773
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members set admin permissions\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSetAdminPermissions(UserSelectorArg user, AdminTier newRole, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: Identity of user whose role will be set.
    - id: newRole
      type: Dropbox.Api.Team.AdminTier
      description: The new role of the member.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSetAdminPermissions(user As UserSelectorArg, newRole As AdminTier, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissions*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetAdminPermissions(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetAdminPermissions(System.IAsyncResult)
  id: EndMembersSetAdminPermissions(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersSetAdminPermissions(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersSetAdminPermissions(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetAdminPermissions(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersSetAdminPermissions
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5794
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members set admin permissions\nroute to complete</p>\n"
  example: []
  syntax:
    content: public MembersSetPermissionsResult EndMembersSetAdminPermissions(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.MembersSetPermissionsResult
      description: The response to the send request
    content.vb: Public Function EndMembersSetAdminPermissions(asyncResult As IAsyncResult) As MembersSetPermissionsResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetAdminPermissions*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSetPermissionsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileV2Async(Dropbox.Api.Team.MembersSetProfileArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileV2Async(Dropbox.Api.Team.MembersSetProfileArg)
  id: MembersSetProfileV2Async(Dropbox.Api.Team.MembersSetProfileArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSetProfileV2Async(MembersSetProfileArg)
  nameWithType: TeamTeamRoutes.MembersSetProfileV2Async(MembersSetProfileArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileV2Async(Dropbox.Api.Team.MembersSetProfileArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSetProfileV2Async
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5815
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Updates a team member&apos;s profile.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<TeamMemberInfoV2Result> MembersSetProfileV2Async(MembersSetProfileArg membersSetProfileArg)
    parameters:
    - id: membersSetProfileArg
      type: Dropbox.Api.Team.MembersSetProfileArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamMemberInfoV2Result}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersSetProfileV2Async(membersSetProfileArg As MembersSetProfileArg) As Task(Of TeamMemberInfoV2Result)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileV2Async*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSetProfileError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfileV2(Dropbox.Api.Team.MembersSetProfileArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfileV2(Dropbox.Api.Team.MembersSetProfileArg,System.AsyncCallback,System.Object)
  id: BeginMembersSetProfileV2(Dropbox.Api.Team.MembersSetProfileArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSetProfileV2(MembersSetProfileArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSetProfileV2(MembersSetProfileArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfileV2(Dropbox.Api.Team.MembersSetProfileArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSetProfileV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5829
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members set profile route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSetProfileV2(MembersSetProfileArg membersSetProfileArg, AsyncCallback callback, object state = null)
    parameters:
    - id: membersSetProfileArg
      type: Dropbox.Api.Team.MembersSetProfileArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSetProfileV2(membersSetProfileArg As MembersSetProfileArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfileV2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileV2Async(Dropbox.Api.Team.UserSelectorArg,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileV2Async(Dropbox.Api.Team.UserSelectorArg,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})
  id: MembersSetProfileV2Async(Dropbox.Api.Team.UserSelectorArg,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSetProfileV2Async(UserSelectorArg, String, String, String, String, String, Nullable<Boolean>)
  nameWithType: TeamTeamRoutes.MembersSetProfileV2Async(UserSelectorArg, String, String, String, String, String, Nullable<Boolean>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileV2Async(Dropbox.Api.Team.UserSelectorArg, System.String, System.String, System.String, System.String, System.String, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSetProfileV2Async
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5854
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Updates a team member&apos;s profile.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<TeamMemberInfoV2Result> MembersSetProfileV2Async(UserSelectorArg user, string newEmail = null, string newExternalId = null, string newGivenName = null, string newSurname = null, string newPersistentId = null, bool? newIsDirectoryRestricted = null)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: Identity of user whose profile will be set.
    - id: newEmail
      type: System.String
      description: New email for member.
    - id: newExternalId
      type: System.String
      description: New external ID for member.
    - id: newGivenName
      type: System.String
      description: New given name for member.
    - id: newSurname
      type: System.String
      description: New surname for member.
    - id: newPersistentId
      type: System.String
      description: >-
        New persistent ID. This field only available to teams

        using persistent ID SAML configuration.
    - id: newIsDirectoryRestricted
      type: System.Nullable{System.Boolean}
      description: >-
        New value for whether the user is a

        directory restricted user.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamMemberInfoV2Result}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersSetProfileV2Async(user As UserSelectorArg, newEmail As String = Nothing, newExternalId As String = Nothing, newGivenName As String = Nothing, newSurname As String = Nothing, newPersistentId As String = Nothing, newIsDirectoryRestricted As Boolean? = Nothing) As Task(Of TeamMemberInfoV2Result)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileV2Async*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSetProfileError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: TeamTeamRoutes.MembersSetProfileV2Async(UserSelectorArg, String, String, String, String, String, Nullable(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileV2Async(Dropbox.Api.Team.UserSelectorArg, System.String, System.String, System.String, System.String, System.String, System.Nullable(Of System.Boolean))
  name.vb: MembersSetProfileV2Async(UserSelectorArg, String, String, String, String, String, Nullable(Of Boolean))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfileV2(Dropbox.Api.Team.UserSelectorArg,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfileV2(Dropbox.Api.Team.UserSelectorArg,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.AsyncCallback,System.Object)
  id: BeginMembersSetProfileV2(Dropbox.Api.Team.UserSelectorArg,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSetProfileV2(UserSelectorArg, String, String, String, String, String, Nullable<Boolean>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSetProfileV2(UserSelectorArg, String, String, String, String, String, Nullable<Boolean>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfileV2(Dropbox.Api.Team.UserSelectorArg, System.String, System.String, System.String, System.String, System.String, System.Nullable<System.Boolean>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSetProfileV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5890
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members set profile route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSetProfileV2(UserSelectorArg user, string newEmail = null, string newExternalId = null, string newGivenName = null, string newSurname = null, string newPersistentId = null, bool? newIsDirectoryRestricted = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: Identity of user whose profile will be set.
    - id: newEmail
      type: System.String
      description: New email for member.
    - id: newExternalId
      type: System.String
      description: New external ID for member.
    - id: newGivenName
      type: System.String
      description: New given name for member.
    - id: newSurname
      type: System.String
      description: New surname for member.
    - id: newPersistentId
      type: System.String
      description: >-
        New persistent ID. This field only available to teams

        using persistent ID SAML configuration.
    - id: newIsDirectoryRestricted
      type: System.Nullable{System.Boolean}
      description: >-
        New value for whether the user is a

        directory restricted user.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSetProfileV2(user As UserSelectorArg, newEmail As String = Nothing, newExternalId As String = Nothing, newGivenName As String = Nothing, newSurname As String = Nothing, newPersistentId As String = Nothing, newIsDirectoryRestricted As Boolean? = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfileV2*
  nameWithType.vb: TeamTeamRoutes.BeginMembersSetProfileV2(UserSelectorArg, String, String, String, String, String, Nullable(Of Boolean), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfileV2(Dropbox.Api.Team.UserSelectorArg, System.String, System.String, System.String, System.String, System.String, System.Nullable(Of System.Boolean), System.AsyncCallback, System.Object)
  name.vb: BeginMembersSetProfileV2(UserSelectorArg, String, String, String, String, String, Nullable(Of Boolean), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfileV2(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfileV2(System.IAsyncResult)
  id: EndMembersSetProfileV2(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersSetProfileV2(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersSetProfileV2(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfileV2(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersSetProfileV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5921
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members set profile route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public TeamMemberInfoV2Result EndMembersSetProfileV2(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.TeamMemberInfoV2Result
      description: The response to the send request
    content.vb: Public Function EndMembersSetProfileV2(asyncResult As IAsyncResult) As TeamMemberInfoV2Result
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfileV2*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSetProfileError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileAsync(Dropbox.Api.Team.MembersSetProfileArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileAsync(Dropbox.Api.Team.MembersSetProfileArg)
  id: MembersSetProfileAsync(Dropbox.Api.Team.MembersSetProfileArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSetProfileAsync(MembersSetProfileArg)
  nameWithType: TeamTeamRoutes.MembersSetProfileAsync(MembersSetProfileArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileAsync(Dropbox.Api.Team.MembersSetProfileArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSetProfileAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5942
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Updates a team member&apos;s profile.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<TeamMemberInfo> MembersSetProfileAsync(MembersSetProfileArg membersSetProfileArg)
    parameters:
    - id: membersSetProfileArg
      type: Dropbox.Api.Team.MembersSetProfileArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamMemberInfo}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersSetProfileAsync(membersSetProfileArg As MembersSetProfileArg) As Task(Of TeamMemberInfo)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSetProfileError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfile(Dropbox.Api.Team.MembersSetProfileArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfile(Dropbox.Api.Team.MembersSetProfileArg,System.AsyncCallback,System.Object)
  id: BeginMembersSetProfile(Dropbox.Api.Team.MembersSetProfileArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSetProfile(MembersSetProfileArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSetProfile(MembersSetProfileArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfile(Dropbox.Api.Team.MembersSetProfileArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSetProfile
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5956
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members set profile route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSetProfile(MembersSetProfileArg membersSetProfileArg, AsyncCallback callback, object state = null)
    parameters:
    - id: membersSetProfileArg
      type: Dropbox.Api.Team.MembersSetProfileArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSetProfile(membersSetProfileArg As MembersSetProfileArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileAsync(Dropbox.Api.Team.UserSelectorArg,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileAsync(Dropbox.Api.Team.UserSelectorArg,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})
  id: MembersSetProfileAsync(Dropbox.Api.Team.UserSelectorArg,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSetProfileAsync(UserSelectorArg, String, String, String, String, String, Nullable<Boolean>)
  nameWithType: TeamTeamRoutes.MembersSetProfileAsync(UserSelectorArg, String, String, String, String, String, Nullable<Boolean>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileAsync(Dropbox.Api.Team.UserSelectorArg, System.String, System.String, System.String, System.String, System.String, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSetProfileAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 5981
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Updates a team member&apos;s profile.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<TeamMemberInfo> MembersSetProfileAsync(UserSelectorArg user, string newEmail = null, string newExternalId = null, string newGivenName = null, string newSurname = null, string newPersistentId = null, bool? newIsDirectoryRestricted = null)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: Identity of user whose profile will be set.
    - id: newEmail
      type: System.String
      description: New email for member.
    - id: newExternalId
      type: System.String
      description: New external ID for member.
    - id: newGivenName
      type: System.String
      description: New given name for member.
    - id: newSurname
      type: System.String
      description: New surname for member.
    - id: newPersistentId
      type: System.String
      description: >-
        New persistent ID. This field only available to teams

        using persistent ID SAML configuration.
    - id: newIsDirectoryRestricted
      type: System.Nullable{System.Boolean}
      description: >-
        New value for whether the user is a

        directory restricted user.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamMemberInfo}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersSetProfileAsync(user As UserSelectorArg, newEmail As String = Nothing, newExternalId As String = Nothing, newGivenName As String = Nothing, newSurname As String = Nothing, newPersistentId As String = Nothing, newIsDirectoryRestricted As Boolean? = Nothing) As Task(Of TeamMemberInfo)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSetProfileError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: TeamTeamRoutes.MembersSetProfileAsync(UserSelectorArg, String, String, String, String, String, Nullable(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileAsync(Dropbox.Api.Team.UserSelectorArg, System.String, System.String, System.String, System.String, System.String, System.Nullable(Of System.Boolean))
  name.vb: MembersSetProfileAsync(UserSelectorArg, String, String, String, String, String, Nullable(Of Boolean))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfile(Dropbox.Api.Team.UserSelectorArg,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfile(Dropbox.Api.Team.UserSelectorArg,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.AsyncCallback,System.Object)
  id: BeginMembersSetProfile(Dropbox.Api.Team.UserSelectorArg,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSetProfile(UserSelectorArg, String, String, String, String, String, Nullable<Boolean>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSetProfile(UserSelectorArg, String, String, String, String, String, Nullable<Boolean>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfile(Dropbox.Api.Team.UserSelectorArg, System.String, System.String, System.String, System.String, System.String, System.Nullable<System.Boolean>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSetProfile
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6017
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members set profile route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSetProfile(UserSelectorArg user, string newEmail = null, string newExternalId = null, string newGivenName = null, string newSurname = null, string newPersistentId = null, bool? newIsDirectoryRestricted = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: Identity of user whose profile will be set.
    - id: newEmail
      type: System.String
      description: New email for member.
    - id: newExternalId
      type: System.String
      description: New external ID for member.
    - id: newGivenName
      type: System.String
      description: New given name for member.
    - id: newSurname
      type: System.String
      description: New surname for member.
    - id: newPersistentId
      type: System.String
      description: >-
        New persistent ID. This field only available to teams

        using persistent ID SAML configuration.
    - id: newIsDirectoryRestricted
      type: System.Nullable{System.Boolean}
      description: >-
        New value for whether the user is a

        directory restricted user.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSetProfile(user As UserSelectorArg, newEmail As String = Nothing, newExternalId As String = Nothing, newGivenName As String = Nothing, newSurname As String = Nothing, newPersistentId As String = Nothing, newIsDirectoryRestricted As Boolean? = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfile*
  nameWithType.vb: TeamTeamRoutes.BeginMembersSetProfile(UserSelectorArg, String, String, String, String, String, Nullable(Of Boolean), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfile(Dropbox.Api.Team.UserSelectorArg, System.String, System.String, System.String, System.String, System.String, System.Nullable(Of System.Boolean), System.AsyncCallback, System.Object)
  name.vb: BeginMembersSetProfile(UserSelectorArg, String, String, String, String, String, Nullable(Of Boolean), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfile(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfile(System.IAsyncResult)
  id: EndMembersSetProfile(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersSetProfile(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersSetProfile(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfile(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersSetProfile
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6048
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members set profile route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public TeamMemberInfo EndMembersSetProfile(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.TeamMemberInfo
      description: The response to the send request
    content.vb: Public Function EndMembersSetProfile(asyncResult As IAsyncResult) As TeamMemberInfo
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfile*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSetProfileError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoV2Async(Dropbox.Api.Team.MembersSetProfilePhotoArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoV2Async(Dropbox.Api.Team.MembersSetProfilePhotoArg)
  id: MembersSetProfilePhotoV2Async(Dropbox.Api.Team.MembersSetProfilePhotoArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSetProfilePhotoV2Async(MembersSetProfilePhotoArg)
  nameWithType: TeamTeamRoutes.MembersSetProfilePhotoV2Async(MembersSetProfilePhotoArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoV2Async(Dropbox.Api.Team.MembersSetProfilePhotoArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSetProfilePhotoV2Async
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6069
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Updates a team member&apos;s profile photo.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<TeamMemberInfoV2Result> MembersSetProfilePhotoV2Async(MembersSetProfilePhotoArg membersSetProfilePhotoArg)
    parameters:
    - id: membersSetProfilePhotoArg
      type: Dropbox.Api.Team.MembersSetProfilePhotoArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamMemberInfoV2Result}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersSetProfilePhotoV2Async(membersSetProfilePhotoArg As MembersSetProfilePhotoArg) As Task(Of TeamMemberInfoV2Result)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoV2Async*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSetProfilePhotoError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhotoV2(Dropbox.Api.Team.MembersSetProfilePhotoArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhotoV2(Dropbox.Api.Team.MembersSetProfilePhotoArg,System.AsyncCallback,System.Object)
  id: BeginMembersSetProfilePhotoV2(Dropbox.Api.Team.MembersSetProfilePhotoArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSetProfilePhotoV2(MembersSetProfilePhotoArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSetProfilePhotoV2(MembersSetProfilePhotoArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhotoV2(Dropbox.Api.Team.MembersSetProfilePhotoArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSetProfilePhotoV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6083
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members set profile photo route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSetProfilePhotoV2(MembersSetProfilePhotoArg membersSetProfilePhotoArg, AsyncCallback callback, object state = null)
    parameters:
    - id: membersSetProfilePhotoArg
      type: Dropbox.Api.Team.MembersSetProfilePhotoArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSetProfilePhotoV2(membersSetProfilePhotoArg As MembersSetProfilePhotoArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhotoV2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoV2Async(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Account.PhotoSourceArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoV2Async(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Account.PhotoSourceArg)
  id: MembersSetProfilePhotoV2Async(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Account.PhotoSourceArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSetProfilePhotoV2Async(UserSelectorArg, PhotoSourceArg)
  nameWithType: TeamTeamRoutes.MembersSetProfilePhotoV2Async(UserSelectorArg, PhotoSourceArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoV2Async(Dropbox.Api.Team.UserSelectorArg, Dropbox.Api.Account.PhotoSourceArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSetProfilePhotoV2Async
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6101
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Updates a team member&apos;s profile photo.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<TeamMemberInfoV2Result> MembersSetProfilePhotoV2Async(UserSelectorArg user, PhotoSourceArg photo)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: Identity of the user whose profile photo will be set.
    - id: photo
      type: Dropbox.Api.Account.PhotoSourceArg
      description: Image to set as the member&apos;s new profile photo.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamMemberInfoV2Result}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersSetProfilePhotoV2Async(user As UserSelectorArg, photo As PhotoSourceArg) As Task(Of TeamMemberInfoV2Result)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoV2Async*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSetProfilePhotoError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhotoV2(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Account.PhotoSourceArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhotoV2(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Account.PhotoSourceArg,System.AsyncCallback,System.Object)
  id: BeginMembersSetProfilePhotoV2(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Account.PhotoSourceArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSetProfilePhotoV2(UserSelectorArg, PhotoSourceArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSetProfilePhotoV2(UserSelectorArg, PhotoSourceArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhotoV2(Dropbox.Api.Team.UserSelectorArg, Dropbox.Api.Account.PhotoSourceArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSetProfilePhotoV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6120
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members set profile photo route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSetProfilePhotoV2(UserSelectorArg user, PhotoSourceArg photo, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: Identity of the user whose profile photo will be set.
    - id: photo
      type: Dropbox.Api.Account.PhotoSourceArg
      description: Image to set as the member&apos;s new profile photo.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSetProfilePhotoV2(user As UserSelectorArg, photo As PhotoSourceArg, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhotoV2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfilePhotoV2(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfilePhotoV2(System.IAsyncResult)
  id: EndMembersSetProfilePhotoV2(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersSetProfilePhotoV2(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersSetProfilePhotoV2(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfilePhotoV2(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersSetProfilePhotoV2
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6141
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members set profile photo\nroute to complete</p>\n"
  example: []
  syntax:
    content: public TeamMemberInfoV2Result EndMembersSetProfilePhotoV2(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.TeamMemberInfoV2Result
      description: The response to the send request
    content.vb: Public Function EndMembersSetProfilePhotoV2(asyncResult As IAsyncResult) As TeamMemberInfoV2Result
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfilePhotoV2*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSetProfilePhotoError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoAsync(Dropbox.Api.Team.MembersSetProfilePhotoArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoAsync(Dropbox.Api.Team.MembersSetProfilePhotoArg)
  id: MembersSetProfilePhotoAsync(Dropbox.Api.Team.MembersSetProfilePhotoArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSetProfilePhotoAsync(MembersSetProfilePhotoArg)
  nameWithType: TeamTeamRoutes.MembersSetProfilePhotoAsync(MembersSetProfilePhotoArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoAsync(Dropbox.Api.Team.MembersSetProfilePhotoArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSetProfilePhotoAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6162
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Updates a team member&apos;s profile photo.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<TeamMemberInfo> MembersSetProfilePhotoAsync(MembersSetProfilePhotoArg membersSetProfilePhotoArg)
    parameters:
    - id: membersSetProfilePhotoArg
      type: Dropbox.Api.Team.MembersSetProfilePhotoArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamMemberInfo}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersSetProfilePhotoAsync(membersSetProfilePhotoArg As MembersSetProfilePhotoArg) As Task(Of TeamMemberInfo)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSetProfilePhotoError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhoto(Dropbox.Api.Team.MembersSetProfilePhotoArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhoto(Dropbox.Api.Team.MembersSetProfilePhotoArg,System.AsyncCallback,System.Object)
  id: BeginMembersSetProfilePhoto(Dropbox.Api.Team.MembersSetProfilePhotoArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSetProfilePhoto(MembersSetProfilePhotoArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSetProfilePhoto(MembersSetProfilePhotoArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhoto(Dropbox.Api.Team.MembersSetProfilePhotoArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSetProfilePhoto
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6176
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members set profile photo route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSetProfilePhoto(MembersSetProfilePhotoArg membersSetProfilePhotoArg, AsyncCallback callback, object state = null)
    parameters:
    - id: membersSetProfilePhotoArg
      type: Dropbox.Api.Team.MembersSetProfilePhotoArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSetProfilePhoto(membersSetProfilePhotoArg As MembersSetProfilePhotoArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhoto*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoAsync(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Account.PhotoSourceArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoAsync(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Account.PhotoSourceArg)
  id: MembersSetProfilePhotoAsync(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Account.PhotoSourceArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSetProfilePhotoAsync(UserSelectorArg, PhotoSourceArg)
  nameWithType: TeamTeamRoutes.MembersSetProfilePhotoAsync(UserSelectorArg, PhotoSourceArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoAsync(Dropbox.Api.Team.UserSelectorArg, Dropbox.Api.Account.PhotoSourceArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSetProfilePhotoAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6194
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Updates a team member&apos;s profile photo.</p>\n<p>Permission : Team member management.</p>\n"
  example: []
  syntax:
    content: public Task<TeamMemberInfo> MembersSetProfilePhotoAsync(UserSelectorArg user, PhotoSourceArg photo)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: Identity of the user whose profile photo will be set.
    - id: photo
      type: Dropbox.Api.Account.PhotoSourceArg
      description: Image to set as the member&apos;s new profile photo.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamMemberInfo}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function MembersSetProfilePhotoAsync(user As UserSelectorArg, photo As PhotoSourceArg) As Task(Of TeamMemberInfo)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSetProfilePhotoError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhoto(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Account.PhotoSourceArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhoto(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Account.PhotoSourceArg,System.AsyncCallback,System.Object)
  id: BeginMembersSetProfilePhoto(Dropbox.Api.Team.UserSelectorArg,Dropbox.Api.Account.PhotoSourceArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSetProfilePhoto(UserSelectorArg, PhotoSourceArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSetProfilePhoto(UserSelectorArg, PhotoSourceArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhoto(Dropbox.Api.Team.UserSelectorArg, Dropbox.Api.Account.PhotoSourceArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSetProfilePhoto
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6213
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members set profile photo route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSetProfilePhoto(UserSelectorArg user, PhotoSourceArg photo, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: Identity of the user whose profile photo will be set.
    - id: photo
      type: Dropbox.Api.Account.PhotoSourceArg
      description: Image to set as the member&apos;s new profile photo.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSetProfilePhoto(user As UserSelectorArg, photo As PhotoSourceArg, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhoto*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfilePhoto(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfilePhoto(System.IAsyncResult)
  id: EndMembersSetProfilePhoto(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersSetProfilePhoto(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersSetProfilePhoto(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfilePhoto(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersSetProfilePhoto
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6234
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members set profile photo\nroute to complete</p>\n"
  example: []
  syntax:
    content: public TeamMemberInfo EndMembersSetProfilePhoto(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.TeamMemberInfo
      description: The response to the send request
    content.vb: Public Function EndMembersSetProfilePhoto(asyncResult As IAsyncResult) As TeamMemberInfo
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfilePhoto*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSetProfilePhotoError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSuspendAsync(Dropbox.Api.Team.MembersDeactivateArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSuspendAsync(Dropbox.Api.Team.MembersDeactivateArg)
  id: MembersSuspendAsync(Dropbox.Api.Team.MembersDeactivateArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSuspendAsync(MembersDeactivateArg)
  nameWithType: TeamTeamRoutes.MembersSuspendAsync(MembersDeactivateArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSuspendAsync(Dropbox.Api.Team.MembersDeactivateArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSuspendAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6256
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Suspend a member from a team.</p>\n<p>Permission : Team member management</p>\n<p>Exactly one of team_member_id, email, or external_id must be provided to\nidentify the user account.</p>\n"
  example: []
  syntax:
    content: public Task MembersSuspendAsync(MembersDeactivateArg membersDeactivateArg)
    parameters:
    - id: membersDeactivateArg
      type: Dropbox.Api.Team.MembersDeactivateArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function MembersSuspendAsync(membersDeactivateArg As MembersDeactivateArg) As Task
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSuspendAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSuspendError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSuspend(Dropbox.Api.Team.MembersDeactivateArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSuspend(Dropbox.Api.Team.MembersDeactivateArg,System.AsyncCallback,System.Object)
  id: BeginMembersSuspend(Dropbox.Api.Team.MembersDeactivateArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSuspend(MembersDeactivateArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSuspend(MembersDeactivateArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSuspend(Dropbox.Api.Team.MembersDeactivateArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSuspend
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6270
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members suspend route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSuspend(MembersDeactivateArg membersDeactivateArg, AsyncCallback callback, object state = null)
    parameters:
    - id: membersDeactivateArg
      type: Dropbox.Api.Team.MembersDeactivateArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSuspend(membersDeactivateArg As MembersDeactivateArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSuspend*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSuspendAsync(Dropbox.Api.Team.UserSelectorArg,System.Boolean)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSuspendAsync(Dropbox.Api.Team.UserSelectorArg,System.Boolean)
  id: MembersSuspendAsync(Dropbox.Api.Team.UserSelectorArg,System.Boolean)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersSuspendAsync(UserSelectorArg, Boolean)
  nameWithType: TeamTeamRoutes.MembersSuspendAsync(UserSelectorArg, Boolean)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSuspendAsync(Dropbox.Api.Team.UserSelectorArg, System.Boolean)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersSuspendAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6291
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Suspend a member from a team.</p>\n<p>Permission : Team member management</p>\n<p>Exactly one of team_member_id, email, or external_id must be provided to\nidentify the user account.</p>\n"
  example: []
  syntax:
    content: public Task MembersSuspendAsync(UserSelectorArg user, bool wipeData = true)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        Identity of user to remove/suspend/have their files

        moved.
    - id: wipeData
      type: System.Boolean
      description: >-
        If provided, controls if the user&apos;s data will be deleted on

        their linked devices.
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function MembersSuspendAsync(user As UserSelectorArg, wipeData As Boolean = True) As Task
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSuspendAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSuspendError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSuspend(Dropbox.Api.Team.UserSelectorArg,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSuspend(Dropbox.Api.Team.UserSelectorArg,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginMembersSuspend(Dropbox.Api.Team.UserSelectorArg,System.Boolean,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersSuspend(UserSelectorArg, Boolean, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersSuspend(UserSelectorArg, Boolean, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSuspend(Dropbox.Api.Team.UserSelectorArg, System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersSuspend
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6312
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members suspend route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersSuspend(UserSelectorArg user, bool wipeData = true, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: >-
        Identity of user to remove/suspend/have their files

        moved.
    - id: wipeData
      type: System.Boolean
      description: >-
        If provided, controls if the user&apos;s data will be deleted on

        their linked devices.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersSuspend(user As UserSelectorArg, wipeData As Boolean = True, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSuspend*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSuspend(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSuspend(System.IAsyncResult)
  id: EndMembersSuspend(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersSuspend(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersSuspend(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSuspend(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersSuspend
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6332
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members suspend route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public void EndMembersSuspend(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    content.vb: Public Sub EndMembersSuspend(asyncResult As IAsyncResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSuspend*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersSuspendError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersUnsuspendAsync(Dropbox.Api.Team.MembersUnsuspendArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersUnsuspendAsync(Dropbox.Api.Team.MembersUnsuspendArg)
  id: MembersUnsuspendAsync(Dropbox.Api.Team.MembersUnsuspendArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersUnsuspendAsync(MembersUnsuspendArg)
  nameWithType: TeamTeamRoutes.MembersUnsuspendAsync(MembersUnsuspendArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersUnsuspendAsync(Dropbox.Api.Team.MembersUnsuspendArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersUnsuspendAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6352
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Unsuspend a member from a team.</p>\n<p>Permission : Team member management</p>\n<p>Exactly one of team_member_id, email, or external_id must be provided to\nidentify the user account.</p>\n"
  example: []
  syntax:
    content: public Task MembersUnsuspendAsync(MembersUnsuspendArg membersUnsuspendArg)
    parameters:
    - id: membersUnsuspendArg
      type: Dropbox.Api.Team.MembersUnsuspendArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function MembersUnsuspendAsync(membersUnsuspendArg As MembersUnsuspendArg) As Task
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersUnsuspendAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersUnsuspendError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersUnsuspend(Dropbox.Api.Team.MembersUnsuspendArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersUnsuspend(Dropbox.Api.Team.MembersUnsuspendArg,System.AsyncCallback,System.Object)
  id: BeginMembersUnsuspend(Dropbox.Api.Team.MembersUnsuspendArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersUnsuspend(MembersUnsuspendArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersUnsuspend(MembersUnsuspendArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersUnsuspend(Dropbox.Api.Team.MembersUnsuspendArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersUnsuspend
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6366
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members unsuspend route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersUnsuspend(MembersUnsuspendArg membersUnsuspendArg, AsyncCallback callback, object state = null)
    parameters:
    - id: membersUnsuspendArg
      type: Dropbox.Api.Team.MembersUnsuspendArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersUnsuspend(membersUnsuspendArg As MembersUnsuspendArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersUnsuspend*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersUnsuspendAsync(Dropbox.Api.Team.UserSelectorArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersUnsuspendAsync(Dropbox.Api.Team.UserSelectorArg)
  id: MembersUnsuspendAsync(Dropbox.Api.Team.UserSelectorArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: MembersUnsuspendAsync(UserSelectorArg)
  nameWithType: TeamTeamRoutes.MembersUnsuspendAsync(UserSelectorArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersUnsuspendAsync(Dropbox.Api.Team.UserSelectorArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MembersUnsuspendAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6384
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Unsuspend a member from a team.</p>\n<p>Permission : Team member management</p>\n<p>Exactly one of team_member_id, email, or external_id must be provided to\nidentify the user account.</p>\n"
  example: []
  syntax:
    content: public Task MembersUnsuspendAsync(UserSelectorArg user)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: Identity of user to unsuspend.
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function MembersUnsuspendAsync(user As UserSelectorArg) As Task
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersUnsuspendAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersUnsuspendError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersUnsuspend(Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersUnsuspend(Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  id: BeginMembersUnsuspend(Dropbox.Api.Team.UserSelectorArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginMembersUnsuspend(UserSelectorArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginMembersUnsuspend(UserSelectorArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersUnsuspend(Dropbox.Api.Team.UserSelectorArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginMembersUnsuspend
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6400
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the members unsuspend route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginMembersUnsuspend(UserSelectorArg user, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: user
      type: Dropbox.Api.Team.UserSelectorArg
      description: Identity of user to unsuspend.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginMembersUnsuspend(user As UserSelectorArg, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersUnsuspend*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersUnsuspend(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersUnsuspend(System.IAsyncResult)
  id: EndMembersUnsuspend(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndMembersUnsuspend(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndMembersUnsuspend(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersUnsuspend(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndMembersUnsuspend
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6418
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the members unsuspend route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public void EndMembersUnsuspend(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    content.vb: Public Sub EndMembersUnsuspend(asyncResult As IAsyncResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersUnsuspend*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.MembersUnsuspendError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListAsync(Dropbox.Api.Team.TeamNamespacesListArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListAsync(Dropbox.Api.Team.TeamNamespacesListArg)
  id: NamespacesListAsync(Dropbox.Api.Team.TeamNamespacesListArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: NamespacesListAsync(TeamNamespacesListArg)
  nameWithType: TeamTeamRoutes.NamespacesListAsync(TeamNamespacesListArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListAsync(Dropbox.Api.Team.TeamNamespacesListArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: NamespacesListAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6440
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Returns a list of all team-accessible namespaces. This list includes team\nfolders, shared folders containing team members, team members&apos; home namespaces, and\nteam members&apos; app folders. Home namespaces and app folders are always owned by this\nteam or members of the team, but shared folders may be owned by other users or\nother teams. Duplicates may occur in the list.</p>\n"
  example: []
  syntax:
    content: public Task<TeamNamespacesListResult> NamespacesListAsync(TeamNamespacesListArg teamNamespacesListArg)
    parameters:
    - id: teamNamespacesListArg
      type: Dropbox.Api.Team.TeamNamespacesListArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamNamespacesListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function NamespacesListAsync(teamNamespacesListArg As TeamNamespacesListArg) As Task(Of TeamNamespacesListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamNamespacesListError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesList(Dropbox.Api.Team.TeamNamespacesListArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesList(Dropbox.Api.Team.TeamNamespacesListArg,System.AsyncCallback,System.Object)
  id: BeginNamespacesList(Dropbox.Api.Team.TeamNamespacesListArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginNamespacesList(TeamNamespacesListArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginNamespacesList(TeamNamespacesListArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesList(Dropbox.Api.Team.TeamNamespacesListArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginNamespacesList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6454
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the namespaces list route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginNamespacesList(TeamNamespacesListArg teamNamespacesListArg, AsyncCallback callback, object state = null)
    parameters:
    - id: teamNamespacesListArg
      type: Dropbox.Api.Team.TeamNamespacesListArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginNamespacesList(teamNamespacesListArg As TeamNamespacesListArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListAsync(System.UInt32)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListAsync(System.UInt32)
  id: NamespacesListAsync(System.UInt32)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: NamespacesListAsync(UInt32)
  nameWithType: TeamTeamRoutes.NamespacesListAsync(UInt32)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListAsync(System.UInt32)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: NamespacesListAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6474
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Returns a list of all team-accessible namespaces. This list includes team\nfolders, shared folders containing team members, team members&apos; home namespaces, and\nteam members&apos; app folders. Home namespaces and app folders are always owned by this\nteam or members of the team, but shared folders may be owned by other users or\nother teams. Duplicates may occur in the list.</p>\n"
  example: []
  syntax:
    content: public Task<TeamNamespacesListResult> NamespacesListAsync(uint limit = 1000U)
    parameters:
    - id: limit
      type: System.UInt32
      description: Specifying a value here has no effect.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamNamespacesListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function NamespacesListAsync(limit As UInteger = 1000UI) As Task(Of TeamNamespacesListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamNamespacesListError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesList(System.UInt32,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesList(System.UInt32,System.AsyncCallback,System.Object)
  id: BeginNamespacesList(System.UInt32,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginNamespacesList(UInt32, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginNamespacesList(UInt32, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesList(System.UInt32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginNamespacesList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6490
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the namespaces list route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginNamespacesList(uint limit = 1000U, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: limit
      type: System.UInt32
      description: Specifying a value here has no effect.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginNamespacesList(limit As UInteger = 1000UI, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndNamespacesList(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndNamespacesList(System.IAsyncResult)
  id: EndNamespacesList(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndNamespacesList(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndNamespacesList(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndNamespacesList(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndNamespacesList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6509
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the namespaces list route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public TeamNamespacesListResult EndNamespacesList(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.TeamNamespacesListResult
      description: The response to the send request
    content.vb: Public Function EndNamespacesList(asyncResult As IAsyncResult) As TeamNamespacesListResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndNamespacesList*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamNamespacesListError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListContinueAsync(Dropbox.Api.Team.TeamNamespacesListContinueArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListContinueAsync(Dropbox.Api.Team.TeamNamespacesListContinueArg)
  id: NamespacesListContinueAsync(Dropbox.Api.Team.TeamNamespacesListContinueArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: NamespacesListContinueAsync(TeamNamespacesListContinueArg)
  nameWithType: TeamTeamRoutes.NamespacesListContinueAsync(TeamNamespacesListContinueArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListContinueAsync(Dropbox.Api.Team.TeamNamespacesListContinueArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: NamespacesListContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6532
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once a cursor has been retrieved from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListAsync(Dropbox.Api.Team.TeamNamespacesListArg)\" data-throw-if-not-resolved=\"false\"></xref>, use this to\npaginate through all team-accessible namespaces. Duplicates may occur in the\nlist.</p>\n"
  example: []
  syntax:
    content: public Task<TeamNamespacesListResult> NamespacesListContinueAsync(TeamNamespacesListContinueArg teamNamespacesListContinueArg)
    parameters:
    - id: teamNamespacesListContinueArg
      type: Dropbox.Api.Team.TeamNamespacesListContinueArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamNamespacesListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function NamespacesListContinueAsync(teamNamespacesListContinueArg As TeamNamespacesListContinueArg) As Task(Of TeamNamespacesListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamNamespacesListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesListContinue(Dropbox.Api.Team.TeamNamespacesListContinueArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesListContinue(Dropbox.Api.Team.TeamNamespacesListContinueArg,System.AsyncCallback,System.Object)
  id: BeginNamespacesListContinue(Dropbox.Api.Team.TeamNamespacesListContinueArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginNamespacesListContinue(TeamNamespacesListContinueArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginNamespacesListContinue(TeamNamespacesListContinueArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesListContinue(Dropbox.Api.Team.TeamNamespacesListContinueArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginNamespacesListContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6546
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the namespaces list continue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginNamespacesListContinue(TeamNamespacesListContinueArg teamNamespacesListContinueArg, AsyncCallback callback, object state = null)
    parameters:
    - id: teamNamespacesListContinueArg
      type: Dropbox.Api.Team.TeamNamespacesListContinueArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginNamespacesListContinue(teamNamespacesListContinueArg As TeamNamespacesListContinueArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesListContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListContinueAsync(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListContinueAsync(System.String)
  id: NamespacesListContinueAsync(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: NamespacesListContinueAsync(String)
  nameWithType: TeamTeamRoutes.NamespacesListContinueAsync(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListContinueAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: NamespacesListContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6566
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once a cursor has been retrieved from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListAsync(Dropbox.Api.Team.TeamNamespacesListArg)\" data-throw-if-not-resolved=\"false\"></xref>, use this to\npaginate through all team-accessible namespaces. Duplicates may occur in the\nlist.</p>\n"
  example: []
  syntax:
    content: public Task<TeamNamespacesListResult> NamespacesListContinueAsync(string cursor)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        Indicates from what point to get the next set of

        team-accessible namespaces.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamNamespacesListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function NamespacesListContinueAsync(cursor As String) As Task(Of TeamNamespacesListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamNamespacesListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesListContinue(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesListContinue(System.String,System.AsyncCallback,System.Object)
  id: BeginNamespacesListContinue(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginNamespacesListContinue(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginNamespacesListContinue(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesListContinue(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginNamespacesListContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6583
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the namespaces list continue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginNamespacesListContinue(string cursor, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        Indicates from what point to get the next set of

        team-accessible namespaces.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginNamespacesListContinue(cursor As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesListContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndNamespacesListContinue(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndNamespacesListContinue(System.IAsyncResult)
  id: EndNamespacesListContinue(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndNamespacesListContinue(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndNamespacesListContinue(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndNamespacesListContinue(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndNamespacesListContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6602
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the namespaces list continue route\nto complete</p>\n"
  example: []
  syntax:
    content: public TeamNamespacesListResult EndNamespacesListContinue(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.TeamNamespacesListResult
      description: The response to the send request
    content.vb: Public Function EndNamespacesListContinue(asyncResult As IAsyncResult) As TeamNamespacesListResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndNamespacesListContinue*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamNamespacesListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateAddAsync(Dropbox.Api.FileProperties.AddTemplateArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateAddAsync(Dropbox.Api.FileProperties.AddTemplateArg)
  id: PropertiesTemplateAddAsync(Dropbox.Api.FileProperties.AddTemplateArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: PropertiesTemplateAddAsync(AddTemplateArg)
  nameWithType: TeamTeamRoutes.PropertiesTemplateAddAsync(AddTemplateArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateAddAsync(Dropbox.Api.FileProperties.AddTemplateArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: PropertiesTemplateAddAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6622
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public Task<AddTemplateResult> PropertiesTemplateAddAsync(AddTemplateArg addTemplateArg)
    parameters:
    - id: addTemplateArg
      type: Dropbox.Api.FileProperties.AddTemplateArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.FileProperties.AddTemplateResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function PropertiesTemplateAddAsync(addTemplateArg As AddTemplateArg) As Task(Of AddTemplateResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateAddAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.FileProperties.ModifyTemplateError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateAdd(Dropbox.Api.FileProperties.AddTemplateArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateAdd(Dropbox.Api.FileProperties.AddTemplateArg,System.AsyncCallback,System.Object)
  id: BeginPropertiesTemplateAdd(Dropbox.Api.FileProperties.AddTemplateArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginPropertiesTemplateAdd(AddTemplateArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginPropertiesTemplateAdd(AddTemplateArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateAdd(Dropbox.Api.FileProperties.AddTemplateArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginPropertiesTemplateAdd
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6637
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the properties template add route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public IAsyncResult BeginPropertiesTemplateAdd(AddTemplateArg addTemplateArg, AsyncCallback callback, object state = null)
    parameters:
    - id: addTemplateArg
      type: Dropbox.Api.FileProperties.AddTemplateArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function BeginPropertiesTemplateAdd(addTemplateArg As AddTemplateArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateAdd*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateAddAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateAddAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate})
  id: PropertiesTemplateAddAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: PropertiesTemplateAddAsync(String, String, IEnumerable<PropertyFieldTemplate>)
  nameWithType: TeamTeamRoutes.PropertiesTemplateAddAsync(String, String, IEnumerable<PropertyFieldTemplate>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateAddAsync(System.String, System.String, System.Collections.Generic.IEnumerable<Dropbox.Api.FileProperties.PropertyFieldTemplate>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: PropertiesTemplateAddAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6659
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public Task<AddTemplateResult> PropertiesTemplateAddAsync(string name, string description, IEnumerable<PropertyFieldTemplate> fields)
    parameters:
    - id: name
      type: System.String
      description: >-
        Display name for the template. Template names can be up to 256

        bytes.
    - id: description
      type: System.String
      description: >-
        Description for the template. Template descriptions can

        be up to 1024 bytes.
    - id: fields
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate}
      description: >-
        Definitions of the property fields associated with this

        template. There can be up to 32 properties in a single template.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.FileProperties.AddTemplateResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function PropertiesTemplateAddAsync(name As String, description As String, fields As IEnumerable(Of PropertyFieldTemplate)) As Task(Of AddTemplateResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateAddAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.FileProperties.ModifyTemplateError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  nameWithType.vb: TeamTeamRoutes.PropertiesTemplateAddAsync(String, String, IEnumerable(Of PropertyFieldTemplate))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateAddAsync(System.String, System.String, System.Collections.Generic.IEnumerable(Of Dropbox.Api.FileProperties.PropertyFieldTemplate))
  name.vb: PropertiesTemplateAddAsync(String, String, IEnumerable(Of PropertyFieldTemplate))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateAdd(System.String,System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateAdd(System.String,System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate},System.AsyncCallback,System.Object)
  id: BeginPropertiesTemplateAdd(System.String,System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginPropertiesTemplateAdd(String, String, IEnumerable<PropertyFieldTemplate>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginPropertiesTemplateAdd(String, String, IEnumerable<PropertyFieldTemplate>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateAdd(System.String, System.String, System.Collections.Generic.IEnumerable<Dropbox.Api.FileProperties.PropertyFieldTemplate>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginPropertiesTemplateAdd
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6685
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the properties template add route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public IAsyncResult BeginPropertiesTemplateAdd(string name, string description, IEnumerable<PropertyFieldTemplate> fields, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: name
      type: System.String
      description: >-
        Display name for the template. Template names can be up to 256

        bytes.
    - id: description
      type: System.String
      description: >-
        Description for the template. Template descriptions can

        be up to 1024 bytes.
    - id: fields
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate}
      description: >-
        Definitions of the property fields associated with this

        template. There can be up to 32 properties in a single template.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function BeginPropertiesTemplateAdd(name As String, description As String, fields As IEnumerable(Of PropertyFieldTemplate), callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateAdd*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  nameWithType.vb: TeamTeamRoutes.BeginPropertiesTemplateAdd(String, String, IEnumerable(Of PropertyFieldTemplate), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateAdd(System.String, System.String, System.Collections.Generic.IEnumerable(Of Dropbox.Api.FileProperties.PropertyFieldTemplate), System.AsyncCallback, System.Object)
  name.vb: BeginPropertiesTemplateAdd(String, String, IEnumerable(Of PropertyFieldTemplate), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateAdd(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateAdd(System.IAsyncResult)
  id: EndPropertiesTemplateAdd(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndPropertiesTemplateAdd(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndPropertiesTemplateAdd(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateAdd(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndPropertiesTemplateAdd
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6709
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the properties template add route\nto complete</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public AddTemplateResult EndPropertiesTemplateAdd(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.FileProperties.AddTemplateResult
      description: The response to the send request
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function EndPropertiesTemplateAdd(asyncResult As IAsyncResult) As AddTemplateResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateAdd*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.FileProperties.ModifyTemplateError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateGetAsync(Dropbox.Api.FileProperties.GetTemplateArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateGetAsync(Dropbox.Api.FileProperties.GetTemplateArg)
  id: PropertiesTemplateGetAsync(Dropbox.Api.FileProperties.GetTemplateArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: PropertiesTemplateGetAsync(GetTemplateArg)
  nameWithType: TeamTeamRoutes.PropertiesTemplateGetAsync(GetTemplateArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateGetAsync(Dropbox.Api.FileProperties.GetTemplateArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: PropertiesTemplateGetAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6731
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Permission : Team member file access. The scope for the route is\nfiles.team_metadata.write.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public Task<GetTemplateResult> PropertiesTemplateGetAsync(GetTemplateArg getTemplateArg)
    parameters:
    - id: getTemplateArg
      type: Dropbox.Api.FileProperties.GetTemplateArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.FileProperties.GetTemplateResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function PropertiesTemplateGetAsync(getTemplateArg As GetTemplateArg) As Task(Of GetTemplateResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateGetAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.FileProperties.TemplateError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateGet(Dropbox.Api.FileProperties.GetTemplateArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateGet(Dropbox.Api.FileProperties.GetTemplateArg,System.AsyncCallback,System.Object)
  id: BeginPropertiesTemplateGet(Dropbox.Api.FileProperties.GetTemplateArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginPropertiesTemplateGet(GetTemplateArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginPropertiesTemplateGet(GetTemplateArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateGet(Dropbox.Api.FileProperties.GetTemplateArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginPropertiesTemplateGet
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6746
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the properties template get route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public IAsyncResult BeginPropertiesTemplateGet(GetTemplateArg getTemplateArg, AsyncCallback callback, object state = null)
    parameters:
    - id: getTemplateArg
      type: Dropbox.Api.FileProperties.GetTemplateArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function BeginPropertiesTemplateGet(getTemplateArg As GetTemplateArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateGet*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateGetAsync(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateGetAsync(System.String)
  id: PropertiesTemplateGetAsync(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: PropertiesTemplateGetAsync(String)
  nameWithType: TeamTeamRoutes.PropertiesTemplateGetAsync(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateGetAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: PropertiesTemplateGetAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6768
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Permission : Team member file access. The scope for the route is\nfiles.team_metadata.write.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public Task<GetTemplateResult> PropertiesTemplateGetAsync(string templateId)
    parameters:
    - id: templateId
      type: System.String
      description: An identifier for template added by route  See <xref href="Dropbox.Api.FileProperties.Routes.FilePropertiesUserRoutes.TemplatesAddForUserAsync(Dropbox.Api.FileProperties.AddTemplateArg)" data-throw-if-not-resolved="false"></xref> or <xref href="Dropbox.Api.FileProperties.Routes.FilePropertiesTeamRoutes.TemplatesAddForTeamAsync(Dropbox.Api.FileProperties.AddTemplateArg)" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.FileProperties.GetTemplateResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function PropertiesTemplateGetAsync(templateId As String) As Task(Of GetTemplateResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateGetAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.FileProperties.TemplateError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateGet(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateGet(System.String,System.AsyncCallback,System.Object)
  id: BeginPropertiesTemplateGet(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginPropertiesTemplateGet(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginPropertiesTemplateGet(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateGet(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginPropertiesTemplateGet
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6789
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the properties template get route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public IAsyncResult BeginPropertiesTemplateGet(string templateId, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: templateId
      type: System.String
      description: An identifier for template added by route  See <xref href="Dropbox.Api.FileProperties.Routes.FilePropertiesUserRoutes.TemplatesAddForUserAsync(Dropbox.Api.FileProperties.AddTemplateArg)" data-throw-if-not-resolved="false"></xref> or <xref href="Dropbox.Api.FileProperties.Routes.FilePropertiesTeamRoutes.TemplatesAddForTeamAsync(Dropbox.Api.FileProperties.AddTemplateArg)" data-throw-if-not-resolved="false"></xref>.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function BeginPropertiesTemplateGet(templateId As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateGet*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateGet(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateGet(System.IAsyncResult)
  id: EndPropertiesTemplateGet(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndPropertiesTemplateGet(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndPropertiesTemplateGet(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateGet(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndPropertiesTemplateGet
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6809
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the properties template get route\nto complete</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public GetTemplateResult EndPropertiesTemplateGet(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.FileProperties.GetTemplateResult
      description: The response to the send request
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function EndPropertiesTemplateGet(asyncResult As IAsyncResult) As GetTemplateResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateGet*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.FileProperties.TemplateError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateListAsync
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateListAsync
  id: PropertiesTemplateListAsync
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: PropertiesTemplateListAsync()
  nameWithType: TeamTeamRoutes.PropertiesTemplateListAsync()
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateListAsync()
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: PropertiesTemplateListAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6830
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Permission : Team member file access. The scope for the route is\nfiles.team_metadata.write.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public Task<ListTemplateResult> PropertiesTemplateListAsync()
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.FileProperties.ListTemplateResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function PropertiesTemplateListAsync As Task(Of ListTemplateResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateListAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.FileProperties.TemplateError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateList(System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateList(System.AsyncCallback,System.Object)
  id: BeginPropertiesTemplateList(System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginPropertiesTemplateList(AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginPropertiesTemplateList(AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateList(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginPropertiesTemplateList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6844
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the properties template list route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public IAsyncResult BeginPropertiesTemplateList(AsyncCallback callback, object state = null)
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function BeginPropertiesTemplateList(callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateList*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateList(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateList(System.IAsyncResult)
  id: EndPropertiesTemplateList(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndPropertiesTemplateList(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndPropertiesTemplateList(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateList(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndPropertiesTemplateList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6862
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the properties template list route\nto complete</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public ListTemplateResult EndPropertiesTemplateList(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.FileProperties.ListTemplateResult
      description: The response to the send request
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function EndPropertiesTemplateList(asyncResult As IAsyncResult) As ListTemplateResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateList*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.FileProperties.TemplateError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateUpdateAsync(Dropbox.Api.FileProperties.UpdateTemplateArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateUpdateAsync(Dropbox.Api.FileProperties.UpdateTemplateArg)
  id: PropertiesTemplateUpdateAsync(Dropbox.Api.FileProperties.UpdateTemplateArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: PropertiesTemplateUpdateAsync(UpdateTemplateArg)
  nameWithType: TeamTeamRoutes.PropertiesTemplateUpdateAsync(UpdateTemplateArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateUpdateAsync(Dropbox.Api.FileProperties.UpdateTemplateArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: PropertiesTemplateUpdateAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6883
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public Task<UpdateTemplateResult> PropertiesTemplateUpdateAsync(UpdateTemplateArg updateTemplateArg)
    parameters:
    - id: updateTemplateArg
      type: Dropbox.Api.FileProperties.UpdateTemplateArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.FileProperties.UpdateTemplateResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function PropertiesTemplateUpdateAsync(updateTemplateArg As UpdateTemplateArg) As Task(Of UpdateTemplateResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateUpdateAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.FileProperties.ModifyTemplateError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateUpdate(Dropbox.Api.FileProperties.UpdateTemplateArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateUpdate(Dropbox.Api.FileProperties.UpdateTemplateArg,System.AsyncCallback,System.Object)
  id: BeginPropertiesTemplateUpdate(Dropbox.Api.FileProperties.UpdateTemplateArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginPropertiesTemplateUpdate(UpdateTemplateArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginPropertiesTemplateUpdate(UpdateTemplateArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateUpdate(Dropbox.Api.FileProperties.UpdateTemplateArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginPropertiesTemplateUpdate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6898
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the properties template update route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public IAsyncResult BeginPropertiesTemplateUpdate(UpdateTemplateArg updateTemplateArg, AsyncCallback callback, object state = null)
    parameters:
    - id: updateTemplateArg
      type: Dropbox.Api.FileProperties.UpdateTemplateArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function BeginPropertiesTemplateUpdate(updateTemplateArg As UpdateTemplateArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateUpdate*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateUpdateAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateUpdateAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate})
  id: PropertiesTemplateUpdateAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: PropertiesTemplateUpdateAsync(String, String, String, IEnumerable<PropertyFieldTemplate>)
  nameWithType: TeamTeamRoutes.PropertiesTemplateUpdateAsync(String, String, String, IEnumerable<PropertyFieldTemplate>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateUpdateAsync(System.String, System.String, System.String, System.Collections.Generic.IEnumerable<Dropbox.Api.FileProperties.PropertyFieldTemplate>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: PropertiesTemplateUpdateAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6925
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public Task<UpdateTemplateResult> PropertiesTemplateUpdateAsync(string templateId, string name = null, string description = null, IEnumerable<PropertyFieldTemplate> addFields = null)
    parameters:
    - id: templateId
      type: System.String
      description: An identifier for template added by  See <xref href="Dropbox.Api.FileProperties.Routes.FilePropertiesUserRoutes.TemplatesAddForUserAsync(Dropbox.Api.FileProperties.AddTemplateArg)" data-throw-if-not-resolved="false"></xref> or <xref href="Dropbox.Api.FileProperties.Routes.FilePropertiesTeamRoutes.TemplatesAddForTeamAsync(Dropbox.Api.FileProperties.AddTemplateArg)" data-throw-if-not-resolved="false"></xref>.
    - id: name
      type: System.String
      description: >-
        A display name for the template. template names can be up to 256

        bytes.
    - id: description
      type: System.String
      description: >-
        Description for the new template. Template descriptions

        can be up to 1024 bytes.
    - id: addFields
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate}
      description: >-
        Property field templates to be added to the group template.

        There can be up to 32 properties in a single template.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.FileProperties.UpdateTemplateResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function PropertiesTemplateUpdateAsync(templateId As String, name As String = Nothing, description As String = Nothing, addFields As IEnumerable(Of PropertyFieldTemplate) = Nothing) As Task(Of UpdateTemplateResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateUpdateAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.FileProperties.ModifyTemplateError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  nameWithType.vb: TeamTeamRoutes.PropertiesTemplateUpdateAsync(String, String, String, IEnumerable(Of PropertyFieldTemplate))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateUpdateAsync(System.String, System.String, System.String, System.Collections.Generic.IEnumerable(Of Dropbox.Api.FileProperties.PropertyFieldTemplate))
  name.vb: PropertiesTemplateUpdateAsync(String, String, String, IEnumerable(Of PropertyFieldTemplate))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateUpdate(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateUpdate(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate},System.AsyncCallback,System.Object)
  id: BeginPropertiesTemplateUpdate(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginPropertiesTemplateUpdate(String, String, String, IEnumerable<PropertyFieldTemplate>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginPropertiesTemplateUpdate(String, String, String, IEnumerable<PropertyFieldTemplate>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateUpdate(System.String, System.String, System.String, System.Collections.Generic.IEnumerable<Dropbox.Api.FileProperties.PropertyFieldTemplate>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginPropertiesTemplateUpdate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6958
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the properties template update route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public IAsyncResult BeginPropertiesTemplateUpdate(string templateId, string name = null, string description = null, IEnumerable<PropertyFieldTemplate> addFields = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: templateId
      type: System.String
      description: An identifier for template added by  See <xref href="Dropbox.Api.FileProperties.Routes.FilePropertiesUserRoutes.TemplatesAddForUserAsync(Dropbox.Api.FileProperties.AddTemplateArg)" data-throw-if-not-resolved="false"></xref> or <xref href="Dropbox.Api.FileProperties.Routes.FilePropertiesTeamRoutes.TemplatesAddForTeamAsync(Dropbox.Api.FileProperties.AddTemplateArg)" data-throw-if-not-resolved="false"></xref>.
    - id: name
      type: System.String
      description: >-
        A display name for the template. template names can be up to 256

        bytes.
    - id: description
      type: System.String
      description: >-
        Description for the new template. Template descriptions

        can be up to 1024 bytes.
    - id: addFields
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate}
      description: >-
        Property field templates to be added to the group template.

        There can be up to 32 properties in a single template.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function BeginPropertiesTemplateUpdate(templateId As String, name As String = Nothing, description As String = Nothing, addFields As IEnumerable(Of PropertyFieldTemplate) = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateUpdate*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  nameWithType.vb: TeamTeamRoutes.BeginPropertiesTemplateUpdate(String, String, String, IEnumerable(Of PropertyFieldTemplate), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateUpdate(System.String, System.String, System.String, System.Collections.Generic.IEnumerable(Of Dropbox.Api.FileProperties.PropertyFieldTemplate), System.AsyncCallback, System.Object)
  name.vb: BeginPropertiesTemplateUpdate(String, String, String, IEnumerable(Of PropertyFieldTemplate), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateUpdate(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateUpdate(System.IAsyncResult)
  id: EndPropertiesTemplateUpdate(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndPropertiesTemplateUpdate(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndPropertiesTemplateUpdate(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateUpdate(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndPropertiesTemplateUpdate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 6984
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the properties template update\nroute to complete</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public UpdateTemplateResult EndPropertiesTemplateUpdate(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.FileProperties.UpdateTemplateResult
      description: The response to the send request
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function EndPropertiesTemplateUpdate(asyncResult As IAsyncResult) As UpdateTemplateResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateUpdate*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.FileProperties.ModifyTemplateError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetActivityAsync(Dropbox.Api.Team.DateRange)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetActivityAsync(Dropbox.Api.Team.DateRange)
  id: ReportsGetActivityAsync(Dropbox.Api.Team.DateRange)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: ReportsGetActivityAsync(DateRange)
  nameWithType: TeamTeamRoutes.ReportsGetActivityAsync(DateRange)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetActivityAsync(Dropbox.Api.Team.DateRange)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ReportsGetActivityAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7006
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Retrieves reporting data about a team&apos;s user activity. Deprecated: Will be\nremoved on July 1st 2021.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public Task<GetActivityReport> ReportsGetActivityAsync(DateRange dateRange)
    parameters:
    - id: dateRange
      type: Dropbox.Api.Team.DateRange
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GetActivityReport}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function ReportsGetActivityAsync(dateRange As DateRange) As Task(Of GetActivityReport)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetActivityAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.DateRangeError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetActivity(Dropbox.Api.Team.DateRange,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetActivity(Dropbox.Api.Team.DateRange,System.AsyncCallback,System.Object)
  id: BeginReportsGetActivity(Dropbox.Api.Team.DateRange,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginReportsGetActivity(DateRange, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginReportsGetActivity(DateRange, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetActivity(Dropbox.Api.Team.DateRange, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginReportsGetActivity
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7021
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the reports get activity route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public IAsyncResult BeginReportsGetActivity(DateRange dateRange, AsyncCallback callback, object state = null)
    parameters:
    - id: dateRange
      type: Dropbox.Api.Team.DateRange
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function BeginReportsGetActivity(dateRange As DateRange, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetActivity*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetActivityAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetActivityAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: ReportsGetActivityAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: ReportsGetActivityAsync(Nullable<DateTime>, Nullable<DateTime>)
  nameWithType: TeamTeamRoutes.ReportsGetActivityAsync(Nullable<DateTime>, Nullable<DateTime>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetActivityAsync(System.Nullable<System.DateTime>, System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ReportsGetActivityAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7041
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Retrieves reporting data about a team&apos;s user activity. Deprecated: Will be\nremoved on July 1st 2021.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public Task<GetActivityReport> ReportsGetActivityAsync(DateTime? startDate = null, DateTime? endDate = null)
    parameters:
    - id: startDate
      type: System.Nullable{System.DateTime}
      description: >-
        Optional starting date (inclusive). If start_date is None

        or too long ago, this field will  be set to 6 months ago.
    - id: endDate
      type: System.Nullable{System.DateTime}
      description: Optional ending date (exclusive).
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GetActivityReport}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function ReportsGetActivityAsync(startDate As Date? = Nothing, endDate As Date? = Nothing) As Task(Of GetActivityReport)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetActivityAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.DateRangeError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  nameWithType.vb: TeamTeamRoutes.ReportsGetActivityAsync(Nullable(Of DateTime), Nullable(Of DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetActivityAsync(System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime))
  name.vb: ReportsGetActivityAsync(Nullable(Of DateTime), Nullable(Of DateTime))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetActivity(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetActivity(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  id: BeginReportsGetActivity(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginReportsGetActivity(Nullable<DateTime>, Nullable<DateTime>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginReportsGetActivity(Nullable<DateTime>, Nullable<DateTime>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetActivity(System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginReportsGetActivity
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7062
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the reports get activity route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public IAsyncResult BeginReportsGetActivity(DateTime? startDate = null, DateTime? endDate = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: startDate
      type: System.Nullable{System.DateTime}
      description: >-
        Optional starting date (inclusive). If start_date is None

        or too long ago, this field will  be set to 6 months ago.
    - id: endDate
      type: System.Nullable{System.DateTime}
      description: Optional ending date (exclusive).
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function BeginReportsGetActivity(startDate As Date? = Nothing, endDate As Date? = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetActivity*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  nameWithType.vb: TeamTeamRoutes.BeginReportsGetActivity(Nullable(Of DateTime), Nullable(Of DateTime), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetActivity(System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.AsyncCallback, System.Object)
  name.vb: BeginReportsGetActivity(Nullable(Of DateTime), Nullable(Of DateTime), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetActivity(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetActivity(System.IAsyncResult)
  id: EndReportsGetActivity(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndReportsGetActivity(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndReportsGetActivity(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetActivity(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndReportsGetActivity
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7084
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the reports get activity route to\ncomplete</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public GetActivityReport EndReportsGetActivity(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.GetActivityReport
      description: The response to the send request
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function EndReportsGetActivity(asyncResult As IAsyncResult) As GetActivityReport
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetActivity*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.DateRangeError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetDevicesAsync(Dropbox.Api.Team.DateRange)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetDevicesAsync(Dropbox.Api.Team.DateRange)
  id: ReportsGetDevicesAsync(Dropbox.Api.Team.DateRange)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: ReportsGetDevicesAsync(DateRange)
  nameWithType: TeamTeamRoutes.ReportsGetDevicesAsync(DateRange)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetDevicesAsync(Dropbox.Api.Team.DateRange)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ReportsGetDevicesAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7106
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Retrieves reporting data about a team&apos;s linked devices. Deprecated: Will be\nremoved on July 1st 2021.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public Task<GetDevicesReport> ReportsGetDevicesAsync(DateRange dateRange)
    parameters:
    - id: dateRange
      type: Dropbox.Api.Team.DateRange
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GetDevicesReport}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function ReportsGetDevicesAsync(dateRange As DateRange) As Task(Of GetDevicesReport)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetDevicesAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.DateRangeError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetDevices(Dropbox.Api.Team.DateRange,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetDevices(Dropbox.Api.Team.DateRange,System.AsyncCallback,System.Object)
  id: BeginReportsGetDevices(Dropbox.Api.Team.DateRange,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginReportsGetDevices(DateRange, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginReportsGetDevices(DateRange, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetDevices(Dropbox.Api.Team.DateRange, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginReportsGetDevices
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7121
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the reports get devices route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public IAsyncResult BeginReportsGetDevices(DateRange dateRange, AsyncCallback callback, object state = null)
    parameters:
    - id: dateRange
      type: Dropbox.Api.Team.DateRange
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function BeginReportsGetDevices(dateRange As DateRange, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetDevices*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetDevicesAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetDevicesAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: ReportsGetDevicesAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: ReportsGetDevicesAsync(Nullable<DateTime>, Nullable<DateTime>)
  nameWithType: TeamTeamRoutes.ReportsGetDevicesAsync(Nullable<DateTime>, Nullable<DateTime>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetDevicesAsync(System.Nullable<System.DateTime>, System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ReportsGetDevicesAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7141
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Retrieves reporting data about a team&apos;s linked devices. Deprecated: Will be\nremoved on July 1st 2021.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public Task<GetDevicesReport> ReportsGetDevicesAsync(DateTime? startDate = null, DateTime? endDate = null)
    parameters:
    - id: startDate
      type: System.Nullable{System.DateTime}
      description: >-
        Optional starting date (inclusive). If start_date is None

        or too long ago, this field will  be set to 6 months ago.
    - id: endDate
      type: System.Nullable{System.DateTime}
      description: Optional ending date (exclusive).
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GetDevicesReport}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function ReportsGetDevicesAsync(startDate As Date? = Nothing, endDate As Date? = Nothing) As Task(Of GetDevicesReport)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetDevicesAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.DateRangeError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  nameWithType.vb: TeamTeamRoutes.ReportsGetDevicesAsync(Nullable(Of DateTime), Nullable(Of DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetDevicesAsync(System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime))
  name.vb: ReportsGetDevicesAsync(Nullable(Of DateTime), Nullable(Of DateTime))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetDevices(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetDevices(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  id: BeginReportsGetDevices(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginReportsGetDevices(Nullable<DateTime>, Nullable<DateTime>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginReportsGetDevices(Nullable<DateTime>, Nullable<DateTime>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetDevices(System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginReportsGetDevices
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7162
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the reports get devices route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public IAsyncResult BeginReportsGetDevices(DateTime? startDate = null, DateTime? endDate = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: startDate
      type: System.Nullable{System.DateTime}
      description: >-
        Optional starting date (inclusive). If start_date is None

        or too long ago, this field will  be set to 6 months ago.
    - id: endDate
      type: System.Nullable{System.DateTime}
      description: Optional ending date (exclusive).
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function BeginReportsGetDevices(startDate As Date? = Nothing, endDate As Date? = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetDevices*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  nameWithType.vb: TeamTeamRoutes.BeginReportsGetDevices(Nullable(Of DateTime), Nullable(Of DateTime), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetDevices(System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.AsyncCallback, System.Object)
  name.vb: BeginReportsGetDevices(Nullable(Of DateTime), Nullable(Of DateTime), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetDevices(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetDevices(System.IAsyncResult)
  id: EndReportsGetDevices(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndReportsGetDevices(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndReportsGetDevices(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetDevices(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndReportsGetDevices
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7184
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the reports get devices route to\ncomplete</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public GetDevicesReport EndReportsGetDevices(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.GetDevicesReport
      description: The response to the send request
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function EndReportsGetDevices(asyncResult As IAsyncResult) As GetDevicesReport
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetDevices*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.DateRangeError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetMembershipAsync(Dropbox.Api.Team.DateRange)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetMembershipAsync(Dropbox.Api.Team.DateRange)
  id: ReportsGetMembershipAsync(Dropbox.Api.Team.DateRange)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: ReportsGetMembershipAsync(DateRange)
  nameWithType: TeamTeamRoutes.ReportsGetMembershipAsync(DateRange)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetMembershipAsync(Dropbox.Api.Team.DateRange)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ReportsGetMembershipAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7206
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Retrieves reporting data about a team&apos;s membership. Deprecated: Will be\nremoved on July 1st 2021.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public Task<GetMembershipReport> ReportsGetMembershipAsync(DateRange dateRange)
    parameters:
    - id: dateRange
      type: Dropbox.Api.Team.DateRange
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GetMembershipReport}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function ReportsGetMembershipAsync(dateRange As DateRange) As Task(Of GetMembershipReport)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetMembershipAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.DateRangeError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetMembership(Dropbox.Api.Team.DateRange,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetMembership(Dropbox.Api.Team.DateRange,System.AsyncCallback,System.Object)
  id: BeginReportsGetMembership(Dropbox.Api.Team.DateRange,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginReportsGetMembership(DateRange, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginReportsGetMembership(DateRange, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetMembership(Dropbox.Api.Team.DateRange, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginReportsGetMembership
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7221
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the reports get membership route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public IAsyncResult BeginReportsGetMembership(DateRange dateRange, AsyncCallback callback, object state = null)
    parameters:
    - id: dateRange
      type: Dropbox.Api.Team.DateRange
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function BeginReportsGetMembership(dateRange As DateRange, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetMembership*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetMembershipAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetMembershipAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: ReportsGetMembershipAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: ReportsGetMembershipAsync(Nullable<DateTime>, Nullable<DateTime>)
  nameWithType: TeamTeamRoutes.ReportsGetMembershipAsync(Nullable<DateTime>, Nullable<DateTime>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetMembershipAsync(System.Nullable<System.DateTime>, System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ReportsGetMembershipAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7241
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Retrieves reporting data about a team&apos;s membership. Deprecated: Will be\nremoved on July 1st 2021.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public Task<GetMembershipReport> ReportsGetMembershipAsync(DateTime? startDate = null, DateTime? endDate = null)
    parameters:
    - id: startDate
      type: System.Nullable{System.DateTime}
      description: >-
        Optional starting date (inclusive). If start_date is None

        or too long ago, this field will  be set to 6 months ago.
    - id: endDate
      type: System.Nullable{System.DateTime}
      description: Optional ending date (exclusive).
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GetMembershipReport}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function ReportsGetMembershipAsync(startDate As Date? = Nothing, endDate As Date? = Nothing) As Task(Of GetMembershipReport)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetMembershipAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.DateRangeError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  nameWithType.vb: TeamTeamRoutes.ReportsGetMembershipAsync(Nullable(Of DateTime), Nullable(Of DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetMembershipAsync(System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime))
  name.vb: ReportsGetMembershipAsync(Nullable(Of DateTime), Nullable(Of DateTime))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetMembership(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetMembership(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  id: BeginReportsGetMembership(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginReportsGetMembership(Nullable<DateTime>, Nullable<DateTime>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginReportsGetMembership(Nullable<DateTime>, Nullable<DateTime>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetMembership(System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginReportsGetMembership
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7262
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the reports get membership route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public IAsyncResult BeginReportsGetMembership(DateTime? startDate = null, DateTime? endDate = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: startDate
      type: System.Nullable{System.DateTime}
      description: >-
        Optional starting date (inclusive). If start_date is None

        or too long ago, this field will  be set to 6 months ago.
    - id: endDate
      type: System.Nullable{System.DateTime}
      description: Optional ending date (exclusive).
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function BeginReportsGetMembership(startDate As Date? = Nothing, endDate As Date? = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetMembership*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  nameWithType.vb: TeamTeamRoutes.BeginReportsGetMembership(Nullable(Of DateTime), Nullable(Of DateTime), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetMembership(System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.AsyncCallback, System.Object)
  name.vb: BeginReportsGetMembership(Nullable(Of DateTime), Nullable(Of DateTime), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetMembership(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetMembership(System.IAsyncResult)
  id: EndReportsGetMembership(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndReportsGetMembership(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndReportsGetMembership(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetMembership(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndReportsGetMembership
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7284
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the reports get membership route\nto complete</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public GetMembershipReport EndReportsGetMembership(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.GetMembershipReport
      description: The response to the send request
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function EndReportsGetMembership(asyncResult As IAsyncResult) As GetMembershipReport
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetMembership*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.DateRangeError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetStorageAsync(Dropbox.Api.Team.DateRange)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetStorageAsync(Dropbox.Api.Team.DateRange)
  id: ReportsGetStorageAsync(Dropbox.Api.Team.DateRange)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: ReportsGetStorageAsync(DateRange)
  nameWithType: TeamTeamRoutes.ReportsGetStorageAsync(DateRange)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetStorageAsync(Dropbox.Api.Team.DateRange)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ReportsGetStorageAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7306
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Retrieves reporting data about a team&apos;s storage usage. Deprecated: Will be\nremoved on July 1st 2021.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public Task<GetStorageReport> ReportsGetStorageAsync(DateRange dateRange)
    parameters:
    - id: dateRange
      type: Dropbox.Api.Team.DateRange
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GetStorageReport}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function ReportsGetStorageAsync(dateRange As DateRange) As Task(Of GetStorageReport)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetStorageAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.DateRangeError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetStorage(Dropbox.Api.Team.DateRange,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetStorage(Dropbox.Api.Team.DateRange,System.AsyncCallback,System.Object)
  id: BeginReportsGetStorage(Dropbox.Api.Team.DateRange,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginReportsGetStorage(DateRange, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginReportsGetStorage(DateRange, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetStorage(Dropbox.Api.Team.DateRange, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginReportsGetStorage
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7321
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the reports get storage route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public IAsyncResult BeginReportsGetStorage(DateRange dateRange, AsyncCallback callback, object state = null)
    parameters:
    - id: dateRange
      type: Dropbox.Api.Team.DateRange
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function BeginReportsGetStorage(dateRange As DateRange, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetStorage*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetStorageAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetStorageAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: ReportsGetStorageAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: ReportsGetStorageAsync(Nullable<DateTime>, Nullable<DateTime>)
  nameWithType: TeamTeamRoutes.ReportsGetStorageAsync(Nullable<DateTime>, Nullable<DateTime>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetStorageAsync(System.Nullable<System.DateTime>, System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ReportsGetStorageAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7341
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Retrieves reporting data about a team&apos;s storage usage. Deprecated: Will be\nremoved on July 1st 2021.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public Task<GetStorageReport> ReportsGetStorageAsync(DateTime? startDate = null, DateTime? endDate = null)
    parameters:
    - id: startDate
      type: System.Nullable{System.DateTime}
      description: >-
        Optional starting date (inclusive). If start_date is None

        or too long ago, this field will  be set to 6 months ago.
    - id: endDate
      type: System.Nullable{System.DateTime}
      description: Optional ending date (exclusive).
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.GetStorageReport}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function ReportsGetStorageAsync(startDate As Date? = Nothing, endDate As Date? = Nothing) As Task(Of GetStorageReport)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetStorageAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.DateRangeError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  nameWithType.vb: TeamTeamRoutes.ReportsGetStorageAsync(Nullable(Of DateTime), Nullable(Of DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetStorageAsync(System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime))
  name.vb: ReportsGetStorageAsync(Nullable(Of DateTime), Nullable(Of DateTime))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetStorage(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetStorage(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  id: BeginReportsGetStorage(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginReportsGetStorage(Nullable<DateTime>, Nullable<DateTime>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginReportsGetStorage(Nullable<DateTime>, Nullable<DateTime>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetStorage(System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginReportsGetStorage
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7362
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the reports get storage route.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public IAsyncResult BeginReportsGetStorage(DateTime? startDate = null, DateTime? endDate = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: startDate
      type: System.Nullable{System.DateTime}
      description: >-
        Optional starting date (inclusive). If start_date is None

        or too long ago, this field will  be set to 6 months ago.
    - id: endDate
      type: System.Nullable{System.DateTime}
      description: Optional ending date (exclusive).
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function BeginReportsGetStorage(startDate As Date? = Nothing, endDate As Date? = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetStorage*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  nameWithType.vb: TeamTeamRoutes.BeginReportsGetStorage(Nullable(Of DateTime), Nullable(Of DateTime), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetStorage(System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.AsyncCallback, System.Object)
  name.vb: BeginReportsGetStorage(Nullable(Of DateTime), Nullable(Of DateTime), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetStorage(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetStorage(System.IAsyncResult)
  id: EndReportsGetStorage(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndReportsGetStorage(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndReportsGetStorage(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetStorage(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndReportsGetStorage
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7384
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the reports get storage route to\ncomplete</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is deprecated")]

      public GetStorageReport EndReportsGetStorage(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.GetStorageReport
      description: The response to the send request
    content.vb: >-
      <Obsolete("This function is deprecated")>

      Public Function EndReportsGetStorage(asyncResult As IAsyncResult) As GetStorageReport
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetStorage*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.DateRangeError" data-throw-if-not-resolved="false"></xref>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is deprecated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderActivateAsync(Dropbox.Api.Team.TeamFolderIdArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderActivateAsync(Dropbox.Api.Team.TeamFolderIdArg)
  id: TeamFolderActivateAsync(Dropbox.Api.Team.TeamFolderIdArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TeamFolderActivateAsync(TeamFolderIdArg)
  nameWithType: TeamTeamRoutes.TeamFolderActivateAsync(TeamFolderIdArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderActivateAsync(Dropbox.Api.Team.TeamFolderIdArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderActivateAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7406
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Sets an archived team folder&apos;s status to active.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<TeamFolderMetadata> TeamFolderActivateAsync(TeamFolderIdArg teamFolderIdArg)
    parameters:
    - id: teamFolderIdArg
      type: Dropbox.Api.Team.TeamFolderIdArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function TeamFolderActivateAsync(teamFolderIdArg As TeamFolderIdArg) As Task(Of TeamFolderMetadata)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderActivateAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderActivateError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderActivate(Dropbox.Api.Team.TeamFolderIdArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderActivate(Dropbox.Api.Team.TeamFolderIdArg,System.AsyncCallback,System.Object)
  id: BeginTeamFolderActivate(Dropbox.Api.Team.TeamFolderIdArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTeamFolderActivate(TeamFolderIdArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTeamFolderActivate(TeamFolderIdArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderActivate(Dropbox.Api.Team.TeamFolderIdArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTeamFolderActivate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7420
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the team folder activate route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTeamFolderActivate(TeamFolderIdArg teamFolderIdArg, AsyncCallback callback, object state = null)
    parameters:
    - id: teamFolderIdArg
      type: Dropbox.Api.Team.TeamFolderIdArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTeamFolderActivate(teamFolderIdArg As TeamFolderIdArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderActivate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderActivateAsync(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderActivateAsync(System.String)
  id: TeamFolderActivateAsync(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TeamFolderActivateAsync(String)
  nameWithType: TeamTeamRoutes.TeamFolderActivateAsync(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderActivateAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderActivateAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7437
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Sets an archived team folder&apos;s status to active.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<TeamFolderMetadata> TeamFolderActivateAsync(string teamFolderId)
    parameters:
    - id: teamFolderId
      type: System.String
      description: The ID of the team folder.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function TeamFolderActivateAsync(teamFolderId As String) As Task(Of TeamFolderMetadata)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderActivateAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderActivateError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderActivate(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderActivate(System.String,System.AsyncCallback,System.Object)
  id: BeginTeamFolderActivate(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTeamFolderActivate(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTeamFolderActivate(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderActivate(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTeamFolderActivate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7453
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the team folder activate route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTeamFolderActivate(string teamFolderId, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: teamFolderId
      type: System.String
      description: The ID of the team folder.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTeamFolderActivate(teamFolderId As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderActivate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderActivate(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderActivate(System.IAsyncResult)
  id: EndTeamFolderActivate(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndTeamFolderActivate(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndTeamFolderActivate(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderActivate(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndTeamFolderActivate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7472
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the team folder activate route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public TeamFolderMetadata EndTeamFolderActivate(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.TeamFolderMetadata
      description: The response to the send request
    content.vb: Public Function EndTeamFolderActivate(asyncResult As IAsyncResult) As TeamFolderMetadata
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderActivate*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderActivateError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveAsync(Dropbox.Api.Team.TeamFolderArchiveArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveAsync(Dropbox.Api.Team.TeamFolderArchiveArg)
  id: TeamFolderArchiveAsync(Dropbox.Api.Team.TeamFolderArchiveArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TeamFolderArchiveAsync(TeamFolderArchiveArg)
  nameWithType: TeamTeamRoutes.TeamFolderArchiveAsync(TeamFolderArchiveArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveAsync(Dropbox.Api.Team.TeamFolderArchiveArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderArchiveAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7495
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Sets an active team folder&apos;s status to archived and removes all folder and\nfile members. This endpoint cannot be used for teams that have a shared team\nspace.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<TeamFolderArchiveLaunch> TeamFolderArchiveAsync(TeamFolderArchiveArg teamFolderArchiveArg)
    parameters:
    - id: teamFolderArchiveArg
      type: Dropbox.Api.Team.TeamFolderArchiveArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderArchiveLaunch}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function TeamFolderArchiveAsync(teamFolderArchiveArg As TeamFolderArchiveArg) As Task(Of TeamFolderArchiveLaunch)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderArchiveError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchive(Dropbox.Api.Team.TeamFolderArchiveArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchive(Dropbox.Api.Team.TeamFolderArchiveArg,System.AsyncCallback,System.Object)
  id: BeginTeamFolderArchive(Dropbox.Api.Team.TeamFolderArchiveArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTeamFolderArchive(TeamFolderArchiveArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTeamFolderArchive(TeamFolderArchiveArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchive(Dropbox.Api.Team.TeamFolderArchiveArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTeamFolderArchive
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7509
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the team folder archive route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTeamFolderArchive(TeamFolderArchiveArg teamFolderArchiveArg, AsyncCallback callback, object state = null)
    parameters:
    - id: teamFolderArchiveArg
      type: Dropbox.Api.Team.TeamFolderArchiveArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTeamFolderArchive(teamFolderArchiveArg As TeamFolderArchiveArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchive*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveAsync(System.String,System.Boolean)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveAsync(System.String,System.Boolean)
  id: TeamFolderArchiveAsync(System.String,System.Boolean)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TeamFolderArchiveAsync(String, Boolean)
  nameWithType: TeamTeamRoutes.TeamFolderArchiveAsync(String, Boolean)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveAsync(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderArchiveAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7530
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Sets an active team folder&apos;s status to archived and removes all folder and\nfile members. This endpoint cannot be used for teams that have a shared team\nspace.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<TeamFolderArchiveLaunch> TeamFolderArchiveAsync(string teamFolderId, bool forceAsyncOff = false)
    parameters:
    - id: teamFolderId
      type: System.String
      description: The ID of the team folder.
    - id: forceAsyncOff
      type: System.Boolean
      description: >-
        Whether to force the archive to happen

        synchronously.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderArchiveLaunch}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function TeamFolderArchiveAsync(teamFolderId As String, forceAsyncOff As Boolean = False) As Task(Of TeamFolderArchiveLaunch)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderArchiveError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchive(System.String,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchive(System.String,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginTeamFolderArchive(System.String,System.Boolean,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTeamFolderArchive(String, Boolean, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTeamFolderArchive(String, Boolean, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchive(System.String, System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTeamFolderArchive
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7550
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the team folder archive route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTeamFolderArchive(string teamFolderId, bool forceAsyncOff = false, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: teamFolderId
      type: System.String
      description: The ID of the team folder.
    - id: forceAsyncOff
      type: System.Boolean
      description: >-
        Whether to force the archive to happen

        synchronously.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTeamFolderArchive(teamFolderId As String, forceAsyncOff As Boolean = False, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchive*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderArchive(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderArchive(System.IAsyncResult)
  id: EndTeamFolderArchive(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndTeamFolderArchive(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndTeamFolderArchive(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderArchive(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndTeamFolderArchive
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7571
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the team folder archive route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public TeamFolderArchiveLaunch EndTeamFolderArchive(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.TeamFolderArchiveLaunch
      description: The response to the send request
    content.vb: Public Function EndTeamFolderArchive(asyncResult As IAsyncResult) As TeamFolderArchiveLaunch
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderArchive*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderArchiveError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveCheckAsync(Dropbox.Api.Async.PollArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveCheckAsync(Dropbox.Api.Async.PollArg)
  id: TeamFolderArchiveCheckAsync(Dropbox.Api.Async.PollArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TeamFolderArchiveCheckAsync(PollArg)
  nameWithType: TeamTeamRoutes.TeamFolderArchiveCheckAsync(PollArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveCheckAsync(Dropbox.Api.Async.PollArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderArchiveCheckAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7592
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Returns the status of an asynchronous job for archiving a team folder.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<TeamFolderArchiveJobStatus> TeamFolderArchiveCheckAsync(PollArg pollArg)
    parameters:
    - id: pollArg
      type: Dropbox.Api.Async.PollArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderArchiveJobStatus}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function TeamFolderArchiveCheckAsync(pollArg As PollArg) As Task(Of TeamFolderArchiveJobStatus)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveCheckAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchiveCheck(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchiveCheck(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  id: BeginTeamFolderArchiveCheck(Dropbox.Api.Async.PollArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTeamFolderArchiveCheck(PollArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTeamFolderArchiveCheck(PollArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchiveCheck(Dropbox.Api.Async.PollArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTeamFolderArchiveCheck
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7606
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the team folder archive check route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTeamFolderArchiveCheck(PollArg pollArg, AsyncCallback callback, object state = null)
    parameters:
    - id: pollArg
      type: Dropbox.Api.Async.PollArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTeamFolderArchiveCheck(pollArg As PollArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchiveCheck*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveCheckAsync(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveCheckAsync(System.String)
  id: TeamFolderArchiveCheckAsync(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TeamFolderArchiveCheckAsync(String)
  nameWithType: TeamTeamRoutes.TeamFolderArchiveCheckAsync(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveCheckAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderArchiveCheckAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7624
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Returns the status of an asynchronous job for archiving a team folder.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<TeamFolderArchiveJobStatus> TeamFolderArchiveCheckAsync(string asyncJobId)
    parameters:
    - id: asyncJobId
      type: System.String
      description: >-
        Id of the asynchronous job. This is the value of a

        response returned from the method that launched the job.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderArchiveJobStatus}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function TeamFolderArchiveCheckAsync(asyncJobId As String) As Task(Of TeamFolderArchiveJobStatus)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveCheckAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchiveCheck(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchiveCheck(System.String,System.AsyncCallback,System.Object)
  id: BeginTeamFolderArchiveCheck(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTeamFolderArchiveCheck(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTeamFolderArchiveCheck(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchiveCheck(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTeamFolderArchiveCheck
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7641
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the team folder archive check route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTeamFolderArchiveCheck(string asyncJobId, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: asyncJobId
      type: System.String
      description: >-
        Id of the asynchronous job. This is the value of a

        response returned from the method that launched the job.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTeamFolderArchiveCheck(asyncJobId As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchiveCheck*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderArchiveCheck(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderArchiveCheck(System.IAsyncResult)
  id: EndTeamFolderArchiveCheck(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndTeamFolderArchiveCheck(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndTeamFolderArchiveCheck(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderArchiveCheck(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndTeamFolderArchiveCheck
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7660
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the team folder archive check\nroute to complete</p>\n"
  example: []
  syntax:
    content: public TeamFolderArchiveJobStatus EndTeamFolderArchiveCheck(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.TeamFolderArchiveJobStatus
      description: The response to the send request
    content.vb: Public Function EndTeamFolderArchiveCheck(asyncResult As IAsyncResult) As TeamFolderArchiveJobStatus
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderArchiveCheck*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Async.PollError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderCreateAsync(Dropbox.Api.Team.TeamFolderCreateArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderCreateAsync(Dropbox.Api.Team.TeamFolderCreateArg)
  id: TeamFolderCreateAsync(Dropbox.Api.Team.TeamFolderCreateArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TeamFolderCreateAsync(TeamFolderCreateArg)
  nameWithType: TeamTeamRoutes.TeamFolderCreateAsync(TeamFolderCreateArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderCreateAsync(Dropbox.Api.Team.TeamFolderCreateArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderCreateAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7682
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Creates a new, active, team folder with no members. This endpoint can only be\nused for teams that do not already have a shared team space.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<TeamFolderMetadata> TeamFolderCreateAsync(TeamFolderCreateArg teamFolderCreateArg)
    parameters:
    - id: teamFolderCreateArg
      type: Dropbox.Api.Team.TeamFolderCreateArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function TeamFolderCreateAsync(teamFolderCreateArg As TeamFolderCreateArg) As Task(Of TeamFolderMetadata)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderCreateAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderCreateError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderCreate(Dropbox.Api.Team.TeamFolderCreateArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderCreate(Dropbox.Api.Team.TeamFolderCreateArg,System.AsyncCallback,System.Object)
  id: BeginTeamFolderCreate(Dropbox.Api.Team.TeamFolderCreateArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTeamFolderCreate(TeamFolderCreateArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTeamFolderCreate(TeamFolderCreateArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderCreate(Dropbox.Api.Team.TeamFolderCreateArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTeamFolderCreate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7696
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the team folder create route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTeamFolderCreate(TeamFolderCreateArg teamFolderCreateArg, AsyncCallback callback, object state = null)
    parameters:
    - id: teamFolderCreateArg
      type: Dropbox.Api.Team.TeamFolderCreateArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTeamFolderCreate(teamFolderCreateArg As TeamFolderCreateArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderCreate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderCreateAsync(System.String,Dropbox.Api.Files.SyncSettingArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderCreateAsync(System.String,Dropbox.Api.Files.SyncSettingArg)
  id: TeamFolderCreateAsync(System.String,Dropbox.Api.Files.SyncSettingArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TeamFolderCreateAsync(String, SyncSettingArg)
  nameWithType: TeamTeamRoutes.TeamFolderCreateAsync(String, SyncSettingArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderCreateAsync(System.String, Dropbox.Api.Files.SyncSettingArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderCreateAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7716
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Creates a new, active, team folder with no members. This endpoint can only be\nused for teams that do not already have a shared team space.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<TeamFolderMetadata> TeamFolderCreateAsync(string name, SyncSettingArg syncSetting = null)
    parameters:
    - id: name
      type: System.String
      description: Name for the new team folder.
    - id: syncSetting
      type: Dropbox.Api.Files.SyncSettingArg
      description: >-
        The sync setting to apply to this team folder. Only

        permitted if the team has team selective sync enabled.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function TeamFolderCreateAsync(name As String, syncSetting As SyncSettingArg = Nothing) As Task(Of TeamFolderMetadata)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderCreateAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderCreateError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderCreate(System.String,Dropbox.Api.Files.SyncSettingArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderCreate(System.String,Dropbox.Api.Files.SyncSettingArg,System.AsyncCallback,System.Object)
  id: BeginTeamFolderCreate(System.String,Dropbox.Api.Files.SyncSettingArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTeamFolderCreate(String, SyncSettingArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTeamFolderCreate(String, SyncSettingArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderCreate(System.String, Dropbox.Api.Files.SyncSettingArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTeamFolderCreate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7736
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the team folder create route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTeamFolderCreate(string name, SyncSettingArg syncSetting = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: name
      type: System.String
      description: Name for the new team folder.
    - id: syncSetting
      type: Dropbox.Api.Files.SyncSettingArg
      description: >-
        The sync setting to apply to this team folder. Only

        permitted if the team has team selective sync enabled.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTeamFolderCreate(name As String, syncSetting As SyncSettingArg = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderCreate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderCreate(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderCreate(System.IAsyncResult)
  id: EndTeamFolderCreate(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndTeamFolderCreate(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndTeamFolderCreate(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderCreate(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndTeamFolderCreate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7757
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the team folder create route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public TeamFolderMetadata EndTeamFolderCreate(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.TeamFolderMetadata
      description: The response to the send request
    content.vb: Public Function EndTeamFolderCreate(asyncResult As IAsyncResult) As TeamFolderMetadata
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderCreate*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderCreateError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderGetInfoAsync(Dropbox.Api.Team.TeamFolderIdListArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderGetInfoAsync(Dropbox.Api.Team.TeamFolderIdListArg)
  id: TeamFolderGetInfoAsync(Dropbox.Api.Team.TeamFolderIdListArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TeamFolderGetInfoAsync(TeamFolderIdListArg)
  nameWithType: TeamTeamRoutes.TeamFolderGetInfoAsync(TeamFolderIdListArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderGetInfoAsync(Dropbox.Api.Team.TeamFolderIdListArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderGetInfoAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7775
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Retrieves metadata for team folders.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<List<TeamFolderGetInfoItem>> TeamFolderGetInfoAsync(TeamFolderIdListArg teamFolderIdListArg)
    parameters:
    - id: teamFolderIdListArg
      type: Dropbox.Api.Team.TeamFolderIdListArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.TeamFolderGetInfoItem}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function TeamFolderGetInfoAsync(teamFolderIdListArg As TeamFolderIdListArg) As Task(Of List(Of TeamFolderGetInfoItem))
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderGetInfoAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderGetInfo(Dropbox.Api.Team.TeamFolderIdListArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderGetInfo(Dropbox.Api.Team.TeamFolderIdListArg,System.AsyncCallback,System.Object)
  id: BeginTeamFolderGetInfo(Dropbox.Api.Team.TeamFolderIdListArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTeamFolderGetInfo(TeamFolderIdListArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTeamFolderGetInfo(TeamFolderIdListArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderGetInfo(Dropbox.Api.Team.TeamFolderIdListArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTeamFolderGetInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7789
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the team folder get info route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTeamFolderGetInfo(TeamFolderIdListArg teamFolderIdListArg, AsyncCallback callback, object state = null)
    parameters:
    - id: teamFolderIdListArg
      type: Dropbox.Api.Team.TeamFolderIdListArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTeamFolderGetInfo(teamFolderIdListArg As TeamFolderIdListArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderGetInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderGetInfoAsync(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderGetInfoAsync(System.Collections.Generic.IEnumerable{System.String})
  id: TeamFolderGetInfoAsync(System.Collections.Generic.IEnumerable{System.String})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TeamFolderGetInfoAsync(IEnumerable<String>)
  nameWithType: TeamTeamRoutes.TeamFolderGetInfoAsync(IEnumerable<String>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderGetInfoAsync(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderGetInfoAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7803
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Retrieves metadata for team folders.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<List<TeamFolderGetInfoItem>> TeamFolderGetInfoAsync(IEnumerable<string> teamFolderIds)
    parameters:
    - id: teamFolderIds
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The list of team folder IDs.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.TeamFolderGetInfoItem}}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function TeamFolderGetInfoAsync(teamFolderIds As IEnumerable(Of String)) As Task(Of List(Of TeamFolderGetInfoItem))
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderGetInfoAsync*
  nameWithType.vb: TeamTeamRoutes.TeamFolderGetInfoAsync(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderGetInfoAsync(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: TeamFolderGetInfoAsync(IEnumerable(Of String))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderGetInfo(System.Collections.Generic.IEnumerable{System.String},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderGetInfo(System.Collections.Generic.IEnumerable{System.String},System.AsyncCallback,System.Object)
  id: BeginTeamFolderGetInfo(System.Collections.Generic.IEnumerable{System.String},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTeamFolderGetInfo(IEnumerable<String>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTeamFolderGetInfo(IEnumerable<String>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderGetInfo(System.Collections.Generic.IEnumerable<System.String>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTeamFolderGetInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7819
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the team folder get info route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTeamFolderGetInfo(IEnumerable<string> teamFolderIds, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: teamFolderIds
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The list of team folder IDs.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTeamFolderGetInfo(teamFolderIds As IEnumerable(Of String), callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderGetInfo*
  nameWithType.vb: TeamTeamRoutes.BeginTeamFolderGetInfo(IEnumerable(Of String), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderGetInfo(System.Collections.Generic.IEnumerable(Of System.String), System.AsyncCallback, System.Object)
  name.vb: BeginTeamFolderGetInfo(IEnumerable(Of String), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderGetInfo(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderGetInfo(System.IAsyncResult)
  id: EndTeamFolderGetInfo(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndTeamFolderGetInfo(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndTeamFolderGetInfo(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderGetInfo(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndTeamFolderGetInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7835
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the team folder get info route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public List<TeamFolderGetInfoItem> EndTeamFolderGetInfo(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: System.Collections.Generic.List{Dropbox.Api.Team.TeamFolderGetInfoItem}
      description: The response to the send request
    content.vb: Public Function EndTeamFolderGetInfo(asyncResult As IAsyncResult) As List(Of TeamFolderGetInfoItem)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderGetInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListAsync(Dropbox.Api.Team.TeamFolderListArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListAsync(Dropbox.Api.Team.TeamFolderListArg)
  id: TeamFolderListAsync(Dropbox.Api.Team.TeamFolderListArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TeamFolderListAsync(TeamFolderListArg)
  nameWithType: TeamTeamRoutes.TeamFolderListAsync(TeamFolderListArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListAsync(Dropbox.Api.Team.TeamFolderListArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderListAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7856
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Lists all team folders.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<TeamFolderListResult> TeamFolderListAsync(TeamFolderListArg teamFolderListArg)
    parameters:
    - id: teamFolderListArg
      type: Dropbox.Api.Team.TeamFolderListArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function TeamFolderListAsync(teamFolderListArg As TeamFolderListArg) As Task(Of TeamFolderListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderListError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderList(Dropbox.Api.Team.TeamFolderListArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderList(Dropbox.Api.Team.TeamFolderListArg,System.AsyncCallback,System.Object)
  id: BeginTeamFolderList(Dropbox.Api.Team.TeamFolderListArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTeamFolderList(TeamFolderListArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTeamFolderList(TeamFolderListArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderList(Dropbox.Api.Team.TeamFolderListArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTeamFolderList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7870
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the team folder list route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTeamFolderList(TeamFolderListArg teamFolderListArg, AsyncCallback callback, object state = null)
    parameters:
    - id: teamFolderListArg
      type: Dropbox.Api.Team.TeamFolderListArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTeamFolderList(teamFolderListArg As TeamFolderListArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListAsync(System.UInt32)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListAsync(System.UInt32)
  id: TeamFolderListAsync(System.UInt32)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TeamFolderListAsync(UInt32)
  nameWithType: TeamTeamRoutes.TeamFolderListAsync(UInt32)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListAsync(System.UInt32)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderListAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7887
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Lists all team folders.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<TeamFolderListResult> TeamFolderListAsync(uint limit = 1000U)
    parameters:
    - id: limit
      type: System.UInt32
      description: The maximum number of results to return per request.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function TeamFolderListAsync(limit As UInteger = 1000UI) As Task(Of TeamFolderListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderListError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderList(System.UInt32,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderList(System.UInt32,System.AsyncCallback,System.Object)
  id: BeginTeamFolderList(System.UInt32,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTeamFolderList(UInt32, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTeamFolderList(UInt32, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderList(System.UInt32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTeamFolderList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7903
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the team folder list route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTeamFolderList(uint limit = 1000U, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: limit
      type: System.UInt32
      description: The maximum number of results to return per request.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTeamFolderList(limit As UInteger = 1000UI, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderList(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderList(System.IAsyncResult)
  id: EndTeamFolderList(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndTeamFolderList(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndTeamFolderList(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderList(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndTeamFolderList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7922
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the team folder list route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public TeamFolderListResult EndTeamFolderList(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.TeamFolderListResult
      description: The response to the send request
    content.vb: Public Function EndTeamFolderList(asyncResult As IAsyncResult) As TeamFolderListResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderList*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderListError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListContinueAsync(Dropbox.Api.Team.TeamFolderListContinueArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListContinueAsync(Dropbox.Api.Team.TeamFolderListContinueArg)
  id: TeamFolderListContinueAsync(Dropbox.Api.Team.TeamFolderListContinueArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TeamFolderListContinueAsync(TeamFolderListContinueArg)
  nameWithType: TeamTeamRoutes.TeamFolderListContinueAsync(TeamFolderListContinueArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListContinueAsync(Dropbox.Api.Team.TeamFolderListContinueArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderListContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7945
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once a cursor has been retrieved from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListAsync(Dropbox.Api.Team.TeamFolderListArg)\" data-throw-if-not-resolved=\"false\"></xref>, use this to\npaginate through all team folders.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<TeamFolderListResult> TeamFolderListContinueAsync(TeamFolderListContinueArg teamFolderListContinueArg)
    parameters:
    - id: teamFolderListContinueArg
      type: Dropbox.Api.Team.TeamFolderListContinueArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function TeamFolderListContinueAsync(teamFolderListContinueArg As TeamFolderListContinueArg) As Task(Of TeamFolderListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderListContinue(Dropbox.Api.Team.TeamFolderListContinueArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderListContinue(Dropbox.Api.Team.TeamFolderListContinueArg,System.AsyncCallback,System.Object)
  id: BeginTeamFolderListContinue(Dropbox.Api.Team.TeamFolderListContinueArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTeamFolderListContinue(TeamFolderListContinueArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTeamFolderListContinue(TeamFolderListContinueArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderListContinue(Dropbox.Api.Team.TeamFolderListContinueArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTeamFolderListContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7959
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the team folder list continue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTeamFolderListContinue(TeamFolderListContinueArg teamFolderListContinueArg, AsyncCallback callback, object state = null)
    parameters:
    - id: teamFolderListContinueArg
      type: Dropbox.Api.Team.TeamFolderListContinueArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTeamFolderListContinue(teamFolderListContinueArg As TeamFolderListContinueArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderListContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListContinueAsync(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListContinueAsync(System.String)
  id: TeamFolderListContinueAsync(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TeamFolderListContinueAsync(String)
  nameWithType: TeamTeamRoutes.TeamFolderListContinueAsync(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListContinueAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderListContinueAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7979
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Once a cursor has been retrieved from <xref href=\"Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListAsync(Dropbox.Api.Team.TeamFolderListArg)\" data-throw-if-not-resolved=\"false\"></xref>, use this to\npaginate through all team folders.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<TeamFolderListResult> TeamFolderListContinueAsync(string cursor)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        Indicates from what point to get the next set of team

        folders.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderListResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function TeamFolderListContinueAsync(cursor As String) As Task(Of TeamFolderListResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListContinueAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderListContinue(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderListContinue(System.String,System.AsyncCallback,System.Object)
  id: BeginTeamFolderListContinue(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTeamFolderListContinue(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTeamFolderListContinue(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderListContinue(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTeamFolderListContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 7996
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the team folder list continue route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTeamFolderListContinue(string cursor, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: cursor
      type: System.String
      description: >-
        Indicates from what point to get the next set of team

        folders.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTeamFolderListContinue(cursor As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderListContinue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderListContinue(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderListContinue(System.IAsyncResult)
  id: EndTeamFolderListContinue(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndTeamFolderListContinue(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndTeamFolderListContinue(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderListContinue(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndTeamFolderListContinue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 8015
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the team folder list continue\nroute to complete</p>\n"
  example: []
  syntax:
    content: public TeamFolderListResult EndTeamFolderListContinue(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.TeamFolderListResult
      description: The response to the send request
    content.vb: Public Function EndTeamFolderListContinue(asyncResult As IAsyncResult) As TeamFolderListResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderListContinue*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderListContinueError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderPermanentlyDeleteAsync(Dropbox.Api.Team.TeamFolderIdArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderPermanentlyDeleteAsync(Dropbox.Api.Team.TeamFolderIdArg)
  id: TeamFolderPermanentlyDeleteAsync(Dropbox.Api.Team.TeamFolderIdArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TeamFolderPermanentlyDeleteAsync(TeamFolderIdArg)
  nameWithType: TeamTeamRoutes.TeamFolderPermanentlyDeleteAsync(TeamFolderIdArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderPermanentlyDeleteAsync(Dropbox.Api.Team.TeamFolderIdArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderPermanentlyDeleteAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 8036
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Permanently deletes an archived team folder. This endpoint cannot be used for\nteams that have a shared team space.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task TeamFolderPermanentlyDeleteAsync(TeamFolderIdArg teamFolderIdArg)
    parameters:
    - id: teamFolderIdArg
      type: Dropbox.Api.Team.TeamFolderIdArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function TeamFolderPermanentlyDeleteAsync(teamFolderIdArg As TeamFolderIdArg) As Task
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderPermanentlyDeleteAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderPermanentlyDeleteError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderPermanentlyDelete(Dropbox.Api.Team.TeamFolderIdArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderPermanentlyDelete(Dropbox.Api.Team.TeamFolderIdArg,System.AsyncCallback,System.Object)
  id: BeginTeamFolderPermanentlyDelete(Dropbox.Api.Team.TeamFolderIdArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTeamFolderPermanentlyDelete(TeamFolderIdArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTeamFolderPermanentlyDelete(TeamFolderIdArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderPermanentlyDelete(Dropbox.Api.Team.TeamFolderIdArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTeamFolderPermanentlyDelete
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 8051
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the team folder permanently delete\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTeamFolderPermanentlyDelete(TeamFolderIdArg teamFolderIdArg, AsyncCallback callback, object state = null)
    parameters:
    - id: teamFolderIdArg
      type: Dropbox.Api.Team.TeamFolderIdArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTeamFolderPermanentlyDelete(teamFolderIdArg As TeamFolderIdArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderPermanentlyDelete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderPermanentlyDeleteAsync(System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderPermanentlyDeleteAsync(System.String)
  id: TeamFolderPermanentlyDeleteAsync(System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TeamFolderPermanentlyDeleteAsync(String)
  nameWithType: TeamTeamRoutes.TeamFolderPermanentlyDeleteAsync(String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderPermanentlyDeleteAsync(System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderPermanentlyDeleteAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 8068
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Permanently deletes an archived team folder. This endpoint cannot be used for\nteams that have a shared team space.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task TeamFolderPermanentlyDeleteAsync(string teamFolderId)
    parameters:
    - id: teamFolderId
      type: System.String
      description: The ID of the team folder.
    return:
      type: System.Threading.Tasks.Task
      description: The task that represents the asynchronous send operation.
    content.vb: Public Function TeamFolderPermanentlyDeleteAsync(teamFolderId As String) As Task
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderPermanentlyDeleteAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderPermanentlyDeleteError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderPermanentlyDelete(System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderPermanentlyDelete(System.String,System.AsyncCallback,System.Object)
  id: BeginTeamFolderPermanentlyDelete(System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTeamFolderPermanentlyDelete(String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTeamFolderPermanentlyDelete(String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderPermanentlyDelete(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTeamFolderPermanentlyDelete
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 8085
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the team folder permanently delete\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTeamFolderPermanentlyDelete(string teamFolderId, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: teamFolderId
      type: System.String
      description: The ID of the team folder.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTeamFolderPermanentlyDelete(teamFolderId As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderPermanentlyDelete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderPermanentlyDelete(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderPermanentlyDelete(System.IAsyncResult)
  id: EndTeamFolderPermanentlyDelete(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndTeamFolderPermanentlyDelete(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndTeamFolderPermanentlyDelete(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderPermanentlyDelete(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndTeamFolderPermanentlyDelete
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 8103
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the team folder permanently delete\nroute to complete</p>\n"
  example: []
  syntax:
    content: public void EndTeamFolderPermanentlyDelete(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    content.vb: Public Sub EndTeamFolderPermanentlyDelete(asyncResult As IAsyncResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderPermanentlyDelete*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderPermanentlyDeleteError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderRenameAsync(Dropbox.Api.Team.TeamFolderRenameArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderRenameAsync(Dropbox.Api.Team.TeamFolderRenameArg)
  id: TeamFolderRenameAsync(Dropbox.Api.Team.TeamFolderRenameArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TeamFolderRenameAsync(TeamFolderRenameArg)
  nameWithType: TeamTeamRoutes.TeamFolderRenameAsync(TeamFolderRenameArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderRenameAsync(Dropbox.Api.Team.TeamFolderRenameArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderRenameAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 8122
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Changes an active team folder&apos;s name.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<TeamFolderMetadata> TeamFolderRenameAsync(TeamFolderRenameArg teamFolderRenameArg)
    parameters:
    - id: teamFolderRenameArg
      type: Dropbox.Api.Team.TeamFolderRenameArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function TeamFolderRenameAsync(teamFolderRenameArg As TeamFolderRenameArg) As Task(Of TeamFolderMetadata)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderRenameAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderRenameError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderRename(Dropbox.Api.Team.TeamFolderRenameArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderRename(Dropbox.Api.Team.TeamFolderRenameArg,System.AsyncCallback,System.Object)
  id: BeginTeamFolderRename(Dropbox.Api.Team.TeamFolderRenameArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTeamFolderRename(TeamFolderRenameArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTeamFolderRename(TeamFolderRenameArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderRename(Dropbox.Api.Team.TeamFolderRenameArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTeamFolderRename
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 8136
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the team folder rename route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTeamFolderRename(TeamFolderRenameArg teamFolderRenameArg, AsyncCallback callback, object state = null)
    parameters:
    - id: teamFolderRenameArg
      type: Dropbox.Api.Team.TeamFolderRenameArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTeamFolderRename(teamFolderRenameArg As TeamFolderRenameArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderRename*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderRenameAsync(System.String,System.String)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderRenameAsync(System.String,System.String)
  id: TeamFolderRenameAsync(System.String,System.String)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TeamFolderRenameAsync(String, String)
  nameWithType: TeamTeamRoutes.TeamFolderRenameAsync(String, String)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderRenameAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderRenameAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 8154
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Changes an active team folder&apos;s name.</p>\n<p>Permission : Team member file access.</p>\n"
  example: []
  syntax:
    content: public Task<TeamFolderMetadata> TeamFolderRenameAsync(string teamFolderId, string name)
    parameters:
    - id: teamFolderId
      type: System.String
      description: The ID of the team folder.
    - id: name
      type: System.String
      description: New team folder name.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function TeamFolderRenameAsync(teamFolderId As String, name As String) As Task(Of TeamFolderMetadata)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderRenameAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderRenameError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderRename(System.String,System.String,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderRename(System.String,System.String,System.AsyncCallback,System.Object)
  id: BeginTeamFolderRename(System.String,System.String,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTeamFolderRename(String, String, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTeamFolderRename(String, String, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderRename(System.String, System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTeamFolderRename
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 8173
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the team folder rename route.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTeamFolderRename(string teamFolderId, string name, AsyncCallback callback, object callbackState = null)
    parameters:
    - id: teamFolderId
      type: System.String
      description: The ID of the team folder.
    - id: name
      type: System.String
      description: New team folder name.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTeamFolderRename(teamFolderId As String, name As String, callback As AsyncCallback, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderRename*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderRename(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderRename(System.IAsyncResult)
  id: EndTeamFolderRename(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndTeamFolderRename(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndTeamFolderRename(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderRename(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndTeamFolderRename
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 8194
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the team folder rename route to\ncomplete</p>\n"
  example: []
  syntax:
    content: public TeamFolderMetadata EndTeamFolderRename(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.TeamFolderMetadata
      description: The response to the send request
    content.vb: Public Function EndTeamFolderRename(asyncResult As IAsyncResult) As TeamFolderMetadata
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderRename*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderRenameError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderUpdateSyncSettingsAsync(Dropbox.Api.Team.TeamFolderUpdateSyncSettingsArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderUpdateSyncSettingsAsync(Dropbox.Api.Team.TeamFolderUpdateSyncSettingsArg)
  id: TeamFolderUpdateSyncSettingsAsync(Dropbox.Api.Team.TeamFolderUpdateSyncSettingsArg)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TeamFolderUpdateSyncSettingsAsync(TeamFolderUpdateSyncSettingsArg)
  nameWithType: TeamTeamRoutes.TeamFolderUpdateSyncSettingsAsync(TeamFolderUpdateSyncSettingsArg)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderUpdateSyncSettingsAsync(Dropbox.Api.Team.TeamFolderUpdateSyncSettingsArg)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderUpdateSyncSettingsAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 8215
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Updates the sync settings on a team folder or its contents.  Use of this\nendpoint requires that the team has team selective sync enabled.</p>\n"
  example: []
  syntax:
    content: public Task<TeamFolderMetadata> TeamFolderUpdateSyncSettingsAsync(TeamFolderUpdateSyncSettingsArg teamFolderUpdateSyncSettingsArg)
    parameters:
    - id: teamFolderUpdateSyncSettingsArg
      type: Dropbox.Api.Team.TeamFolderUpdateSyncSettingsArg
      description: The request parameters
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function TeamFolderUpdateSyncSettingsAsync(teamFolderUpdateSyncSettingsArg As TeamFolderUpdateSyncSettingsArg) As Task(Of TeamFolderMetadata)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderUpdateSyncSettingsAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderUpdateSyncSettingsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderUpdateSyncSettings(Dropbox.Api.Team.TeamFolderUpdateSyncSettingsArg,System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderUpdateSyncSettings(Dropbox.Api.Team.TeamFolderUpdateSyncSettingsArg,System.AsyncCallback,System.Object)
  id: BeginTeamFolderUpdateSyncSettings(Dropbox.Api.Team.TeamFolderUpdateSyncSettingsArg,System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTeamFolderUpdateSyncSettings(TeamFolderUpdateSyncSettingsArg, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTeamFolderUpdateSyncSettings(TeamFolderUpdateSyncSettingsArg, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderUpdateSyncSettings(Dropbox.Api.Team.TeamFolderUpdateSyncSettingsArg, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTeamFolderUpdateSyncSettings
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 8230
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the team folder update sync settings\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTeamFolderUpdateSyncSettings(TeamFolderUpdateSyncSettingsArg teamFolderUpdateSyncSettingsArg, AsyncCallback callback, object state = null)
    parameters:
    - id: teamFolderUpdateSyncSettingsArg
      type: Dropbox.Api.Team.TeamFolderUpdateSyncSettingsArg
      description: The request parameters.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTeamFolderUpdateSyncSettings(teamFolderUpdateSyncSettingsArg As TeamFolderUpdateSyncSettingsArg, callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderUpdateSyncSettings*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderUpdateSyncSettingsAsync(System.String,Dropbox.Api.Files.SyncSettingArg,System.Collections.Generic.IEnumerable{Dropbox.Api.Files.ContentSyncSettingArg})
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderUpdateSyncSettingsAsync(System.String,Dropbox.Api.Files.SyncSettingArg,System.Collections.Generic.IEnumerable{Dropbox.Api.Files.ContentSyncSettingArg})
  id: TeamFolderUpdateSyncSettingsAsync(System.String,Dropbox.Api.Files.SyncSettingArg,System.Collections.Generic.IEnumerable{Dropbox.Api.Files.ContentSyncSettingArg})
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TeamFolderUpdateSyncSettingsAsync(String, SyncSettingArg, IEnumerable<ContentSyncSettingArg>)
  nameWithType: TeamTeamRoutes.TeamFolderUpdateSyncSettingsAsync(String, SyncSettingArg, IEnumerable<ContentSyncSettingArg>)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderUpdateSyncSettingsAsync(System.String, Dropbox.Api.Files.SyncSettingArg, System.Collections.Generic.IEnumerable<Dropbox.Api.Files.ContentSyncSettingArg>)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamFolderUpdateSyncSettingsAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 8251
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Updates the sync settings on a team folder or its contents.  Use of this\nendpoint requires that the team has team selective sync enabled.</p>\n"
  example: []
  syntax:
    content: public Task<TeamFolderMetadata> TeamFolderUpdateSyncSettingsAsync(string teamFolderId, SyncSettingArg syncSetting = null, IEnumerable<ContentSyncSettingArg> contentSyncSettings = null)
    parameters:
    - id: teamFolderId
      type: System.String
      description: The ID of the team folder.
    - id: syncSetting
      type: Dropbox.Api.Files.SyncSettingArg
      description: >-
        Sync setting to apply to the team folder itself. Only

        meaningful if the team folder is not a shared team root.
    - id: contentSyncSettings
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Files.ContentSyncSettingArg}
      description: >-
        Sync settings to apply to contents of this team

        folder.
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderMetadata}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function TeamFolderUpdateSyncSettingsAsync(teamFolderId As String, syncSetting As SyncSettingArg = Nothing, contentSyncSettings As IEnumerable(Of ContentSyncSettingArg) = Nothing) As Task(Of TeamFolderMetadata)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderUpdateSyncSettingsAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderUpdateSyncSettingsError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: TeamTeamRoutes.TeamFolderUpdateSyncSettingsAsync(String, SyncSettingArg, IEnumerable(Of ContentSyncSettingArg))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderUpdateSyncSettingsAsync(System.String, Dropbox.Api.Files.SyncSettingArg, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Files.ContentSyncSettingArg))
  name.vb: TeamFolderUpdateSyncSettingsAsync(String, SyncSettingArg, IEnumerable(Of ContentSyncSettingArg))
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderUpdateSyncSettings(System.String,Dropbox.Api.Files.SyncSettingArg,System.Collections.Generic.IEnumerable{Dropbox.Api.Files.ContentSyncSettingArg},System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderUpdateSyncSettings(System.String,Dropbox.Api.Files.SyncSettingArg,System.Collections.Generic.IEnumerable{Dropbox.Api.Files.ContentSyncSettingArg},System.AsyncCallback,System.Object)
  id: BeginTeamFolderUpdateSyncSettings(System.String,Dropbox.Api.Files.SyncSettingArg,System.Collections.Generic.IEnumerable{Dropbox.Api.Files.ContentSyncSettingArg},System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTeamFolderUpdateSyncSettings(String, SyncSettingArg, IEnumerable<ContentSyncSettingArg>, AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTeamFolderUpdateSyncSettings(String, SyncSettingArg, IEnumerable<ContentSyncSettingArg>, AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderUpdateSyncSettings(System.String, Dropbox.Api.Files.SyncSettingArg, System.Collections.Generic.IEnumerable<Dropbox.Api.Files.ContentSyncSettingArg>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTeamFolderUpdateSyncSettings
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 8276
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the team folder update sync settings\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTeamFolderUpdateSyncSettings(string teamFolderId, SyncSettingArg syncSetting = null, IEnumerable<ContentSyncSettingArg> contentSyncSettings = null, AsyncCallback callback = null, object callbackState = null)
    parameters:
    - id: teamFolderId
      type: System.String
      description: The ID of the team folder.
    - id: syncSetting
      type: Dropbox.Api.Files.SyncSettingArg
      description: >-
        Sync setting to apply to the team folder itself. Only

        meaningful if the team folder is not a shared team root.
    - id: contentSyncSettings
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Files.ContentSyncSettingArg}
      description: >-
        Sync settings to apply to contents of this team

        folder.
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: callbackState
      type: System.Object
      description: >-
        A user provided object that distinguished this send

        from other send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTeamFolderUpdateSyncSettings(teamFolderId As String, syncSetting As SyncSettingArg = Nothing, contentSyncSettings As IEnumerable(Of ContentSyncSettingArg) = Nothing, callback As AsyncCallback = Nothing, callbackState As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderUpdateSyncSettings*
  nameWithType.vb: TeamTeamRoutes.BeginTeamFolderUpdateSyncSettings(String, SyncSettingArg, IEnumerable(Of ContentSyncSettingArg), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderUpdateSyncSettings(System.String, Dropbox.Api.Files.SyncSettingArg, System.Collections.Generic.IEnumerable(Of Dropbox.Api.Files.ContentSyncSettingArg), System.AsyncCallback, System.Object)
  name.vb: BeginTeamFolderUpdateSyncSettings(String, SyncSettingArg, IEnumerable(Of ContentSyncSettingArg), AsyncCallback, Object)
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderUpdateSyncSettings(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderUpdateSyncSettings(System.IAsyncResult)
  id: EndTeamFolderUpdateSyncSettings(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndTeamFolderUpdateSyncSettings(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndTeamFolderUpdateSyncSettings(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderUpdateSyncSettings(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndTeamFolderUpdateSyncSettings
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 8299
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the team folder update sync\nsettings route to complete</p>\n"
  example: []
  syntax:
    content: public TeamFolderMetadata EndTeamFolderUpdateSyncSettings(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.TeamFolderMetadata
      description: The response to the send request
    content.vb: Public Function EndTeamFolderUpdateSyncSettings(asyncResult As IAsyncResult) As TeamFolderMetadata
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderUpdateSyncSettings*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TeamFolderUpdateSyncSettingsError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TokenGetAuthenticatedAdminAsync
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TokenGetAuthenticatedAdminAsync
  id: TokenGetAuthenticatedAdminAsync
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: TokenGetAuthenticatedAdminAsync()
  nameWithType: TeamTeamRoutes.TokenGetAuthenticatedAdminAsync()
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TokenGetAuthenticatedAdminAsync()
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TokenGetAuthenticatedAdminAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 8319
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Returns the member profile of the admin who generated the team access token\nused to make the call.</p>\n"
  example: []
  syntax:
    content: public Task<TokenGetAuthenticatedAdminResult> TokenGetAuthenticatedAdminAsync()
    return:
      type: System.Threading.Tasks.Task{Dropbox.Api.Team.TokenGetAuthenticatedAdminResult}
      description: >-
        The task that represents the asynchronous send operation. The TResult

        parameter contains the response from the server.
    content.vb: Public Function TokenGetAuthenticatedAdminAsync As Task(Of TokenGetAuthenticatedAdminResult)
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.TokenGetAuthenticatedAdminAsync*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TokenGetAuthenticatedAdminError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTokenGetAuthenticatedAdmin(System.AsyncCallback,System.Object)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTokenGetAuthenticatedAdmin(System.AsyncCallback,System.Object)
  id: BeginTokenGetAuthenticatedAdmin(System.AsyncCallback,System.Object)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: BeginTokenGetAuthenticatedAdmin(AsyncCallback, Object)
  nameWithType: TeamTeamRoutes.BeginTokenGetAuthenticatedAdmin(AsyncCallback, Object)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTokenGetAuthenticatedAdmin(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: BeginTokenGetAuthenticatedAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 8333
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Begins an asynchronous send to the token get authenticated admin\nroute.</p>\n"
  example: []
  syntax:
    content: public IAsyncResult BeginTokenGetAuthenticatedAdmin(AsyncCallback callback, object state = null)
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: >-
        The method to be called when the asynchronous send is

        completed.
    - id: state
      type: System.Object
      description: >-
        A user provided object that distinguished this send from other

        send requests.
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous send request.
    content.vb: Public Function BeginTokenGetAuthenticatedAdmin(callback As AsyncCallback, state As Object = Nothing) As IAsyncResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTokenGetAuthenticatedAdmin*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTokenGetAuthenticatedAdmin(System.IAsyncResult)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTokenGetAuthenticatedAdmin(System.IAsyncResult)
  id: EndTokenGetAuthenticatedAdmin(System.IAsyncResult)
  parent: Dropbox.Api.Team.Routes.TeamTeamRoutes
  langs:
  - csharp
  - vb
  name: EndTokenGetAuthenticatedAdmin(IAsyncResult)
  nameWithType: TeamTeamRoutes.EndTokenGetAuthenticatedAdmin(IAsyncResult)
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTokenGetAuthenticatedAdmin(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: EndTokenGetAuthenticatedAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamTeamRoutes.cs
    startLine: 8350
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team.Routes
  summary: "\n<p>Waits for the pending asynchronous send to the token get authenticated admin\nroute to complete</p>\n"
  example: []
  syntax:
    content: public TokenGetAuthenticatedAdminResult EndTokenGetAuthenticatedAdmin(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: >-
        The reference to the pending asynchronous send

        request
    return:
      type: Dropbox.Api.Team.TokenGetAuthenticatedAdminResult
      description: The response to the send request
    content.vb: Public Function EndTokenGetAuthenticatedAdmin(asyncResult As IAsyncResult) As TokenGetAuthenticatedAdminResult
  overload: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTokenGetAuthenticatedAdmin*
  exceptions:
  - type: Dropbox.Api.ApiException`1
    commentId: T:Dropbox.Api.ApiException`1
    description: >-
      Thrown if there is an error

      processing the request; This will contain a <xref href="Dropbox.Api.Team.TokenGetAuthenticatedAdminError" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Dropbox.Api.Team
  commentId: N:Dropbox.Api.Team
  name: Dropbox.Api.Team
  nameWithType: Dropbox.Api.Team
  fullName: Dropbox.Api.Team
- uid: Dropbox.Api.Team.Routes
  commentId: N:Dropbox.Api.Team.Routes
  name: Dropbox.Api.Team.Routes
  nameWithType: Dropbox.Api.Team.Routes
  fullName: Dropbox.Api.Team.Routes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Team.ListMemberDevicesError
  commentId: T:Dropbox.Api.Team.ListMemberDevicesError
  parent: Dropbox.Api.Team
  name: ListMemberDevicesError
  nameWithType: ListMemberDevicesError
  fullName: Dropbox.Api.Team.ListMemberDevicesError
- uid: Dropbox.Api.ApiException`1
  commentId: T:Dropbox.Api.ApiException`1
  name: ApiException<TError>
  nameWithType: ApiException<TError>
  fullName: Dropbox.Api.ApiException<TError>
  nameWithType.vb: ApiException(Of TError)
  fullName.vb: Dropbox.Api.ApiException(Of TError)
  name.vb: ApiException(Of TError)
  spec.csharp:
  - uid: Dropbox.Api.ApiException`1
    name: ApiException
    nameWithType: ApiException
    fullName: Dropbox.Api.ApiException
  - name: <
    nameWithType: <
    fullName: <
  - name: TError
    nameWithType: TError
    fullName: TError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dropbox.Api.ApiException`1
    name: ApiException
    nameWithType: ApiException
    fullName: Dropbox.Api.ApiException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TError
    nameWithType: TError
    fullName: TError
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMemberDevicesAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMemberDevicesAsync
  name: DevicesListMemberDevicesAsync
  nameWithType: TeamTeamRoutes.DevicesListMemberDevicesAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMemberDevicesAsync
- uid: Dropbox.Api.Team.ListMemberDevicesArg
  commentId: T:Dropbox.Api.Team.ListMemberDevicesArg
  parent: Dropbox.Api.Team
  name: ListMemberDevicesArg
  nameWithType: ListMemberDevicesArg
  fullName: Dropbox.Api.Team.ListMemberDevicesArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.ListMemberDevicesResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.ListMemberDevicesResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ListMemberDevicesResult>
  nameWithType: Task<ListMemberDevicesResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.ListMemberDevicesResult>
  nameWithType.vb: Task(Of ListMemberDevicesResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.ListMemberDevicesResult)
  name.vb: Task(Of ListMemberDevicesResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.ListMemberDevicesResult
    name: ListMemberDevicesResult
    nameWithType: ListMemberDevicesResult
    fullName: Dropbox.Api.Team.ListMemberDevicesResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.ListMemberDevicesResult
    name: ListMemberDevicesResult
    nameWithType: ListMemberDevicesResult
    fullName: Dropbox.Api.Team.ListMemberDevicesResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMemberDevices*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMemberDevices
  name: BeginDevicesListMemberDevices
  nameWithType: TeamTeamRoutes.BeginDevicesListMemberDevices
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMemberDevices
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListMemberDevices*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListMemberDevices
  name: EndDevicesListMemberDevices
  nameWithType: TeamTeamRoutes.EndDevicesListMemberDevices
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListMemberDevices
- uid: Dropbox.Api.Team.ListMemberDevicesResult
  commentId: T:Dropbox.Api.Team.ListMemberDevicesResult
  parent: Dropbox.Api.Team
  name: ListMemberDevicesResult
  nameWithType: ListMemberDevicesResult
  fullName: Dropbox.Api.Team.ListMemberDevicesResult
- uid: Dropbox.Api.Team.ListMembersDevicesError
  commentId: T:Dropbox.Api.Team.ListMembersDevicesError
  parent: Dropbox.Api.Team
  name: ListMembersDevicesError
  nameWithType: ListMembersDevicesError
  fullName: Dropbox.Api.Team.ListMembersDevicesError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMembersDevicesAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMembersDevicesAsync
  name: DevicesListMembersDevicesAsync
  nameWithType: TeamTeamRoutes.DevicesListMembersDevicesAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMembersDevicesAsync
- uid: Dropbox.Api.Team.ListMembersDevicesArg
  commentId: T:Dropbox.Api.Team.ListMembersDevicesArg
  parent: Dropbox.Api.Team
  name: ListMembersDevicesArg
  nameWithType: ListMembersDevicesArg
  fullName: Dropbox.Api.Team.ListMembersDevicesArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.ListMembersDevicesResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.ListMembersDevicesResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ListMembersDevicesResult>
  nameWithType: Task<ListMembersDevicesResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.ListMembersDevicesResult>
  nameWithType.vb: Task(Of ListMembersDevicesResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.ListMembersDevicesResult)
  name.vb: Task(Of ListMembersDevicesResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.ListMembersDevicesResult
    name: ListMembersDevicesResult
    nameWithType: ListMembersDevicesResult
    fullName: Dropbox.Api.Team.ListMembersDevicesResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.ListMembersDevicesResult
    name: ListMembersDevicesResult
    nameWithType: ListMembersDevicesResult
    fullName: Dropbox.Api.Team.ListMembersDevicesResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMembersDevices*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMembersDevices
  name: BeginDevicesListMembersDevices
  nameWithType: TeamTeamRoutes.BeginDevicesListMembersDevices
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListMembersDevices
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMembersDevicesAsync(Dropbox.Api.Team.ListMembersDevicesArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListMembersDevicesAsync(Dropbox.Api.Team.ListMembersDevicesArg)
  isExternal: true
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListMembersDevices*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListMembersDevices
  name: EndDevicesListMembersDevices
  nameWithType: TeamTeamRoutes.EndDevicesListMembersDevices
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListMembersDevices
- uid: Dropbox.Api.Team.ListMembersDevicesResult
  commentId: T:Dropbox.Api.Team.ListMembersDevicesResult
  parent: Dropbox.Api.Team
  name: ListMembersDevicesResult
  nameWithType: ListMembersDevicesResult
  fullName: Dropbox.Api.Team.ListMembersDevicesResult
- uid: Dropbox.Api.Team.ListTeamDevicesError
  commentId: T:Dropbox.Api.Team.ListTeamDevicesError
  parent: Dropbox.Api.Team
  name: ListTeamDevicesError
  nameWithType: ListTeamDevicesError
  fullName: Dropbox.Api.Team.ListTeamDevicesError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListTeamDevicesAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListTeamDevicesAsync
  name: DevicesListTeamDevicesAsync
  nameWithType: TeamTeamRoutes.DevicesListTeamDevicesAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListTeamDevicesAsync
- uid: Dropbox.Api.Team.ListTeamDevicesArg
  commentId: T:Dropbox.Api.Team.ListTeamDevicesArg
  parent: Dropbox.Api.Team
  name: ListTeamDevicesArg
  nameWithType: ListTeamDevicesArg
  fullName: Dropbox.Api.Team.ListTeamDevicesArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.ListTeamDevicesResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.ListTeamDevicesResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ListTeamDevicesResult>
  nameWithType: Task<ListTeamDevicesResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.ListTeamDevicesResult>
  nameWithType.vb: Task(Of ListTeamDevicesResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.ListTeamDevicesResult)
  name.vb: Task(Of ListTeamDevicesResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.ListTeamDevicesResult
    name: ListTeamDevicesResult
    nameWithType: ListTeamDevicesResult
    fullName: Dropbox.Api.Team.ListTeamDevicesResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.ListTeamDevicesResult
    name: ListTeamDevicesResult
    nameWithType: ListTeamDevicesResult
    fullName: Dropbox.Api.Team.ListTeamDevicesResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListTeamDevices*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListTeamDevices
  name: BeginDevicesListTeamDevices
  nameWithType: TeamTeamRoutes.BeginDevicesListTeamDevices
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesListTeamDevices
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListTeamDevicesAsync(Dropbox.Api.Team.ListTeamDevicesArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesListTeamDevicesAsync(Dropbox.Api.Team.ListTeamDevicesArg)
  isExternal: true
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListTeamDevices*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListTeamDevices
  name: EndDevicesListTeamDevices
  nameWithType: TeamTeamRoutes.EndDevicesListTeamDevices
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesListTeamDevices
- uid: Dropbox.Api.Team.ListTeamDevicesResult
  commentId: T:Dropbox.Api.Team.ListTeamDevicesResult
  parent: Dropbox.Api.Team
  name: ListTeamDevicesResult
  nameWithType: ListTeamDevicesResult
  fullName: Dropbox.Api.Team.ListTeamDevicesResult
- uid: Dropbox.Api.Team.RevokeDeviceSessionError
  commentId: T:Dropbox.Api.Team.RevokeDeviceSessionError
  parent: Dropbox.Api.Team
  name: RevokeDeviceSessionError
  nameWithType: RevokeDeviceSessionError
  fullName: Dropbox.Api.Team.RevokeDeviceSessionError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionAsync
  name: DevicesRevokeDeviceSessionAsync
  nameWithType: TeamTeamRoutes.DevicesRevokeDeviceSessionAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionAsync
- uid: Dropbox.Api.Team.RevokeDeviceSessionArg
  commentId: T:Dropbox.Api.Team.RevokeDeviceSessionArg
  parent: Dropbox.Api.Team
  name: RevokeDeviceSessionArg
  nameWithType: RevokeDeviceSessionArg
  fullName: Dropbox.Api.Team.RevokeDeviceSessionArg
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSession*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSession
  name: BeginDevicesRevokeDeviceSession
  nameWithType: TeamTeamRoutes.BeginDevicesRevokeDeviceSession
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSession
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesRevokeDeviceSession*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesRevokeDeviceSession
  name: EndDevicesRevokeDeviceSession
  nameWithType: TeamTeamRoutes.EndDevicesRevokeDeviceSession
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesRevokeDeviceSession
- uid: Dropbox.Api.Team.RevokeDeviceSessionBatchError
  commentId: T:Dropbox.Api.Team.RevokeDeviceSessionBatchError
  parent: Dropbox.Api.Team
  name: RevokeDeviceSessionBatchError
  nameWithType: RevokeDeviceSessionBatchError
  fullName: Dropbox.Api.Team.RevokeDeviceSessionBatchError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionBatchAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionBatchAsync
  name: DevicesRevokeDeviceSessionBatchAsync
  nameWithType: TeamTeamRoutes.DevicesRevokeDeviceSessionBatchAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.DevicesRevokeDeviceSessionBatchAsync
- uid: Dropbox.Api.Team.RevokeDeviceSessionBatchArg
  commentId: T:Dropbox.Api.Team.RevokeDeviceSessionBatchArg
  parent: Dropbox.Api.Team
  name: RevokeDeviceSessionBatchArg
  nameWithType: RevokeDeviceSessionBatchArg
  fullName: Dropbox.Api.Team.RevokeDeviceSessionBatchArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.RevokeDeviceSessionBatchResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.RevokeDeviceSessionBatchResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RevokeDeviceSessionBatchResult>
  nameWithType: Task<RevokeDeviceSessionBatchResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.RevokeDeviceSessionBatchResult>
  nameWithType.vb: Task(Of RevokeDeviceSessionBatchResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.RevokeDeviceSessionBatchResult)
  name.vb: Task(Of RevokeDeviceSessionBatchResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.RevokeDeviceSessionBatchResult
    name: RevokeDeviceSessionBatchResult
    nameWithType: RevokeDeviceSessionBatchResult
    fullName: Dropbox.Api.Team.RevokeDeviceSessionBatchResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.RevokeDeviceSessionBatchResult
    name: RevokeDeviceSessionBatchResult
    nameWithType: RevokeDeviceSessionBatchResult
    fullName: Dropbox.Api.Team.RevokeDeviceSessionBatchResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSessionBatch*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSessionBatch
  name: BeginDevicesRevokeDeviceSessionBatch
  nameWithType: TeamTeamRoutes.BeginDevicesRevokeDeviceSessionBatch
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginDevicesRevokeDeviceSessionBatch
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeDeviceSessionArg}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeDeviceSessionArg}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<RevokeDeviceSessionArg>
  nameWithType: IEnumerable<RevokeDeviceSessionArg>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Team.RevokeDeviceSessionArg>
  nameWithType.vb: IEnumerable(Of RevokeDeviceSessionArg)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.RevokeDeviceSessionArg)
  name.vb: IEnumerable(Of RevokeDeviceSessionArg)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.RevokeDeviceSessionArg
    name: RevokeDeviceSessionArg
    nameWithType: RevokeDeviceSessionArg
    fullName: Dropbox.Api.Team.RevokeDeviceSessionArg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.RevokeDeviceSessionArg
    name: RevokeDeviceSessionArg
    nameWithType: RevokeDeviceSessionArg
    fullName: Dropbox.Api.Team.RevokeDeviceSessionArg
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesRevokeDeviceSessionBatch*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesRevokeDeviceSessionBatch
  name: EndDevicesRevokeDeviceSessionBatch
  nameWithType: TeamTeamRoutes.EndDevicesRevokeDeviceSessionBatch
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndDevicesRevokeDeviceSessionBatch
- uid: Dropbox.Api.Team.RevokeDeviceSessionBatchResult
  commentId: T:Dropbox.Api.Team.RevokeDeviceSessionBatchResult
  parent: Dropbox.Api.Team
  name: RevokeDeviceSessionBatchResult
  nameWithType: RevokeDeviceSessionBatchResult
  fullName: Dropbox.Api.Team.RevokeDeviceSessionBatchResult
- uid: Dropbox.Api.Team.FeaturesGetValuesBatchError
  commentId: T:Dropbox.Api.Team.FeaturesGetValuesBatchError
  parent: Dropbox.Api.Team
  name: FeaturesGetValuesBatchError
  nameWithType: FeaturesGetValuesBatchError
  fullName: Dropbox.Api.Team.FeaturesGetValuesBatchError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.FeaturesGetValuesAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.FeaturesGetValuesAsync
  name: FeaturesGetValuesAsync
  nameWithType: TeamTeamRoutes.FeaturesGetValuesAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.FeaturesGetValuesAsync
- uid: Dropbox.Api.Team.FeaturesGetValuesBatchArg
  commentId: T:Dropbox.Api.Team.FeaturesGetValuesBatchArg
  parent: Dropbox.Api.Team
  name: FeaturesGetValuesBatchArg
  nameWithType: FeaturesGetValuesBatchArg
  fullName: Dropbox.Api.Team.FeaturesGetValuesBatchArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.FeaturesGetValuesBatchResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.FeaturesGetValuesBatchResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FeaturesGetValuesBatchResult>
  nameWithType: Task<FeaturesGetValuesBatchResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.FeaturesGetValuesBatchResult>
  nameWithType.vb: Task(Of FeaturesGetValuesBatchResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.FeaturesGetValuesBatchResult)
  name.vb: Task(Of FeaturesGetValuesBatchResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.FeaturesGetValuesBatchResult
    name: FeaturesGetValuesBatchResult
    nameWithType: FeaturesGetValuesBatchResult
    fullName: Dropbox.Api.Team.FeaturesGetValuesBatchResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.FeaturesGetValuesBatchResult
    name: FeaturesGetValuesBatchResult
    nameWithType: FeaturesGetValuesBatchResult
    fullName: Dropbox.Api.Team.FeaturesGetValuesBatchResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginFeaturesGetValues*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginFeaturesGetValues
  name: BeginFeaturesGetValues
  nameWithType: TeamTeamRoutes.BeginFeaturesGetValues
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginFeaturesGetValues
- uid: Dropbox.Api.Team.Feature
  commentId: T:Dropbox.Api.Team.Feature
  parent: Dropbox.Api.Team
  name: Feature
  nameWithType: Feature
  fullName: Dropbox.Api.Team.Feature
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.Feature}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.Team.Feature}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Feature>
  nameWithType: IEnumerable<Feature>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Team.Feature>
  nameWithType.vb: IEnumerable(Of Feature)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.Feature)
  name.vb: IEnumerable(Of Feature)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.Feature
    name: Feature
    nameWithType: Feature
    fullName: Dropbox.Api.Team.Feature
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.Feature
    name: Feature
    nameWithType: Feature
    fullName: Dropbox.Api.Team.Feature
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndFeaturesGetValues*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndFeaturesGetValues
  name: EndFeaturesGetValues
  nameWithType: TeamTeamRoutes.EndFeaturesGetValues
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndFeaturesGetValues
- uid: Dropbox.Api.Team.FeaturesGetValuesBatchResult
  commentId: T:Dropbox.Api.Team.FeaturesGetValuesBatchResult
  parent: Dropbox.Api.Team
  name: FeaturesGetValuesBatchResult
  nameWithType: FeaturesGetValuesBatchResult
  fullName: Dropbox.Api.Team.FeaturesGetValuesBatchResult
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GetInfoAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.GetInfoAsync
  name: GetInfoAsync
  nameWithType: TeamTeamRoutes.GetInfoAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GetInfoAsync
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamGetInfoResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.TeamGetInfoResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TeamGetInfoResult>
  nameWithType: Task<TeamGetInfoResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.TeamGetInfoResult>
  nameWithType.vb: Task(Of TeamGetInfoResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.TeamGetInfoResult)
  name.vb: Task(Of TeamGetInfoResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.TeamGetInfoResult
    name: TeamGetInfoResult
    nameWithType: TeamGetInfoResult
    fullName: Dropbox.Api.Team.TeamGetInfoResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.TeamGetInfoResult
    name: TeamGetInfoResult
    nameWithType: TeamGetInfoResult
    fullName: Dropbox.Api.Team.TeamGetInfoResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGetInfo*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGetInfo
  name: BeginGetInfo
  nameWithType: TeamTeamRoutes.BeginGetInfo
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGetInfo
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGetInfo*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGetInfo
  name: EndGetInfo
  nameWithType: TeamTeamRoutes.EndGetInfo
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGetInfo
- uid: Dropbox.Api.Team.TeamGetInfoResult
  commentId: T:Dropbox.Api.Team.TeamGetInfoResult
  parent: Dropbox.Api.Team
  name: TeamGetInfoResult
  nameWithType: TeamGetInfoResult
  fullName: Dropbox.Api.Team.TeamGetInfoResult
- uid: Dropbox.Api.Team.GroupCreateError
  commentId: T:Dropbox.Api.Team.GroupCreateError
  parent: Dropbox.Api.Team
  name: GroupCreateError
  nameWithType: GroupCreateError
  fullName: Dropbox.Api.Team.GroupCreateError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsCreateAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsCreateAsync
  name: GroupsCreateAsync
  nameWithType: TeamTeamRoutes.GroupsCreateAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsCreateAsync
- uid: Dropbox.Api.Team.GroupCreateArg
  commentId: T:Dropbox.Api.Team.GroupCreateArg
  parent: Dropbox.Api.Team
  name: GroupCreateArg
  nameWithType: GroupCreateArg
  fullName: Dropbox.Api.Team.GroupCreateArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.GroupFullInfo}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.GroupFullInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<GroupFullInfo>
  nameWithType: Task<GroupFullInfo>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.GroupFullInfo>
  nameWithType.vb: Task(Of GroupFullInfo)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.GroupFullInfo)
  name.vb: Task(Of GroupFullInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.GroupFullInfo
    name: GroupFullInfo
    nameWithType: GroupFullInfo
    fullName: Dropbox.Api.Team.GroupFullInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.GroupFullInfo
    name: GroupFullInfo
    nameWithType: GroupFullInfo
    fullName: Dropbox.Api.Team.GroupFullInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsCreate*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsCreate
  name: BeginGroupsCreate
  nameWithType: TeamTeamRoutes.BeginGroupsCreate
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsCreate
- uid: Dropbox.Api.TeamCommon.GroupManagementType
  commentId: T:Dropbox.Api.TeamCommon.GroupManagementType
  parent: Dropbox.Api.TeamCommon
  name: GroupManagementType
  nameWithType: GroupManagementType
  fullName: Dropbox.Api.TeamCommon.GroupManagementType
- uid: Dropbox.Api.TeamCommon
  commentId: N:Dropbox.Api.TeamCommon
  name: Dropbox.Api.TeamCommon
  nameWithType: Dropbox.Api.TeamCommon
  fullName: Dropbox.Api.TeamCommon
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsCreate*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsCreate
  name: EndGroupsCreate
  nameWithType: TeamTeamRoutes.EndGroupsCreate
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsCreate
- uid: Dropbox.Api.Team.GroupFullInfo
  commentId: T:Dropbox.Api.Team.GroupFullInfo
  parent: Dropbox.Api.Team
  name: GroupFullInfo
  nameWithType: GroupFullInfo
  fullName: Dropbox.Api.Team.GroupFullInfo
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsJobStatusGetAsync(Dropbox.Api.Async.PollArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsJobStatusGetAsync(Dropbox.Api.Async.PollArg)
  isExternal: true
- uid: Dropbox.Api.Team.GroupDeleteError
  commentId: T:Dropbox.Api.Team.GroupDeleteError
  parent: Dropbox.Api.Team
  name: GroupDeleteError
  nameWithType: GroupDeleteError
  fullName: Dropbox.Api.Team.GroupDeleteError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsDeleteAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsDeleteAsync
  name: GroupsDeleteAsync
  nameWithType: TeamTeamRoutes.GroupsDeleteAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsDeleteAsync
- uid: Dropbox.Api.Team.GroupSelector
  commentId: T:Dropbox.Api.Team.GroupSelector
  parent: Dropbox.Api.Team
  name: GroupSelector
  nameWithType: GroupSelector
  fullName: Dropbox.Api.Team.GroupSelector
- uid: System.Threading.Tasks.Task{Dropbox.Api.Async.LaunchEmptyResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Async.LaunchEmptyResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<LaunchEmptyResult>
  nameWithType: Task<LaunchEmptyResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Async.LaunchEmptyResult>
  nameWithType.vb: Task(Of LaunchEmptyResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Async.LaunchEmptyResult)
  name.vb: Task(Of LaunchEmptyResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Async.LaunchEmptyResult
    name: LaunchEmptyResult
    nameWithType: LaunchEmptyResult
    fullName: Dropbox.Api.Async.LaunchEmptyResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Async.LaunchEmptyResult
    name: LaunchEmptyResult
    nameWithType: LaunchEmptyResult
    fullName: Dropbox.Api.Async.LaunchEmptyResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsDelete*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsDelete
  name: BeginGroupsDelete
  nameWithType: TeamTeamRoutes.BeginGroupsDelete
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsDelete
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsDelete*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsDelete
  name: EndGroupsDelete
  nameWithType: TeamTeamRoutes.EndGroupsDelete
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsDelete
- uid: Dropbox.Api.Async.LaunchEmptyResult
  commentId: T:Dropbox.Api.Async.LaunchEmptyResult
  parent: Dropbox.Api.Async
  name: LaunchEmptyResult
  nameWithType: LaunchEmptyResult
  fullName: Dropbox.Api.Async.LaunchEmptyResult
- uid: Dropbox.Api.Async
  commentId: N:Dropbox.Api.Async
  name: Dropbox.Api.Async
  nameWithType: Dropbox.Api.Async
  fullName: Dropbox.Api.Async
- uid: Dropbox.Api.Team.GroupFullInfo.Members
  commentId: P:Dropbox.Api.Team.GroupFullInfo.Members
  isExternal: true
- uid: Dropbox.Api.Team.GroupsGetInfoError
  commentId: T:Dropbox.Api.Team.GroupsGetInfoError
  parent: Dropbox.Api.Team
  name: GroupsGetInfoError
  nameWithType: GroupsGetInfoError
  fullName: Dropbox.Api.Team.GroupsGetInfoError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsGetInfoAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsGetInfoAsync
  name: GroupsGetInfoAsync
  nameWithType: TeamTeamRoutes.GroupsGetInfoAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsGetInfoAsync
- uid: Dropbox.Api.Team.GroupsSelector
  commentId: T:Dropbox.Api.Team.GroupsSelector
  parent: Dropbox.Api.Team
  name: GroupsSelector
  nameWithType: GroupsSelector
  fullName: Dropbox.Api.Team.GroupsSelector
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.GroupsGetInfoItem}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.GroupsGetInfoItem}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<GroupsGetInfoItem>>
  nameWithType: Task<List<GroupsGetInfoItem>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Dropbox.Api.Team.GroupsGetInfoItem>>
  nameWithType.vb: Task(Of List(Of GroupsGetInfoItem))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Dropbox.Api.Team.GroupsGetInfoItem))
  name.vb: Task(Of List(Of GroupsGetInfoItem))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.GroupsGetInfoItem
    name: GroupsGetInfoItem
    nameWithType: GroupsGetInfoItem
    fullName: Dropbox.Api.Team.GroupsGetInfoItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.GroupsGetInfoItem
    name: GroupsGetInfoItem
    nameWithType: GroupsGetInfoItem
    fullName: Dropbox.Api.Team.GroupsGetInfoItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsGetInfo*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsGetInfo
  name: BeginGroupsGetInfo
  nameWithType: TeamTeamRoutes.BeginGroupsGetInfo
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsGetInfo
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsGetInfo*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsGetInfo
  name: EndGroupsGetInfo
  nameWithType: TeamTeamRoutes.EndGroupsGetInfo
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsGetInfo
- uid: System.Collections.Generic.List{Dropbox.Api.Team.GroupsGetInfoItem}
  commentId: T:System.Collections.Generic.List{Dropbox.Api.Team.GroupsGetInfoItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<GroupsGetInfoItem>
  nameWithType: List<GroupsGetInfoItem>
  fullName: System.Collections.Generic.List<Dropbox.Api.Team.GroupsGetInfoItem>
  nameWithType.vb: List(Of GroupsGetInfoItem)
  fullName.vb: System.Collections.Generic.List(Of Dropbox.Api.Team.GroupsGetInfoItem)
  name.vb: List(Of GroupsGetInfoItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.GroupsGetInfoItem
    name: GroupsGetInfoItem
    nameWithType: GroupsGetInfoItem
    fullName: Dropbox.Api.Team.GroupsGetInfoItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.GroupsGetInfoItem
    name: GroupsGetInfoItem
    nameWithType: GroupsGetInfoItem
    fullName: Dropbox.Api.Team.GroupsGetInfoItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsDeleteAsync(Dropbox.Api.Team.GroupSelector)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsDeleteAsync(Dropbox.Api.Team.GroupSelector)
  isExternal: true
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersAddAsync(Dropbox.Api.Team.GroupMembersAddArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersAddAsync(Dropbox.Api.Team.GroupMembersAddArg)
  isExternal: true
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersRemoveAsync(Dropbox.Api.Team.GroupMembersRemoveArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersRemoveAsync(Dropbox.Api.Team.GroupMembersRemoveArg)
  isExternal: true
- uid: Dropbox.Api.Team.GroupsPollError
  commentId: T:Dropbox.Api.Team.GroupsPollError
  parent: Dropbox.Api.Team
  name: GroupsPollError
  nameWithType: GroupsPollError
  fullName: Dropbox.Api.Team.GroupsPollError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsJobStatusGetAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsJobStatusGetAsync
  name: GroupsJobStatusGetAsync
  nameWithType: TeamTeamRoutes.GroupsJobStatusGetAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsJobStatusGetAsync
- uid: Dropbox.Api.Async.PollArg
  commentId: T:Dropbox.Api.Async.PollArg
  parent: Dropbox.Api.Async
  name: PollArg
  nameWithType: PollArg
  fullName: Dropbox.Api.Async.PollArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Async.PollEmptyResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Async.PollEmptyResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PollEmptyResult>
  nameWithType: Task<PollEmptyResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Async.PollEmptyResult>
  nameWithType.vb: Task(Of PollEmptyResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Async.PollEmptyResult)
  name.vb: Task(Of PollEmptyResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Async.PollEmptyResult
    name: PollEmptyResult
    nameWithType: PollEmptyResult
    fullName: Dropbox.Api.Async.PollEmptyResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Async.PollEmptyResult
    name: PollEmptyResult
    nameWithType: PollEmptyResult
    fullName: Dropbox.Api.Async.PollEmptyResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsJobStatusGet*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsJobStatusGet
  name: BeginGroupsJobStatusGet
  nameWithType: TeamTeamRoutes.BeginGroupsJobStatusGet
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsJobStatusGet
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsJobStatusGet*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsJobStatusGet
  name: EndGroupsJobStatusGet
  nameWithType: TeamTeamRoutes.EndGroupsJobStatusGet
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsJobStatusGet
- uid: Dropbox.Api.Async.PollEmptyResult
  commentId: T:Dropbox.Api.Async.PollEmptyResult
  parent: Dropbox.Api.Async
  name: PollEmptyResult
  nameWithType: PollEmptyResult
  fullName: Dropbox.Api.Async.PollEmptyResult
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListAsync
  name: GroupsListAsync
  nameWithType: TeamTeamRoutes.GroupsListAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListAsync
- uid: Dropbox.Api.Team.GroupsListArg
  commentId: T:Dropbox.Api.Team.GroupsListArg
  parent: Dropbox.Api.Team
  name: GroupsListArg
  nameWithType: GroupsListArg
  fullName: Dropbox.Api.Team.GroupsListArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.GroupsListResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.GroupsListResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<GroupsListResult>
  nameWithType: Task<GroupsListResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.GroupsListResult>
  nameWithType.vb: Task(Of GroupsListResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.GroupsListResult)
  name.vb: Task(Of GroupsListResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.GroupsListResult
    name: GroupsListResult
    nameWithType: GroupsListResult
    fullName: Dropbox.Api.Team.GroupsListResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.GroupsListResult
    name: GroupsListResult
    nameWithType: GroupsListResult
    fullName: Dropbox.Api.Team.GroupsListResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsList*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsList
  name: BeginGroupsList
  nameWithType: TeamTeamRoutes.BeginGroupsList
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsList
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsList*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsList
  name: EndGroupsList
  nameWithType: TeamTeamRoutes.EndGroupsList
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsList
- uid: Dropbox.Api.Team.GroupsListResult
  commentId: T:Dropbox.Api.Team.GroupsListResult
  parent: Dropbox.Api.Team
  name: GroupsListResult
  nameWithType: GroupsListResult
  fullName: Dropbox.Api.Team.GroupsListResult
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListAsync(Dropbox.Api.Team.GroupsListArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListAsync(Dropbox.Api.Team.GroupsListArg)
  isExternal: true
- uid: Dropbox.Api.Team.GroupsListContinueError
  commentId: T:Dropbox.Api.Team.GroupsListContinueError
  parent: Dropbox.Api.Team
  name: GroupsListContinueError
  nameWithType: GroupsListContinueError
  fullName: Dropbox.Api.Team.GroupsListContinueError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListContinueAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListContinueAsync
  name: GroupsListContinueAsync
  nameWithType: TeamTeamRoutes.GroupsListContinueAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsListContinueAsync
- uid: Dropbox.Api.Team.GroupsListContinueArg
  commentId: T:Dropbox.Api.Team.GroupsListContinueArg
  parent: Dropbox.Api.Team
  name: GroupsListContinueArg
  nameWithType: GroupsListContinueArg
  fullName: Dropbox.Api.Team.GroupsListContinueArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsListContinue*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsListContinue
  name: BeginGroupsListContinue
  nameWithType: TeamTeamRoutes.BeginGroupsListContinue
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsListContinue
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsListContinue*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsListContinue
  name: EndGroupsListContinue
  nameWithType: TeamTeamRoutes.EndGroupsListContinue
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsListContinue
- uid: Dropbox.Api.Team.GroupMembersAddError
  commentId: T:Dropbox.Api.Team.GroupMembersAddError
  parent: Dropbox.Api.Team
  name: GroupMembersAddError
  nameWithType: GroupMembersAddError
  fullName: Dropbox.Api.Team.GroupMembersAddError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersAddAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersAddAsync
  name: GroupsMembersAddAsync
  nameWithType: TeamTeamRoutes.GroupsMembersAddAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersAddAsync
- uid: Dropbox.Api.Team.GroupMembersAddArg
  commentId: T:Dropbox.Api.Team.GroupMembersAddArg
  parent: Dropbox.Api.Team
  name: GroupMembersAddArg
  nameWithType: GroupMembersAddArg
  fullName: Dropbox.Api.Team.GroupMembersAddArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.GroupMembersChangeResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.GroupMembersChangeResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<GroupMembersChangeResult>
  nameWithType: Task<GroupMembersChangeResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.GroupMembersChangeResult>
  nameWithType.vb: Task(Of GroupMembersChangeResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.GroupMembersChangeResult)
  name.vb: Task(Of GroupMembersChangeResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.GroupMembersChangeResult
    name: GroupMembersChangeResult
    nameWithType: GroupMembersChangeResult
    fullName: Dropbox.Api.Team.GroupMembersChangeResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.GroupMembersChangeResult
    name: GroupMembersChangeResult
    nameWithType: GroupMembersChangeResult
    fullName: Dropbox.Api.Team.GroupMembersChangeResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersAdd*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersAdd
  name: BeginGroupsMembersAdd
  nameWithType: TeamTeamRoutes.BeginGroupsMembersAdd
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersAdd
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAccess}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAccess}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<MemberAccess>
  nameWithType: IEnumerable<MemberAccess>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Team.MemberAccess>
  nameWithType.vb: IEnumerable(Of MemberAccess)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.MemberAccess)
  name.vb: IEnumerable(Of MemberAccess)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.MemberAccess
    name: MemberAccess
    nameWithType: MemberAccess
    fullName: Dropbox.Api.Team.MemberAccess
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.MemberAccess
    name: MemberAccess
    nameWithType: MemberAccess
    fullName: Dropbox.Api.Team.MemberAccess
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersAdd*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersAdd
  name: EndGroupsMembersAdd
  nameWithType: TeamTeamRoutes.EndGroupsMembersAdd
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersAdd
- uid: Dropbox.Api.Team.GroupMembersChangeResult
  commentId: T:Dropbox.Api.Team.GroupMembersChangeResult
  parent: Dropbox.Api.Team
  name: GroupMembersChangeResult
  nameWithType: GroupMembersChangeResult
  fullName: Dropbox.Api.Team.GroupMembersChangeResult
- uid: Dropbox.Api.Team.GroupSelectorError
  commentId: T:Dropbox.Api.Team.GroupSelectorError
  parent: Dropbox.Api.Team
  name: GroupSelectorError
  nameWithType: GroupSelectorError
  fullName: Dropbox.Api.Team.GroupSelectorError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListAsync
  name: GroupsMembersListAsync
  nameWithType: TeamTeamRoutes.GroupsMembersListAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListAsync
- uid: Dropbox.Api.Team.GroupsMembersListArg
  commentId: T:Dropbox.Api.Team.GroupsMembersListArg
  parent: Dropbox.Api.Team
  name: GroupsMembersListArg
  nameWithType: GroupsMembersListArg
  fullName: Dropbox.Api.Team.GroupsMembersListArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.GroupsMembersListResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.GroupsMembersListResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<GroupsMembersListResult>
  nameWithType: Task<GroupsMembersListResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.GroupsMembersListResult>
  nameWithType.vb: Task(Of GroupsMembersListResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.GroupsMembersListResult)
  name.vb: Task(Of GroupsMembersListResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.GroupsMembersListResult
    name: GroupsMembersListResult
    nameWithType: GroupsMembersListResult
    fullName: Dropbox.Api.Team.GroupsMembersListResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.GroupsMembersListResult
    name: GroupsMembersListResult
    nameWithType: GroupsMembersListResult
    fullName: Dropbox.Api.Team.GroupsMembersListResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersList*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersList
  name: BeginGroupsMembersList
  nameWithType: TeamTeamRoutes.BeginGroupsMembersList
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersList
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersList*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersList
  name: EndGroupsMembersList
  nameWithType: TeamTeamRoutes.EndGroupsMembersList
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersList
- uid: Dropbox.Api.Team.GroupsMembersListResult
  commentId: T:Dropbox.Api.Team.GroupsMembersListResult
  parent: Dropbox.Api.Team
  name: GroupsMembersListResult
  nameWithType: GroupsMembersListResult
  fullName: Dropbox.Api.Team.GroupsMembersListResult
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListAsync(Dropbox.Api.Team.GroupsMembersListArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListAsync(Dropbox.Api.Team.GroupsMembersListArg)
  isExternal: true
- uid: Dropbox.Api.Team.GroupsMembersListContinueError
  commentId: T:Dropbox.Api.Team.GroupsMembersListContinueError
  parent: Dropbox.Api.Team
  name: GroupsMembersListContinueError
  nameWithType: GroupsMembersListContinueError
  fullName: Dropbox.Api.Team.GroupsMembersListContinueError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListContinueAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListContinueAsync
  name: GroupsMembersListContinueAsync
  nameWithType: TeamTeamRoutes.GroupsMembersListContinueAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersListContinueAsync
- uid: Dropbox.Api.Team.GroupsMembersListContinueArg
  commentId: T:Dropbox.Api.Team.GroupsMembersListContinueArg
  parent: Dropbox.Api.Team
  name: GroupsMembersListContinueArg
  nameWithType: GroupsMembersListContinueArg
  fullName: Dropbox.Api.Team.GroupsMembersListContinueArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersListContinue*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersListContinue
  name: BeginGroupsMembersListContinue
  nameWithType: TeamTeamRoutes.BeginGroupsMembersListContinue
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersListContinue
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersListContinue*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersListContinue
  name: EndGroupsMembersListContinue
  nameWithType: TeamTeamRoutes.EndGroupsMembersListContinue
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersListContinue
- uid: Dropbox.Api.Team.GroupMembersRemoveError
  commentId: T:Dropbox.Api.Team.GroupMembersRemoveError
  parent: Dropbox.Api.Team
  name: GroupMembersRemoveError
  nameWithType: GroupMembersRemoveError
  fullName: Dropbox.Api.Team.GroupMembersRemoveError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersRemoveAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersRemoveAsync
  name: GroupsMembersRemoveAsync
  nameWithType: TeamTeamRoutes.GroupsMembersRemoveAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersRemoveAsync
- uid: Dropbox.Api.Team.GroupMembersRemoveArg
  commentId: T:Dropbox.Api.Team.GroupMembersRemoveArg
  parent: Dropbox.Api.Team
  name: GroupMembersRemoveArg
  nameWithType: GroupMembersRemoveArg
  fullName: Dropbox.Api.Team.GroupMembersRemoveArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersRemove*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersRemove
  name: BeginGroupsMembersRemove
  nameWithType: TeamTeamRoutes.BeginGroupsMembersRemove
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersRemove
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSelectorArg}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<UserSelectorArg>
  nameWithType: IEnumerable<UserSelectorArg>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSelectorArg>
  nameWithType.vb: IEnumerable(Of UserSelectorArg)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSelectorArg)
  name.vb: IEnumerable(Of UserSelectorArg)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.UserSelectorArg
    name: UserSelectorArg
    nameWithType: UserSelectorArg
    fullName: Dropbox.Api.Team.UserSelectorArg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.UserSelectorArg
    name: UserSelectorArg
    nameWithType: UserSelectorArg
    fullName: Dropbox.Api.Team.UserSelectorArg
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersRemove*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersRemove
  name: EndGroupsMembersRemove
  nameWithType: TeamTeamRoutes.EndGroupsMembersRemove
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersRemove
- uid: Dropbox.Api.Team.GroupMemberSetAccessTypeError
  commentId: T:Dropbox.Api.Team.GroupMemberSetAccessTypeError
  parent: Dropbox.Api.Team
  name: GroupMemberSetAccessTypeError
  nameWithType: GroupMemberSetAccessTypeError
  fullName: Dropbox.Api.Team.GroupMemberSetAccessTypeError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersSetAccessTypeAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersSetAccessTypeAsync
  name: GroupsMembersSetAccessTypeAsync
  nameWithType: TeamTeamRoutes.GroupsMembersSetAccessTypeAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsMembersSetAccessTypeAsync
- uid: Dropbox.Api.Team.GroupMembersSetAccessTypeArg
  commentId: T:Dropbox.Api.Team.GroupMembersSetAccessTypeArg
  parent: Dropbox.Api.Team
  name: GroupMembersSetAccessTypeArg
  nameWithType: GroupMembersSetAccessTypeArg
  fullName: Dropbox.Api.Team.GroupMembersSetAccessTypeArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersSetAccessType*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersSetAccessType
  name: BeginGroupsMembersSetAccessType
  nameWithType: TeamTeamRoutes.BeginGroupsMembersSetAccessType
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsMembersSetAccessType
- uid: Dropbox.Api.Team.UserSelectorArg
  commentId: T:Dropbox.Api.Team.UserSelectorArg
  parent: Dropbox.Api.Team
  name: UserSelectorArg
  nameWithType: UserSelectorArg
  fullName: Dropbox.Api.Team.UserSelectorArg
- uid: Dropbox.Api.Team.GroupAccessType
  commentId: T:Dropbox.Api.Team.GroupAccessType
  parent: Dropbox.Api.Team
  name: GroupAccessType
  nameWithType: GroupAccessType
  fullName: Dropbox.Api.Team.GroupAccessType
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersSetAccessType*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersSetAccessType
  name: EndGroupsMembersSetAccessType
  nameWithType: TeamTeamRoutes.EndGroupsMembersSetAccessType
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsMembersSetAccessType
- uid: Dropbox.Api.Team.GroupUpdateError
  commentId: T:Dropbox.Api.Team.GroupUpdateError
  parent: Dropbox.Api.Team
  name: GroupUpdateError
  nameWithType: GroupUpdateError
  fullName: Dropbox.Api.Team.GroupUpdateError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsUpdateAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsUpdateAsync
  name: GroupsUpdateAsync
  nameWithType: TeamTeamRoutes.GroupsUpdateAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.GroupsUpdateAsync
- uid: Dropbox.Api.Team.GroupUpdateArgs
  commentId: T:Dropbox.Api.Team.GroupUpdateArgs
  parent: Dropbox.Api.Team
  name: GroupUpdateArgs
  nameWithType: GroupUpdateArgs
  fullName: Dropbox.Api.Team.GroupUpdateArgs
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsUpdate*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsUpdate
  name: BeginGroupsUpdate
  nameWithType: TeamTeamRoutes.BeginGroupsUpdate
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginGroupsUpdate
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsUpdate*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsUpdate
  name: EndGroupsUpdate
  nameWithType: TeamTeamRoutes.EndGroupsUpdate
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndGroupsUpdate
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyCreateError
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyCreateError
  nameWithType: LegalHoldsPolicyCreateError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsCreatePolicyAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsCreatePolicyAsync
  name: LegalHoldsCreatePolicyAsync
  nameWithType: TeamTeamRoutes.LegalHoldsCreatePolicyAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsCreatePolicyAsync
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateArg
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyCreateArg
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyCreateArg
  nameWithType: LegalHoldsPolicyCreateArg
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.LegalHoldPolicy}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.LegalHoldPolicy}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<LegalHoldPolicy>
  nameWithType: Task<LegalHoldPolicy>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.LegalHoldPolicy>
  nameWithType.vb: Task(Of LegalHoldPolicy)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.LegalHoldPolicy)
  name.vb: Task(Of LegalHoldPolicy)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.LegalHoldPolicy
    name: LegalHoldPolicy
    nameWithType: LegalHoldPolicy
    fullName: Dropbox.Api.Team.LegalHoldPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.LegalHoldPolicy
    name: LegalHoldPolicy
    nameWithType: LegalHoldPolicy
    fullName: Dropbox.Api.Team.LegalHoldPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsCreatePolicy*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsCreatePolicy
  name: BeginLegalHoldsCreatePolicy
  nameWithType: TeamTeamRoutes.BeginLegalHoldsCreatePolicy
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsCreatePolicy
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsCreatePolicy*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsCreatePolicy
  name: EndLegalHoldsCreatePolicy
  nameWithType: TeamTeamRoutes.EndLegalHoldsCreatePolicy
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsCreatePolicy
- uid: Dropbox.Api.Team.LegalHoldPolicy
  commentId: T:Dropbox.Api.Team.LegalHoldPolicy
  parent: Dropbox.Api.Team
  name: LegalHoldPolicy
  nameWithType: LegalHoldPolicy
  fullName: Dropbox.Api.Team.LegalHoldPolicy
- uid: Dropbox.Api.Team.LegalHoldsGetPolicyError
  commentId: T:Dropbox.Api.Team.LegalHoldsGetPolicyError
  parent: Dropbox.Api.Team
  name: LegalHoldsGetPolicyError
  nameWithType: LegalHoldsGetPolicyError
  fullName: Dropbox.Api.Team.LegalHoldsGetPolicyError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsGetPolicyAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsGetPolicyAsync
  name: LegalHoldsGetPolicyAsync
  nameWithType: TeamTeamRoutes.LegalHoldsGetPolicyAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsGetPolicyAsync
- uid: Dropbox.Api.Team.LegalHoldsGetPolicyArg
  commentId: T:Dropbox.Api.Team.LegalHoldsGetPolicyArg
  parent: Dropbox.Api.Team
  name: LegalHoldsGetPolicyArg
  nameWithType: LegalHoldsGetPolicyArg
  fullName: Dropbox.Api.Team.LegalHoldsGetPolicyArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsGetPolicy*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsGetPolicy
  name: BeginLegalHoldsGetPolicy
  nameWithType: TeamTeamRoutes.BeginLegalHoldsGetPolicy
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsGetPolicy
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsGetPolicy*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsGetPolicy
  name: EndLegalHoldsGetPolicy
  nameWithType: TeamTeamRoutes.EndLegalHoldsGetPolicy
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsGetPolicy
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
  commentId: T:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
  parent: Dropbox.Api.Team
  name: LegalHoldsListHeldRevisionsError
  nameWithType: LegalHoldsListHeldRevisionsError
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsAsync
  name: LegalHoldsListHeldRevisionsAsync
  nameWithType: TeamTeamRoutes.LegalHoldsListHeldRevisionsAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsAsync
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsArg
  commentId: T:Dropbox.Api.Team.LegalHoldsListHeldRevisionsArg
  parent: Dropbox.Api.Team
  name: LegalHoldsListHeldRevisionsArg
  nameWithType: LegalHoldsListHeldRevisionsArg
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.LegalHoldsListHeldRevisionResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.LegalHoldsListHeldRevisionResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<LegalHoldsListHeldRevisionResult>
  nameWithType: Task<LegalHoldsListHeldRevisionResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.LegalHoldsListHeldRevisionResult>
  nameWithType.vb: Task(Of LegalHoldsListHeldRevisionResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.LegalHoldsListHeldRevisionResult)
  name.vb: Task(Of LegalHoldsListHeldRevisionResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult
    name: LegalHoldsListHeldRevisionResult
    nameWithType: LegalHoldsListHeldRevisionResult
    fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult
    name: LegalHoldsListHeldRevisionResult
    nameWithType: LegalHoldsListHeldRevisionResult
    fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisions*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisions
  name: BeginLegalHoldsListHeldRevisions
  nameWithType: TeamTeamRoutes.BeginLegalHoldsListHeldRevisions
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisions
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListHeldRevisions*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListHeldRevisions
  name: EndLegalHoldsListHeldRevisions
  nameWithType: TeamTeamRoutes.EndLegalHoldsListHeldRevisions
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListHeldRevisions
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult
  commentId: T:Dropbox.Api.Team.LegalHoldsListHeldRevisionResult
  parent: Dropbox.Api.Team
  name: LegalHoldsListHeldRevisionResult
  nameWithType: LegalHoldsListHeldRevisionResult
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsContinueAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsContinueAsync
  name: LegalHoldsListHeldRevisionsContinueAsync
  nameWithType: TeamTeamRoutes.LegalHoldsListHeldRevisionsContinueAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListHeldRevisionsContinueAsync
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsContinueArg
  commentId: T:Dropbox.Api.Team.LegalHoldsListHeldRevisionsContinueArg
  parent: Dropbox.Api.Team
  name: LegalHoldsListHeldRevisionsContinueArg
  nameWithType: LegalHoldsListHeldRevisionsContinueArg
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsContinueArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisionsContinue*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisionsContinue
  name: BeginLegalHoldsListHeldRevisionsContinue
  nameWithType: TeamTeamRoutes.BeginLegalHoldsListHeldRevisionsContinue
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListHeldRevisionsContinue
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListHeldRevisionsContinue*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListHeldRevisionsContinue
  name: EndLegalHoldsListHeldRevisionsContinue
  nameWithType: TeamTeamRoutes.EndLegalHoldsListHeldRevisionsContinue
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListHeldRevisionsContinue
- uid: Dropbox.Api.Team.LegalHoldsListPoliciesError
  commentId: T:Dropbox.Api.Team.LegalHoldsListPoliciesError
  parent: Dropbox.Api.Team
  name: LegalHoldsListPoliciesError
  nameWithType: LegalHoldsListPoliciesError
  fullName: Dropbox.Api.Team.LegalHoldsListPoliciesError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListPoliciesAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListPoliciesAsync
  name: LegalHoldsListPoliciesAsync
  nameWithType: TeamTeamRoutes.LegalHoldsListPoliciesAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsListPoliciesAsync
- uid: Dropbox.Api.Team.LegalHoldsListPoliciesArg
  commentId: T:Dropbox.Api.Team.LegalHoldsListPoliciesArg
  parent: Dropbox.Api.Team
  name: LegalHoldsListPoliciesArg
  nameWithType: LegalHoldsListPoliciesArg
  fullName: Dropbox.Api.Team.LegalHoldsListPoliciesArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.LegalHoldsListPoliciesResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.LegalHoldsListPoliciesResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<LegalHoldsListPoliciesResult>
  nameWithType: Task<LegalHoldsListPoliciesResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.LegalHoldsListPoliciesResult>
  nameWithType.vb: Task(Of LegalHoldsListPoliciesResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.LegalHoldsListPoliciesResult)
  name.vb: Task(Of LegalHoldsListPoliciesResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.LegalHoldsListPoliciesResult
    name: LegalHoldsListPoliciesResult
    nameWithType: LegalHoldsListPoliciesResult
    fullName: Dropbox.Api.Team.LegalHoldsListPoliciesResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.LegalHoldsListPoliciesResult
    name: LegalHoldsListPoliciesResult
    nameWithType: LegalHoldsListPoliciesResult
    fullName: Dropbox.Api.Team.LegalHoldsListPoliciesResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListPolicies*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListPolicies
  name: BeginLegalHoldsListPolicies
  nameWithType: TeamTeamRoutes.BeginLegalHoldsListPolicies
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsListPolicies
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListPolicies*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListPolicies
  name: EndLegalHoldsListPolicies
  nameWithType: TeamTeamRoutes.EndLegalHoldsListPolicies
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsListPolicies
- uid: Dropbox.Api.Team.LegalHoldsListPoliciesResult
  commentId: T:Dropbox.Api.Team.LegalHoldsListPoliciesResult
  parent: Dropbox.Api.Team
  name: LegalHoldsListPoliciesResult
  nameWithType: LegalHoldsListPoliciesResult
  fullName: Dropbox.Api.Team.LegalHoldsListPoliciesResult
- uid: Dropbox.Api.Team.LegalHoldsPolicyReleaseError
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyReleaseError
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyReleaseError
  nameWithType: LegalHoldsPolicyReleaseError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyReleaseError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsReleasePolicyAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsReleasePolicyAsync
  name: LegalHoldsReleasePolicyAsync
  nameWithType: TeamTeamRoutes.LegalHoldsReleasePolicyAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsReleasePolicyAsync
- uid: Dropbox.Api.Team.LegalHoldsPolicyReleaseArg
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyReleaseArg
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyReleaseArg
  nameWithType: LegalHoldsPolicyReleaseArg
  fullName: Dropbox.Api.Team.LegalHoldsPolicyReleaseArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsReleasePolicy*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsReleasePolicy
  name: BeginLegalHoldsReleasePolicy
  nameWithType: TeamTeamRoutes.BeginLegalHoldsReleasePolicy
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsReleasePolicy
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsReleasePolicy*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsReleasePolicy
  name: EndLegalHoldsReleasePolicy
  nameWithType: TeamTeamRoutes.EndLegalHoldsReleasePolicy
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsReleasePolicy
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyUpdateError
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyUpdateError
  nameWithType: LegalHoldsPolicyUpdateError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsUpdatePolicyAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsUpdatePolicyAsync
  name: LegalHoldsUpdatePolicyAsync
  nameWithType: TeamTeamRoutes.LegalHoldsUpdatePolicyAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LegalHoldsUpdatePolicyAsync
- uid: Dropbox.Api.Team.LegalHoldsPolicyUpdateArg
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyUpdateArg
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyUpdateArg
  nameWithType: LegalHoldsPolicyUpdateArg
  fullName: Dropbox.Api.Team.LegalHoldsPolicyUpdateArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsUpdatePolicy*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsUpdatePolicy
  name: BeginLegalHoldsUpdatePolicy
  nameWithType: TeamTeamRoutes.BeginLegalHoldsUpdatePolicy
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLegalHoldsUpdatePolicy
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsUpdatePolicy*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsUpdatePolicy
  name: EndLegalHoldsUpdatePolicy
  nameWithType: TeamTeamRoutes.EndLegalHoldsUpdatePolicy
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLegalHoldsUpdatePolicy
- uid: Dropbox.Api.Team.ListMemberAppsError
  commentId: T:Dropbox.Api.Team.ListMemberAppsError
  parent: Dropbox.Api.Team
  name: ListMemberAppsError
  nameWithType: ListMemberAppsError
  fullName: Dropbox.Api.Team.ListMemberAppsError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMemberLinkedAppsAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMemberLinkedAppsAsync
  name: LinkedAppsListMemberLinkedAppsAsync
  nameWithType: TeamTeamRoutes.LinkedAppsListMemberLinkedAppsAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMemberLinkedAppsAsync
- uid: Dropbox.Api.Team.ListMemberAppsArg
  commentId: T:Dropbox.Api.Team.ListMemberAppsArg
  parent: Dropbox.Api.Team
  name: ListMemberAppsArg
  nameWithType: ListMemberAppsArg
  fullName: Dropbox.Api.Team.ListMemberAppsArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.ListMemberAppsResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.ListMemberAppsResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ListMemberAppsResult>
  nameWithType: Task<ListMemberAppsResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.ListMemberAppsResult>
  nameWithType.vb: Task(Of ListMemberAppsResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.ListMemberAppsResult)
  name.vb: Task(Of ListMemberAppsResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.ListMemberAppsResult
    name: ListMemberAppsResult
    nameWithType: ListMemberAppsResult
    fullName: Dropbox.Api.Team.ListMemberAppsResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.ListMemberAppsResult
    name: ListMemberAppsResult
    nameWithType: ListMemberAppsResult
    fullName: Dropbox.Api.Team.ListMemberAppsResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMemberLinkedApps*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMemberLinkedApps
  name: BeginLinkedAppsListMemberLinkedApps
  nameWithType: TeamTeamRoutes.BeginLinkedAppsListMemberLinkedApps
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMemberLinkedApps
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListMemberLinkedApps*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListMemberLinkedApps
  name: EndLinkedAppsListMemberLinkedApps
  nameWithType: TeamTeamRoutes.EndLinkedAppsListMemberLinkedApps
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListMemberLinkedApps
- uid: Dropbox.Api.Team.ListMemberAppsResult
  commentId: T:Dropbox.Api.Team.ListMemberAppsResult
  parent: Dropbox.Api.Team
  name: ListMemberAppsResult
  nameWithType: ListMemberAppsResult
  fullName: Dropbox.Api.Team.ListMemberAppsResult
- uid: Dropbox.Api.Team.ListMembersAppsError
  commentId: T:Dropbox.Api.Team.ListMembersAppsError
  parent: Dropbox.Api.Team
  name: ListMembersAppsError
  nameWithType: ListMembersAppsError
  fullName: Dropbox.Api.Team.ListMembersAppsError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMembersLinkedAppsAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMembersLinkedAppsAsync
  name: LinkedAppsListMembersLinkedAppsAsync
  nameWithType: TeamTeamRoutes.LinkedAppsListMembersLinkedAppsAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMembersLinkedAppsAsync
- uid: Dropbox.Api.Team.ListMembersAppsArg
  commentId: T:Dropbox.Api.Team.ListMembersAppsArg
  parent: Dropbox.Api.Team
  name: ListMembersAppsArg
  nameWithType: ListMembersAppsArg
  fullName: Dropbox.Api.Team.ListMembersAppsArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.ListMembersAppsResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.ListMembersAppsResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ListMembersAppsResult>
  nameWithType: Task<ListMembersAppsResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.ListMembersAppsResult>
  nameWithType.vb: Task(Of ListMembersAppsResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.ListMembersAppsResult)
  name.vb: Task(Of ListMembersAppsResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.ListMembersAppsResult
    name: ListMembersAppsResult
    nameWithType: ListMembersAppsResult
    fullName: Dropbox.Api.Team.ListMembersAppsResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.ListMembersAppsResult
    name: ListMembersAppsResult
    nameWithType: ListMembersAppsResult
    fullName: Dropbox.Api.Team.ListMembersAppsResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMembersLinkedApps*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMembersLinkedApps
  name: BeginLinkedAppsListMembersLinkedApps
  nameWithType: TeamTeamRoutes.BeginLinkedAppsListMembersLinkedApps
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListMembersLinkedApps
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMembersLinkedAppsAsync(Dropbox.Api.Team.ListMembersAppsArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListMembersLinkedAppsAsync(Dropbox.Api.Team.ListMembersAppsArg)
  isExternal: true
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListMembersLinkedApps*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListMembersLinkedApps
  name: EndLinkedAppsListMembersLinkedApps
  nameWithType: TeamTeamRoutes.EndLinkedAppsListMembersLinkedApps
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListMembersLinkedApps
- uid: Dropbox.Api.Team.ListMembersAppsResult
  commentId: T:Dropbox.Api.Team.ListMembersAppsResult
  parent: Dropbox.Api.Team
  name: ListMembersAppsResult
  nameWithType: ListMembersAppsResult
  fullName: Dropbox.Api.Team.ListMembersAppsResult
- uid: Dropbox.Api.Team.ListTeamAppsError
  commentId: T:Dropbox.Api.Team.ListTeamAppsError
  parent: Dropbox.Api.Team
  name: ListTeamAppsError
  nameWithType: ListTeamAppsError
  fullName: Dropbox.Api.Team.ListTeamAppsError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListTeamLinkedAppsAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListTeamLinkedAppsAsync
  name: LinkedAppsListTeamLinkedAppsAsync
  nameWithType: TeamTeamRoutes.LinkedAppsListTeamLinkedAppsAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListTeamLinkedAppsAsync
- uid: Dropbox.Api.Team.ListTeamAppsArg
  commentId: T:Dropbox.Api.Team.ListTeamAppsArg
  parent: Dropbox.Api.Team
  name: ListTeamAppsArg
  nameWithType: ListTeamAppsArg
  fullName: Dropbox.Api.Team.ListTeamAppsArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.ListTeamAppsResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.ListTeamAppsResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ListTeamAppsResult>
  nameWithType: Task<ListTeamAppsResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.ListTeamAppsResult>
  nameWithType.vb: Task(Of ListTeamAppsResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.ListTeamAppsResult)
  name.vb: Task(Of ListTeamAppsResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.ListTeamAppsResult
    name: ListTeamAppsResult
    nameWithType: ListTeamAppsResult
    fullName: Dropbox.Api.Team.ListTeamAppsResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.ListTeamAppsResult
    name: ListTeamAppsResult
    nameWithType: ListTeamAppsResult
    fullName: Dropbox.Api.Team.ListTeamAppsResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListTeamLinkedApps*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListTeamLinkedApps
  name: BeginLinkedAppsListTeamLinkedApps
  nameWithType: TeamTeamRoutes.BeginLinkedAppsListTeamLinkedApps
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsListTeamLinkedApps
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListTeamLinkedAppsAsync(Dropbox.Api.Team.ListTeamAppsArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsListTeamLinkedAppsAsync(Dropbox.Api.Team.ListTeamAppsArg)
  isExternal: true
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListTeamLinkedApps*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListTeamLinkedApps
  name: EndLinkedAppsListTeamLinkedApps
  nameWithType: TeamTeamRoutes.EndLinkedAppsListTeamLinkedApps
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsListTeamLinkedApps
- uid: Dropbox.Api.Team.ListTeamAppsResult
  commentId: T:Dropbox.Api.Team.ListTeamAppsResult
  parent: Dropbox.Api.Team
  name: ListTeamAppsResult
  nameWithType: ListTeamAppsResult
  fullName: Dropbox.Api.Team.ListTeamAppsResult
- uid: Dropbox.Api.Team.RevokeLinkedAppError
  commentId: T:Dropbox.Api.Team.RevokeLinkedAppError
  parent: Dropbox.Api.Team
  name: RevokeLinkedAppError
  nameWithType: RevokeLinkedAppError
  fullName: Dropbox.Api.Team.RevokeLinkedAppError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppAsync
  name: LinkedAppsRevokeLinkedAppAsync
  nameWithType: TeamTeamRoutes.LinkedAppsRevokeLinkedAppAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppAsync
- uid: Dropbox.Api.Team.RevokeLinkedApiAppArg
  commentId: T:Dropbox.Api.Team.RevokeLinkedApiAppArg
  parent: Dropbox.Api.Team
  name: RevokeLinkedApiAppArg
  nameWithType: RevokeLinkedApiAppArg
  fullName: Dropbox.Api.Team.RevokeLinkedApiAppArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedApp*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedApp
  name: BeginLinkedAppsRevokeLinkedApp
  nameWithType: TeamTeamRoutes.BeginLinkedAppsRevokeLinkedApp
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedApp
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsRevokeLinkedApp*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsRevokeLinkedApp
  name: EndLinkedAppsRevokeLinkedApp
  nameWithType: TeamTeamRoutes.EndLinkedAppsRevokeLinkedApp
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsRevokeLinkedApp
- uid: Dropbox.Api.Team.RevokeLinkedAppBatchError
  commentId: T:Dropbox.Api.Team.RevokeLinkedAppBatchError
  parent: Dropbox.Api.Team
  name: RevokeLinkedAppBatchError
  nameWithType: RevokeLinkedAppBatchError
  fullName: Dropbox.Api.Team.RevokeLinkedAppBatchError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppBatchAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppBatchAsync
  name: LinkedAppsRevokeLinkedAppBatchAsync
  nameWithType: TeamTeamRoutes.LinkedAppsRevokeLinkedAppBatchAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.LinkedAppsRevokeLinkedAppBatchAsync
- uid: Dropbox.Api.Team.RevokeLinkedApiAppBatchArg
  commentId: T:Dropbox.Api.Team.RevokeLinkedApiAppBatchArg
  parent: Dropbox.Api.Team
  name: RevokeLinkedApiAppBatchArg
  nameWithType: RevokeLinkedApiAppBatchArg
  fullName: Dropbox.Api.Team.RevokeLinkedApiAppBatchArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.RevokeLinkedAppBatchResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.RevokeLinkedAppBatchResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RevokeLinkedAppBatchResult>
  nameWithType: Task<RevokeLinkedAppBatchResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.RevokeLinkedAppBatchResult>
  nameWithType.vb: Task(Of RevokeLinkedAppBatchResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.RevokeLinkedAppBatchResult)
  name.vb: Task(Of RevokeLinkedAppBatchResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.RevokeLinkedAppBatchResult
    name: RevokeLinkedAppBatchResult
    nameWithType: RevokeLinkedAppBatchResult
    fullName: Dropbox.Api.Team.RevokeLinkedAppBatchResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.RevokeLinkedAppBatchResult
    name: RevokeLinkedAppBatchResult
    nameWithType: RevokeLinkedAppBatchResult
    fullName: Dropbox.Api.Team.RevokeLinkedAppBatchResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedAppBatch*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedAppBatch
  name: BeginLinkedAppsRevokeLinkedAppBatch
  nameWithType: TeamTeamRoutes.BeginLinkedAppsRevokeLinkedAppBatch
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginLinkedAppsRevokeLinkedAppBatch
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeLinkedApiAppArg}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.Team.RevokeLinkedApiAppArg}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<RevokeLinkedApiAppArg>
  nameWithType: IEnumerable<RevokeLinkedApiAppArg>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Team.RevokeLinkedApiAppArg>
  nameWithType.vb: IEnumerable(Of RevokeLinkedApiAppArg)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.RevokeLinkedApiAppArg)
  name.vb: IEnumerable(Of RevokeLinkedApiAppArg)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.RevokeLinkedApiAppArg
    name: RevokeLinkedApiAppArg
    nameWithType: RevokeLinkedApiAppArg
    fullName: Dropbox.Api.Team.RevokeLinkedApiAppArg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.RevokeLinkedApiAppArg
    name: RevokeLinkedApiAppArg
    nameWithType: RevokeLinkedApiAppArg
    fullName: Dropbox.Api.Team.RevokeLinkedApiAppArg
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsRevokeLinkedAppBatch*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsRevokeLinkedAppBatch
  name: EndLinkedAppsRevokeLinkedAppBatch
  nameWithType: TeamTeamRoutes.EndLinkedAppsRevokeLinkedAppBatch
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndLinkedAppsRevokeLinkedAppBatch
- uid: Dropbox.Api.Team.RevokeLinkedAppBatchResult
  commentId: T:Dropbox.Api.Team.RevokeLinkedAppBatchResult
  parent: Dropbox.Api.Team
  name: RevokeLinkedAppBatchResult
  nameWithType: RevokeLinkedAppBatchResult
  fullName: Dropbox.Api.Team.RevokeLinkedAppBatchResult
- uid: Dropbox.Api.Team.ExcludedUsersUpdateError
  commentId: T:Dropbox.Api.Team.ExcludedUsersUpdateError
  parent: Dropbox.Api.Team
  name: ExcludedUsersUpdateError
  nameWithType: ExcludedUsersUpdateError
  fullName: Dropbox.Api.Team.ExcludedUsersUpdateError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersAddAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersAddAsync
  name: MemberSpaceLimitsExcludedUsersAddAsync
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsExcludedUsersAddAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersAddAsync
- uid: Dropbox.Api.Team.ExcludedUsersUpdateArg
  commentId: T:Dropbox.Api.Team.ExcludedUsersUpdateArg
  parent: Dropbox.Api.Team
  name: ExcludedUsersUpdateArg
  nameWithType: ExcludedUsersUpdateArg
  fullName: Dropbox.Api.Team.ExcludedUsersUpdateArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.ExcludedUsersUpdateResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.ExcludedUsersUpdateResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ExcludedUsersUpdateResult>
  nameWithType: Task<ExcludedUsersUpdateResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.ExcludedUsersUpdateResult>
  nameWithType.vb: Task(Of ExcludedUsersUpdateResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.ExcludedUsersUpdateResult)
  name.vb: Task(Of ExcludedUsersUpdateResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.ExcludedUsersUpdateResult
    name: ExcludedUsersUpdateResult
    nameWithType: ExcludedUsersUpdateResult
    fullName: Dropbox.Api.Team.ExcludedUsersUpdateResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.ExcludedUsersUpdateResult
    name: ExcludedUsersUpdateResult
    nameWithType: ExcludedUsersUpdateResult
    fullName: Dropbox.Api.Team.ExcludedUsersUpdateResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersAdd*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersAdd
  name: BeginMemberSpaceLimitsExcludedUsersAdd
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersAdd
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersAdd
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersAdd*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersAdd
  name: EndMemberSpaceLimitsExcludedUsersAdd
  nameWithType: TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersAdd
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersAdd
- uid: Dropbox.Api.Team.ExcludedUsersUpdateResult
  commentId: T:Dropbox.Api.Team.ExcludedUsersUpdateResult
  parent: Dropbox.Api.Team
  name: ExcludedUsersUpdateResult
  nameWithType: ExcludedUsersUpdateResult
  fullName: Dropbox.Api.Team.ExcludedUsersUpdateResult
- uid: Dropbox.Api.Team.ExcludedUsersListError
  commentId: T:Dropbox.Api.Team.ExcludedUsersListError
  parent: Dropbox.Api.Team
  name: ExcludedUsersListError
  nameWithType: ExcludedUsersListError
  fullName: Dropbox.Api.Team.ExcludedUsersListError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListAsync
  name: MemberSpaceLimitsExcludedUsersListAsync
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListAsync
- uid: Dropbox.Api.Team.ExcludedUsersListArg
  commentId: T:Dropbox.Api.Team.ExcludedUsersListArg
  parent: Dropbox.Api.Team
  name: ExcludedUsersListArg
  nameWithType: ExcludedUsersListArg
  fullName: Dropbox.Api.Team.ExcludedUsersListArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.ExcludedUsersListResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.ExcludedUsersListResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ExcludedUsersListResult>
  nameWithType: Task<ExcludedUsersListResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.ExcludedUsersListResult>
  nameWithType.vb: Task(Of ExcludedUsersListResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.ExcludedUsersListResult)
  name.vb: Task(Of ExcludedUsersListResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.ExcludedUsersListResult
    name: ExcludedUsersListResult
    nameWithType: ExcludedUsersListResult
    fullName: Dropbox.Api.Team.ExcludedUsersListResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.ExcludedUsersListResult
    name: ExcludedUsersListResult
    nameWithType: ExcludedUsersListResult
    fullName: Dropbox.Api.Team.ExcludedUsersListResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersList*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersList
  name: BeginMemberSpaceLimitsExcludedUsersList
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersList
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersList
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersList*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersList
  name: EndMemberSpaceLimitsExcludedUsersList
  nameWithType: TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersList
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersList
- uid: Dropbox.Api.Team.ExcludedUsersListResult
  commentId: T:Dropbox.Api.Team.ExcludedUsersListResult
  parent: Dropbox.Api.Team
  name: ExcludedUsersListResult
  nameWithType: ExcludedUsersListResult
  fullName: Dropbox.Api.Team.ExcludedUsersListResult
- uid: Dropbox.Api.Team.ExcludedUsersListContinueError
  commentId: T:Dropbox.Api.Team.ExcludedUsersListContinueError
  parent: Dropbox.Api.Team
  name: ExcludedUsersListContinueError
  nameWithType: ExcludedUsersListContinueError
  fullName: Dropbox.Api.Team.ExcludedUsersListContinueError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListContinueAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListContinueAsync
  name: MemberSpaceLimitsExcludedUsersListContinueAsync
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListContinueAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersListContinueAsync
- uid: Dropbox.Api.Team.ExcludedUsersListContinueArg
  commentId: T:Dropbox.Api.Team.ExcludedUsersListContinueArg
  parent: Dropbox.Api.Team
  name: ExcludedUsersListContinueArg
  nameWithType: ExcludedUsersListContinueArg
  fullName: Dropbox.Api.Team.ExcludedUsersListContinueArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersListContinue*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersListContinue
  name: BeginMemberSpaceLimitsExcludedUsersListContinue
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersListContinue
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersListContinue
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersListContinue*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersListContinue
  name: EndMemberSpaceLimitsExcludedUsersListContinue
  nameWithType: TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersListContinue
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersListContinue
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersRemoveAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersRemoveAsync
  name: MemberSpaceLimitsExcludedUsersRemoveAsync
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsExcludedUsersRemoveAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsExcludedUsersRemoveAsync
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersRemove*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersRemove
  name: BeginMemberSpaceLimitsExcludedUsersRemove
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersRemove
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsExcludedUsersRemove
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersRemove*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersRemove
  name: EndMemberSpaceLimitsExcludedUsersRemove
  nameWithType: TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersRemove
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsExcludedUsersRemove
- uid: Dropbox.Api.Team.CustomQuotaError
  commentId: T:Dropbox.Api.Team.CustomQuotaError
  parent: Dropbox.Api.Team
  name: CustomQuotaError
  nameWithType: CustomQuotaError
  fullName: Dropbox.Api.Team.CustomQuotaError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsGetCustomQuotaAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsGetCustomQuotaAsync
  name: MemberSpaceLimitsGetCustomQuotaAsync
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsGetCustomQuotaAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsGetCustomQuotaAsync
- uid: Dropbox.Api.Team.CustomQuotaUsersArg
  commentId: T:Dropbox.Api.Team.CustomQuotaUsersArg
  parent: Dropbox.Api.Team
  name: CustomQuotaUsersArg
  nameWithType: CustomQuotaUsersArg
  fullName: Dropbox.Api.Team.CustomQuotaUsersArg
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.CustomQuotaResult}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.CustomQuotaResult}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<CustomQuotaResult>>
  nameWithType: Task<List<CustomQuotaResult>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Dropbox.Api.Team.CustomQuotaResult>>
  nameWithType.vb: Task(Of List(Of CustomQuotaResult))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Dropbox.Api.Team.CustomQuotaResult))
  name.vb: Task(Of List(Of CustomQuotaResult))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.CustomQuotaResult
    name: CustomQuotaResult
    nameWithType: CustomQuotaResult
    fullName: Dropbox.Api.Team.CustomQuotaResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.CustomQuotaResult
    name: CustomQuotaResult
    nameWithType: CustomQuotaResult
    fullName: Dropbox.Api.Team.CustomQuotaResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsGetCustomQuota*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsGetCustomQuota
  name: BeginMemberSpaceLimitsGetCustomQuota
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsGetCustomQuota
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsGetCustomQuota
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsGetCustomQuota*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsGetCustomQuota
  name: EndMemberSpaceLimitsGetCustomQuota
  nameWithType: TeamTeamRoutes.EndMemberSpaceLimitsGetCustomQuota
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsGetCustomQuota
- uid: System.Collections.Generic.List{Dropbox.Api.Team.CustomQuotaResult}
  commentId: T:System.Collections.Generic.List{Dropbox.Api.Team.CustomQuotaResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<CustomQuotaResult>
  nameWithType: List<CustomQuotaResult>
  fullName: System.Collections.Generic.List<Dropbox.Api.Team.CustomQuotaResult>
  nameWithType.vb: List(Of CustomQuotaResult)
  fullName.vb: System.Collections.Generic.List(Of Dropbox.Api.Team.CustomQuotaResult)
  name.vb: List(Of CustomQuotaResult)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.CustomQuotaResult
    name: CustomQuotaResult
    nameWithType: CustomQuotaResult
    fullName: Dropbox.Api.Team.CustomQuotaResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.CustomQuotaResult
    name: CustomQuotaResult
    nameWithType: CustomQuotaResult
    fullName: Dropbox.Api.Team.CustomQuotaResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsRemoveCustomQuotaAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsRemoveCustomQuotaAsync
  name: MemberSpaceLimitsRemoveCustomQuotaAsync
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsRemoveCustomQuotaAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsRemoveCustomQuotaAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.RemoveCustomQuotaResult}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.RemoveCustomQuotaResult}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<RemoveCustomQuotaResult>>
  nameWithType: Task<List<RemoveCustomQuotaResult>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Dropbox.Api.Team.RemoveCustomQuotaResult>>
  nameWithType.vb: Task(Of List(Of RemoveCustomQuotaResult))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Dropbox.Api.Team.RemoveCustomQuotaResult))
  name.vb: Task(Of List(Of RemoveCustomQuotaResult))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.RemoveCustomQuotaResult
    name: RemoveCustomQuotaResult
    nameWithType: RemoveCustomQuotaResult
    fullName: Dropbox.Api.Team.RemoveCustomQuotaResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.RemoveCustomQuotaResult
    name: RemoveCustomQuotaResult
    nameWithType: RemoveCustomQuotaResult
    fullName: Dropbox.Api.Team.RemoveCustomQuotaResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsRemoveCustomQuota*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsRemoveCustomQuota
  name: BeginMemberSpaceLimitsRemoveCustomQuota
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsRemoveCustomQuota
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsRemoveCustomQuota
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsRemoveCustomQuota*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsRemoveCustomQuota
  name: EndMemberSpaceLimitsRemoveCustomQuota
  nameWithType: TeamTeamRoutes.EndMemberSpaceLimitsRemoveCustomQuota
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsRemoveCustomQuota
- uid: System.Collections.Generic.List{Dropbox.Api.Team.RemoveCustomQuotaResult}
  commentId: T:System.Collections.Generic.List{Dropbox.Api.Team.RemoveCustomQuotaResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<RemoveCustomQuotaResult>
  nameWithType: List<RemoveCustomQuotaResult>
  fullName: System.Collections.Generic.List<Dropbox.Api.Team.RemoveCustomQuotaResult>
  nameWithType.vb: List(Of RemoveCustomQuotaResult)
  fullName.vb: System.Collections.Generic.List(Of Dropbox.Api.Team.RemoveCustomQuotaResult)
  name.vb: List(Of RemoveCustomQuotaResult)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.RemoveCustomQuotaResult
    name: RemoveCustomQuotaResult
    nameWithType: RemoveCustomQuotaResult
    fullName: Dropbox.Api.Team.RemoveCustomQuotaResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.RemoveCustomQuotaResult
    name: RemoveCustomQuotaResult
    nameWithType: RemoveCustomQuotaResult
    fullName: Dropbox.Api.Team.RemoveCustomQuotaResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.SetCustomQuotaError
  commentId: T:Dropbox.Api.Team.SetCustomQuotaError
  parent: Dropbox.Api.Team
  name: SetCustomQuotaError
  nameWithType: SetCustomQuotaError
  fullName: Dropbox.Api.Team.SetCustomQuotaError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsSetCustomQuotaAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsSetCustomQuotaAsync
  name: MemberSpaceLimitsSetCustomQuotaAsync
  nameWithType: TeamTeamRoutes.MemberSpaceLimitsSetCustomQuotaAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MemberSpaceLimitsSetCustomQuotaAsync
- uid: Dropbox.Api.Team.SetCustomQuotaArg
  commentId: T:Dropbox.Api.Team.SetCustomQuotaArg
  parent: Dropbox.Api.Team
  name: SetCustomQuotaArg
  nameWithType: SetCustomQuotaArg
  fullName: Dropbox.Api.Team.SetCustomQuotaArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsSetCustomQuota*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsSetCustomQuota
  name: BeginMemberSpaceLimitsSetCustomQuota
  nameWithType: TeamTeamRoutes.BeginMemberSpaceLimitsSetCustomQuota
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMemberSpaceLimitsSetCustomQuota
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserCustomQuotaArg}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserCustomQuotaArg}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<UserCustomQuotaArg>
  nameWithType: IEnumerable<UserCustomQuotaArg>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserCustomQuotaArg>
  nameWithType.vb: IEnumerable(Of UserCustomQuotaArg)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserCustomQuotaArg)
  name.vb: IEnumerable(Of UserCustomQuotaArg)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.UserCustomQuotaArg
    name: UserCustomQuotaArg
    nameWithType: UserCustomQuotaArg
    fullName: Dropbox.Api.Team.UserCustomQuotaArg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.UserCustomQuotaArg
    name: UserCustomQuotaArg
    nameWithType: UserCustomQuotaArg
    fullName: Dropbox.Api.Team.UserCustomQuotaArg
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsSetCustomQuota*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsSetCustomQuota
  name: EndMemberSpaceLimitsSetCustomQuota
  nameWithType: TeamTeamRoutes.EndMemberSpaceLimitsSetCustomQuota
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMemberSpaceLimitsSetCustomQuota
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddV2Async*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddV2Async
  name: MembersAddV2Async
  nameWithType: TeamTeamRoutes.MembersAddV2Async
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddV2Async
- uid: Dropbox.Api.Team.MembersAddV2Arg
  commentId: T:Dropbox.Api.Team.MembersAddV2Arg
  parent: Dropbox.Api.Team
  name: MembersAddV2Arg
  nameWithType: MembersAddV2Arg
  fullName: Dropbox.Api.Team.MembersAddV2Arg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersAddLaunchV2Result}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.MembersAddLaunchV2Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<MembersAddLaunchV2Result>
  nameWithType: Task<MembersAddLaunchV2Result>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.MembersAddLaunchV2Result>
  nameWithType.vb: Task(Of MembersAddLaunchV2Result)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.MembersAddLaunchV2Result)
  name.vb: Task(Of MembersAddLaunchV2Result)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.MembersAddLaunchV2Result
    name: MembersAddLaunchV2Result
    nameWithType: MembersAddLaunchV2Result
    fullName: Dropbox.Api.Team.MembersAddLaunchV2Result
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.MembersAddLaunchV2Result
    name: MembersAddLaunchV2Result
    nameWithType: MembersAddLaunchV2Result
    fullName: Dropbox.Api.Team.MembersAddLaunchV2Result
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddV2*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddV2
  name: BeginMembersAddV2
  nameWithType: TeamTeamRoutes.BeginMembersAddV2
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddV2
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddV2Arg}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddV2Arg}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<MemberAddV2Arg>
  nameWithType: IEnumerable<MemberAddV2Arg>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Team.MemberAddV2Arg>
  nameWithType.vb: IEnumerable(Of MemberAddV2Arg)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.MemberAddV2Arg)
  name.vb: IEnumerable(Of MemberAddV2Arg)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.MemberAddV2Arg
    name: MemberAddV2Arg
    nameWithType: MemberAddV2Arg
    fullName: Dropbox.Api.Team.MemberAddV2Arg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.MemberAddV2Arg
    name: MemberAddV2Arg
    nameWithType: MemberAddV2Arg
    fullName: Dropbox.Api.Team.MemberAddV2Arg
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddV2*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddV2
  name: EndMembersAddV2
  nameWithType: TeamTeamRoutes.EndMembersAddV2
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddV2
- uid: Dropbox.Api.Team.MembersAddLaunchV2Result
  commentId: T:Dropbox.Api.Team.MembersAddLaunchV2Result
  parent: Dropbox.Api.Team
  name: MembersAddLaunchV2Result
  nameWithType: MembersAddLaunchV2Result
  fullName: Dropbox.Api.Team.MembersAddLaunchV2Result
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddAsync
  name: MembersAddAsync
  nameWithType: TeamTeamRoutes.MembersAddAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddAsync
- uid: Dropbox.Api.Team.MembersAddArg
  commentId: T:Dropbox.Api.Team.MembersAddArg
  parent: Dropbox.Api.Team
  name: MembersAddArg
  nameWithType: MembersAddArg
  fullName: Dropbox.Api.Team.MembersAddArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersAddLaunch}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.MembersAddLaunch}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<MembersAddLaunch>
  nameWithType: Task<MembersAddLaunch>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.MembersAddLaunch>
  nameWithType.vb: Task(Of MembersAddLaunch)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.MembersAddLaunch)
  name.vb: Task(Of MembersAddLaunch)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.MembersAddLaunch
    name: MembersAddLaunch
    nameWithType: MembersAddLaunch
    fullName: Dropbox.Api.Team.MembersAddLaunch
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.MembersAddLaunch
    name: MembersAddLaunch
    nameWithType: MembersAddLaunch
    fullName: Dropbox.Api.Team.MembersAddLaunch
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAdd*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAdd
  name: BeginMembersAdd
  nameWithType: TeamTeamRoutes.BeginMembersAdd
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAdd
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddArg}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.Team.MemberAddArg}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<MemberAddArg>
  nameWithType: IEnumerable<MemberAddArg>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Team.MemberAddArg>
  nameWithType.vb: IEnumerable(Of MemberAddArg)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.MemberAddArg)
  name.vb: IEnumerable(Of MemberAddArg)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.MemberAddArg
    name: MemberAddArg
    nameWithType: MemberAddArg
    fullName: Dropbox.Api.Team.MemberAddArg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.MemberAddArg
    name: MemberAddArg
    nameWithType: MemberAddArg
    fullName: Dropbox.Api.Team.MemberAddArg
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAdd*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAdd
  name: EndMembersAdd
  nameWithType: TeamTeamRoutes.EndMembersAdd
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAdd
- uid: Dropbox.Api.Team.MembersAddLaunch
  commentId: T:Dropbox.Api.Team.MembersAddLaunch
  parent: Dropbox.Api.Team
  name: MembersAddLaunch
  nameWithType: MembersAddLaunch
  fullName: Dropbox.Api.Team.MembersAddLaunch
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddV2Async(Dropbox.Api.Team.MembersAddV2Arg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddV2Async(Dropbox.Api.Team.MembersAddV2Arg)
  isExternal: true
- uid: Dropbox.Api.Async.PollError
  commentId: T:Dropbox.Api.Async.PollError
  parent: Dropbox.Api.Async
  name: PollError
  nameWithType: PollError
  fullName: Dropbox.Api.Async.PollError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetV2Async*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetV2Async
  name: MembersAddJobStatusGetV2Async
  nameWithType: TeamTeamRoutes.MembersAddJobStatusGetV2Async
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetV2Async
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersAddJobStatusV2Result}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.MembersAddJobStatusV2Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<MembersAddJobStatusV2Result>
  nameWithType: Task<MembersAddJobStatusV2Result>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.MembersAddJobStatusV2Result>
  nameWithType.vb: Task(Of MembersAddJobStatusV2Result)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.MembersAddJobStatusV2Result)
  name.vb: Task(Of MembersAddJobStatusV2Result)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.MembersAddJobStatusV2Result
    name: MembersAddJobStatusV2Result
    nameWithType: MembersAddJobStatusV2Result
    fullName: Dropbox.Api.Team.MembersAddJobStatusV2Result
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.MembersAddJobStatusV2Result
    name: MembersAddJobStatusV2Result
    nameWithType: MembersAddJobStatusV2Result
    fullName: Dropbox.Api.Team.MembersAddJobStatusV2Result
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGetV2*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGetV2
  name: BeginMembersAddJobStatusGetV2
  nameWithType: TeamTeamRoutes.BeginMembersAddJobStatusGetV2
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGetV2
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddJobStatusGetV2*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddJobStatusGetV2
  name: EndMembersAddJobStatusGetV2
  nameWithType: TeamTeamRoutes.EndMembersAddJobStatusGetV2
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddJobStatusGetV2
- uid: Dropbox.Api.Team.MembersAddJobStatusV2Result
  commentId: T:Dropbox.Api.Team.MembersAddJobStatusV2Result
  parent: Dropbox.Api.Team
  name: MembersAddJobStatusV2Result
  nameWithType: MembersAddJobStatusV2Result
  fullName: Dropbox.Api.Team.MembersAddJobStatusV2Result
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddAsync(Dropbox.Api.Team.MembersAddArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddAsync(Dropbox.Api.Team.MembersAddArg)
  isExternal: true
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetAsync
  name: MembersAddJobStatusGetAsync
  nameWithType: TeamTeamRoutes.MembersAddJobStatusGetAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersAddJobStatusGetAsync
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersAddJobStatus}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.MembersAddJobStatus}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<MembersAddJobStatus>
  nameWithType: Task<MembersAddJobStatus>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.MembersAddJobStatus>
  nameWithType.vb: Task(Of MembersAddJobStatus)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.MembersAddJobStatus)
  name.vb: Task(Of MembersAddJobStatus)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.MembersAddJobStatus
    name: MembersAddJobStatus
    nameWithType: MembersAddJobStatus
    fullName: Dropbox.Api.Team.MembersAddJobStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.MembersAddJobStatus
    name: MembersAddJobStatus
    nameWithType: MembersAddJobStatus
    fullName: Dropbox.Api.Team.MembersAddJobStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGet*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGet
  name: BeginMembersAddJobStatusGet
  nameWithType: TeamTeamRoutes.BeginMembersAddJobStatusGet
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersAddJobStatusGet
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddJobStatusGet*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddJobStatusGet
  name: EndMembersAddJobStatusGet
  nameWithType: TeamTeamRoutes.EndMembersAddJobStatusGet
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersAddJobStatusGet
- uid: Dropbox.Api.Team.MembersAddJobStatus
  commentId: T:Dropbox.Api.Team.MembersAddJobStatus
  parent: Dropbox.Api.Team
  name: MembersAddJobStatus
  nameWithType: MembersAddJobStatus
  fullName: Dropbox.Api.Team.MembersAddJobStatus
- uid: Dropbox.Api.Team.MembersDeleteProfilePhotoError
  commentId: T:Dropbox.Api.Team.MembersDeleteProfilePhotoError
  parent: Dropbox.Api.Team
  name: MembersDeleteProfilePhotoError
  nameWithType: MembersDeleteProfilePhotoError
  fullName: Dropbox.Api.Team.MembersDeleteProfilePhotoError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoV2Async*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoV2Async
  name: MembersDeleteProfilePhotoV2Async
  nameWithType: TeamTeamRoutes.MembersDeleteProfilePhotoV2Async
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoV2Async
- uid: Dropbox.Api.Team.MembersDeleteProfilePhotoArg
  commentId: T:Dropbox.Api.Team.MembersDeleteProfilePhotoArg
  parent: Dropbox.Api.Team
  name: MembersDeleteProfilePhotoArg
  nameWithType: MembersDeleteProfilePhotoArg
  fullName: Dropbox.Api.Team.MembersDeleteProfilePhotoArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamMemberInfoV2Result}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.TeamMemberInfoV2Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TeamMemberInfoV2Result>
  nameWithType: Task<TeamMemberInfoV2Result>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.TeamMemberInfoV2Result>
  nameWithType.vb: Task(Of TeamMemberInfoV2Result)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.TeamMemberInfoV2Result)
  name.vb: Task(Of TeamMemberInfoV2Result)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.TeamMemberInfoV2Result
    name: TeamMemberInfoV2Result
    nameWithType: TeamMemberInfoV2Result
    fullName: Dropbox.Api.Team.TeamMemberInfoV2Result
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.TeamMemberInfoV2Result
    name: TeamMemberInfoV2Result
    nameWithType: TeamMemberInfoV2Result
    fullName: Dropbox.Api.Team.TeamMemberInfoV2Result
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhotoV2*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhotoV2
  name: BeginMembersDeleteProfilePhotoV2
  nameWithType: TeamTeamRoutes.BeginMembersDeleteProfilePhotoV2
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhotoV2
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersDeleteProfilePhotoV2*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersDeleteProfilePhotoV2
  name: EndMembersDeleteProfilePhotoV2
  nameWithType: TeamTeamRoutes.EndMembersDeleteProfilePhotoV2
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersDeleteProfilePhotoV2
- uid: Dropbox.Api.Team.TeamMemberInfoV2Result
  commentId: T:Dropbox.Api.Team.TeamMemberInfoV2Result
  parent: Dropbox.Api.Team
  name: TeamMemberInfoV2Result
  nameWithType: TeamMemberInfoV2Result
  fullName: Dropbox.Api.Team.TeamMemberInfoV2Result
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoAsync
  name: MembersDeleteProfilePhotoAsync
  nameWithType: TeamTeamRoutes.MembersDeleteProfilePhotoAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersDeleteProfilePhotoAsync
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamMemberInfo}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.TeamMemberInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TeamMemberInfo>
  nameWithType: Task<TeamMemberInfo>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.TeamMemberInfo>
  nameWithType.vb: Task(Of TeamMemberInfo)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.TeamMemberInfo)
  name.vb: Task(Of TeamMemberInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.TeamMemberInfo
    name: TeamMemberInfo
    nameWithType: TeamMemberInfo
    fullName: Dropbox.Api.Team.TeamMemberInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.TeamMemberInfo
    name: TeamMemberInfo
    nameWithType: TeamMemberInfo
    fullName: Dropbox.Api.Team.TeamMemberInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhoto*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhoto
  name: BeginMembersDeleteProfilePhoto
  nameWithType: TeamTeamRoutes.BeginMembersDeleteProfilePhoto
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersDeleteProfilePhoto
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersDeleteProfilePhoto*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersDeleteProfilePhoto
  name: EndMembersDeleteProfilePhoto
  nameWithType: TeamTeamRoutes.EndMembersDeleteProfilePhoto
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersDeleteProfilePhoto
- uid: Dropbox.Api.Team.TeamMemberInfo
  commentId: T:Dropbox.Api.Team.TeamMemberInfo
  parent: Dropbox.Api.Team
  name: TeamMemberInfo
  nameWithType: TeamMemberInfo
  fullName: Dropbox.Api.Team.TeamMemberInfo
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsV2Async(Dropbox.Api.Team.MembersSetPermissions2Arg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsV2Async(Dropbox.Api.Team.MembersSetPermissions2Arg)
  isExternal: true
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetAvailableTeamMemberRolesAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetAvailableTeamMemberRolesAsync
  name: MembersGetAvailableTeamMemberRolesAsync
  nameWithType: TeamTeamRoutes.MembersGetAvailableTeamMemberRolesAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetAvailableTeamMemberRolesAsync
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<MembersGetAvailableTeamMemberRolesResult>
  nameWithType: Task<MembersGetAvailableTeamMemberRolesResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult>
  nameWithType.vb: Task(Of MembersGetAvailableTeamMemberRolesResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult)
  name.vb: Task(Of MembersGetAvailableTeamMemberRolesResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult
    name: MembersGetAvailableTeamMemberRolesResult
    nameWithType: MembersGetAvailableTeamMemberRolesResult
    fullName: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult
    name: MembersGetAvailableTeamMemberRolesResult
    nameWithType: MembersGetAvailableTeamMemberRolesResult
    fullName: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetAvailableTeamMemberRoles*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetAvailableTeamMemberRoles
  name: BeginMembersGetAvailableTeamMemberRoles
  nameWithType: TeamTeamRoutes.BeginMembersGetAvailableTeamMemberRoles
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetAvailableTeamMemberRoles
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetAvailableTeamMemberRoles*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetAvailableTeamMemberRoles
  name: EndMembersGetAvailableTeamMemberRoles
  nameWithType: TeamTeamRoutes.EndMembersGetAvailableTeamMemberRoles
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetAvailableTeamMemberRoles
- uid: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult
  commentId: T:Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult
  parent: Dropbox.Api.Team
  name: MembersGetAvailableTeamMemberRolesResult
  nameWithType: MembersGetAvailableTeamMemberRolesResult
  fullName: Dropbox.Api.Team.MembersGetAvailableTeamMemberRolesResult
- uid: Dropbox.Api.Team.MembersGetInfoItem.IdNotFound
  commentId: T:Dropbox.Api.Team.MembersGetInfoItem.IdNotFound
  parent: Dropbox.Api.Team
  name: MembersGetInfoItem.IdNotFound
  nameWithType: MembersGetInfoItem.IdNotFound
  fullName: Dropbox.Api.Team.MembersGetInfoItem.IdNotFound
- uid: Dropbox.Api.Team.MembersGetInfoError
  commentId: T:Dropbox.Api.Team.MembersGetInfoError
  parent: Dropbox.Api.Team
  name: MembersGetInfoError
  nameWithType: MembersGetInfoError
  fullName: Dropbox.Api.Team.MembersGetInfoError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoV2Async*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoV2Async
  name: MembersGetInfoV2Async
  nameWithType: TeamTeamRoutes.MembersGetInfoV2Async
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoV2Async
- uid: Dropbox.Api.Team.MembersGetInfoV2Arg
  commentId: T:Dropbox.Api.Team.MembersGetInfoV2Arg
  parent: Dropbox.Api.Team
  name: MembersGetInfoV2Arg
  nameWithType: MembersGetInfoV2Arg
  fullName: Dropbox.Api.Team.MembersGetInfoV2Arg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersGetInfoV2Result}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.MembersGetInfoV2Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<MembersGetInfoV2Result>
  nameWithType: Task<MembersGetInfoV2Result>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.MembersGetInfoV2Result>
  nameWithType.vb: Task(Of MembersGetInfoV2Result)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.MembersGetInfoV2Result)
  name.vb: Task(Of MembersGetInfoV2Result)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.MembersGetInfoV2Result
    name: MembersGetInfoV2Result
    nameWithType: MembersGetInfoV2Result
    fullName: Dropbox.Api.Team.MembersGetInfoV2Result
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.MembersGetInfoV2Result
    name: MembersGetInfoV2Result
    nameWithType: MembersGetInfoV2Result
    fullName: Dropbox.Api.Team.MembersGetInfoV2Result
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfoV2*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfoV2
  name: BeginMembersGetInfoV2
  nameWithType: TeamTeamRoutes.BeginMembersGetInfoV2
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfoV2
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetInfoV2*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetInfoV2
  name: EndMembersGetInfoV2
  nameWithType: TeamTeamRoutes.EndMembersGetInfoV2
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetInfoV2
- uid: Dropbox.Api.Team.MembersGetInfoV2Result
  commentId: T:Dropbox.Api.Team.MembersGetInfoV2Result
  parent: Dropbox.Api.Team
  name: MembersGetInfoV2Result
  nameWithType: MembersGetInfoV2Result
  fullName: Dropbox.Api.Team.MembersGetInfoV2Result
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoAsync
  name: MembersGetInfoAsync
  nameWithType: TeamTeamRoutes.MembersGetInfoAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoAsync
- uid: Dropbox.Api.Team.MembersGetInfoArgs
  commentId: T:Dropbox.Api.Team.MembersGetInfoArgs
  parent: Dropbox.Api.Team
  name: MembersGetInfoArgs
  nameWithType: MembersGetInfoArgs
  fullName: Dropbox.Api.Team.MembersGetInfoArgs
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.MembersGetInfoItem}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.MembersGetInfoItem}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<MembersGetInfoItem>>
  nameWithType: Task<List<MembersGetInfoItem>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Dropbox.Api.Team.MembersGetInfoItem>>
  nameWithType.vb: Task(Of List(Of MembersGetInfoItem))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Dropbox.Api.Team.MembersGetInfoItem))
  name.vb: Task(Of List(Of MembersGetInfoItem))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.MembersGetInfoItem
    name: MembersGetInfoItem
    nameWithType: MembersGetInfoItem
    fullName: Dropbox.Api.Team.MembersGetInfoItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.MembersGetInfoItem
    name: MembersGetInfoItem
    nameWithType: MembersGetInfoItem
    fullName: Dropbox.Api.Team.MembersGetInfoItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfo*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfo
  name: BeginMembersGetInfo
  nameWithType: TeamTeamRoutes.BeginMembersGetInfo
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersGetInfo
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetInfo*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetInfo
  name: EndMembersGetInfo
  nameWithType: TeamTeamRoutes.EndMembersGetInfo
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersGetInfo
- uid: System.Collections.Generic.List{Dropbox.Api.Team.MembersGetInfoItem}
  commentId: T:System.Collections.Generic.List{Dropbox.Api.Team.MembersGetInfoItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MembersGetInfoItem>
  nameWithType: List<MembersGetInfoItem>
  fullName: System.Collections.Generic.List<Dropbox.Api.Team.MembersGetInfoItem>
  nameWithType.vb: List(Of MembersGetInfoItem)
  fullName.vb: System.Collections.Generic.List(Of Dropbox.Api.Team.MembersGetInfoItem)
  name.vb: List(Of MembersGetInfoItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.MembersGetInfoItem
    name: MembersGetInfoItem
    nameWithType: MembersGetInfoItem
    fullName: Dropbox.Api.Team.MembersGetInfoItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.MembersGetInfoItem
    name: MembersGetInfoItem
    nameWithType: MembersGetInfoItem
    fullName: Dropbox.Api.Team.MembersGetInfoItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.MembersListError
  commentId: T:Dropbox.Api.Team.MembersListError
  parent: Dropbox.Api.Team
  name: MembersListError
  nameWithType: MembersListError
  fullName: Dropbox.Api.Team.MembersListError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListV2Async*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListV2Async
  name: MembersListV2Async
  nameWithType: TeamTeamRoutes.MembersListV2Async
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListV2Async
- uid: Dropbox.Api.Team.MembersListArg
  commentId: T:Dropbox.Api.Team.MembersListArg
  parent: Dropbox.Api.Team
  name: MembersListArg
  nameWithType: MembersListArg
  fullName: Dropbox.Api.Team.MembersListArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersListV2Result}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.MembersListV2Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<MembersListV2Result>
  nameWithType: Task<MembersListV2Result>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.MembersListV2Result>
  nameWithType.vb: Task(Of MembersListV2Result)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.MembersListV2Result)
  name.vb: Task(Of MembersListV2Result)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.MembersListV2Result
    name: MembersListV2Result
    nameWithType: MembersListV2Result
    fullName: Dropbox.Api.Team.MembersListV2Result
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.MembersListV2Result
    name: MembersListV2Result
    nameWithType: MembersListV2Result
    fullName: Dropbox.Api.Team.MembersListV2Result
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListV2*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListV2
  name: BeginMembersListV2
  nameWithType: TeamTeamRoutes.BeginMembersListV2
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListV2
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListV2*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListV2
  name: EndMembersListV2
  nameWithType: TeamTeamRoutes.EndMembersListV2
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListV2
- uid: Dropbox.Api.Team.MembersListV2Result
  commentId: T:Dropbox.Api.Team.MembersListV2Result
  parent: Dropbox.Api.Team
  name: MembersListV2Result
  nameWithType: MembersListV2Result
  fullName: Dropbox.Api.Team.MembersListV2Result
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListAsync
  name: MembersListAsync
  nameWithType: TeamTeamRoutes.MembersListAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListAsync
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersListResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.MembersListResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<MembersListResult>
  nameWithType: Task<MembersListResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.MembersListResult>
  nameWithType.vb: Task(Of MembersListResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.MembersListResult)
  name.vb: Task(Of MembersListResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.MembersListResult
    name: MembersListResult
    nameWithType: MembersListResult
    fullName: Dropbox.Api.Team.MembersListResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.MembersListResult
    name: MembersListResult
    nameWithType: MembersListResult
    fullName: Dropbox.Api.Team.MembersListResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersList*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersList
  name: BeginMembersList
  nameWithType: TeamTeamRoutes.BeginMembersList
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersList
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersList*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersList
  name: EndMembersList
  nameWithType: TeamTeamRoutes.EndMembersList
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersList
- uid: Dropbox.Api.Team.MembersListResult
  commentId: T:Dropbox.Api.Team.MembersListResult
  parent: Dropbox.Api.Team
  name: MembersListResult
  nameWithType: MembersListResult
  fullName: Dropbox.Api.Team.MembersListResult
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListV2Async(Dropbox.Api.Team.MembersListArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListV2Async(Dropbox.Api.Team.MembersListArg)
  isExternal: true
- uid: Dropbox.Api.Team.MembersListContinueError
  commentId: T:Dropbox.Api.Team.MembersListContinueError
  parent: Dropbox.Api.Team
  name: MembersListContinueError
  nameWithType: MembersListContinueError
  fullName: Dropbox.Api.Team.MembersListContinueError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueV2Async*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueV2Async
  name: MembersListContinueV2Async
  nameWithType: TeamTeamRoutes.MembersListContinueV2Async
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueV2Async
- uid: Dropbox.Api.Team.MembersListContinueArg
  commentId: T:Dropbox.Api.Team.MembersListContinueArg
  parent: Dropbox.Api.Team
  name: MembersListContinueArg
  nameWithType: MembersListContinueArg
  fullName: Dropbox.Api.Team.MembersListContinueArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinueV2*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinueV2
  name: BeginMembersListContinueV2
  nameWithType: TeamTeamRoutes.BeginMembersListContinueV2
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinueV2
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListContinueV2*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListContinueV2
  name: EndMembersListContinueV2
  nameWithType: TeamTeamRoutes.EndMembersListContinueV2
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListContinueV2
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListAsync(Dropbox.Api.Team.MembersListArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListAsync(Dropbox.Api.Team.MembersListArg)
  isExternal: true
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueAsync
  name: MembersListContinueAsync
  nameWithType: TeamTeamRoutes.MembersListContinueAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersListContinueAsync
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinue*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinue
  name: BeginMembersListContinue
  nameWithType: TeamTeamRoutes.BeginMembersListContinue
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersListContinue
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListContinue*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListContinue
  name: EndMembersListContinue
  nameWithType: TeamTeamRoutes.EndMembersListContinue
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersListContinue
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesJobStatusCheckAsync(Dropbox.Api.Async.PollArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesJobStatusCheckAsync(Dropbox.Api.Async.PollArg)
  isExternal: true
- uid: Dropbox.Api.Team.MembersTransferFormerMembersFilesError
  commentId: T:Dropbox.Api.Team.MembersTransferFormerMembersFilesError
  parent: Dropbox.Api.Team
  name: MembersTransferFormerMembersFilesError
  nameWithType: MembersTransferFormerMembersFilesError
  fullName: Dropbox.Api.Team.MembersTransferFormerMembersFilesError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesAsync
  name: MembersMoveFormerMemberFilesAsync
  nameWithType: TeamTeamRoutes.MembersMoveFormerMemberFilesAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesAsync
- uid: Dropbox.Api.Team.MembersDataTransferArg
  commentId: T:Dropbox.Api.Team.MembersDataTransferArg
  parent: Dropbox.Api.Team
  name: MembersDataTransferArg
  nameWithType: MembersDataTransferArg
  fullName: Dropbox.Api.Team.MembersDataTransferArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFiles*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFiles
  name: BeginMembersMoveFormerMemberFiles
  nameWithType: TeamTeamRoutes.BeginMembersMoveFormerMemberFiles
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFiles
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersMoveFormerMemberFiles*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersMoveFormerMemberFiles
  name: EndMembersMoveFormerMemberFiles
  nameWithType: TeamTeamRoutes.EndMembersMoveFormerMemberFiles
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersMoveFormerMemberFiles
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesAsync(Dropbox.Api.Team.MembersDataTransferArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesAsync(Dropbox.Api.Team.MembersDataTransferArg)
  isExternal: true
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesJobStatusCheckAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesJobStatusCheckAsync
  name: MembersMoveFormerMemberFilesJobStatusCheckAsync
  nameWithType: TeamTeamRoutes.MembersMoveFormerMemberFilesJobStatusCheckAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersMoveFormerMemberFilesJobStatusCheckAsync
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFilesJobStatusCheck*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFilesJobStatusCheck
  name: BeginMembersMoveFormerMemberFilesJobStatusCheck
  nameWithType: TeamTeamRoutes.BeginMembersMoveFormerMemberFilesJobStatusCheck
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersMoveFormerMemberFilesJobStatusCheck
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersMoveFormerMemberFilesJobStatusCheck*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersMoveFormerMemberFilesJobStatusCheck
  name: EndMembersMoveFormerMemberFilesJobStatusCheck
  nameWithType: TeamTeamRoutes.EndMembersMoveFormerMemberFilesJobStatusCheck
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersMoveFormerMemberFilesJobStatusCheck
- uid: Dropbox.Api.Team.MembersRecoverError
  commentId: T:Dropbox.Api.Team.MembersRecoverError
  parent: Dropbox.Api.Team
  name: MembersRecoverError
  nameWithType: MembersRecoverError
  fullName: Dropbox.Api.Team.MembersRecoverError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRecoverAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRecoverAsync
  name: MembersRecoverAsync
  nameWithType: TeamTeamRoutes.MembersRecoverAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRecoverAsync
- uid: Dropbox.Api.Team.MembersRecoverArg
  commentId: T:Dropbox.Api.Team.MembersRecoverArg
  parent: Dropbox.Api.Team
  name: MembersRecoverArg
  nameWithType: MembersRecoverArg
  fullName: Dropbox.Api.Team.MembersRecoverArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRecover*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRecover
  name: BeginMembersRecover
  nameWithType: TeamTeamRoutes.BeginMembersRecover
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRecover
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRecover*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRecover
  name: EndMembersRecover
  nameWithType: TeamTeamRoutes.EndMembersRecover
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRecover
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRecoverAsync(Dropbox.Api.Team.MembersRecoverArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRecoverAsync(Dropbox.Api.Team.MembersRecoverArg)
  isExternal: true
- uid: Dropbox.Api.Team.MemberAddResult.UserAlreadyOnTeam
  commentId: T:Dropbox.Api.Team.MemberAddResult.UserAlreadyOnTeam
  parent: Dropbox.Api.Team
  name: MemberAddResult.UserAlreadyOnTeam
  nameWithType: MemberAddResult.UserAlreadyOnTeam
  fullName: Dropbox.Api.Team.MemberAddResult.UserAlreadyOnTeam
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveJobStatusGetAsync(Dropbox.Api.Async.PollArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveJobStatusGetAsync(Dropbox.Api.Async.PollArg)
  isExternal: true
- uid: Dropbox.Api.Team.MembersRemoveError
  commentId: T:Dropbox.Api.Team.MembersRemoveError
  parent: Dropbox.Api.Team
  name: MembersRemoveError
  nameWithType: MembersRemoveError
  fullName: Dropbox.Api.Team.MembersRemoveError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveAsync
  name: MembersRemoveAsync
  nameWithType: TeamTeamRoutes.MembersRemoveAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveAsync
- uid: Dropbox.Api.Team.MembersRemoveArg
  commentId: T:Dropbox.Api.Team.MembersRemoveArg
  parent: Dropbox.Api.Team
  name: MembersRemoveArg
  nameWithType: MembersRemoveArg
  fullName: Dropbox.Api.Team.MembersRemoveArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemove*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemove
  name: BeginMembersRemove
  nameWithType: TeamTeamRoutes.BeginMembersRemove
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemove
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRemove*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRemove
  name: EndMembersRemove
  nameWithType: TeamTeamRoutes.EndMembersRemove
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRemove
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveAsync(Dropbox.Api.Team.MembersRemoveArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveAsync(Dropbox.Api.Team.MembersRemoveArg)
  isExternal: true
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveJobStatusGetAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveJobStatusGetAsync
  name: MembersRemoveJobStatusGetAsync
  nameWithType: TeamTeamRoutes.MembersRemoveJobStatusGetAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersRemoveJobStatusGetAsync
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemoveJobStatusGet*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemoveJobStatusGet
  name: BeginMembersRemoveJobStatusGet
  nameWithType: TeamTeamRoutes.BeginMembersRemoveJobStatusGet
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersRemoveJobStatusGet
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRemoveJobStatusGet*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRemoveJobStatusGet
  name: EndMembersRemoveJobStatusGet
  nameWithType: TeamTeamRoutes.EndMembersRemoveJobStatusGet
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersRemoveJobStatusGet
- uid: Dropbox.Api.Team.AddSecondaryEmailsError
  commentId: T:Dropbox.Api.Team.AddSecondaryEmailsError
  parent: Dropbox.Api.Team
  name: AddSecondaryEmailsError
  nameWithType: AddSecondaryEmailsError
  fullName: Dropbox.Api.Team.AddSecondaryEmailsError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsAddAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsAddAsync
  name: MembersSecondaryEmailsAddAsync
  nameWithType: TeamTeamRoutes.MembersSecondaryEmailsAddAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsAddAsync
- uid: Dropbox.Api.Team.AddSecondaryEmailsArg
  commentId: T:Dropbox.Api.Team.AddSecondaryEmailsArg
  parent: Dropbox.Api.Team
  name: AddSecondaryEmailsArg
  nameWithType: AddSecondaryEmailsArg
  fullName: Dropbox.Api.Team.AddSecondaryEmailsArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.AddSecondaryEmailsResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.AddSecondaryEmailsResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AddSecondaryEmailsResult>
  nameWithType: Task<AddSecondaryEmailsResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.AddSecondaryEmailsResult>
  nameWithType.vb: Task(Of AddSecondaryEmailsResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.AddSecondaryEmailsResult)
  name.vb: Task(Of AddSecondaryEmailsResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.AddSecondaryEmailsResult
    name: AddSecondaryEmailsResult
    nameWithType: AddSecondaryEmailsResult
    fullName: Dropbox.Api.Team.AddSecondaryEmailsResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.AddSecondaryEmailsResult
    name: AddSecondaryEmailsResult
    nameWithType: AddSecondaryEmailsResult
    fullName: Dropbox.Api.Team.AddSecondaryEmailsResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsAdd*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsAdd
  name: BeginMembersSecondaryEmailsAdd
  nameWithType: TeamTeamRoutes.BeginMembersSecondaryEmailsAdd
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsAdd
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.Team.UserSecondaryEmailsArg}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<UserSecondaryEmailsArg>
  nameWithType: IEnumerable<UserSecondaryEmailsArg>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Team.UserSecondaryEmailsArg>
  nameWithType.vb: IEnumerable(Of UserSecondaryEmailsArg)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.UserSecondaryEmailsArg)
  name.vb: IEnumerable(Of UserSecondaryEmailsArg)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.UserSecondaryEmailsArg
    name: UserSecondaryEmailsArg
    nameWithType: UserSecondaryEmailsArg
    fullName: Dropbox.Api.Team.UserSecondaryEmailsArg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.UserSecondaryEmailsArg
    name: UserSecondaryEmailsArg
    nameWithType: UserSecondaryEmailsArg
    fullName: Dropbox.Api.Team.UserSecondaryEmailsArg
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsAdd*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsAdd
  name: EndMembersSecondaryEmailsAdd
  nameWithType: TeamTeamRoutes.EndMembersSecondaryEmailsAdd
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsAdd
- uid: Dropbox.Api.Team.AddSecondaryEmailsResult
  commentId: T:Dropbox.Api.Team.AddSecondaryEmailsResult
  parent: Dropbox.Api.Team
  name: AddSecondaryEmailsResult
  nameWithType: AddSecondaryEmailsResult
  fullName: Dropbox.Api.Team.AddSecondaryEmailsResult
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsDeleteAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsDeleteAsync
  name: MembersSecondaryEmailsDeleteAsync
  nameWithType: TeamTeamRoutes.MembersSecondaryEmailsDeleteAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsDeleteAsync
- uid: Dropbox.Api.Team.DeleteSecondaryEmailsArg
  commentId: T:Dropbox.Api.Team.DeleteSecondaryEmailsArg
  parent: Dropbox.Api.Team
  name: DeleteSecondaryEmailsArg
  nameWithType: DeleteSecondaryEmailsArg
  fullName: Dropbox.Api.Team.DeleteSecondaryEmailsArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.DeleteSecondaryEmailsResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.DeleteSecondaryEmailsResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DeleteSecondaryEmailsResult>
  nameWithType: Task<DeleteSecondaryEmailsResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.DeleteSecondaryEmailsResult>
  nameWithType.vb: Task(Of DeleteSecondaryEmailsResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.DeleteSecondaryEmailsResult)
  name.vb: Task(Of DeleteSecondaryEmailsResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.DeleteSecondaryEmailsResult
    name: DeleteSecondaryEmailsResult
    nameWithType: DeleteSecondaryEmailsResult
    fullName: Dropbox.Api.Team.DeleteSecondaryEmailsResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.DeleteSecondaryEmailsResult
    name: DeleteSecondaryEmailsResult
    nameWithType: DeleteSecondaryEmailsResult
    fullName: Dropbox.Api.Team.DeleteSecondaryEmailsResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsDelete*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsDelete
  name: BeginMembersSecondaryEmailsDelete
  nameWithType: TeamTeamRoutes.BeginMembersSecondaryEmailsDelete
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsDelete
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsDelete*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsDelete
  name: EndMembersSecondaryEmailsDelete
  nameWithType: TeamTeamRoutes.EndMembersSecondaryEmailsDelete
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsDelete
- uid: Dropbox.Api.Team.DeleteSecondaryEmailsResult
  commentId: T:Dropbox.Api.Team.DeleteSecondaryEmailsResult
  parent: Dropbox.Api.Team
  name: DeleteSecondaryEmailsResult
  nameWithType: DeleteSecondaryEmailsResult
  fullName: Dropbox.Api.Team.DeleteSecondaryEmailsResult
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsResendVerificationEmailsAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsResendVerificationEmailsAsync
  name: MembersSecondaryEmailsResendVerificationEmailsAsync
  nameWithType: TeamTeamRoutes.MembersSecondaryEmailsResendVerificationEmailsAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSecondaryEmailsResendVerificationEmailsAsync
- uid: Dropbox.Api.Team.ResendVerificationEmailArg
  commentId: T:Dropbox.Api.Team.ResendVerificationEmailArg
  parent: Dropbox.Api.Team
  name: ResendVerificationEmailArg
  nameWithType: ResendVerificationEmailArg
  fullName: Dropbox.Api.Team.ResendVerificationEmailArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.ResendVerificationEmailResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.ResendVerificationEmailResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ResendVerificationEmailResult>
  nameWithType: Task<ResendVerificationEmailResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.ResendVerificationEmailResult>
  nameWithType.vb: Task(Of ResendVerificationEmailResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.ResendVerificationEmailResult)
  name.vb: Task(Of ResendVerificationEmailResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.ResendVerificationEmailResult
    name: ResendVerificationEmailResult
    nameWithType: ResendVerificationEmailResult
    fullName: Dropbox.Api.Team.ResendVerificationEmailResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.ResendVerificationEmailResult
    name: ResendVerificationEmailResult
    nameWithType: ResendVerificationEmailResult
    fullName: Dropbox.Api.Team.ResendVerificationEmailResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsResendVerificationEmails*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsResendVerificationEmails
  name: BeginMembersSecondaryEmailsResendVerificationEmails
  nameWithType: TeamTeamRoutes.BeginMembersSecondaryEmailsResendVerificationEmails
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSecondaryEmailsResendVerificationEmails
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsResendVerificationEmails*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsResendVerificationEmails
  name: EndMembersSecondaryEmailsResendVerificationEmails
  nameWithType: TeamTeamRoutes.EndMembersSecondaryEmailsResendVerificationEmails
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSecondaryEmailsResendVerificationEmails
- uid: Dropbox.Api.Team.ResendVerificationEmailResult
  commentId: T:Dropbox.Api.Team.ResendVerificationEmailResult
  parent: Dropbox.Api.Team
  name: ResendVerificationEmailResult
  nameWithType: ResendVerificationEmailResult
  fullName: Dropbox.Api.Team.ResendVerificationEmailResult
- uid: Dropbox.Api.Team.MembersSendWelcomeError
  commentId: T:Dropbox.Api.Team.MembersSendWelcomeError
  parent: Dropbox.Api.Team
  name: MembersSendWelcomeError
  nameWithType: MembersSendWelcomeError
  fullName: Dropbox.Api.Team.MembersSendWelcomeError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSendWelcomeEmailAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSendWelcomeEmailAsync
  name: MembersSendWelcomeEmailAsync
  nameWithType: TeamTeamRoutes.MembersSendWelcomeEmailAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSendWelcomeEmailAsync
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSendWelcomeEmail*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSendWelcomeEmail
  name: BeginMembersSendWelcomeEmail
  nameWithType: TeamTeamRoutes.BeginMembersSendWelcomeEmail
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSendWelcomeEmail
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSendWelcomeEmail*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSendWelcomeEmail
  name: EndMembersSendWelcomeEmail
  nameWithType: TeamTeamRoutes.EndMembersSendWelcomeEmail
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSendWelcomeEmail
- uid: Dropbox.Api.Team.MembersSetPermissions2Error
  commentId: T:Dropbox.Api.Team.MembersSetPermissions2Error
  parent: Dropbox.Api.Team
  name: MembersSetPermissions2Error
  nameWithType: MembersSetPermissions2Error
  fullName: Dropbox.Api.Team.MembersSetPermissions2Error
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsV2Async*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsV2Async
  name: MembersSetAdminPermissionsV2Async
  nameWithType: TeamTeamRoutes.MembersSetAdminPermissionsV2Async
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsV2Async
- uid: Dropbox.Api.Team.MembersSetPermissions2Arg
  commentId: T:Dropbox.Api.Team.MembersSetPermissions2Arg
  parent: Dropbox.Api.Team
  name: MembersSetPermissions2Arg
  nameWithType: MembersSetPermissions2Arg
  fullName: Dropbox.Api.Team.MembersSetPermissions2Arg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersSetPermissions2Result}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.MembersSetPermissions2Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<MembersSetPermissions2Result>
  nameWithType: Task<MembersSetPermissions2Result>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.MembersSetPermissions2Result>
  nameWithType.vb: Task(Of MembersSetPermissions2Result)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.MembersSetPermissions2Result)
  name.vb: Task(Of MembersSetPermissions2Result)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.MembersSetPermissions2Result
    name: MembersSetPermissions2Result
    nameWithType: MembersSetPermissions2Result
    fullName: Dropbox.Api.Team.MembersSetPermissions2Result
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.MembersSetPermissions2Result
    name: MembersSetPermissions2Result
    nameWithType: MembersSetPermissions2Result
    fullName: Dropbox.Api.Team.MembersSetPermissions2Result
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissionsV2*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissionsV2
  name: BeginMembersSetAdminPermissionsV2
  nameWithType: TeamTeamRoutes.BeginMembersSetAdminPermissionsV2
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissionsV2
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetAdminPermissionsV2*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetAdminPermissionsV2
  name: EndMembersSetAdminPermissionsV2
  nameWithType: TeamTeamRoutes.EndMembersSetAdminPermissionsV2
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetAdminPermissionsV2
- uid: Dropbox.Api.Team.MembersSetPermissions2Result
  commentId: T:Dropbox.Api.Team.MembersSetPermissions2Result
  parent: Dropbox.Api.Team
  name: MembersSetPermissions2Result
  nameWithType: MembersSetPermissions2Result
  fullName: Dropbox.Api.Team.MembersSetPermissions2Result
- uid: Dropbox.Api.Team.MembersSetPermissionsError
  commentId: T:Dropbox.Api.Team.MembersSetPermissionsError
  parent: Dropbox.Api.Team
  name: MembersSetPermissionsError
  nameWithType: MembersSetPermissionsError
  fullName: Dropbox.Api.Team.MembersSetPermissionsError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsAsync
  name: MembersSetAdminPermissionsAsync
  nameWithType: TeamTeamRoutes.MembersSetAdminPermissionsAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetAdminPermissionsAsync
- uid: Dropbox.Api.Team.MembersSetPermissionsArg
  commentId: T:Dropbox.Api.Team.MembersSetPermissionsArg
  parent: Dropbox.Api.Team
  name: MembersSetPermissionsArg
  nameWithType: MembersSetPermissionsArg
  fullName: Dropbox.Api.Team.MembersSetPermissionsArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.MembersSetPermissionsResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.MembersSetPermissionsResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<MembersSetPermissionsResult>
  nameWithType: Task<MembersSetPermissionsResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.MembersSetPermissionsResult>
  nameWithType.vb: Task(Of MembersSetPermissionsResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.MembersSetPermissionsResult)
  name.vb: Task(Of MembersSetPermissionsResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.MembersSetPermissionsResult
    name: MembersSetPermissionsResult
    nameWithType: MembersSetPermissionsResult
    fullName: Dropbox.Api.Team.MembersSetPermissionsResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.MembersSetPermissionsResult
    name: MembersSetPermissionsResult
    nameWithType: MembersSetPermissionsResult
    fullName: Dropbox.Api.Team.MembersSetPermissionsResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissions*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissions
  name: BeginMembersSetAdminPermissions
  nameWithType: TeamTeamRoutes.BeginMembersSetAdminPermissions
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetAdminPermissions
- uid: Dropbox.Api.Team.AdminTier
  commentId: T:Dropbox.Api.Team.AdminTier
  parent: Dropbox.Api.Team
  name: AdminTier
  nameWithType: AdminTier
  fullName: Dropbox.Api.Team.AdminTier
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetAdminPermissions*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetAdminPermissions
  name: EndMembersSetAdminPermissions
  nameWithType: TeamTeamRoutes.EndMembersSetAdminPermissions
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetAdminPermissions
- uid: Dropbox.Api.Team.MembersSetPermissionsResult
  commentId: T:Dropbox.Api.Team.MembersSetPermissionsResult
  parent: Dropbox.Api.Team
  name: MembersSetPermissionsResult
  nameWithType: MembersSetPermissionsResult
  fullName: Dropbox.Api.Team.MembersSetPermissionsResult
- uid: Dropbox.Api.Team.MembersSetProfileError
  commentId: T:Dropbox.Api.Team.MembersSetProfileError
  parent: Dropbox.Api.Team
  name: MembersSetProfileError
  nameWithType: MembersSetProfileError
  fullName: Dropbox.Api.Team.MembersSetProfileError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileV2Async*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileV2Async
  name: MembersSetProfileV2Async
  nameWithType: TeamTeamRoutes.MembersSetProfileV2Async
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileV2Async
- uid: Dropbox.Api.Team.MembersSetProfileArg
  commentId: T:Dropbox.Api.Team.MembersSetProfileArg
  parent: Dropbox.Api.Team
  name: MembersSetProfileArg
  nameWithType: MembersSetProfileArg
  fullName: Dropbox.Api.Team.MembersSetProfileArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfileV2*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfileV2
  name: BeginMembersSetProfileV2
  nameWithType: TeamTeamRoutes.BeginMembersSetProfileV2
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfileV2
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfileV2*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfileV2
  name: EndMembersSetProfileV2
  nameWithType: TeamTeamRoutes.EndMembersSetProfileV2
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfileV2
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileAsync
  name: MembersSetProfileAsync
  nameWithType: TeamTeamRoutes.MembersSetProfileAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfileAsync
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfile*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfile
  name: BeginMembersSetProfile
  nameWithType: TeamTeamRoutes.BeginMembersSetProfile
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfile
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfile*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfile
  name: EndMembersSetProfile
  nameWithType: TeamTeamRoutes.EndMembersSetProfile
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfile
- uid: Dropbox.Api.Team.MembersSetProfilePhotoError
  commentId: T:Dropbox.Api.Team.MembersSetProfilePhotoError
  parent: Dropbox.Api.Team
  name: MembersSetProfilePhotoError
  nameWithType: MembersSetProfilePhotoError
  fullName: Dropbox.Api.Team.MembersSetProfilePhotoError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoV2Async*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoV2Async
  name: MembersSetProfilePhotoV2Async
  nameWithType: TeamTeamRoutes.MembersSetProfilePhotoV2Async
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoV2Async
- uid: Dropbox.Api.Team.MembersSetProfilePhotoArg
  commentId: T:Dropbox.Api.Team.MembersSetProfilePhotoArg
  parent: Dropbox.Api.Team
  name: MembersSetProfilePhotoArg
  nameWithType: MembersSetProfilePhotoArg
  fullName: Dropbox.Api.Team.MembersSetProfilePhotoArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhotoV2*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhotoV2
  name: BeginMembersSetProfilePhotoV2
  nameWithType: TeamTeamRoutes.BeginMembersSetProfilePhotoV2
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhotoV2
- uid: Dropbox.Api.Account.PhotoSourceArg
  commentId: T:Dropbox.Api.Account.PhotoSourceArg
  parent: Dropbox.Api.Account
  name: PhotoSourceArg
  nameWithType: PhotoSourceArg
  fullName: Dropbox.Api.Account.PhotoSourceArg
- uid: Dropbox.Api.Account
  commentId: N:Dropbox.Api.Account
  name: Dropbox.Api.Account
  nameWithType: Dropbox.Api.Account
  fullName: Dropbox.Api.Account
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfilePhotoV2*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfilePhotoV2
  name: EndMembersSetProfilePhotoV2
  nameWithType: TeamTeamRoutes.EndMembersSetProfilePhotoV2
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfilePhotoV2
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoAsync
  name: MembersSetProfilePhotoAsync
  nameWithType: TeamTeamRoutes.MembersSetProfilePhotoAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSetProfilePhotoAsync
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhoto*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhoto
  name: BeginMembersSetProfilePhoto
  nameWithType: TeamTeamRoutes.BeginMembersSetProfilePhoto
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSetProfilePhoto
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfilePhoto*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfilePhoto
  name: EndMembersSetProfilePhoto
  nameWithType: TeamTeamRoutes.EndMembersSetProfilePhoto
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSetProfilePhoto
- uid: Dropbox.Api.Team.MembersSuspendError
  commentId: T:Dropbox.Api.Team.MembersSuspendError
  parent: Dropbox.Api.Team
  name: MembersSuspendError
  nameWithType: MembersSuspendError
  fullName: Dropbox.Api.Team.MembersSuspendError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSuspendAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSuspendAsync
  name: MembersSuspendAsync
  nameWithType: TeamTeamRoutes.MembersSuspendAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersSuspendAsync
- uid: Dropbox.Api.Team.MembersDeactivateArg
  commentId: T:Dropbox.Api.Team.MembersDeactivateArg
  parent: Dropbox.Api.Team
  name: MembersDeactivateArg
  nameWithType: MembersDeactivateArg
  fullName: Dropbox.Api.Team.MembersDeactivateArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSuspend*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSuspend
  name: BeginMembersSuspend
  nameWithType: TeamTeamRoutes.BeginMembersSuspend
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersSuspend
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSuspend*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSuspend
  name: EndMembersSuspend
  nameWithType: TeamTeamRoutes.EndMembersSuspend
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersSuspend
- uid: Dropbox.Api.Team.MembersUnsuspendError
  commentId: T:Dropbox.Api.Team.MembersUnsuspendError
  parent: Dropbox.Api.Team
  name: MembersUnsuspendError
  nameWithType: MembersUnsuspendError
  fullName: Dropbox.Api.Team.MembersUnsuspendError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersUnsuspendAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersUnsuspendAsync
  name: MembersUnsuspendAsync
  nameWithType: TeamTeamRoutes.MembersUnsuspendAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersUnsuspendAsync
- uid: Dropbox.Api.Team.MembersUnsuspendArg
  commentId: T:Dropbox.Api.Team.MembersUnsuspendArg
  parent: Dropbox.Api.Team
  name: MembersUnsuspendArg
  nameWithType: MembersUnsuspendArg
  fullName: Dropbox.Api.Team.MembersUnsuspendArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersUnsuspend*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersUnsuspend
  name: BeginMembersUnsuspend
  nameWithType: TeamTeamRoutes.BeginMembersUnsuspend
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginMembersUnsuspend
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersUnsuspend*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersUnsuspend
  name: EndMembersUnsuspend
  nameWithType: TeamTeamRoutes.EndMembersUnsuspend
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndMembersUnsuspend
- uid: Dropbox.Api.Team.TeamNamespacesListError
  commentId: T:Dropbox.Api.Team.TeamNamespacesListError
  parent: Dropbox.Api.Team
  name: TeamNamespacesListError
  nameWithType: TeamNamespacesListError
  fullName: Dropbox.Api.Team.TeamNamespacesListError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListAsync
  name: NamespacesListAsync
  nameWithType: TeamTeamRoutes.NamespacesListAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListAsync
- uid: Dropbox.Api.Team.TeamNamespacesListArg
  commentId: T:Dropbox.Api.Team.TeamNamespacesListArg
  parent: Dropbox.Api.Team
  name: TeamNamespacesListArg
  nameWithType: TeamNamespacesListArg
  fullName: Dropbox.Api.Team.TeamNamespacesListArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamNamespacesListResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.TeamNamespacesListResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TeamNamespacesListResult>
  nameWithType: Task<TeamNamespacesListResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.TeamNamespacesListResult>
  nameWithType.vb: Task(Of TeamNamespacesListResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.TeamNamespacesListResult)
  name.vb: Task(Of TeamNamespacesListResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.TeamNamespacesListResult
    name: TeamNamespacesListResult
    nameWithType: TeamNamespacesListResult
    fullName: Dropbox.Api.Team.TeamNamespacesListResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.TeamNamespacesListResult
    name: TeamNamespacesListResult
    nameWithType: TeamNamespacesListResult
    fullName: Dropbox.Api.Team.TeamNamespacesListResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesList*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesList
  name: BeginNamespacesList
  nameWithType: TeamTeamRoutes.BeginNamespacesList
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesList
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndNamespacesList*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndNamespacesList
  name: EndNamespacesList
  nameWithType: TeamTeamRoutes.EndNamespacesList
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndNamespacesList
- uid: Dropbox.Api.Team.TeamNamespacesListResult
  commentId: T:Dropbox.Api.Team.TeamNamespacesListResult
  parent: Dropbox.Api.Team
  name: TeamNamespacesListResult
  nameWithType: TeamNamespacesListResult
  fullName: Dropbox.Api.Team.TeamNamespacesListResult
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListAsync(Dropbox.Api.Team.TeamNamespacesListArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListAsync(Dropbox.Api.Team.TeamNamespacesListArg)
  isExternal: true
- uid: Dropbox.Api.Team.TeamNamespacesListContinueError
  commentId: T:Dropbox.Api.Team.TeamNamespacesListContinueError
  parent: Dropbox.Api.Team
  name: TeamNamespacesListContinueError
  nameWithType: TeamNamespacesListContinueError
  fullName: Dropbox.Api.Team.TeamNamespacesListContinueError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListContinueAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListContinueAsync
  name: NamespacesListContinueAsync
  nameWithType: TeamTeamRoutes.NamespacesListContinueAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.NamespacesListContinueAsync
- uid: Dropbox.Api.Team.TeamNamespacesListContinueArg
  commentId: T:Dropbox.Api.Team.TeamNamespacesListContinueArg
  parent: Dropbox.Api.Team
  name: TeamNamespacesListContinueArg
  nameWithType: TeamNamespacesListContinueArg
  fullName: Dropbox.Api.Team.TeamNamespacesListContinueArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesListContinue*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesListContinue
  name: BeginNamespacesListContinue
  nameWithType: TeamTeamRoutes.BeginNamespacesListContinue
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginNamespacesListContinue
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndNamespacesListContinue*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndNamespacesListContinue
  name: EndNamespacesListContinue
  nameWithType: TeamTeamRoutes.EndNamespacesListContinue
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndNamespacesListContinue
- uid: Dropbox.Api.FileProperties.ModifyTemplateError
  commentId: T:Dropbox.Api.FileProperties.ModifyTemplateError
  parent: Dropbox.Api.FileProperties
  name: ModifyTemplateError
  nameWithType: ModifyTemplateError
  fullName: Dropbox.Api.FileProperties.ModifyTemplateError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateAddAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateAddAsync
  name: PropertiesTemplateAddAsync
  nameWithType: TeamTeamRoutes.PropertiesTemplateAddAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateAddAsync
- uid: Dropbox.Api.FileProperties.AddTemplateArg
  commentId: T:Dropbox.Api.FileProperties.AddTemplateArg
  parent: Dropbox.Api.FileProperties
  name: AddTemplateArg
  nameWithType: AddTemplateArg
  fullName: Dropbox.Api.FileProperties.AddTemplateArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.FileProperties.AddTemplateResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.FileProperties.AddTemplateResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AddTemplateResult>
  nameWithType: Task<AddTemplateResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.FileProperties.AddTemplateResult>
  nameWithType.vb: Task(Of AddTemplateResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.FileProperties.AddTemplateResult)
  name.vb: Task(Of AddTemplateResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.FileProperties.AddTemplateResult
    name: AddTemplateResult
    nameWithType: AddTemplateResult
    fullName: Dropbox.Api.FileProperties.AddTemplateResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.FileProperties.AddTemplateResult
    name: AddTemplateResult
    nameWithType: AddTemplateResult
    fullName: Dropbox.Api.FileProperties.AddTemplateResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.FileProperties
  commentId: N:Dropbox.Api.FileProperties
  name: Dropbox.Api.FileProperties
  nameWithType: Dropbox.Api.FileProperties
  fullName: Dropbox.Api.FileProperties
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateAdd*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateAdd
  name: BeginPropertiesTemplateAdd
  nameWithType: TeamTeamRoutes.BeginPropertiesTemplateAdd
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateAdd
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyFieldTemplate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PropertyFieldTemplate>
  nameWithType: IEnumerable<PropertyFieldTemplate>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.FileProperties.PropertyFieldTemplate>
  nameWithType.vb: IEnumerable(Of PropertyFieldTemplate)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.FileProperties.PropertyFieldTemplate)
  name.vb: IEnumerable(Of PropertyFieldTemplate)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.FileProperties.PropertyFieldTemplate
    name: PropertyFieldTemplate
    nameWithType: PropertyFieldTemplate
    fullName: Dropbox.Api.FileProperties.PropertyFieldTemplate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.FileProperties.PropertyFieldTemplate
    name: PropertyFieldTemplate
    nameWithType: PropertyFieldTemplate
    fullName: Dropbox.Api.FileProperties.PropertyFieldTemplate
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateAdd*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateAdd
  name: EndPropertiesTemplateAdd
  nameWithType: TeamTeamRoutes.EndPropertiesTemplateAdd
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateAdd
- uid: Dropbox.Api.FileProperties.AddTemplateResult
  commentId: T:Dropbox.Api.FileProperties.AddTemplateResult
  parent: Dropbox.Api.FileProperties
  name: AddTemplateResult
  nameWithType: AddTemplateResult
  fullName: Dropbox.Api.FileProperties.AddTemplateResult
- uid: Dropbox.Api.FileProperties.TemplateError
  commentId: T:Dropbox.Api.FileProperties.TemplateError
  parent: Dropbox.Api.FileProperties
  name: TemplateError
  nameWithType: TemplateError
  fullName: Dropbox.Api.FileProperties.TemplateError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateGetAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateGetAsync
  name: PropertiesTemplateGetAsync
  nameWithType: TeamTeamRoutes.PropertiesTemplateGetAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateGetAsync
- uid: Dropbox.Api.FileProperties.GetTemplateArg
  commentId: T:Dropbox.Api.FileProperties.GetTemplateArg
  parent: Dropbox.Api.FileProperties
  name: GetTemplateArg
  nameWithType: GetTemplateArg
  fullName: Dropbox.Api.FileProperties.GetTemplateArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.FileProperties.GetTemplateResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.FileProperties.GetTemplateResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<GetTemplateResult>
  nameWithType: Task<GetTemplateResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.FileProperties.GetTemplateResult>
  nameWithType.vb: Task(Of GetTemplateResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.FileProperties.GetTemplateResult)
  name.vb: Task(Of GetTemplateResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.FileProperties.GetTemplateResult
    name: GetTemplateResult
    nameWithType: GetTemplateResult
    fullName: Dropbox.Api.FileProperties.GetTemplateResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.FileProperties.GetTemplateResult
    name: GetTemplateResult
    nameWithType: GetTemplateResult
    fullName: Dropbox.Api.FileProperties.GetTemplateResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateGet*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateGet
  name: BeginPropertiesTemplateGet
  nameWithType: TeamTeamRoutes.BeginPropertiesTemplateGet
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateGet
- uid: Dropbox.Api.FileProperties.Routes.FilePropertiesUserRoutes.TemplatesAddForUserAsync(Dropbox.Api.FileProperties.AddTemplateArg)
  commentId: M:Dropbox.Api.FileProperties.Routes.FilePropertiesUserRoutes.TemplatesAddForUserAsync(Dropbox.Api.FileProperties.AddTemplateArg)
  isExternal: true
- uid: Dropbox.Api.FileProperties.Routes.FilePropertiesTeamRoutes.TemplatesAddForTeamAsync(Dropbox.Api.FileProperties.AddTemplateArg)
  commentId: M:Dropbox.Api.FileProperties.Routes.FilePropertiesTeamRoutes.TemplatesAddForTeamAsync(Dropbox.Api.FileProperties.AddTemplateArg)
  isExternal: true
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateGet*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateGet
  name: EndPropertiesTemplateGet
  nameWithType: TeamTeamRoutes.EndPropertiesTemplateGet
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateGet
- uid: Dropbox.Api.FileProperties.GetTemplateResult
  commentId: T:Dropbox.Api.FileProperties.GetTemplateResult
  parent: Dropbox.Api.FileProperties
  name: GetTemplateResult
  nameWithType: GetTemplateResult
  fullName: Dropbox.Api.FileProperties.GetTemplateResult
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateListAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateListAsync
  name: PropertiesTemplateListAsync
  nameWithType: TeamTeamRoutes.PropertiesTemplateListAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateListAsync
- uid: System.Threading.Tasks.Task{Dropbox.Api.FileProperties.ListTemplateResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.FileProperties.ListTemplateResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ListTemplateResult>
  nameWithType: Task<ListTemplateResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.FileProperties.ListTemplateResult>
  nameWithType.vb: Task(Of ListTemplateResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.FileProperties.ListTemplateResult)
  name.vb: Task(Of ListTemplateResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.FileProperties.ListTemplateResult
    name: ListTemplateResult
    nameWithType: ListTemplateResult
    fullName: Dropbox.Api.FileProperties.ListTemplateResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.FileProperties.ListTemplateResult
    name: ListTemplateResult
    nameWithType: ListTemplateResult
    fullName: Dropbox.Api.FileProperties.ListTemplateResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateList*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateList
  name: BeginPropertiesTemplateList
  nameWithType: TeamTeamRoutes.BeginPropertiesTemplateList
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateList
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateList*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateList
  name: EndPropertiesTemplateList
  nameWithType: TeamTeamRoutes.EndPropertiesTemplateList
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateList
- uid: Dropbox.Api.FileProperties.ListTemplateResult
  commentId: T:Dropbox.Api.FileProperties.ListTemplateResult
  parent: Dropbox.Api.FileProperties
  name: ListTemplateResult
  nameWithType: ListTemplateResult
  fullName: Dropbox.Api.FileProperties.ListTemplateResult
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateUpdateAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateUpdateAsync
  name: PropertiesTemplateUpdateAsync
  nameWithType: TeamTeamRoutes.PropertiesTemplateUpdateAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.PropertiesTemplateUpdateAsync
- uid: Dropbox.Api.FileProperties.UpdateTemplateArg
  commentId: T:Dropbox.Api.FileProperties.UpdateTemplateArg
  parent: Dropbox.Api.FileProperties
  name: UpdateTemplateArg
  nameWithType: UpdateTemplateArg
  fullName: Dropbox.Api.FileProperties.UpdateTemplateArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.FileProperties.UpdateTemplateResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.FileProperties.UpdateTemplateResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<UpdateTemplateResult>
  nameWithType: Task<UpdateTemplateResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.FileProperties.UpdateTemplateResult>
  nameWithType.vb: Task(Of UpdateTemplateResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.FileProperties.UpdateTemplateResult)
  name.vb: Task(Of UpdateTemplateResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.FileProperties.UpdateTemplateResult
    name: UpdateTemplateResult
    nameWithType: UpdateTemplateResult
    fullName: Dropbox.Api.FileProperties.UpdateTemplateResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.FileProperties.UpdateTemplateResult
    name: UpdateTemplateResult
    nameWithType: UpdateTemplateResult
    fullName: Dropbox.Api.FileProperties.UpdateTemplateResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateUpdate*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateUpdate
  name: BeginPropertiesTemplateUpdate
  nameWithType: TeamTeamRoutes.BeginPropertiesTemplateUpdate
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginPropertiesTemplateUpdate
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateUpdate*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateUpdate
  name: EndPropertiesTemplateUpdate
  nameWithType: TeamTeamRoutes.EndPropertiesTemplateUpdate
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndPropertiesTemplateUpdate
- uid: Dropbox.Api.FileProperties.UpdateTemplateResult
  commentId: T:Dropbox.Api.FileProperties.UpdateTemplateResult
  parent: Dropbox.Api.FileProperties
  name: UpdateTemplateResult
  nameWithType: UpdateTemplateResult
  fullName: Dropbox.Api.FileProperties.UpdateTemplateResult
- uid: Dropbox.Api.Team.DateRangeError
  commentId: T:Dropbox.Api.Team.DateRangeError
  parent: Dropbox.Api.Team
  name: DateRangeError
  nameWithType: DateRangeError
  fullName: Dropbox.Api.Team.DateRangeError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetActivityAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetActivityAsync
  name: ReportsGetActivityAsync
  nameWithType: TeamTeamRoutes.ReportsGetActivityAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetActivityAsync
- uid: Dropbox.Api.Team.DateRange
  commentId: T:Dropbox.Api.Team.DateRange
  parent: Dropbox.Api.Team
  name: DateRange
  nameWithType: DateRange
  fullName: Dropbox.Api.Team.DateRange
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.GetActivityReport}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.GetActivityReport}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<GetActivityReport>
  nameWithType: Task<GetActivityReport>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.GetActivityReport>
  nameWithType.vb: Task(Of GetActivityReport)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.GetActivityReport)
  name.vb: Task(Of GetActivityReport)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.GetActivityReport
    name: GetActivityReport
    nameWithType: GetActivityReport
    fullName: Dropbox.Api.Team.GetActivityReport
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.GetActivityReport
    name: GetActivityReport
    nameWithType: GetActivityReport
    fullName: Dropbox.Api.Team.GetActivityReport
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetActivity*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetActivity
  name: BeginReportsGetActivity
  nameWithType: TeamTeamRoutes.BeginReportsGetActivity
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetActivity
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetActivity*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetActivity
  name: EndReportsGetActivity
  nameWithType: TeamTeamRoutes.EndReportsGetActivity
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetActivity
- uid: Dropbox.Api.Team.GetActivityReport
  commentId: T:Dropbox.Api.Team.GetActivityReport
  parent: Dropbox.Api.Team
  name: GetActivityReport
  nameWithType: GetActivityReport
  fullName: Dropbox.Api.Team.GetActivityReport
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetDevicesAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetDevicesAsync
  name: ReportsGetDevicesAsync
  nameWithType: TeamTeamRoutes.ReportsGetDevicesAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetDevicesAsync
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.GetDevicesReport}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.GetDevicesReport}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<GetDevicesReport>
  nameWithType: Task<GetDevicesReport>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.GetDevicesReport>
  nameWithType.vb: Task(Of GetDevicesReport)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.GetDevicesReport)
  name.vb: Task(Of GetDevicesReport)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.GetDevicesReport
    name: GetDevicesReport
    nameWithType: GetDevicesReport
    fullName: Dropbox.Api.Team.GetDevicesReport
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.GetDevicesReport
    name: GetDevicesReport
    nameWithType: GetDevicesReport
    fullName: Dropbox.Api.Team.GetDevicesReport
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetDevices*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetDevices
  name: BeginReportsGetDevices
  nameWithType: TeamTeamRoutes.BeginReportsGetDevices
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetDevices
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetDevices*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetDevices
  name: EndReportsGetDevices
  nameWithType: TeamTeamRoutes.EndReportsGetDevices
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetDevices
- uid: Dropbox.Api.Team.GetDevicesReport
  commentId: T:Dropbox.Api.Team.GetDevicesReport
  parent: Dropbox.Api.Team
  name: GetDevicesReport
  nameWithType: GetDevicesReport
  fullName: Dropbox.Api.Team.GetDevicesReport
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetMembershipAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetMembershipAsync
  name: ReportsGetMembershipAsync
  nameWithType: TeamTeamRoutes.ReportsGetMembershipAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetMembershipAsync
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.GetMembershipReport}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.GetMembershipReport}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<GetMembershipReport>
  nameWithType: Task<GetMembershipReport>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.GetMembershipReport>
  nameWithType.vb: Task(Of GetMembershipReport)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.GetMembershipReport)
  name.vb: Task(Of GetMembershipReport)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.GetMembershipReport
    name: GetMembershipReport
    nameWithType: GetMembershipReport
    fullName: Dropbox.Api.Team.GetMembershipReport
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.GetMembershipReport
    name: GetMembershipReport
    nameWithType: GetMembershipReport
    fullName: Dropbox.Api.Team.GetMembershipReport
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetMembership*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetMembership
  name: BeginReportsGetMembership
  nameWithType: TeamTeamRoutes.BeginReportsGetMembership
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetMembership
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetMembership*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetMembership
  name: EndReportsGetMembership
  nameWithType: TeamTeamRoutes.EndReportsGetMembership
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetMembership
- uid: Dropbox.Api.Team.GetMembershipReport
  commentId: T:Dropbox.Api.Team.GetMembershipReport
  parent: Dropbox.Api.Team
  name: GetMembershipReport
  nameWithType: GetMembershipReport
  fullName: Dropbox.Api.Team.GetMembershipReport
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetStorageAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetStorageAsync
  name: ReportsGetStorageAsync
  nameWithType: TeamTeamRoutes.ReportsGetStorageAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.ReportsGetStorageAsync
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.GetStorageReport}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.GetStorageReport}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<GetStorageReport>
  nameWithType: Task<GetStorageReport>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.GetStorageReport>
  nameWithType.vb: Task(Of GetStorageReport)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.GetStorageReport)
  name.vb: Task(Of GetStorageReport)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.GetStorageReport
    name: GetStorageReport
    nameWithType: GetStorageReport
    fullName: Dropbox.Api.Team.GetStorageReport
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.GetStorageReport
    name: GetStorageReport
    nameWithType: GetStorageReport
    fullName: Dropbox.Api.Team.GetStorageReport
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetStorage*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetStorage
  name: BeginReportsGetStorage
  nameWithType: TeamTeamRoutes.BeginReportsGetStorage
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginReportsGetStorage
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetStorage*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetStorage
  name: EndReportsGetStorage
  nameWithType: TeamTeamRoutes.EndReportsGetStorage
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndReportsGetStorage
- uid: Dropbox.Api.Team.GetStorageReport
  commentId: T:Dropbox.Api.Team.GetStorageReport
  parent: Dropbox.Api.Team
  name: GetStorageReport
  nameWithType: GetStorageReport
  fullName: Dropbox.Api.Team.GetStorageReport
- uid: Dropbox.Api.Team.TeamFolderActivateError
  commentId: T:Dropbox.Api.Team.TeamFolderActivateError
  parent: Dropbox.Api.Team
  name: TeamFolderActivateError
  nameWithType: TeamFolderActivateError
  fullName: Dropbox.Api.Team.TeamFolderActivateError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderActivateAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderActivateAsync
  name: TeamFolderActivateAsync
  nameWithType: TeamTeamRoutes.TeamFolderActivateAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderActivateAsync
- uid: Dropbox.Api.Team.TeamFolderIdArg
  commentId: T:Dropbox.Api.Team.TeamFolderIdArg
  parent: Dropbox.Api.Team
  name: TeamFolderIdArg
  nameWithType: TeamFolderIdArg
  fullName: Dropbox.Api.Team.TeamFolderIdArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderMetadata}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderMetadata}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TeamFolderMetadata>
  nameWithType: Task<TeamFolderMetadata>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.TeamFolderMetadata>
  nameWithType.vb: Task(Of TeamFolderMetadata)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.TeamFolderMetadata)
  name.vb: Task(Of TeamFolderMetadata)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.TeamFolderMetadata
    name: TeamFolderMetadata
    nameWithType: TeamFolderMetadata
    fullName: Dropbox.Api.Team.TeamFolderMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.TeamFolderMetadata
    name: TeamFolderMetadata
    nameWithType: TeamFolderMetadata
    fullName: Dropbox.Api.Team.TeamFolderMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderActivate*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderActivate
  name: BeginTeamFolderActivate
  nameWithType: TeamTeamRoutes.BeginTeamFolderActivate
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderActivate
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderActivate*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderActivate
  name: EndTeamFolderActivate
  nameWithType: TeamTeamRoutes.EndTeamFolderActivate
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderActivate
- uid: Dropbox.Api.Team.TeamFolderMetadata
  commentId: T:Dropbox.Api.Team.TeamFolderMetadata
  parent: Dropbox.Api.Team
  name: TeamFolderMetadata
  nameWithType: TeamFolderMetadata
  fullName: Dropbox.Api.Team.TeamFolderMetadata
- uid: Dropbox.Api.Team.TeamFolderArchiveError
  commentId: T:Dropbox.Api.Team.TeamFolderArchiveError
  parent: Dropbox.Api.Team
  name: TeamFolderArchiveError
  nameWithType: TeamFolderArchiveError
  fullName: Dropbox.Api.Team.TeamFolderArchiveError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveAsync
  name: TeamFolderArchiveAsync
  nameWithType: TeamTeamRoutes.TeamFolderArchiveAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveAsync
- uid: Dropbox.Api.Team.TeamFolderArchiveArg
  commentId: T:Dropbox.Api.Team.TeamFolderArchiveArg
  parent: Dropbox.Api.Team
  name: TeamFolderArchiveArg
  nameWithType: TeamFolderArchiveArg
  fullName: Dropbox.Api.Team.TeamFolderArchiveArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderArchiveLaunch}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderArchiveLaunch}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TeamFolderArchiveLaunch>
  nameWithType: Task<TeamFolderArchiveLaunch>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.TeamFolderArchiveLaunch>
  nameWithType.vb: Task(Of TeamFolderArchiveLaunch)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.TeamFolderArchiveLaunch)
  name.vb: Task(Of TeamFolderArchiveLaunch)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.TeamFolderArchiveLaunch
    name: TeamFolderArchiveLaunch
    nameWithType: TeamFolderArchiveLaunch
    fullName: Dropbox.Api.Team.TeamFolderArchiveLaunch
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.TeamFolderArchiveLaunch
    name: TeamFolderArchiveLaunch
    nameWithType: TeamFolderArchiveLaunch
    fullName: Dropbox.Api.Team.TeamFolderArchiveLaunch
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchive*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchive
  name: BeginTeamFolderArchive
  nameWithType: TeamTeamRoutes.BeginTeamFolderArchive
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchive
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderArchive*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderArchive
  name: EndTeamFolderArchive
  nameWithType: TeamTeamRoutes.EndTeamFolderArchive
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderArchive
- uid: Dropbox.Api.Team.TeamFolderArchiveLaunch
  commentId: T:Dropbox.Api.Team.TeamFolderArchiveLaunch
  parent: Dropbox.Api.Team
  name: TeamFolderArchiveLaunch
  nameWithType: TeamFolderArchiveLaunch
  fullName: Dropbox.Api.Team.TeamFolderArchiveLaunch
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveCheckAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveCheckAsync
  name: TeamFolderArchiveCheckAsync
  nameWithType: TeamTeamRoutes.TeamFolderArchiveCheckAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderArchiveCheckAsync
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderArchiveJobStatus}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderArchiveJobStatus}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TeamFolderArchiveJobStatus>
  nameWithType: Task<TeamFolderArchiveJobStatus>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.TeamFolderArchiveJobStatus>
  nameWithType.vb: Task(Of TeamFolderArchiveJobStatus)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.TeamFolderArchiveJobStatus)
  name.vb: Task(Of TeamFolderArchiveJobStatus)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.TeamFolderArchiveJobStatus
    name: TeamFolderArchiveJobStatus
    nameWithType: TeamFolderArchiveJobStatus
    fullName: Dropbox.Api.Team.TeamFolderArchiveJobStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.TeamFolderArchiveJobStatus
    name: TeamFolderArchiveJobStatus
    nameWithType: TeamFolderArchiveJobStatus
    fullName: Dropbox.Api.Team.TeamFolderArchiveJobStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchiveCheck*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchiveCheck
  name: BeginTeamFolderArchiveCheck
  nameWithType: TeamTeamRoutes.BeginTeamFolderArchiveCheck
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderArchiveCheck
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderArchiveCheck*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderArchiveCheck
  name: EndTeamFolderArchiveCheck
  nameWithType: TeamTeamRoutes.EndTeamFolderArchiveCheck
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderArchiveCheck
- uid: Dropbox.Api.Team.TeamFolderArchiveJobStatus
  commentId: T:Dropbox.Api.Team.TeamFolderArchiveJobStatus
  parent: Dropbox.Api.Team
  name: TeamFolderArchiveJobStatus
  nameWithType: TeamFolderArchiveJobStatus
  fullName: Dropbox.Api.Team.TeamFolderArchiveJobStatus
- uid: Dropbox.Api.Team.TeamFolderCreateError
  commentId: T:Dropbox.Api.Team.TeamFolderCreateError
  parent: Dropbox.Api.Team
  name: TeamFolderCreateError
  nameWithType: TeamFolderCreateError
  fullName: Dropbox.Api.Team.TeamFolderCreateError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderCreateAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderCreateAsync
  name: TeamFolderCreateAsync
  nameWithType: TeamTeamRoutes.TeamFolderCreateAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderCreateAsync
- uid: Dropbox.Api.Team.TeamFolderCreateArg
  commentId: T:Dropbox.Api.Team.TeamFolderCreateArg
  parent: Dropbox.Api.Team
  name: TeamFolderCreateArg
  nameWithType: TeamFolderCreateArg
  fullName: Dropbox.Api.Team.TeamFolderCreateArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderCreate*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderCreate
  name: BeginTeamFolderCreate
  nameWithType: TeamTeamRoutes.BeginTeamFolderCreate
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderCreate
- uid: Dropbox.Api.Files.SyncSettingArg
  commentId: T:Dropbox.Api.Files.SyncSettingArg
  parent: Dropbox.Api.Files
  name: SyncSettingArg
  nameWithType: SyncSettingArg
  fullName: Dropbox.Api.Files.SyncSettingArg
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderCreate*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderCreate
  name: EndTeamFolderCreate
  nameWithType: TeamTeamRoutes.EndTeamFolderCreate
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderCreate
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderGetInfoAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderGetInfoAsync
  name: TeamFolderGetInfoAsync
  nameWithType: TeamTeamRoutes.TeamFolderGetInfoAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderGetInfoAsync
- uid: Dropbox.Api.Team.TeamFolderIdListArg
  commentId: T:Dropbox.Api.Team.TeamFolderIdListArg
  parent: Dropbox.Api.Team
  name: TeamFolderIdListArg
  nameWithType: TeamFolderIdListArg
  fullName: Dropbox.Api.Team.TeamFolderIdListArg
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.TeamFolderGetInfoItem}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Dropbox.Api.Team.TeamFolderGetInfoItem}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<TeamFolderGetInfoItem>>
  nameWithType: Task<List<TeamFolderGetInfoItem>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Dropbox.Api.Team.TeamFolderGetInfoItem>>
  nameWithType.vb: Task(Of List(Of TeamFolderGetInfoItem))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Dropbox.Api.Team.TeamFolderGetInfoItem))
  name.vb: Task(Of List(Of TeamFolderGetInfoItem))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.TeamFolderGetInfoItem
    name: TeamFolderGetInfoItem
    nameWithType: TeamFolderGetInfoItem
    fullName: Dropbox.Api.Team.TeamFolderGetInfoItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.TeamFolderGetInfoItem
    name: TeamFolderGetInfoItem
    nameWithType: TeamFolderGetInfoItem
    fullName: Dropbox.Api.Team.TeamFolderGetInfoItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderGetInfo*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderGetInfo
  name: BeginTeamFolderGetInfo
  nameWithType: TeamTeamRoutes.BeginTeamFolderGetInfo
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderGetInfo
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderGetInfo*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderGetInfo
  name: EndTeamFolderGetInfo
  nameWithType: TeamTeamRoutes.EndTeamFolderGetInfo
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderGetInfo
- uid: System.Collections.Generic.List{Dropbox.Api.Team.TeamFolderGetInfoItem}
  commentId: T:System.Collections.Generic.List{Dropbox.Api.Team.TeamFolderGetInfoItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TeamFolderGetInfoItem>
  nameWithType: List<TeamFolderGetInfoItem>
  fullName: System.Collections.Generic.List<Dropbox.Api.Team.TeamFolderGetInfoItem>
  nameWithType.vb: List(Of TeamFolderGetInfoItem)
  fullName.vb: System.Collections.Generic.List(Of Dropbox.Api.Team.TeamFolderGetInfoItem)
  name.vb: List(Of TeamFolderGetInfoItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.TeamFolderGetInfoItem
    name: TeamFolderGetInfoItem
    nameWithType: TeamFolderGetInfoItem
    fullName: Dropbox.Api.Team.TeamFolderGetInfoItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.TeamFolderGetInfoItem
    name: TeamFolderGetInfoItem
    nameWithType: TeamFolderGetInfoItem
    fullName: Dropbox.Api.Team.TeamFolderGetInfoItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.TeamFolderListError
  commentId: T:Dropbox.Api.Team.TeamFolderListError
  name: TeamFolderListError
  nameWithType: TeamFolderListError
  fullName: Dropbox.Api.Team.TeamFolderListError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListAsync
  name: TeamFolderListAsync
  nameWithType: TeamTeamRoutes.TeamFolderListAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListAsync
- uid: Dropbox.Api.Team.TeamFolderListArg
  commentId: T:Dropbox.Api.Team.TeamFolderListArg
  parent: Dropbox.Api.Team
  name: TeamFolderListArg
  nameWithType: TeamFolderListArg
  fullName: Dropbox.Api.Team.TeamFolderListArg
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderListResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.TeamFolderListResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TeamFolderListResult>
  nameWithType: Task<TeamFolderListResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.TeamFolderListResult>
  nameWithType.vb: Task(Of TeamFolderListResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.TeamFolderListResult)
  name.vb: Task(Of TeamFolderListResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.TeamFolderListResult
    name: TeamFolderListResult
    nameWithType: TeamFolderListResult
    fullName: Dropbox.Api.Team.TeamFolderListResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.TeamFolderListResult
    name: TeamFolderListResult
    nameWithType: TeamFolderListResult
    fullName: Dropbox.Api.Team.TeamFolderListResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderList*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderList
  name: BeginTeamFolderList
  nameWithType: TeamTeamRoutes.BeginTeamFolderList
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderList
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderList*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderList
  name: EndTeamFolderList
  nameWithType: TeamTeamRoutes.EndTeamFolderList
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderList
- uid: Dropbox.Api.Team.TeamFolderListResult
  commentId: T:Dropbox.Api.Team.TeamFolderListResult
  parent: Dropbox.Api.Team
  name: TeamFolderListResult
  nameWithType: TeamFolderListResult
  fullName: Dropbox.Api.Team.TeamFolderListResult
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListAsync(Dropbox.Api.Team.TeamFolderListArg)
  commentId: M:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListAsync(Dropbox.Api.Team.TeamFolderListArg)
  isExternal: true
- uid: Dropbox.Api.Team.TeamFolderListContinueError
  commentId: T:Dropbox.Api.Team.TeamFolderListContinueError
  parent: Dropbox.Api.Team
  name: TeamFolderListContinueError
  nameWithType: TeamFolderListContinueError
  fullName: Dropbox.Api.Team.TeamFolderListContinueError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListContinueAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListContinueAsync
  name: TeamFolderListContinueAsync
  nameWithType: TeamTeamRoutes.TeamFolderListContinueAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderListContinueAsync
- uid: Dropbox.Api.Team.TeamFolderListContinueArg
  commentId: T:Dropbox.Api.Team.TeamFolderListContinueArg
  parent: Dropbox.Api.Team
  name: TeamFolderListContinueArg
  nameWithType: TeamFolderListContinueArg
  fullName: Dropbox.Api.Team.TeamFolderListContinueArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderListContinue*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderListContinue
  name: BeginTeamFolderListContinue
  nameWithType: TeamTeamRoutes.BeginTeamFolderListContinue
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderListContinue
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderListContinue*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderListContinue
  name: EndTeamFolderListContinue
  nameWithType: TeamTeamRoutes.EndTeamFolderListContinue
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderListContinue
- uid: Dropbox.Api.Team.TeamFolderPermanentlyDeleteError
  commentId: T:Dropbox.Api.Team.TeamFolderPermanentlyDeleteError
  parent: Dropbox.Api.Team
  name: TeamFolderPermanentlyDeleteError
  nameWithType: TeamFolderPermanentlyDeleteError
  fullName: Dropbox.Api.Team.TeamFolderPermanentlyDeleteError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderPermanentlyDeleteAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderPermanentlyDeleteAsync
  name: TeamFolderPermanentlyDeleteAsync
  nameWithType: TeamTeamRoutes.TeamFolderPermanentlyDeleteAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderPermanentlyDeleteAsync
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderPermanentlyDelete*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderPermanentlyDelete
  name: BeginTeamFolderPermanentlyDelete
  nameWithType: TeamTeamRoutes.BeginTeamFolderPermanentlyDelete
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderPermanentlyDelete
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderPermanentlyDelete*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderPermanentlyDelete
  name: EndTeamFolderPermanentlyDelete
  nameWithType: TeamTeamRoutes.EndTeamFolderPermanentlyDelete
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderPermanentlyDelete
- uid: Dropbox.Api.Team.TeamFolderRenameError
  commentId: T:Dropbox.Api.Team.TeamFolderRenameError
  parent: Dropbox.Api.Team
  name: TeamFolderRenameError
  nameWithType: TeamFolderRenameError
  fullName: Dropbox.Api.Team.TeamFolderRenameError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderRenameAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderRenameAsync
  name: TeamFolderRenameAsync
  nameWithType: TeamTeamRoutes.TeamFolderRenameAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderRenameAsync
- uid: Dropbox.Api.Team.TeamFolderRenameArg
  commentId: T:Dropbox.Api.Team.TeamFolderRenameArg
  parent: Dropbox.Api.Team
  name: TeamFolderRenameArg
  nameWithType: TeamFolderRenameArg
  fullName: Dropbox.Api.Team.TeamFolderRenameArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderRename*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderRename
  name: BeginTeamFolderRename
  nameWithType: TeamTeamRoutes.BeginTeamFolderRename
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderRename
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderRename*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderRename
  name: EndTeamFolderRename
  nameWithType: TeamTeamRoutes.EndTeamFolderRename
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderRename
- uid: Dropbox.Api.Team.TeamFolderUpdateSyncSettingsError
  commentId: T:Dropbox.Api.Team.TeamFolderUpdateSyncSettingsError
  parent: Dropbox.Api.Team
  name: TeamFolderUpdateSyncSettingsError
  nameWithType: TeamFolderUpdateSyncSettingsError
  fullName: Dropbox.Api.Team.TeamFolderUpdateSyncSettingsError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderUpdateSyncSettingsAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderUpdateSyncSettingsAsync
  name: TeamFolderUpdateSyncSettingsAsync
  nameWithType: TeamTeamRoutes.TeamFolderUpdateSyncSettingsAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TeamFolderUpdateSyncSettingsAsync
- uid: Dropbox.Api.Team.TeamFolderUpdateSyncSettingsArg
  commentId: T:Dropbox.Api.Team.TeamFolderUpdateSyncSettingsArg
  parent: Dropbox.Api.Team
  name: TeamFolderUpdateSyncSettingsArg
  nameWithType: TeamFolderUpdateSyncSettingsArg
  fullName: Dropbox.Api.Team.TeamFolderUpdateSyncSettingsArg
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderUpdateSyncSettings*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderUpdateSyncSettings
  name: BeginTeamFolderUpdateSyncSettings
  nameWithType: TeamTeamRoutes.BeginTeamFolderUpdateSyncSettings
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTeamFolderUpdateSyncSettings
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Files.ContentSyncSettingArg}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.Files.ContentSyncSettingArg}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ContentSyncSettingArg>
  nameWithType: IEnumerable<ContentSyncSettingArg>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Files.ContentSyncSettingArg>
  nameWithType.vb: IEnumerable(Of ContentSyncSettingArg)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Files.ContentSyncSettingArg)
  name.vb: IEnumerable(Of ContentSyncSettingArg)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Files.ContentSyncSettingArg
    name: ContentSyncSettingArg
    nameWithType: ContentSyncSettingArg
    fullName: Dropbox.Api.Files.ContentSyncSettingArg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Files.ContentSyncSettingArg
    name: ContentSyncSettingArg
    nameWithType: ContentSyncSettingArg
    fullName: Dropbox.Api.Files.ContentSyncSettingArg
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderUpdateSyncSettings*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderUpdateSyncSettings
  name: EndTeamFolderUpdateSyncSettings
  nameWithType: TeamTeamRoutes.EndTeamFolderUpdateSyncSettings
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTeamFolderUpdateSyncSettings
- uid: Dropbox.Api.Team.TokenGetAuthenticatedAdminError
  commentId: T:Dropbox.Api.Team.TokenGetAuthenticatedAdminError
  parent: Dropbox.Api.Team
  name: TokenGetAuthenticatedAdminError
  nameWithType: TokenGetAuthenticatedAdminError
  fullName: Dropbox.Api.Team.TokenGetAuthenticatedAdminError
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.TokenGetAuthenticatedAdminAsync*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.TokenGetAuthenticatedAdminAsync
  name: TokenGetAuthenticatedAdminAsync
  nameWithType: TeamTeamRoutes.TokenGetAuthenticatedAdminAsync
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.TokenGetAuthenticatedAdminAsync
- uid: System.Threading.Tasks.Task{Dropbox.Api.Team.TokenGetAuthenticatedAdminResult}
  commentId: T:System.Threading.Tasks.Task{Dropbox.Api.Team.TokenGetAuthenticatedAdminResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TokenGetAuthenticatedAdminResult>
  nameWithType: Task<TokenGetAuthenticatedAdminResult>
  fullName: System.Threading.Tasks.Task<Dropbox.Api.Team.TokenGetAuthenticatedAdminResult>
  nameWithType.vb: Task(Of TokenGetAuthenticatedAdminResult)
  fullName.vb: System.Threading.Tasks.Task(Of Dropbox.Api.Team.TokenGetAuthenticatedAdminResult)
  name.vb: Task(Of TokenGetAuthenticatedAdminResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.TokenGetAuthenticatedAdminResult
    name: TokenGetAuthenticatedAdminResult
    nameWithType: TokenGetAuthenticatedAdminResult
    fullName: Dropbox.Api.Team.TokenGetAuthenticatedAdminResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.TokenGetAuthenticatedAdminResult
    name: TokenGetAuthenticatedAdminResult
    nameWithType: TokenGetAuthenticatedAdminResult
    fullName: Dropbox.Api.Team.TokenGetAuthenticatedAdminResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTokenGetAuthenticatedAdmin*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTokenGetAuthenticatedAdmin
  name: BeginTokenGetAuthenticatedAdmin
  nameWithType: TeamTeamRoutes.BeginTokenGetAuthenticatedAdmin
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.BeginTokenGetAuthenticatedAdmin
- uid: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTokenGetAuthenticatedAdmin*
  commentId: Overload:Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTokenGetAuthenticatedAdmin
  name: EndTokenGetAuthenticatedAdmin
  nameWithType: TeamTeamRoutes.EndTokenGetAuthenticatedAdmin
  fullName: Dropbox.Api.Team.Routes.TeamTeamRoutes.EndTokenGetAuthenticatedAdmin
- uid: Dropbox.Api.Team.TokenGetAuthenticatedAdminResult
  commentId: T:Dropbox.Api.Team.TokenGetAuthenticatedAdminResult
  parent: Dropbox.Api.Team
  name: TokenGetAuthenticatedAdminResult
  nameWithType: TokenGetAuthenticatedAdminResult
  fullName: Dropbox.Api.Team.TokenGetAuthenticatedAdminResult
