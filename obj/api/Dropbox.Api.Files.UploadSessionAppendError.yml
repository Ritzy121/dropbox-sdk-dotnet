### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.UploadSessionAppendError
  commentId: T:Dropbox.Api.Files.UploadSessionAppendError
  id: UploadSessionAppendError
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.UploadSessionAppendError.#ctor
  - Dropbox.Api.Files.UploadSessionAppendError.AsClosed
  - Dropbox.Api.Files.UploadSessionAppendError.AsConcurrentSessionInvalidDataSize
  - Dropbox.Api.Files.UploadSessionAppendError.AsConcurrentSessionInvalidOffset
  - Dropbox.Api.Files.UploadSessionAppendError.AsContentHashMismatch
  - Dropbox.Api.Files.UploadSessionAppendError.AsIncorrectOffset
  - Dropbox.Api.Files.UploadSessionAppendError.AsNotClosed
  - Dropbox.Api.Files.UploadSessionAppendError.AsNotFound
  - Dropbox.Api.Files.UploadSessionAppendError.AsOther
  - Dropbox.Api.Files.UploadSessionAppendError.AsPayloadTooLarge
  - Dropbox.Api.Files.UploadSessionAppendError.AsTooLarge
  - Dropbox.Api.Files.UploadSessionAppendError.IsClosed
  - Dropbox.Api.Files.UploadSessionAppendError.IsConcurrentSessionInvalidDataSize
  - Dropbox.Api.Files.UploadSessionAppendError.IsConcurrentSessionInvalidOffset
  - Dropbox.Api.Files.UploadSessionAppendError.IsContentHashMismatch
  - Dropbox.Api.Files.UploadSessionAppendError.IsIncorrectOffset
  - Dropbox.Api.Files.UploadSessionAppendError.IsNotClosed
  - Dropbox.Api.Files.UploadSessionAppendError.IsNotFound
  - Dropbox.Api.Files.UploadSessionAppendError.IsOther
  - Dropbox.Api.Files.UploadSessionAppendError.IsPayloadTooLarge
  - Dropbox.Api.Files.UploadSessionAppendError.IsTooLarge
  langs:
  - csharp
  - vb
  name: UploadSessionAppendError
  nameWithType: UploadSessionAppendError
  fullName: Dropbox.Api.Files.UploadSessionAppendError
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: UploadSessionAppendError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The upload session append error object</p>\n"
  example: []
  syntax:
    content: public class UploadSessionAppendError
    content.vb: Public Class UploadSessionAppendError
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Files.UploadSessionAppendError.Closed
  - Dropbox.Api.Files.UploadSessionAppendError.ConcurrentSessionInvalidDataSize
  - Dropbox.Api.Files.UploadSessionAppendError.ConcurrentSessionInvalidOffset
  - Dropbox.Api.Files.UploadSessionAppendError.ContentHashMismatch
  - Dropbox.Api.Files.UploadSessionAppendError.IncorrectOffset
  - Dropbox.Api.Files.UploadSessionAppendError.NotClosed
  - Dropbox.Api.Files.UploadSessionAppendError.NotFound
  - Dropbox.Api.Files.UploadSessionAppendError.Other
  - Dropbox.Api.Files.UploadSessionAppendError.PayloadTooLarge
  - Dropbox.Api.Files.UploadSessionAppendError.TooLarge
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.UploadSessionAppendError.#ctor
  commentId: M:Dropbox.Api.Files.UploadSessionAppendError.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: UploadSessionAppendError()
  nameWithType: UploadSessionAppendError.UploadSessionAppendError()
  fullName: Dropbox.Api.Files.UploadSessionAppendError.UploadSessionAppendError()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.UploadSessionAppendError\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public UploadSessionAppendError()
    content.vb: Public Sub New
  overload: Dropbox.Api.Files.UploadSessionAppendError.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.UploadSessionAppendError.IsContentHashMismatch
  commentId: P:Dropbox.Api.Files.UploadSessionAppendError.IsContentHashMismatch
  id: IsContentHashMismatch
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: IsContentHashMismatch
  nameWithType: UploadSessionAppendError.IsContentHashMismatch
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IsContentHashMismatch
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsContentHashMismatch
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is ContentHashMismatch</p>\n"
  example: []
  syntax:
    content: public bool IsContentHashMismatch { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsContentHashMismatch As Boolean
  overload: Dropbox.Api.Files.UploadSessionAppendError.IsContentHashMismatch*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionAppendError.AsContentHashMismatch
  commentId: P:Dropbox.Api.Files.UploadSessionAppendError.AsContentHashMismatch
  id: AsContentHashMismatch
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: AsContentHashMismatch
  nameWithType: UploadSessionAppendError.AsContentHashMismatch
  fullName: Dropbox.Api.Files.UploadSessionAppendError.AsContentHashMismatch
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsContentHashMismatch
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 51
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a ContentHashMismatch, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public UploadSessionAppendError.ContentHashMismatch AsContentHashMismatch { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.UploadSessionAppendError.ContentHashMismatch
    content.vb: Public ReadOnly Property AsContentHashMismatch As UploadSessionAppendError.ContentHashMismatch
  overload: Dropbox.Api.Files.UploadSessionAppendError.AsContentHashMismatch*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionAppendError.IsNotFound
  commentId: P:Dropbox.Api.Files.UploadSessionAppendError.IsNotFound
  id: IsNotFound
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: IsNotFound
  nameWithType: UploadSessionAppendError.IsNotFound
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IsNotFound
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsNotFound
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is NotFound</p>\n"
  example: []
  syntax:
    content: public bool IsNotFound { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNotFound As Boolean
  overload: Dropbox.Api.Files.UploadSessionAppendError.IsNotFound*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionAppendError.AsNotFound
  commentId: P:Dropbox.Api.Files.UploadSessionAppendError.AsNotFound
  id: AsNotFound
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: AsNotFound
  nameWithType: UploadSessionAppendError.AsNotFound
  fullName: Dropbox.Api.Files.UploadSessionAppendError.AsNotFound
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsNotFound
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a NotFound, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public UploadSessionAppendError.NotFound AsNotFound { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.UploadSessionAppendError.NotFound
    content.vb: Public ReadOnly Property AsNotFound As UploadSessionAppendError.NotFound
  overload: Dropbox.Api.Files.UploadSessionAppendError.AsNotFound*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionAppendError.IsIncorrectOffset
  commentId: P:Dropbox.Api.Files.UploadSessionAppendError.IsIncorrectOffset
  id: IsIncorrectOffset
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: IsIncorrectOffset
  nameWithType: UploadSessionAppendError.IsIncorrectOffset
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IsIncorrectOffset
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsIncorrectOffset
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is IncorrectOffset</p>\n"
  example: []
  syntax:
    content: public bool IsIncorrectOffset { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsIncorrectOffset As Boolean
  overload: Dropbox.Api.Files.UploadSessionAppendError.IsIncorrectOffset*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionAppendError.AsIncorrectOffset
  commentId: P:Dropbox.Api.Files.UploadSessionAppendError.AsIncorrectOffset
  id: AsIncorrectOffset
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: AsIncorrectOffset
  nameWithType: UploadSessionAppendError.AsIncorrectOffset
  fullName: Dropbox.Api.Files.UploadSessionAppendError.AsIncorrectOffset
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsIncorrectOffset
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 95
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a IncorrectOffset, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public UploadSessionAppendError.IncorrectOffset AsIncorrectOffset { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.UploadSessionAppendError.IncorrectOffset
    content.vb: Public ReadOnly Property AsIncorrectOffset As UploadSessionAppendError.IncorrectOffset
  overload: Dropbox.Api.Files.UploadSessionAppendError.AsIncorrectOffset*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionAppendError.IsClosed
  commentId: P:Dropbox.Api.Files.UploadSessionAppendError.IsClosed
  id: IsClosed
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: IsClosed
  nameWithType: UploadSessionAppendError.IsClosed
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IsClosed
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsClosed
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 106
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Closed</p>\n"
  example: []
  syntax:
    content: public bool IsClosed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsClosed As Boolean
  overload: Dropbox.Api.Files.UploadSessionAppendError.IsClosed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionAppendError.AsClosed
  commentId: P:Dropbox.Api.Files.UploadSessionAppendError.AsClosed
  id: AsClosed
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: AsClosed
  nameWithType: UploadSessionAppendError.AsClosed
  fullName: Dropbox.Api.Files.UploadSessionAppendError.AsClosed
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsClosed
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 117
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Closed, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public UploadSessionAppendError.Closed AsClosed { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.UploadSessionAppendError.Closed
    content.vb: Public ReadOnly Property AsClosed As UploadSessionAppendError.Closed
  overload: Dropbox.Api.Files.UploadSessionAppendError.AsClosed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionAppendError.IsNotClosed
  commentId: P:Dropbox.Api.Files.UploadSessionAppendError.IsNotClosed
  id: IsNotClosed
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: IsNotClosed
  nameWithType: UploadSessionAppendError.IsNotClosed
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IsNotClosed
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsNotClosed
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 128
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is NotClosed</p>\n"
  example: []
  syntax:
    content: public bool IsNotClosed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNotClosed As Boolean
  overload: Dropbox.Api.Files.UploadSessionAppendError.IsNotClosed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionAppendError.AsNotClosed
  commentId: P:Dropbox.Api.Files.UploadSessionAppendError.AsNotClosed
  id: AsNotClosed
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: AsNotClosed
  nameWithType: UploadSessionAppendError.AsNotClosed
  fullName: Dropbox.Api.Files.UploadSessionAppendError.AsNotClosed
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsNotClosed
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 139
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a NotClosed, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public UploadSessionAppendError.NotClosed AsNotClosed { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.UploadSessionAppendError.NotClosed
    content.vb: Public ReadOnly Property AsNotClosed As UploadSessionAppendError.NotClosed
  overload: Dropbox.Api.Files.UploadSessionAppendError.AsNotClosed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionAppendError.IsTooLarge
  commentId: P:Dropbox.Api.Files.UploadSessionAppendError.IsTooLarge
  id: IsTooLarge
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: IsTooLarge
  nameWithType: UploadSessionAppendError.IsTooLarge
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IsTooLarge
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsTooLarge
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 150
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is TooLarge</p>\n"
  example: []
  syntax:
    content: public bool IsTooLarge { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTooLarge As Boolean
  overload: Dropbox.Api.Files.UploadSessionAppendError.IsTooLarge*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionAppendError.AsTooLarge
  commentId: P:Dropbox.Api.Files.UploadSessionAppendError.AsTooLarge
  id: AsTooLarge
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: AsTooLarge
  nameWithType: UploadSessionAppendError.AsTooLarge
  fullName: Dropbox.Api.Files.UploadSessionAppendError.AsTooLarge
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsTooLarge
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 161
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a TooLarge, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public UploadSessionAppendError.TooLarge AsTooLarge { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.UploadSessionAppendError.TooLarge
    content.vb: Public ReadOnly Property AsTooLarge As UploadSessionAppendError.TooLarge
  overload: Dropbox.Api.Files.UploadSessionAppendError.AsTooLarge*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionAppendError.IsConcurrentSessionInvalidOffset
  commentId: P:Dropbox.Api.Files.UploadSessionAppendError.IsConcurrentSessionInvalidOffset
  id: IsConcurrentSessionInvalidOffset
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: IsConcurrentSessionInvalidOffset
  nameWithType: UploadSessionAppendError.IsConcurrentSessionInvalidOffset
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IsConcurrentSessionInvalidOffset
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsConcurrentSessionInvalidOffset
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 173
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is\nConcurrentSessionInvalidOffset</p>\n"
  example: []
  syntax:
    content: public bool IsConcurrentSessionInvalidOffset { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsConcurrentSessionInvalidOffset As Boolean
  overload: Dropbox.Api.Files.UploadSessionAppendError.IsConcurrentSessionInvalidOffset*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionAppendError.AsConcurrentSessionInvalidOffset
  commentId: P:Dropbox.Api.Files.UploadSessionAppendError.AsConcurrentSessionInvalidOffset
  id: AsConcurrentSessionInvalidOffset
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: AsConcurrentSessionInvalidOffset
  nameWithType: UploadSessionAppendError.AsConcurrentSessionInvalidOffset
  fullName: Dropbox.Api.Files.UploadSessionAppendError.AsConcurrentSessionInvalidOffset
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsConcurrentSessionInvalidOffset
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 185
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a ConcurrentSessionInvalidOffset, or\n<code>null</code>.</p>\n"
  example: []
  syntax:
    content: public UploadSessionAppendError.ConcurrentSessionInvalidOffset AsConcurrentSessionInvalidOffset { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.UploadSessionAppendError.ConcurrentSessionInvalidOffset
    content.vb: Public ReadOnly Property AsConcurrentSessionInvalidOffset As UploadSessionAppendError.ConcurrentSessionInvalidOffset
  overload: Dropbox.Api.Files.UploadSessionAppendError.AsConcurrentSessionInvalidOffset*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionAppendError.IsConcurrentSessionInvalidDataSize
  commentId: P:Dropbox.Api.Files.UploadSessionAppendError.IsConcurrentSessionInvalidDataSize
  id: IsConcurrentSessionInvalidDataSize
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: IsConcurrentSessionInvalidDataSize
  nameWithType: UploadSessionAppendError.IsConcurrentSessionInvalidDataSize
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IsConcurrentSessionInvalidDataSize
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsConcurrentSessionInvalidDataSize
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 197
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is\nConcurrentSessionInvalidDataSize</p>\n"
  example: []
  syntax:
    content: public bool IsConcurrentSessionInvalidDataSize { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsConcurrentSessionInvalidDataSize As Boolean
  overload: Dropbox.Api.Files.UploadSessionAppendError.IsConcurrentSessionInvalidDataSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionAppendError.AsConcurrentSessionInvalidDataSize
  commentId: P:Dropbox.Api.Files.UploadSessionAppendError.AsConcurrentSessionInvalidDataSize
  id: AsConcurrentSessionInvalidDataSize
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: AsConcurrentSessionInvalidDataSize
  nameWithType: UploadSessionAppendError.AsConcurrentSessionInvalidDataSize
  fullName: Dropbox.Api.Files.UploadSessionAppendError.AsConcurrentSessionInvalidDataSize
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsConcurrentSessionInvalidDataSize
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 209
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a ConcurrentSessionInvalidDataSize, or\n<code>null</code>.</p>\n"
  example: []
  syntax:
    content: public UploadSessionAppendError.ConcurrentSessionInvalidDataSize AsConcurrentSessionInvalidDataSize { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.UploadSessionAppendError.ConcurrentSessionInvalidDataSize
    content.vb: Public ReadOnly Property AsConcurrentSessionInvalidDataSize As UploadSessionAppendError.ConcurrentSessionInvalidDataSize
  overload: Dropbox.Api.Files.UploadSessionAppendError.AsConcurrentSessionInvalidDataSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionAppendError.IsPayloadTooLarge
  commentId: P:Dropbox.Api.Files.UploadSessionAppendError.IsPayloadTooLarge
  id: IsPayloadTooLarge
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: IsPayloadTooLarge
  nameWithType: UploadSessionAppendError.IsPayloadTooLarge
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IsPayloadTooLarge
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsPayloadTooLarge
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 220
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is PayloadTooLarge</p>\n"
  example: []
  syntax:
    content: public bool IsPayloadTooLarge { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPayloadTooLarge As Boolean
  overload: Dropbox.Api.Files.UploadSessionAppendError.IsPayloadTooLarge*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionAppendError.AsPayloadTooLarge
  commentId: P:Dropbox.Api.Files.UploadSessionAppendError.AsPayloadTooLarge
  id: AsPayloadTooLarge
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: AsPayloadTooLarge
  nameWithType: UploadSessionAppendError.AsPayloadTooLarge
  fullName: Dropbox.Api.Files.UploadSessionAppendError.AsPayloadTooLarge
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsPayloadTooLarge
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 231
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a PayloadTooLarge, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public UploadSessionAppendError.PayloadTooLarge AsPayloadTooLarge { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.UploadSessionAppendError.PayloadTooLarge
    content.vb: Public ReadOnly Property AsPayloadTooLarge As UploadSessionAppendError.PayloadTooLarge
  overload: Dropbox.Api.Files.UploadSessionAppendError.AsPayloadTooLarge*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionAppendError.IsOther
  commentId: P:Dropbox.Api.Files.UploadSessionAppendError.IsOther
  id: IsOther
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: UploadSessionAppendError.IsOther
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 242
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.Files.UploadSessionAppendError.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.UploadSessionAppendError.AsOther
  commentId: P:Dropbox.Api.Files.UploadSessionAppendError.AsOther
  id: AsOther
  parent: Dropbox.Api.Files.UploadSessionAppendError
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: UploadSessionAppendError.AsOther
  fullName: Dropbox.Api.Files.UploadSessionAppendError.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionAppendError.cs
    startLine: 253
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public UploadSessionAppendError.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.UploadSessionAppendError.Other
    content.vb: Public ReadOnly Property AsOther As UploadSessionAppendError.Other
  overload: Dropbox.Api.Files.UploadSessionAppendError.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Files.UploadSessionAppendError
  commentId: T:Dropbox.Api.Files.UploadSessionAppendError
  parent: Dropbox.Api.Files
  name: UploadSessionAppendError
  nameWithType: UploadSessionAppendError
  fullName: Dropbox.Api.Files.UploadSessionAppendError
- uid: Dropbox.Api.Files.UploadSessionAppendError.#ctor*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.#ctor
  name: UploadSessionAppendError
  nameWithType: UploadSessionAppendError.UploadSessionAppendError
  fullName: Dropbox.Api.Files.UploadSessionAppendError.UploadSessionAppendError
- uid: Dropbox.Api.Files.UploadSessionAppendError.IsContentHashMismatch*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.IsContentHashMismatch
  name: IsContentHashMismatch
  nameWithType: UploadSessionAppendError.IsContentHashMismatch
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IsContentHashMismatch
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Files.UploadSessionAppendError.AsContentHashMismatch*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.AsContentHashMismatch
  name: AsContentHashMismatch
  nameWithType: UploadSessionAppendError.AsContentHashMismatch
  fullName: Dropbox.Api.Files.UploadSessionAppendError.AsContentHashMismatch
- uid: Dropbox.Api.Files.UploadSessionAppendError.ContentHashMismatch
  commentId: T:Dropbox.Api.Files.UploadSessionAppendError.ContentHashMismatch
  parent: Dropbox.Api.Files
  name: UploadSessionAppendError.ContentHashMismatch
  nameWithType: UploadSessionAppendError.ContentHashMismatch
  fullName: Dropbox.Api.Files.UploadSessionAppendError.ContentHashMismatch
- uid: Dropbox.Api.Files.UploadSessionAppendError.IsNotFound*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.IsNotFound
  name: IsNotFound
  nameWithType: UploadSessionAppendError.IsNotFound
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IsNotFound
- uid: Dropbox.Api.Files.UploadSessionAppendError.AsNotFound*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.AsNotFound
  name: AsNotFound
  nameWithType: UploadSessionAppendError.AsNotFound
  fullName: Dropbox.Api.Files.UploadSessionAppendError.AsNotFound
- uid: Dropbox.Api.Files.UploadSessionAppendError.NotFound
  commentId: T:Dropbox.Api.Files.UploadSessionAppendError.NotFound
  parent: Dropbox.Api.Files
  name: UploadSessionAppendError.NotFound
  nameWithType: UploadSessionAppendError.NotFound
  fullName: Dropbox.Api.Files.UploadSessionAppendError.NotFound
- uid: Dropbox.Api.Files.UploadSessionAppendError.IsIncorrectOffset*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.IsIncorrectOffset
  name: IsIncorrectOffset
  nameWithType: UploadSessionAppendError.IsIncorrectOffset
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IsIncorrectOffset
- uid: Dropbox.Api.Files.UploadSessionAppendError.AsIncorrectOffset*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.AsIncorrectOffset
  name: AsIncorrectOffset
  nameWithType: UploadSessionAppendError.AsIncorrectOffset
  fullName: Dropbox.Api.Files.UploadSessionAppendError.AsIncorrectOffset
- uid: Dropbox.Api.Files.UploadSessionAppendError.IncorrectOffset
  commentId: T:Dropbox.Api.Files.UploadSessionAppendError.IncorrectOffset
  parent: Dropbox.Api.Files
  name: UploadSessionAppendError.IncorrectOffset
  nameWithType: UploadSessionAppendError.IncorrectOffset
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IncorrectOffset
- uid: Dropbox.Api.Files.UploadSessionAppendError.IsClosed*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.IsClosed
  name: IsClosed
  nameWithType: UploadSessionAppendError.IsClosed
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IsClosed
- uid: Dropbox.Api.Files.UploadSessionAppendError.AsClosed*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.AsClosed
  name: AsClosed
  nameWithType: UploadSessionAppendError.AsClosed
  fullName: Dropbox.Api.Files.UploadSessionAppendError.AsClosed
- uid: Dropbox.Api.Files.UploadSessionAppendError.Closed
  commentId: T:Dropbox.Api.Files.UploadSessionAppendError.Closed
  parent: Dropbox.Api.Files
  name: UploadSessionAppendError.Closed
  nameWithType: UploadSessionAppendError.Closed
  fullName: Dropbox.Api.Files.UploadSessionAppendError.Closed
- uid: Dropbox.Api.Files.UploadSessionAppendError.IsNotClosed*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.IsNotClosed
  name: IsNotClosed
  nameWithType: UploadSessionAppendError.IsNotClosed
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IsNotClosed
- uid: Dropbox.Api.Files.UploadSessionAppendError.AsNotClosed*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.AsNotClosed
  name: AsNotClosed
  nameWithType: UploadSessionAppendError.AsNotClosed
  fullName: Dropbox.Api.Files.UploadSessionAppendError.AsNotClosed
- uid: Dropbox.Api.Files.UploadSessionAppendError.NotClosed
  commentId: T:Dropbox.Api.Files.UploadSessionAppendError.NotClosed
  parent: Dropbox.Api.Files
  name: UploadSessionAppendError.NotClosed
  nameWithType: UploadSessionAppendError.NotClosed
  fullName: Dropbox.Api.Files.UploadSessionAppendError.NotClosed
- uid: Dropbox.Api.Files.UploadSessionAppendError.IsTooLarge*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.IsTooLarge
  name: IsTooLarge
  nameWithType: UploadSessionAppendError.IsTooLarge
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IsTooLarge
- uid: Dropbox.Api.Files.UploadSessionAppendError.AsTooLarge*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.AsTooLarge
  name: AsTooLarge
  nameWithType: UploadSessionAppendError.AsTooLarge
  fullName: Dropbox.Api.Files.UploadSessionAppendError.AsTooLarge
- uid: Dropbox.Api.Files.UploadSessionAppendError.TooLarge
  commentId: T:Dropbox.Api.Files.UploadSessionAppendError.TooLarge
  parent: Dropbox.Api.Files
  name: UploadSessionAppendError.TooLarge
  nameWithType: UploadSessionAppendError.TooLarge
  fullName: Dropbox.Api.Files.UploadSessionAppendError.TooLarge
- uid: Dropbox.Api.Files.UploadSessionAppendError.IsConcurrentSessionInvalidOffset*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.IsConcurrentSessionInvalidOffset
  name: IsConcurrentSessionInvalidOffset
  nameWithType: UploadSessionAppendError.IsConcurrentSessionInvalidOffset
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IsConcurrentSessionInvalidOffset
- uid: Dropbox.Api.Files.UploadSessionAppendError.AsConcurrentSessionInvalidOffset*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.AsConcurrentSessionInvalidOffset
  name: AsConcurrentSessionInvalidOffset
  nameWithType: UploadSessionAppendError.AsConcurrentSessionInvalidOffset
  fullName: Dropbox.Api.Files.UploadSessionAppendError.AsConcurrentSessionInvalidOffset
- uid: Dropbox.Api.Files.UploadSessionAppendError.ConcurrentSessionInvalidOffset
  commentId: T:Dropbox.Api.Files.UploadSessionAppendError.ConcurrentSessionInvalidOffset
  parent: Dropbox.Api.Files
  name: UploadSessionAppendError.ConcurrentSessionInvalidOffset
  nameWithType: UploadSessionAppendError.ConcurrentSessionInvalidOffset
  fullName: Dropbox.Api.Files.UploadSessionAppendError.ConcurrentSessionInvalidOffset
- uid: Dropbox.Api.Files.UploadSessionAppendError.IsConcurrentSessionInvalidDataSize*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.IsConcurrentSessionInvalidDataSize
  name: IsConcurrentSessionInvalidDataSize
  nameWithType: UploadSessionAppendError.IsConcurrentSessionInvalidDataSize
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IsConcurrentSessionInvalidDataSize
- uid: Dropbox.Api.Files.UploadSessionAppendError.AsConcurrentSessionInvalidDataSize*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.AsConcurrentSessionInvalidDataSize
  name: AsConcurrentSessionInvalidDataSize
  nameWithType: UploadSessionAppendError.AsConcurrentSessionInvalidDataSize
  fullName: Dropbox.Api.Files.UploadSessionAppendError.AsConcurrentSessionInvalidDataSize
- uid: Dropbox.Api.Files.UploadSessionAppendError.ConcurrentSessionInvalidDataSize
  commentId: T:Dropbox.Api.Files.UploadSessionAppendError.ConcurrentSessionInvalidDataSize
  parent: Dropbox.Api.Files
  name: UploadSessionAppendError.ConcurrentSessionInvalidDataSize
  nameWithType: UploadSessionAppendError.ConcurrentSessionInvalidDataSize
  fullName: Dropbox.Api.Files.UploadSessionAppendError.ConcurrentSessionInvalidDataSize
- uid: Dropbox.Api.Files.UploadSessionAppendError.IsPayloadTooLarge*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.IsPayloadTooLarge
  name: IsPayloadTooLarge
  nameWithType: UploadSessionAppendError.IsPayloadTooLarge
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IsPayloadTooLarge
- uid: Dropbox.Api.Files.UploadSessionAppendError.AsPayloadTooLarge*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.AsPayloadTooLarge
  name: AsPayloadTooLarge
  nameWithType: UploadSessionAppendError.AsPayloadTooLarge
  fullName: Dropbox.Api.Files.UploadSessionAppendError.AsPayloadTooLarge
- uid: Dropbox.Api.Files.UploadSessionAppendError.PayloadTooLarge
  commentId: T:Dropbox.Api.Files.UploadSessionAppendError.PayloadTooLarge
  parent: Dropbox.Api.Files
  name: UploadSessionAppendError.PayloadTooLarge
  nameWithType: UploadSessionAppendError.PayloadTooLarge
  fullName: Dropbox.Api.Files.UploadSessionAppendError.PayloadTooLarge
- uid: Dropbox.Api.Files.UploadSessionAppendError.IsOther*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.IsOther
  name: IsOther
  nameWithType: UploadSessionAppendError.IsOther
  fullName: Dropbox.Api.Files.UploadSessionAppendError.IsOther
- uid: Dropbox.Api.Files.UploadSessionAppendError.AsOther*
  commentId: Overload:Dropbox.Api.Files.UploadSessionAppendError.AsOther
  name: AsOther
  nameWithType: UploadSessionAppendError.AsOther
  fullName: Dropbox.Api.Files.UploadSessionAppendError.AsOther
- uid: Dropbox.Api.Files.UploadSessionAppendError.Other
  commentId: T:Dropbox.Api.Files.UploadSessionAppendError.Other
  parent: Dropbox.Api.Files
  name: UploadSessionAppendError.Other
  nameWithType: UploadSessionAppendError.Other
  fullName: Dropbox.Api.Files.UploadSessionAppendError.Other
