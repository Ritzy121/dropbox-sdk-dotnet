### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
  commentId: T:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
  id: LegalHoldsListHeldRevisionsError
  parent: Dropbox.Api.Team
  children:
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.#ctor
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsInactiveLegalHold
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsInsufficientPermissions
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsLegalHoldStillEmpty
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsOther
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsTransientError
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsUnknownLegalHoldError
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsInactiveLegalHold
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsInsufficientPermissions
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsLegalHoldStillEmpty
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsOther
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsTransientError
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsUnknownLegalHoldError
  langs:
  - csharp
  - vb
  name: LegalHoldsListHeldRevisionsError
  nameWithType: LegalHoldsListHeldRevisionsError
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LegalHoldsListHeldRevisionsError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>The legal holds list held revisions error object</p>\n"
  example: []
  syntax:
    content: public class LegalHoldsListHeldRevisionsError
    content.vb: Public Class LegalHoldsListHeldRevisionsError
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.InactiveLegalHold
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.InsufficientPermissions
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.LegalHoldStillEmpty
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.Other
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.TransientError
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.UnknownLegalHoldError
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.#ctor
  commentId: M:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
  langs:
  - csharp
  - vb
  name: LegalHoldsListHeldRevisionsError()
  nameWithType: LegalHoldsListHeldRevisionsError.LegalHoldsListHeldRevisionsError()
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.LegalHoldsListHeldRevisionsError()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Team.LegalHoldsListHeldRevisionsError\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsListHeldRevisionsError()
    content.vb: Public Sub New
  overload: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsTransientError
  commentId: P:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsTransientError
  id: IsTransientError
  parent: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
  langs:
  - csharp
  - vb
  name: IsTransientError
  nameWithType: LegalHoldsListHeldRevisionsError.IsTransientError
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsTransientError
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsTransientError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is TransientError</p>\n"
  example: []
  syntax:
    content: public bool IsTransientError { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTransientError As Boolean
  overload: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsTransientError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsTransientError
  commentId: P:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsTransientError
  id: AsTransientError
  parent: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
  langs:
  - csharp
  - vb
  name: AsTransientError
  nameWithType: LegalHoldsListHeldRevisionsError.AsTransientError
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsTransientError
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsTransientError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
    startLine: 51
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a TransientError, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsListHeldRevisionsError.TransientError AsTransientError { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.TransientError
    content.vb: Public ReadOnly Property AsTransientError As LegalHoldsListHeldRevisionsError.TransientError
  overload: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsTransientError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsLegalHoldStillEmpty
  commentId: P:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsLegalHoldStillEmpty
  id: IsLegalHoldStillEmpty
  parent: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
  langs:
  - csharp
  - vb
  name: IsLegalHoldStillEmpty
  nameWithType: LegalHoldsListHeldRevisionsError.IsLegalHoldStillEmpty
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsLegalHoldStillEmpty
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsLegalHoldStillEmpty
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is LegalHoldStillEmpty</p>\n"
  example: []
  syntax:
    content: public bool IsLegalHoldStillEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLegalHoldStillEmpty As Boolean
  overload: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsLegalHoldStillEmpty*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsLegalHoldStillEmpty
  commentId: P:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsLegalHoldStillEmpty
  id: AsLegalHoldStillEmpty
  parent: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
  langs:
  - csharp
  - vb
  name: AsLegalHoldStillEmpty
  nameWithType: LegalHoldsListHeldRevisionsError.AsLegalHoldStillEmpty
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsLegalHoldStillEmpty
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsLegalHoldStillEmpty
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a LegalHoldStillEmpty, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsListHeldRevisionsError.LegalHoldStillEmpty AsLegalHoldStillEmpty { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.LegalHoldStillEmpty
    content.vb: Public ReadOnly Property AsLegalHoldStillEmpty As LegalHoldsListHeldRevisionsError.LegalHoldStillEmpty
  overload: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsLegalHoldStillEmpty*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsInactiveLegalHold
  commentId: P:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsInactiveLegalHold
  id: IsInactiveLegalHold
  parent: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
  langs:
  - csharp
  - vb
  name: IsInactiveLegalHold
  nameWithType: LegalHoldsListHeldRevisionsError.IsInactiveLegalHold
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsInactiveLegalHold
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsInactiveLegalHold
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is InactiveLegalHold</p>\n"
  example: []
  syntax:
    content: public bool IsInactiveLegalHold { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInactiveLegalHold As Boolean
  overload: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsInactiveLegalHold*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsInactiveLegalHold
  commentId: P:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsInactiveLegalHold
  id: AsInactiveLegalHold
  parent: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
  langs:
  - csharp
  - vb
  name: AsInactiveLegalHold
  nameWithType: LegalHoldsListHeldRevisionsError.AsInactiveLegalHold
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsInactiveLegalHold
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsInactiveLegalHold
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
    startLine: 95
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a InactiveLegalHold, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsListHeldRevisionsError.InactiveLegalHold AsInactiveLegalHold { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.InactiveLegalHold
    content.vb: Public ReadOnly Property AsInactiveLegalHold As LegalHoldsListHeldRevisionsError.InactiveLegalHold
  overload: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsInactiveLegalHold*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsUnknownLegalHoldError
  commentId: P:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsUnknownLegalHoldError
  id: IsUnknownLegalHoldError
  parent: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
  langs:
  - csharp
  - vb
  name: IsUnknownLegalHoldError
  nameWithType: LegalHoldsListHeldRevisionsError.IsUnknownLegalHoldError
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsUnknownLegalHoldError
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsUnknownLegalHoldError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
    startLine: 106
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is UnknownLegalHoldError</p>\n"
  example: []
  syntax:
    content: public bool IsUnknownLegalHoldError { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUnknownLegalHoldError As Boolean
  overload: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsUnknownLegalHoldError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsUnknownLegalHoldError
  commentId: P:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsUnknownLegalHoldError
  id: AsUnknownLegalHoldError
  parent: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
  langs:
  - csharp
  - vb
  name: AsUnknownLegalHoldError
  nameWithType: LegalHoldsListHeldRevisionsError.AsUnknownLegalHoldError
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsUnknownLegalHoldError
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsUnknownLegalHoldError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
    startLine: 117
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a UnknownLegalHoldError, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsListHeldRevisionsError.UnknownLegalHoldError AsUnknownLegalHoldError { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.UnknownLegalHoldError
    content.vb: Public ReadOnly Property AsUnknownLegalHoldError As LegalHoldsListHeldRevisionsError.UnknownLegalHoldError
  overload: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsUnknownLegalHoldError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsInsufficientPermissions
  commentId: P:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsInsufficientPermissions
  id: IsInsufficientPermissions
  parent: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
  langs:
  - csharp
  - vb
  name: IsInsufficientPermissions
  nameWithType: LegalHoldsListHeldRevisionsError.IsInsufficientPermissions
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsInsufficientPermissions
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsInsufficientPermissions
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
    startLine: 129
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is\nInsufficientPermissions</p>\n"
  example: []
  syntax:
    content: public bool IsInsufficientPermissions { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInsufficientPermissions As Boolean
  overload: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsInsufficientPermissions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsInsufficientPermissions
  commentId: P:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsInsufficientPermissions
  id: AsInsufficientPermissions
  parent: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
  langs:
  - csharp
  - vb
  name: AsInsufficientPermissions
  nameWithType: LegalHoldsListHeldRevisionsError.AsInsufficientPermissions
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsInsufficientPermissions
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsInsufficientPermissions
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
    startLine: 140
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a InsufficientPermissions, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsListHeldRevisionsError.InsufficientPermissions AsInsufficientPermissions { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.InsufficientPermissions
    content.vb: Public ReadOnly Property AsInsufficientPermissions As LegalHoldsListHeldRevisionsError.InsufficientPermissions
  overload: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsInsufficientPermissions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsOther
  commentId: P:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsOther
  id: IsOther
  parent: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: LegalHoldsListHeldRevisionsError.IsOther
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
    startLine: 151
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsOther
  commentId: P:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsOther
  id: AsOther
  parent: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: LegalHoldsListHeldRevisionsError.AsOther
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionsError.cs
    startLine: 162
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsListHeldRevisionsError.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.Other
    content.vb: Public ReadOnly Property AsOther As LegalHoldsListHeldRevisionsError.Other
  overload: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Team
  commentId: N:Dropbox.Api.Team
  name: Dropbox.Api.Team
  nameWithType: Dropbox.Api.Team
  fullName: Dropbox.Api.Team
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
  commentId: T:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
  parent: Dropbox.Api.Team
  name: LegalHoldsListHeldRevisionsError
  nameWithType: LegalHoldsListHeldRevisionsError
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.#ctor*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.#ctor
  name: LegalHoldsListHeldRevisionsError
  nameWithType: LegalHoldsListHeldRevisionsError.LegalHoldsListHeldRevisionsError
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.LegalHoldsListHeldRevisionsError
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsTransientError*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsTransientError
  name: IsTransientError
  nameWithType: LegalHoldsListHeldRevisionsError.IsTransientError
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsTransientError
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsTransientError*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsTransientError
  name: AsTransientError
  nameWithType: LegalHoldsListHeldRevisionsError.AsTransientError
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsTransientError
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.TransientError
  commentId: T:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.TransientError
  parent: Dropbox.Api.Team
  name: LegalHoldsListHeldRevisionsError.TransientError
  nameWithType: LegalHoldsListHeldRevisionsError.TransientError
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.TransientError
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsLegalHoldStillEmpty*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsLegalHoldStillEmpty
  name: IsLegalHoldStillEmpty
  nameWithType: LegalHoldsListHeldRevisionsError.IsLegalHoldStillEmpty
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsLegalHoldStillEmpty
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsLegalHoldStillEmpty*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsLegalHoldStillEmpty
  name: AsLegalHoldStillEmpty
  nameWithType: LegalHoldsListHeldRevisionsError.AsLegalHoldStillEmpty
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsLegalHoldStillEmpty
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.LegalHoldStillEmpty
  commentId: T:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.LegalHoldStillEmpty
  parent: Dropbox.Api.Team
  name: LegalHoldsListHeldRevisionsError.LegalHoldStillEmpty
  nameWithType: LegalHoldsListHeldRevisionsError.LegalHoldStillEmpty
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.LegalHoldStillEmpty
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsInactiveLegalHold*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsInactiveLegalHold
  name: IsInactiveLegalHold
  nameWithType: LegalHoldsListHeldRevisionsError.IsInactiveLegalHold
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsInactiveLegalHold
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsInactiveLegalHold*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsInactiveLegalHold
  name: AsInactiveLegalHold
  nameWithType: LegalHoldsListHeldRevisionsError.AsInactiveLegalHold
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsInactiveLegalHold
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.InactiveLegalHold
  commentId: T:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.InactiveLegalHold
  parent: Dropbox.Api.Team
  name: LegalHoldsListHeldRevisionsError.InactiveLegalHold
  nameWithType: LegalHoldsListHeldRevisionsError.InactiveLegalHold
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.InactiveLegalHold
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsUnknownLegalHoldError*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsUnknownLegalHoldError
  name: IsUnknownLegalHoldError
  nameWithType: LegalHoldsListHeldRevisionsError.IsUnknownLegalHoldError
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsUnknownLegalHoldError
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsUnknownLegalHoldError*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsUnknownLegalHoldError
  name: AsUnknownLegalHoldError
  nameWithType: LegalHoldsListHeldRevisionsError.AsUnknownLegalHoldError
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsUnknownLegalHoldError
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.UnknownLegalHoldError
  commentId: T:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.UnknownLegalHoldError
  parent: Dropbox.Api.Team
  name: LegalHoldsListHeldRevisionsError.UnknownLegalHoldError
  nameWithType: LegalHoldsListHeldRevisionsError.UnknownLegalHoldError
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.UnknownLegalHoldError
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsInsufficientPermissions*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsInsufficientPermissions
  name: IsInsufficientPermissions
  nameWithType: LegalHoldsListHeldRevisionsError.IsInsufficientPermissions
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsInsufficientPermissions
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsInsufficientPermissions*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsInsufficientPermissions
  name: AsInsufficientPermissions
  nameWithType: LegalHoldsListHeldRevisionsError.AsInsufficientPermissions
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsInsufficientPermissions
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.InsufficientPermissions
  commentId: T:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.InsufficientPermissions
  parent: Dropbox.Api.Team
  name: LegalHoldsListHeldRevisionsError.InsufficientPermissions
  nameWithType: LegalHoldsListHeldRevisionsError.InsufficientPermissions
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.InsufficientPermissions
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsOther*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsOther
  name: IsOther
  nameWithType: LegalHoldsListHeldRevisionsError.IsOther
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.IsOther
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsOther*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsOther
  name: AsOther
  nameWithType: LegalHoldsListHeldRevisionsError.AsOther
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.AsOther
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.Other
  commentId: T:Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.Other
  parent: Dropbox.Api.Team
  name: LegalHoldsListHeldRevisionsError.Other
  nameWithType: LegalHoldsListHeldRevisionsError.Other
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionsError.Other
