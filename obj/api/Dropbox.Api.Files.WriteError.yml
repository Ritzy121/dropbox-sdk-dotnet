### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.WriteError
  commentId: T:Dropbox.Api.Files.WriteError
  id: WriteError
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.WriteError.#ctor
  - Dropbox.Api.Files.WriteError.AsConflict
  - Dropbox.Api.Files.WriteError.AsDisallowedName
  - Dropbox.Api.Files.WriteError.AsInsufficientSpace
  - Dropbox.Api.Files.WriteError.AsMalformedPath
  - Dropbox.Api.Files.WriteError.AsNoWritePermission
  - Dropbox.Api.Files.WriteError.AsOperationSuppressed
  - Dropbox.Api.Files.WriteError.AsOther
  - Dropbox.Api.Files.WriteError.AsTeamFolder
  - Dropbox.Api.Files.WriteError.AsTooManyWriteOperations
  - Dropbox.Api.Files.WriteError.IsConflict
  - Dropbox.Api.Files.WriteError.IsDisallowedName
  - Dropbox.Api.Files.WriteError.IsInsufficientSpace
  - Dropbox.Api.Files.WriteError.IsMalformedPath
  - Dropbox.Api.Files.WriteError.IsNoWritePermission
  - Dropbox.Api.Files.WriteError.IsOperationSuppressed
  - Dropbox.Api.Files.WriteError.IsOther
  - Dropbox.Api.Files.WriteError.IsTeamFolder
  - Dropbox.Api.Files.WriteError.IsTooManyWriteOperations
  langs:
  - csharp
  - vb
  name: WriteError
  nameWithType: WriteError
  fullName: Dropbox.Api.Files.WriteError
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: WriteError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The write error object</p>\n"
  example: []
  syntax:
    content: public class WriteError
    content.vb: Public Class WriteError
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Files.WriteError.Conflict
  - Dropbox.Api.Files.WriteError.DisallowedName
  - Dropbox.Api.Files.WriteError.InsufficientSpace
  - Dropbox.Api.Files.WriteError.MalformedPath
  - Dropbox.Api.Files.WriteError.NoWritePermission
  - Dropbox.Api.Files.WriteError.OperationSuppressed
  - Dropbox.Api.Files.WriteError.Other
  - Dropbox.Api.Files.WriteError.TeamFolder
  - Dropbox.Api.Files.WriteError.TooManyWriteOperations
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.WriteError.#ctor
  commentId: M:Dropbox.Api.Files.WriteError.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Files.WriteError
  langs:
  - csharp
  - vb
  name: WriteError()
  nameWithType: WriteError.WriteError()
  fullName: Dropbox.Api.Files.WriteError.WriteError()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
    startLine: 32
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.WriteError\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public WriteError()
    content.vb: Public Sub New
  overload: Dropbox.Api.Files.WriteError.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.WriteError.IsMalformedPath
  commentId: P:Dropbox.Api.Files.WriteError.IsMalformedPath
  id: IsMalformedPath
  parent: Dropbox.Api.Files.WriteError
  langs:
  - csharp
  - vb
  name: IsMalformedPath
  nameWithType: WriteError.IsMalformedPath
  fullName: Dropbox.Api.Files.WriteError.IsMalformedPath
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsMalformedPath
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
    startLine: 39
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is MalformedPath</p>\n"
  example: []
  syntax:
    content: public bool IsMalformedPath { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMalformedPath As Boolean
  overload: Dropbox.Api.Files.WriteError.IsMalformedPath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.WriteError.AsMalformedPath
  commentId: P:Dropbox.Api.Files.WriteError.AsMalformedPath
  id: AsMalformedPath
  parent: Dropbox.Api.Files.WriteError
  langs:
  - csharp
  - vb
  name: AsMalformedPath
  nameWithType: WriteError.AsMalformedPath
  fullName: Dropbox.Api.Files.WriteError.AsMalformedPath
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsMalformedPath
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
    startLine: 50
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a MalformedPath, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public WriteError.MalformedPath AsMalformedPath { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.WriteError.MalformedPath
    content.vb: Public ReadOnly Property AsMalformedPath As WriteError.MalformedPath
  overload: Dropbox.Api.Files.WriteError.AsMalformedPath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.WriteError.IsConflict
  commentId: P:Dropbox.Api.Files.WriteError.IsConflict
  id: IsConflict
  parent: Dropbox.Api.Files.WriteError
  langs:
  - csharp
  - vb
  name: IsConflict
  nameWithType: WriteError.IsConflict
  fullName: Dropbox.Api.Files.WriteError.IsConflict
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsConflict
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
    startLine: 61
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Conflict</p>\n"
  example: []
  syntax:
    content: public bool IsConflict { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsConflict As Boolean
  overload: Dropbox.Api.Files.WriteError.IsConflict*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.WriteError.AsConflict
  commentId: P:Dropbox.Api.Files.WriteError.AsConflict
  id: AsConflict
  parent: Dropbox.Api.Files.WriteError
  langs:
  - csharp
  - vb
  name: AsConflict
  nameWithType: WriteError.AsConflict
  fullName: Dropbox.Api.Files.WriteError.AsConflict
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsConflict
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
    startLine: 72
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Conflict, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public WriteError.Conflict AsConflict { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.WriteError.Conflict
    content.vb: Public ReadOnly Property AsConflict As WriteError.Conflict
  overload: Dropbox.Api.Files.WriteError.AsConflict*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.WriteError.IsNoWritePermission
  commentId: P:Dropbox.Api.Files.WriteError.IsNoWritePermission
  id: IsNoWritePermission
  parent: Dropbox.Api.Files.WriteError
  langs:
  - csharp
  - vb
  name: IsNoWritePermission
  nameWithType: WriteError.IsNoWritePermission
  fullName: Dropbox.Api.Files.WriteError.IsNoWritePermission
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsNoWritePermission
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
    startLine: 83
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is NoWritePermission</p>\n"
  example: []
  syntax:
    content: public bool IsNoWritePermission { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNoWritePermission As Boolean
  overload: Dropbox.Api.Files.WriteError.IsNoWritePermission*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.WriteError.AsNoWritePermission
  commentId: P:Dropbox.Api.Files.WriteError.AsNoWritePermission
  id: AsNoWritePermission
  parent: Dropbox.Api.Files.WriteError
  langs:
  - csharp
  - vb
  name: AsNoWritePermission
  nameWithType: WriteError.AsNoWritePermission
  fullName: Dropbox.Api.Files.WriteError.AsNoWritePermission
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsNoWritePermission
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
    startLine: 94
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a NoWritePermission, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public WriteError.NoWritePermission AsNoWritePermission { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.WriteError.NoWritePermission
    content.vb: Public ReadOnly Property AsNoWritePermission As WriteError.NoWritePermission
  overload: Dropbox.Api.Files.WriteError.AsNoWritePermission*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.WriteError.IsInsufficientSpace
  commentId: P:Dropbox.Api.Files.WriteError.IsInsufficientSpace
  id: IsInsufficientSpace
  parent: Dropbox.Api.Files.WriteError
  langs:
  - csharp
  - vb
  name: IsInsufficientSpace
  nameWithType: WriteError.IsInsufficientSpace
  fullName: Dropbox.Api.Files.WriteError.IsInsufficientSpace
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsInsufficientSpace
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
    startLine: 105
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is InsufficientSpace</p>\n"
  example: []
  syntax:
    content: public bool IsInsufficientSpace { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInsufficientSpace As Boolean
  overload: Dropbox.Api.Files.WriteError.IsInsufficientSpace*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.WriteError.AsInsufficientSpace
  commentId: P:Dropbox.Api.Files.WriteError.AsInsufficientSpace
  id: AsInsufficientSpace
  parent: Dropbox.Api.Files.WriteError
  langs:
  - csharp
  - vb
  name: AsInsufficientSpace
  nameWithType: WriteError.AsInsufficientSpace
  fullName: Dropbox.Api.Files.WriteError.AsInsufficientSpace
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsInsufficientSpace
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
    startLine: 116
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a InsufficientSpace, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public WriteError.InsufficientSpace AsInsufficientSpace { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.WriteError.InsufficientSpace
    content.vb: Public ReadOnly Property AsInsufficientSpace As WriteError.InsufficientSpace
  overload: Dropbox.Api.Files.WriteError.AsInsufficientSpace*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.WriteError.IsDisallowedName
  commentId: P:Dropbox.Api.Files.WriteError.IsDisallowedName
  id: IsDisallowedName
  parent: Dropbox.Api.Files.WriteError
  langs:
  - csharp
  - vb
  name: IsDisallowedName
  nameWithType: WriteError.IsDisallowedName
  fullName: Dropbox.Api.Files.WriteError.IsDisallowedName
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsDisallowedName
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
    startLine: 127
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is DisallowedName</p>\n"
  example: []
  syntax:
    content: public bool IsDisallowedName { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDisallowedName As Boolean
  overload: Dropbox.Api.Files.WriteError.IsDisallowedName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.WriteError.AsDisallowedName
  commentId: P:Dropbox.Api.Files.WriteError.AsDisallowedName
  id: AsDisallowedName
  parent: Dropbox.Api.Files.WriteError
  langs:
  - csharp
  - vb
  name: AsDisallowedName
  nameWithType: WriteError.AsDisallowedName
  fullName: Dropbox.Api.Files.WriteError.AsDisallowedName
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsDisallowedName
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
    startLine: 138
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a DisallowedName, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public WriteError.DisallowedName AsDisallowedName { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.WriteError.DisallowedName
    content.vb: Public ReadOnly Property AsDisallowedName As WriteError.DisallowedName
  overload: Dropbox.Api.Files.WriteError.AsDisallowedName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.WriteError.IsTeamFolder
  commentId: P:Dropbox.Api.Files.WriteError.IsTeamFolder
  id: IsTeamFolder
  parent: Dropbox.Api.Files.WriteError
  langs:
  - csharp
  - vb
  name: IsTeamFolder
  nameWithType: WriteError.IsTeamFolder
  fullName: Dropbox.Api.Files.WriteError.IsTeamFolder
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsTeamFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
    startLine: 149
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is TeamFolder</p>\n"
  example: []
  syntax:
    content: public bool IsTeamFolder { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTeamFolder As Boolean
  overload: Dropbox.Api.Files.WriteError.IsTeamFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.WriteError.AsTeamFolder
  commentId: P:Dropbox.Api.Files.WriteError.AsTeamFolder
  id: AsTeamFolder
  parent: Dropbox.Api.Files.WriteError
  langs:
  - csharp
  - vb
  name: AsTeamFolder
  nameWithType: WriteError.AsTeamFolder
  fullName: Dropbox.Api.Files.WriteError.AsTeamFolder
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsTeamFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
    startLine: 160
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a TeamFolder, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public WriteError.TeamFolder AsTeamFolder { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.WriteError.TeamFolder
    content.vb: Public ReadOnly Property AsTeamFolder As WriteError.TeamFolder
  overload: Dropbox.Api.Files.WriteError.AsTeamFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.WriteError.IsOperationSuppressed
  commentId: P:Dropbox.Api.Files.WriteError.IsOperationSuppressed
  id: IsOperationSuppressed
  parent: Dropbox.Api.Files.WriteError
  langs:
  - csharp
  - vb
  name: IsOperationSuppressed
  nameWithType: WriteError.IsOperationSuppressed
  fullName: Dropbox.Api.Files.WriteError.IsOperationSuppressed
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOperationSuppressed
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
    startLine: 171
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is OperationSuppressed</p>\n"
  example: []
  syntax:
    content: public bool IsOperationSuppressed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOperationSuppressed As Boolean
  overload: Dropbox.Api.Files.WriteError.IsOperationSuppressed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.WriteError.AsOperationSuppressed
  commentId: P:Dropbox.Api.Files.WriteError.AsOperationSuppressed
  id: AsOperationSuppressed
  parent: Dropbox.Api.Files.WriteError
  langs:
  - csharp
  - vb
  name: AsOperationSuppressed
  nameWithType: WriteError.AsOperationSuppressed
  fullName: Dropbox.Api.Files.WriteError.AsOperationSuppressed
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOperationSuppressed
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
    startLine: 182
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a OperationSuppressed, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public WriteError.OperationSuppressed AsOperationSuppressed { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.WriteError.OperationSuppressed
    content.vb: Public ReadOnly Property AsOperationSuppressed As WriteError.OperationSuppressed
  overload: Dropbox.Api.Files.WriteError.AsOperationSuppressed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.WriteError.IsTooManyWriteOperations
  commentId: P:Dropbox.Api.Files.WriteError.IsTooManyWriteOperations
  id: IsTooManyWriteOperations
  parent: Dropbox.Api.Files.WriteError
  langs:
  - csharp
  - vb
  name: IsTooManyWriteOperations
  nameWithType: WriteError.IsTooManyWriteOperations
  fullName: Dropbox.Api.Files.WriteError.IsTooManyWriteOperations
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsTooManyWriteOperations
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
    startLine: 194
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is\nTooManyWriteOperations</p>\n"
  example: []
  syntax:
    content: public bool IsTooManyWriteOperations { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTooManyWriteOperations As Boolean
  overload: Dropbox.Api.Files.WriteError.IsTooManyWriteOperations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.WriteError.AsTooManyWriteOperations
  commentId: P:Dropbox.Api.Files.WriteError.AsTooManyWriteOperations
  id: AsTooManyWriteOperations
  parent: Dropbox.Api.Files.WriteError
  langs:
  - csharp
  - vb
  name: AsTooManyWriteOperations
  nameWithType: WriteError.AsTooManyWriteOperations
  fullName: Dropbox.Api.Files.WriteError.AsTooManyWriteOperations
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsTooManyWriteOperations
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
    startLine: 205
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a TooManyWriteOperations, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public WriteError.TooManyWriteOperations AsTooManyWriteOperations { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.WriteError.TooManyWriteOperations
    content.vb: Public ReadOnly Property AsTooManyWriteOperations As WriteError.TooManyWriteOperations
  overload: Dropbox.Api.Files.WriteError.AsTooManyWriteOperations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.WriteError.IsOther
  commentId: P:Dropbox.Api.Files.WriteError.IsOther
  id: IsOther
  parent: Dropbox.Api.Files.WriteError
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: WriteError.IsOther
  fullName: Dropbox.Api.Files.WriteError.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
    startLine: 216
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.Files.WriteError.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.WriteError.AsOther
  commentId: P:Dropbox.Api.Files.WriteError.AsOther
  id: AsOther
  parent: Dropbox.Api.Files.WriteError
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: WriteError.AsOther
  fullName: Dropbox.Api.Files.WriteError.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/WriteError.cs
    startLine: 227
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public WriteError.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.WriteError.Other
    content.vb: Public ReadOnly Property AsOther As WriteError.Other
  overload: Dropbox.Api.Files.WriteError.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Files.WriteError
  commentId: T:Dropbox.Api.Files.WriteError
  parent: Dropbox.Api.Files
  name: WriteError
  nameWithType: WriteError
  fullName: Dropbox.Api.Files.WriteError
- uid: Dropbox.Api.Files.WriteError.#ctor*
  commentId: Overload:Dropbox.Api.Files.WriteError.#ctor
  name: WriteError
  nameWithType: WriteError.WriteError
  fullName: Dropbox.Api.Files.WriteError.WriteError
- uid: Dropbox.Api.Files.WriteError.IsMalformedPath*
  commentId: Overload:Dropbox.Api.Files.WriteError.IsMalformedPath
  name: IsMalformedPath
  nameWithType: WriteError.IsMalformedPath
  fullName: Dropbox.Api.Files.WriteError.IsMalformedPath
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Files.WriteError.AsMalformedPath*
  commentId: Overload:Dropbox.Api.Files.WriteError.AsMalformedPath
  name: AsMalformedPath
  nameWithType: WriteError.AsMalformedPath
  fullName: Dropbox.Api.Files.WriteError.AsMalformedPath
- uid: Dropbox.Api.Files.WriteError.MalformedPath
  commentId: T:Dropbox.Api.Files.WriteError.MalformedPath
  parent: Dropbox.Api.Files
  name: WriteError.MalformedPath
  nameWithType: WriteError.MalformedPath
  fullName: Dropbox.Api.Files.WriteError.MalformedPath
- uid: Dropbox.Api.Files.WriteError.IsConflict*
  commentId: Overload:Dropbox.Api.Files.WriteError.IsConflict
  name: IsConflict
  nameWithType: WriteError.IsConflict
  fullName: Dropbox.Api.Files.WriteError.IsConflict
- uid: Dropbox.Api.Files.WriteError.AsConflict*
  commentId: Overload:Dropbox.Api.Files.WriteError.AsConflict
  name: AsConflict
  nameWithType: WriteError.AsConflict
  fullName: Dropbox.Api.Files.WriteError.AsConflict
- uid: Dropbox.Api.Files.WriteError.Conflict
  commentId: T:Dropbox.Api.Files.WriteError.Conflict
  parent: Dropbox.Api.Files
  name: WriteError.Conflict
  nameWithType: WriteError.Conflict
  fullName: Dropbox.Api.Files.WriteError.Conflict
- uid: Dropbox.Api.Files.WriteError.IsNoWritePermission*
  commentId: Overload:Dropbox.Api.Files.WriteError.IsNoWritePermission
  name: IsNoWritePermission
  nameWithType: WriteError.IsNoWritePermission
  fullName: Dropbox.Api.Files.WriteError.IsNoWritePermission
- uid: Dropbox.Api.Files.WriteError.AsNoWritePermission*
  commentId: Overload:Dropbox.Api.Files.WriteError.AsNoWritePermission
  name: AsNoWritePermission
  nameWithType: WriteError.AsNoWritePermission
  fullName: Dropbox.Api.Files.WriteError.AsNoWritePermission
- uid: Dropbox.Api.Files.WriteError.NoWritePermission
  commentId: T:Dropbox.Api.Files.WriteError.NoWritePermission
  parent: Dropbox.Api.Files
  name: WriteError.NoWritePermission
  nameWithType: WriteError.NoWritePermission
  fullName: Dropbox.Api.Files.WriteError.NoWritePermission
- uid: Dropbox.Api.Files.WriteError.IsInsufficientSpace*
  commentId: Overload:Dropbox.Api.Files.WriteError.IsInsufficientSpace
  name: IsInsufficientSpace
  nameWithType: WriteError.IsInsufficientSpace
  fullName: Dropbox.Api.Files.WriteError.IsInsufficientSpace
- uid: Dropbox.Api.Files.WriteError.AsInsufficientSpace*
  commentId: Overload:Dropbox.Api.Files.WriteError.AsInsufficientSpace
  name: AsInsufficientSpace
  nameWithType: WriteError.AsInsufficientSpace
  fullName: Dropbox.Api.Files.WriteError.AsInsufficientSpace
- uid: Dropbox.Api.Files.WriteError.InsufficientSpace
  commentId: T:Dropbox.Api.Files.WriteError.InsufficientSpace
  parent: Dropbox.Api.Files
  name: WriteError.InsufficientSpace
  nameWithType: WriteError.InsufficientSpace
  fullName: Dropbox.Api.Files.WriteError.InsufficientSpace
- uid: Dropbox.Api.Files.WriteError.IsDisallowedName*
  commentId: Overload:Dropbox.Api.Files.WriteError.IsDisallowedName
  name: IsDisallowedName
  nameWithType: WriteError.IsDisallowedName
  fullName: Dropbox.Api.Files.WriteError.IsDisallowedName
- uid: Dropbox.Api.Files.WriteError.AsDisallowedName*
  commentId: Overload:Dropbox.Api.Files.WriteError.AsDisallowedName
  name: AsDisallowedName
  nameWithType: WriteError.AsDisallowedName
  fullName: Dropbox.Api.Files.WriteError.AsDisallowedName
- uid: Dropbox.Api.Files.WriteError.DisallowedName
  commentId: T:Dropbox.Api.Files.WriteError.DisallowedName
  parent: Dropbox.Api.Files
  name: WriteError.DisallowedName
  nameWithType: WriteError.DisallowedName
  fullName: Dropbox.Api.Files.WriteError.DisallowedName
- uid: Dropbox.Api.Files.WriteError.IsTeamFolder*
  commentId: Overload:Dropbox.Api.Files.WriteError.IsTeamFolder
  name: IsTeamFolder
  nameWithType: WriteError.IsTeamFolder
  fullName: Dropbox.Api.Files.WriteError.IsTeamFolder
- uid: Dropbox.Api.Files.WriteError.AsTeamFolder*
  commentId: Overload:Dropbox.Api.Files.WriteError.AsTeamFolder
  name: AsTeamFolder
  nameWithType: WriteError.AsTeamFolder
  fullName: Dropbox.Api.Files.WriteError.AsTeamFolder
- uid: Dropbox.Api.Files.WriteError.TeamFolder
  commentId: T:Dropbox.Api.Files.WriteError.TeamFolder
  parent: Dropbox.Api.Files
  name: WriteError.TeamFolder
  nameWithType: WriteError.TeamFolder
  fullName: Dropbox.Api.Files.WriteError.TeamFolder
- uid: Dropbox.Api.Files.WriteError.IsOperationSuppressed*
  commentId: Overload:Dropbox.Api.Files.WriteError.IsOperationSuppressed
  name: IsOperationSuppressed
  nameWithType: WriteError.IsOperationSuppressed
  fullName: Dropbox.Api.Files.WriteError.IsOperationSuppressed
- uid: Dropbox.Api.Files.WriteError.AsOperationSuppressed*
  commentId: Overload:Dropbox.Api.Files.WriteError.AsOperationSuppressed
  name: AsOperationSuppressed
  nameWithType: WriteError.AsOperationSuppressed
  fullName: Dropbox.Api.Files.WriteError.AsOperationSuppressed
- uid: Dropbox.Api.Files.WriteError.OperationSuppressed
  commentId: T:Dropbox.Api.Files.WriteError.OperationSuppressed
  parent: Dropbox.Api.Files
  name: WriteError.OperationSuppressed
  nameWithType: WriteError.OperationSuppressed
  fullName: Dropbox.Api.Files.WriteError.OperationSuppressed
- uid: Dropbox.Api.Files.WriteError.IsTooManyWriteOperations*
  commentId: Overload:Dropbox.Api.Files.WriteError.IsTooManyWriteOperations
  name: IsTooManyWriteOperations
  nameWithType: WriteError.IsTooManyWriteOperations
  fullName: Dropbox.Api.Files.WriteError.IsTooManyWriteOperations
- uid: Dropbox.Api.Files.WriteError.AsTooManyWriteOperations*
  commentId: Overload:Dropbox.Api.Files.WriteError.AsTooManyWriteOperations
  name: AsTooManyWriteOperations
  nameWithType: WriteError.AsTooManyWriteOperations
  fullName: Dropbox.Api.Files.WriteError.AsTooManyWriteOperations
- uid: Dropbox.Api.Files.WriteError.TooManyWriteOperations
  commentId: T:Dropbox.Api.Files.WriteError.TooManyWriteOperations
  parent: Dropbox.Api.Files
  name: WriteError.TooManyWriteOperations
  nameWithType: WriteError.TooManyWriteOperations
  fullName: Dropbox.Api.Files.WriteError.TooManyWriteOperations
- uid: Dropbox.Api.Files.WriteError.IsOther*
  commentId: Overload:Dropbox.Api.Files.WriteError.IsOther
  name: IsOther
  nameWithType: WriteError.IsOther
  fullName: Dropbox.Api.Files.WriteError.IsOther
- uid: Dropbox.Api.Files.WriteError.AsOther*
  commentId: Overload:Dropbox.Api.Files.WriteError.AsOther
  name: AsOther
  nameWithType: WriteError.AsOther
  fullName: Dropbox.Api.Files.WriteError.AsOther
- uid: Dropbox.Api.Files.WriteError.Other
  commentId: T:Dropbox.Api.Files.WriteError.Other
  parent: Dropbox.Api.Files
  name: WriteError.Other
  nameWithType: WriteError.Other
  fullName: Dropbox.Api.Files.WriteError.Other
