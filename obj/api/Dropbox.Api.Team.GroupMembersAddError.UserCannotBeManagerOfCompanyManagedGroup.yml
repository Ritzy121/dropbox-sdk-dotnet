### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup
  commentId: T:Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup
  id: GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup
  parent: Dropbox.Api.Team
  children:
  - Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.#ctor(System.Collections.Generic.IEnumerable{System.String})
  - Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.Value
  langs:
  - csharp
  - vb
  name: GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup
  nameWithType: GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup
  fullName: Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersAddError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: UserCannotBeManagerOfCompanyManagedGroup
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersAddError.cs
    startLine: 781
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>A company-managed group cannot be managed by a user.</p>\n"
  example: []
  syntax:
    content: 'public sealed class UserCannotBeManagerOfCompanyManagedGroup : GroupMembersAddError'
    content.vb: >-
      Public NotInheritable Class UserCannotBeManagerOfCompanyManagedGroup
          Inherits GroupMembersAddError
  inheritance:
  - System.Object
  - Dropbox.Api.Team.GroupMembersAddError
  inheritedMembers:
  - Dropbox.Api.Team.GroupMembersAddError.IsDuplicateUser
  - Dropbox.Api.Team.GroupMembersAddError.AsDuplicateUser
  - Dropbox.Api.Team.GroupMembersAddError.IsGroupNotInTeam
  - Dropbox.Api.Team.GroupMembersAddError.AsGroupNotInTeam
  - Dropbox.Api.Team.GroupMembersAddError.IsMembersNotInTeam
  - Dropbox.Api.Team.GroupMembersAddError.AsMembersNotInTeam
  - Dropbox.Api.Team.GroupMembersAddError.IsUsersNotFound
  - Dropbox.Api.Team.GroupMembersAddError.AsUsersNotFound
  - Dropbox.Api.Team.GroupMembersAddError.IsUserMustBeActiveToBeOwner
  - Dropbox.Api.Team.GroupMembersAddError.AsUserMustBeActiveToBeOwner
  - Dropbox.Api.Team.GroupMembersAddError.IsUserCannotBeManagerOfCompanyManagedGroup
  - Dropbox.Api.Team.GroupMembersAddError.AsUserCannotBeManagerOfCompanyManagedGroup
  - Dropbox.Api.Team.GroupMembersAddError.IsSystemManagedGroupDisallowed
  - Dropbox.Api.Team.GroupMembersAddError.AsSystemManagedGroupDisallowed
  - Dropbox.Api.Team.GroupMembersAddError.IsGroupNotFound
  - Dropbox.Api.Team.GroupMembersAddError.AsGroupNotFound
  - Dropbox.Api.Team.GroupMembersAddError.IsOther
  - Dropbox.Api.Team.GroupMembersAddError.AsOther
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.#ctor(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.#ctor(System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String})'
  parent: Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup
  langs:
  - csharp
  - vb
  name: UserCannotBeManagerOfCompanyManagedGroup(IEnumerable<String>)
  nameWithType: GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.UserCannotBeManagerOfCompanyManagedGroup(IEnumerable<String>)
  fullName: Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.UserCannotBeManagerOfCompanyManagedGroup(System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersAddError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersAddError.cs
    startLine: 800
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public UserCannotBeManagerOfCompanyManagedGroup(IEnumerable<string> value)
    parameters:
    - id: value
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The value
    content.vb: Public Sub New(value As IEnumerable(Of String))
  overload: Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.#ctor*
  nameWithType.vb: GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.UserCannotBeManagerOfCompanyManagedGroup(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.UserCannotBeManagerOfCompanyManagedGroup(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: UserCannotBeManagerOfCompanyManagedGroup(IEnumerable(Of String))
- uid: Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.Value
  commentId: P:Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.Value
  id: Value
  parent: Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.Value
  fullName: Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.Value
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersAddError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Value
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/GroupMembersAddError.cs
    startLine: 815
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets the value of this instance.</p>\n"
  example: []
  syntax:
    content: public IList<string> Value { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public ReadOnly Property Value As IList(Of String)
  overload: Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Team
  commentId: N:Dropbox.Api.Team
  name: Dropbox.Api.Team
  nameWithType: Dropbox.Api.Team
  fullName: Dropbox.Api.Team
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Team.GroupMembersAddError
  commentId: T:Dropbox.Api.Team.GroupMembersAddError
  parent: Dropbox.Api.Team
  name: GroupMembersAddError
  nameWithType: GroupMembersAddError
  fullName: Dropbox.Api.Team.GroupMembersAddError
- uid: Dropbox.Api.Team.GroupMembersAddError.IsDuplicateUser
  commentId: P:Dropbox.Api.Team.GroupMembersAddError.IsDuplicateUser
  parent: Dropbox.Api.Team.GroupMembersAddError
  name: IsDuplicateUser
  nameWithType: GroupMembersAddError.IsDuplicateUser
  fullName: Dropbox.Api.Team.GroupMembersAddError.IsDuplicateUser
- uid: Dropbox.Api.Team.GroupMembersAddError.AsDuplicateUser
  commentId: P:Dropbox.Api.Team.GroupMembersAddError.AsDuplicateUser
  parent: Dropbox.Api.Team.GroupMembersAddError
  name: AsDuplicateUser
  nameWithType: GroupMembersAddError.AsDuplicateUser
  fullName: Dropbox.Api.Team.GroupMembersAddError.AsDuplicateUser
- uid: Dropbox.Api.Team.GroupMembersAddError.IsGroupNotInTeam
  commentId: P:Dropbox.Api.Team.GroupMembersAddError.IsGroupNotInTeam
  parent: Dropbox.Api.Team.GroupMembersAddError
  name: IsGroupNotInTeam
  nameWithType: GroupMembersAddError.IsGroupNotInTeam
  fullName: Dropbox.Api.Team.GroupMembersAddError.IsGroupNotInTeam
- uid: Dropbox.Api.Team.GroupMembersAddError.AsGroupNotInTeam
  commentId: P:Dropbox.Api.Team.GroupMembersAddError.AsGroupNotInTeam
  parent: Dropbox.Api.Team.GroupMembersAddError
  name: AsGroupNotInTeam
  nameWithType: GroupMembersAddError.AsGroupNotInTeam
  fullName: Dropbox.Api.Team.GroupMembersAddError.AsGroupNotInTeam
- uid: Dropbox.Api.Team.GroupMembersAddError.IsMembersNotInTeam
  commentId: P:Dropbox.Api.Team.GroupMembersAddError.IsMembersNotInTeam
  parent: Dropbox.Api.Team.GroupMembersAddError
  name: IsMembersNotInTeam
  nameWithType: GroupMembersAddError.IsMembersNotInTeam
  fullName: Dropbox.Api.Team.GroupMembersAddError.IsMembersNotInTeam
- uid: Dropbox.Api.Team.GroupMembersAddError.AsMembersNotInTeam
  commentId: P:Dropbox.Api.Team.GroupMembersAddError.AsMembersNotInTeam
  parent: Dropbox.Api.Team.GroupMembersAddError
  name: AsMembersNotInTeam
  nameWithType: GroupMembersAddError.AsMembersNotInTeam
  fullName: Dropbox.Api.Team.GroupMembersAddError.AsMembersNotInTeam
- uid: Dropbox.Api.Team.GroupMembersAddError.IsUsersNotFound
  commentId: P:Dropbox.Api.Team.GroupMembersAddError.IsUsersNotFound
  parent: Dropbox.Api.Team.GroupMembersAddError
  name: IsUsersNotFound
  nameWithType: GroupMembersAddError.IsUsersNotFound
  fullName: Dropbox.Api.Team.GroupMembersAddError.IsUsersNotFound
- uid: Dropbox.Api.Team.GroupMembersAddError.AsUsersNotFound
  commentId: P:Dropbox.Api.Team.GroupMembersAddError.AsUsersNotFound
  parent: Dropbox.Api.Team.GroupMembersAddError
  name: AsUsersNotFound
  nameWithType: GroupMembersAddError.AsUsersNotFound
  fullName: Dropbox.Api.Team.GroupMembersAddError.AsUsersNotFound
- uid: Dropbox.Api.Team.GroupMembersAddError.IsUserMustBeActiveToBeOwner
  commentId: P:Dropbox.Api.Team.GroupMembersAddError.IsUserMustBeActiveToBeOwner
  parent: Dropbox.Api.Team.GroupMembersAddError
  name: IsUserMustBeActiveToBeOwner
  nameWithType: GroupMembersAddError.IsUserMustBeActiveToBeOwner
  fullName: Dropbox.Api.Team.GroupMembersAddError.IsUserMustBeActiveToBeOwner
- uid: Dropbox.Api.Team.GroupMembersAddError.AsUserMustBeActiveToBeOwner
  commentId: P:Dropbox.Api.Team.GroupMembersAddError.AsUserMustBeActiveToBeOwner
  parent: Dropbox.Api.Team.GroupMembersAddError
  name: AsUserMustBeActiveToBeOwner
  nameWithType: GroupMembersAddError.AsUserMustBeActiveToBeOwner
  fullName: Dropbox.Api.Team.GroupMembersAddError.AsUserMustBeActiveToBeOwner
- uid: Dropbox.Api.Team.GroupMembersAddError.IsUserCannotBeManagerOfCompanyManagedGroup
  commentId: P:Dropbox.Api.Team.GroupMembersAddError.IsUserCannotBeManagerOfCompanyManagedGroup
  parent: Dropbox.Api.Team.GroupMembersAddError
  name: IsUserCannotBeManagerOfCompanyManagedGroup
  nameWithType: GroupMembersAddError.IsUserCannotBeManagerOfCompanyManagedGroup
  fullName: Dropbox.Api.Team.GroupMembersAddError.IsUserCannotBeManagerOfCompanyManagedGroup
- uid: Dropbox.Api.Team.GroupMembersAddError.AsUserCannotBeManagerOfCompanyManagedGroup
  commentId: P:Dropbox.Api.Team.GroupMembersAddError.AsUserCannotBeManagerOfCompanyManagedGroup
  parent: Dropbox.Api.Team.GroupMembersAddError
  name: AsUserCannotBeManagerOfCompanyManagedGroup
  nameWithType: GroupMembersAddError.AsUserCannotBeManagerOfCompanyManagedGroup
  fullName: Dropbox.Api.Team.GroupMembersAddError.AsUserCannotBeManagerOfCompanyManagedGroup
- uid: Dropbox.Api.Team.GroupMembersAddError.IsSystemManagedGroupDisallowed
  commentId: P:Dropbox.Api.Team.GroupMembersAddError.IsSystemManagedGroupDisallowed
  parent: Dropbox.Api.Team.GroupMembersAddError
  name: IsSystemManagedGroupDisallowed
  nameWithType: GroupMembersAddError.IsSystemManagedGroupDisallowed
  fullName: Dropbox.Api.Team.GroupMembersAddError.IsSystemManagedGroupDisallowed
- uid: Dropbox.Api.Team.GroupMembersAddError.AsSystemManagedGroupDisallowed
  commentId: P:Dropbox.Api.Team.GroupMembersAddError.AsSystemManagedGroupDisallowed
  parent: Dropbox.Api.Team.GroupMembersAddError
  name: AsSystemManagedGroupDisallowed
  nameWithType: GroupMembersAddError.AsSystemManagedGroupDisallowed
  fullName: Dropbox.Api.Team.GroupMembersAddError.AsSystemManagedGroupDisallowed
- uid: Dropbox.Api.Team.GroupMembersAddError.IsGroupNotFound
  commentId: P:Dropbox.Api.Team.GroupMembersAddError.IsGroupNotFound
  parent: Dropbox.Api.Team.GroupMembersAddError
  name: IsGroupNotFound
  nameWithType: GroupMembersAddError.IsGroupNotFound
  fullName: Dropbox.Api.Team.GroupMembersAddError.IsGroupNotFound
- uid: Dropbox.Api.Team.GroupMembersAddError.AsGroupNotFound
  commentId: P:Dropbox.Api.Team.GroupMembersAddError.AsGroupNotFound
  parent: Dropbox.Api.Team.GroupMembersAddError
  name: AsGroupNotFound
  nameWithType: GroupMembersAddError.AsGroupNotFound
  fullName: Dropbox.Api.Team.GroupMembersAddError.AsGroupNotFound
- uid: Dropbox.Api.Team.GroupMembersAddError.IsOther
  commentId: P:Dropbox.Api.Team.GroupMembersAddError.IsOther
  parent: Dropbox.Api.Team.GroupMembersAddError
  name: IsOther
  nameWithType: GroupMembersAddError.IsOther
  fullName: Dropbox.Api.Team.GroupMembersAddError.IsOther
- uid: Dropbox.Api.Team.GroupMembersAddError.AsOther
  commentId: P:Dropbox.Api.Team.GroupMembersAddError.AsOther
  parent: Dropbox.Api.Team.GroupMembersAddError
  name: AsOther
  nameWithType: GroupMembersAddError.AsOther
  fullName: Dropbox.Api.Team.GroupMembersAddError.AsOther
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup
  commentId: T:Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup
  parent: Dropbox.Api.Team
  name: GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup
  nameWithType: GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup
  fullName: Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup
- uid: Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.#ctor*
  commentId: Overload:Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.#ctor
  name: UserCannotBeManagerOfCompanyManagedGroup
  nameWithType: GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.UserCannotBeManagerOfCompanyManagedGroup
  fullName: Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.UserCannotBeManagerOfCompanyManagedGroup
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.Value*
  commentId: Overload:Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.Value
  name: Value
  nameWithType: GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.Value
  fullName: Dropbox.Api.Team.GroupMembersAddError.UserCannotBeManagerOfCompanyManagedGroup.Value
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
