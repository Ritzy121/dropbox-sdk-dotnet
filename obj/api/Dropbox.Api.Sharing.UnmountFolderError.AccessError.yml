### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Sharing.UnmountFolderError.AccessError
  commentId: T:Dropbox.Api.Sharing.UnmountFolderError.AccessError
  id: UnmountFolderError.AccessError
  parent: Dropbox.Api.Sharing
  children:
  - Dropbox.Api.Sharing.UnmountFolderError.AccessError.#ctor(Dropbox.Api.Sharing.SharedFolderAccessError)
  - Dropbox.Api.Sharing.UnmountFolderError.AccessError.Value
  langs:
  - csharp
  - vb
  name: UnmountFolderError.AccessError
  nameWithType: UnmountFolderError.AccessError
  fullName: Dropbox.Api.Sharing.UnmountFolderError.AccessError
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/UnmountFolderError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AccessError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/UnmountFolderError.cs
    startLine: 212
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>The access error object</p>\n"
  example: []
  syntax:
    content: 'public sealed class AccessError : UnmountFolderError'
    content.vb: >-
      Public NotInheritable Class AccessError
          Inherits UnmountFolderError
  inheritance:
  - System.Object
  - Dropbox.Api.Sharing.UnmountFolderError
  inheritedMembers:
  - Dropbox.Api.Sharing.UnmountFolderError.IsAccessError
  - Dropbox.Api.Sharing.UnmountFolderError.AsAccessError
  - Dropbox.Api.Sharing.UnmountFolderError.IsNoPermission
  - Dropbox.Api.Sharing.UnmountFolderError.AsNoPermission
  - Dropbox.Api.Sharing.UnmountFolderError.IsNotUnmountable
  - Dropbox.Api.Sharing.UnmountFolderError.AsNotUnmountable
  - Dropbox.Api.Sharing.UnmountFolderError.IsOther
  - Dropbox.Api.Sharing.UnmountFolderError.AsOther
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Dropbox.Api.Sharing.UnmountFolderError.AccessError.#ctor(Dropbox.Api.Sharing.SharedFolderAccessError)
  commentId: M:Dropbox.Api.Sharing.UnmountFolderError.AccessError.#ctor(Dropbox.Api.Sharing.SharedFolderAccessError)
  id: '#ctor(Dropbox.Api.Sharing.SharedFolderAccessError)'
  parent: Dropbox.Api.Sharing.UnmountFolderError.AccessError
  langs:
  - csharp
  - vb
  name: AccessError(SharedFolderAccessError)
  nameWithType: UnmountFolderError.AccessError.AccessError(SharedFolderAccessError)
  fullName: Dropbox.Api.Sharing.UnmountFolderError.AccessError.AccessError(Dropbox.Api.Sharing.SharedFolderAccessError)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/UnmountFolderError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/UnmountFolderError.cs
    startLine: 231
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Sharing.UnmountFolderError.AccessError\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public AccessError(SharedFolderAccessError value)
    parameters:
    - id: value
      type: Dropbox.Api.Sharing.SharedFolderAccessError
      description: The value
    content.vb: Public Sub New(value As SharedFolderAccessError)
  overload: Dropbox.Api.Sharing.UnmountFolderError.AccessError.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Sharing.UnmountFolderError.AccessError.Value
  commentId: P:Dropbox.Api.Sharing.UnmountFolderError.AccessError.Value
  id: Value
  parent: Dropbox.Api.Sharing.UnmountFolderError.AccessError
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: UnmountFolderError.AccessError.Value
  fullName: Dropbox.Api.Sharing.UnmountFolderError.AccessError.Value
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/UnmountFolderError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Value
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Sharing/UnmountFolderError.cs
    startLine: 246
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Sharing
  summary: "\n<p>Gets the value of this instance.</p>\n"
  example: []
  syntax:
    content: public SharedFolderAccessError Value { get; }
    parameters: []
    return:
      type: Dropbox.Api.Sharing.SharedFolderAccessError
    content.vb: Public ReadOnly Property Value As SharedFolderAccessError
  overload: Dropbox.Api.Sharing.UnmountFolderError.AccessError.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Sharing
  commentId: N:Dropbox.Api.Sharing
  name: Dropbox.Api.Sharing
  nameWithType: Dropbox.Api.Sharing
  fullName: Dropbox.Api.Sharing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Sharing.UnmountFolderError
  commentId: T:Dropbox.Api.Sharing.UnmountFolderError
  parent: Dropbox.Api.Sharing
  name: UnmountFolderError
  nameWithType: UnmountFolderError
  fullName: Dropbox.Api.Sharing.UnmountFolderError
- uid: Dropbox.Api.Sharing.UnmountFolderError.IsAccessError
  commentId: P:Dropbox.Api.Sharing.UnmountFolderError.IsAccessError
  parent: Dropbox.Api.Sharing.UnmountFolderError
  name: IsAccessError
  nameWithType: UnmountFolderError.IsAccessError
  fullName: Dropbox.Api.Sharing.UnmountFolderError.IsAccessError
- uid: Dropbox.Api.Sharing.UnmountFolderError.AsAccessError
  commentId: P:Dropbox.Api.Sharing.UnmountFolderError.AsAccessError
  parent: Dropbox.Api.Sharing.UnmountFolderError
  name: AsAccessError
  nameWithType: UnmountFolderError.AsAccessError
  fullName: Dropbox.Api.Sharing.UnmountFolderError.AsAccessError
- uid: Dropbox.Api.Sharing.UnmountFolderError.IsNoPermission
  commentId: P:Dropbox.Api.Sharing.UnmountFolderError.IsNoPermission
  parent: Dropbox.Api.Sharing.UnmountFolderError
  name: IsNoPermission
  nameWithType: UnmountFolderError.IsNoPermission
  fullName: Dropbox.Api.Sharing.UnmountFolderError.IsNoPermission
- uid: Dropbox.Api.Sharing.UnmountFolderError.AsNoPermission
  commentId: P:Dropbox.Api.Sharing.UnmountFolderError.AsNoPermission
  parent: Dropbox.Api.Sharing.UnmountFolderError
  name: AsNoPermission
  nameWithType: UnmountFolderError.AsNoPermission
  fullName: Dropbox.Api.Sharing.UnmountFolderError.AsNoPermission
- uid: Dropbox.Api.Sharing.UnmountFolderError.IsNotUnmountable
  commentId: P:Dropbox.Api.Sharing.UnmountFolderError.IsNotUnmountable
  parent: Dropbox.Api.Sharing.UnmountFolderError
  name: IsNotUnmountable
  nameWithType: UnmountFolderError.IsNotUnmountable
  fullName: Dropbox.Api.Sharing.UnmountFolderError.IsNotUnmountable
- uid: Dropbox.Api.Sharing.UnmountFolderError.AsNotUnmountable
  commentId: P:Dropbox.Api.Sharing.UnmountFolderError.AsNotUnmountable
  parent: Dropbox.Api.Sharing.UnmountFolderError
  name: AsNotUnmountable
  nameWithType: UnmountFolderError.AsNotUnmountable
  fullName: Dropbox.Api.Sharing.UnmountFolderError.AsNotUnmountable
- uid: Dropbox.Api.Sharing.UnmountFolderError.IsOther
  commentId: P:Dropbox.Api.Sharing.UnmountFolderError.IsOther
  parent: Dropbox.Api.Sharing.UnmountFolderError
  name: IsOther
  nameWithType: UnmountFolderError.IsOther
  fullName: Dropbox.Api.Sharing.UnmountFolderError.IsOther
- uid: Dropbox.Api.Sharing.UnmountFolderError.AsOther
  commentId: P:Dropbox.Api.Sharing.UnmountFolderError.AsOther
  parent: Dropbox.Api.Sharing.UnmountFolderError
  name: AsOther
  nameWithType: UnmountFolderError.AsOther
  fullName: Dropbox.Api.Sharing.UnmountFolderError.AsOther
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Sharing.UnmountFolderError.AccessError
  commentId: T:Dropbox.Api.Sharing.UnmountFolderError.AccessError
  parent: Dropbox.Api.Sharing
  name: UnmountFolderError.AccessError
  nameWithType: UnmountFolderError.AccessError
  fullName: Dropbox.Api.Sharing.UnmountFolderError.AccessError
- uid: Dropbox.Api.Sharing.UnmountFolderError.AccessError.#ctor*
  commentId: Overload:Dropbox.Api.Sharing.UnmountFolderError.AccessError.#ctor
  name: AccessError
  nameWithType: UnmountFolderError.AccessError.AccessError
  fullName: Dropbox.Api.Sharing.UnmountFolderError.AccessError.AccessError
- uid: Dropbox.Api.Sharing.SharedFolderAccessError
  commentId: T:Dropbox.Api.Sharing.SharedFolderAccessError
  parent: Dropbox.Api.Sharing
  name: SharedFolderAccessError
  nameWithType: SharedFolderAccessError
  fullName: Dropbox.Api.Sharing.SharedFolderAccessError
- uid: Dropbox.Api.Sharing.UnmountFolderError.AccessError.Value*
  commentId: Overload:Dropbox.Api.Sharing.UnmountFolderError.AccessError.Value
  name: Value
  nameWithType: UnmountFolderError.AccessError.Value
  fullName: Dropbox.Api.Sharing.UnmountFolderError.AccessError.Value
