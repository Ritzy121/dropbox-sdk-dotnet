### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.FileMetadata
  commentId: T:Dropbox.Api.Files.FileMetadata
  id: FileMetadata
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.FileMetadata.#ctor(System.String,System.String,System.DateTime,System.DateTime,System.String,System.UInt64,System.String,System.String,System.String,System.String,Dropbox.Api.Files.MediaInfo,Dropbox.Api.Files.SymlinkInfo,Dropbox.Api.Files.FileSharingInfo,System.Boolean,Dropbox.Api.Files.ExportInfo,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyGroup},System.Nullable{System.Boolean},System.String,Dropbox.Api.Files.FileLockMetadata)
  - Dropbox.Api.Files.FileMetadata.ClientModified
  - Dropbox.Api.Files.FileMetadata.ContentHash
  - Dropbox.Api.Files.FileMetadata.ExportInfo
  - Dropbox.Api.Files.FileMetadata.FileLockInfo
  - Dropbox.Api.Files.FileMetadata.HasExplicitSharedMembers
  - Dropbox.Api.Files.FileMetadata.Id
  - Dropbox.Api.Files.FileMetadata.IsDownloadable
  - Dropbox.Api.Files.FileMetadata.MediaInfo
  - Dropbox.Api.Files.FileMetadata.PropertyGroups
  - Dropbox.Api.Files.FileMetadata.Rev
  - Dropbox.Api.Files.FileMetadata.ServerModified
  - Dropbox.Api.Files.FileMetadata.SharingInfo
  - Dropbox.Api.Files.FileMetadata.Size
  - Dropbox.Api.Files.FileMetadata.SymlinkInfo
  langs:
  - csharp
  - vb
  name: FileMetadata
  nameWithType: FileMetadata
  fullName: Dropbox.Api.Files.FileMetadata
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: FileMetadata
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
    startLine: 19
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The file metadata object</p>\n"
  example: []
  syntax:
    content: 'public class FileMetadata : Metadata'
    content.vb: >-
      Public Class FileMetadata
          Inherits Metadata
  seealso:
  - linkId: Dropbox.Api.Files.ExportResult
    commentId: T:Dropbox.Api.Files.ExportResult
  - linkId: Dropbox.Api.Files.GetTemporaryLinkResult
    commentId: T:Dropbox.Api.Files.GetTemporaryLinkResult
  - linkId: Dropbox.Api.Files.GetThumbnailBatchResultData
    commentId: T:Dropbox.Api.Files.GetThumbnailBatchResultData
  inheritance:
  - System.Object
  - Dropbox.Api.Files.Metadata
  inheritedMembers:
  - Dropbox.Api.Files.Metadata.IsFile
  - Dropbox.Api.Files.Metadata.AsFile
  - Dropbox.Api.Files.Metadata.IsFolder
  - Dropbox.Api.Files.Metadata.AsFolder
  - Dropbox.Api.Files.Metadata.IsDeleted
  - Dropbox.Api.Files.Metadata.AsDeleted
  - Dropbox.Api.Files.Metadata.Name
  - Dropbox.Api.Files.Metadata.PathLower
  - Dropbox.Api.Files.Metadata.PathDisplay
  - Dropbox.Api.Files.Metadata.ParentSharedFolderId
  - Dropbox.Api.Files.Metadata.PreviewUrl
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.FileMetadata.#ctor(System.String,System.String,System.DateTime,System.DateTime,System.String,System.UInt64,System.String,System.String,System.String,System.String,Dropbox.Api.Files.MediaInfo,Dropbox.Api.Files.SymlinkInfo,Dropbox.Api.Files.FileSharingInfo,System.Boolean,Dropbox.Api.Files.ExportInfo,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyGroup},System.Nullable{System.Boolean},System.String,Dropbox.Api.Files.FileLockMetadata)
  commentId: M:Dropbox.Api.Files.FileMetadata.#ctor(System.String,System.String,System.DateTime,System.DateTime,System.String,System.UInt64,System.String,System.String,System.String,System.String,Dropbox.Api.Files.MediaInfo,Dropbox.Api.Files.SymlinkInfo,Dropbox.Api.Files.FileSharingInfo,System.Boolean,Dropbox.Api.Files.ExportInfo,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyGroup},System.Nullable{System.Boolean},System.String,Dropbox.Api.Files.FileLockMetadata)
  id: '#ctor(System.String,System.String,System.DateTime,System.DateTime,System.String,System.UInt64,System.String,System.String,System.String,System.String,Dropbox.Api.Files.MediaInfo,Dropbox.Api.Files.SymlinkInfo,Dropbox.Api.Files.FileSharingInfo,System.Boolean,Dropbox.Api.Files.ExportInfo,System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyGroup},System.Nullable{System.Boolean},System.String,Dropbox.Api.Files.FileLockMetadata)'
  parent: Dropbox.Api.Files.FileMetadata
  langs:
  - csharp
  - vb
  name: FileMetadata(String, String, DateTime, DateTime, String, UInt64, String, String, String, String, MediaInfo, SymlinkInfo, FileSharingInfo, Boolean, ExportInfo, IEnumerable<PropertyGroup>, Nullable<Boolean>, String, FileLockMetadata)
  nameWithType: FileMetadata.FileMetadata(String, String, DateTime, DateTime, String, UInt64, String, String, String, String, MediaInfo, SymlinkInfo, FileSharingInfo, Boolean, ExportInfo, IEnumerable<PropertyGroup>, Nullable<Boolean>, String, FileLockMetadata)
  fullName: Dropbox.Api.Files.FileMetadata.FileMetadata(System.String, System.String, System.DateTime, System.DateTime, System.String, System.UInt64, System.String, System.String, System.String, System.String, Dropbox.Api.Files.MediaInfo, Dropbox.Api.Files.SymlinkInfo, Dropbox.Api.Files.FileSharingInfo, System.Boolean, Dropbox.Api.Files.ExportInfo, System.Collections.Generic.IEnumerable<Dropbox.Api.FileProperties.PropertyGroup>, System.Nullable<System.Boolean>, System.String, Dropbox.Api.Files.FileLockMetadata)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
    startLine: 96
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.FileMetadata\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public FileMetadata(string name, string id, DateTime clientModified, DateTime serverModified, string rev, ulong size, string pathLower = null, string pathDisplay = null, string parentSharedFolderId = null, string previewUrl = null, MediaInfo mediaInfo = null, SymlinkInfo symlinkInfo = null, FileSharingInfo sharingInfo = null, bool isDownloadable = true, ExportInfo exportInfo = null, IEnumerable<PropertyGroup> propertyGroups = null, bool? hasExplicitSharedMembers = null, string contentHash = null, FileLockMetadata fileLockInfo = null)
    parameters:
    - id: name
      type: System.String
      description: >-
        The last component of the path (including extension). This never

        contains a slash.
    - id: id
      type: System.String
      description: A unique identifier for the file.
    - id: clientModified
      type: System.DateTime
      description: >-
        For files, this is the modification time set by the

        desktop client when the file was added to Dropbox. Since this time is not verified

        (the Dropbox server stores whatever the desktop client sends up), this should only

        be used for display purposes (such as sorting) and not, for example, to determine

        if a file has changed or not.
    - id: serverModified
      type: System.DateTime
      description: >-
        The last time the file was modified on

        Dropbox.
    - id: rev
      type: System.String
      description: >-
        A unique identifier for the current revision of a file. This

        field is the same rev as elsewhere in the API and can be used to detect changes and

        avoid conflicts.
    - id: size
      type: System.UInt64
      description: The file size in bytes.
    - id: pathLower
      type: System.String
      description: >-
        The lowercased full path in the user&apos;s Dropbox. This always

        starts with a slash. This field will be null if the file or folder is not

        mounted.
    - id: pathDisplay
      type: System.String
      description: >-
        The cased path to be used for display purposes only. In

        rare instances the casing will not correctly match the user&apos;s filesystem, but this

        behavior will match the path provided in the Core API v1, and at least the last

        path component will have the correct casing. Changes to only the casing of paths

        won&apos;t be returned by <xref href="Dropbox.Api.Files.Routes.FilesAppRoutes.ListFolderContinueAsync(Dropbox.Api.Files.ListFolderContinueArg)" data-throw-if-not-resolved="false"></xref> <xref href="Dropbox.Api.Files.Routes.FilesUserRoutes.ListFolderContinueAsync(Dropbox.Api.Files.ListFolderContinueArg)" data-throw-if-not-resolved="false"></xref>. This

        field will be null if the file or folder is not mounted.
    - id: parentSharedFolderId
      type: System.String
      description: Please use <xref href="Dropbox.Api.Files.FileSharingInfo.ParentSharedFolderId" data-throw-if-not-resolved="false"></xref> or <xref href="Dropbox.Api.Files.FolderSharingInfo.ParentSharedFolderId" data-throw-if-not-resolved="false"></xref> instead.
    - id: previewUrl
      type: System.String
      description: The preview URL of the file.
    - id: mediaInfo
      type: Dropbox.Api.Files.MediaInfo
      description: >-
        Additional information if the file is a photo or video.

        This field will not be set on entries returned by <xref href="Dropbox.Api.Files.Routes.FilesAppRoutes.ListFolderAsync(Dropbox.Api.Files.ListFolderArg)" data-throw-if-not-resolved="false"></xref> <xref href="Dropbox.Api.Files.Routes.FilesUserRoutes.ListFolderAsync(Dropbox.Api.Files.ListFolderArg)" data-throw-if-not-resolved="false"></xref>, <xref href="Dropbox.Api.Files.Routes.FilesAppRoutes.ListFolderContinueAsync(Dropbox.Api.Files.ListFolderContinueArg)" data-throw-if-not-resolved="false"></xref> <xref href="Dropbox.Api.Files.Routes.FilesUserRoutes.ListFolderContinueAsync(Dropbox.Api.Files.ListFolderContinueArg)" data-throw-if-not-resolved="false"></xref>, or <xref href="Dropbox.Api.Files.Routes.FilesUserRoutes.GetThumbnailBatchAsync(Dropbox.Api.Files.GetThumbnailBatchArg)" data-throw-if-not-resolved="false"></xref>, starting

        December 2, 2019.
    - id: symlinkInfo
      type: Dropbox.Api.Files.SymlinkInfo
      description: Set if this file is a symlink.
    - id: sharingInfo
      type: Dropbox.Api.Files.FileSharingInfo
      description: Set if this file is contained in a shared folder.
    - id: isDownloadable
      type: System.Boolean
      description: >-
        If true, file can be downloaded directly; else the

        file must be exported.
    - id: exportInfo
      type: Dropbox.Api.Files.ExportInfo
      description: >-
        Information about format this file can be exported to.

        This filed must be set if <code data-dev-comment-type="paramref" class="paramref">isDownloadable</code> is set to

        false.
    - id: propertyGroups
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyGroup}
      description: >-
        Additional information if the file has custom

        properties with the property template specified.
    - id: hasExplicitSharedMembers
      type: System.Nullable{System.Boolean}
      description: >-
        This flag will only be present if

        include_has_explicit_shared_members  is true in <xref href="Dropbox.Api.Files.Routes.FilesAppRoutes.ListFolderAsync(Dropbox.Api.Files.ListFolderArg)" data-throw-if-not-resolved="false"></xref> <xref href="Dropbox.Api.Files.Routes.FilesUserRoutes.ListFolderAsync(Dropbox.Api.Files.ListFolderArg)" data-throw-if-not-resolved="false"></xref> or <xref href="Dropbox.Api.Files.Routes.FilesUserRoutes.GetMetadataAsync(Dropbox.Api.Files.GetMetadataArg)" data-throw-if-not-resolved="false"></xref>. If this  flag

        is present, it will be true if this file has any explicit shared  members. This is

        different from sharing_info in that this could be true  in the case where a file

        has explicit members but is not contained within  a shared folder.
    - id: contentHash
      type: System.String
      description: >-
        A hash of the file content. This field can be used to

        verify data integrity. For more information see our <a href="https://www.dropbox.com/developers/reference/content-hash">Content hash</a>

        page.
    - id: fileLockInfo
      type: Dropbox.Api.Files.FileLockMetadata
      description: >-
        If present, the metadata associated with the file&apos;s

        current lock.
    content.vb: Public Sub New(name As String, id As String, clientModified As Date, serverModified As Date, rev As String, size As ULong, pathLower As String = Nothing, pathDisplay As String = Nothing, parentSharedFolderId As String = Nothing, previewUrl As String = Nothing, mediaInfo As MediaInfo = Nothing, symlinkInfo As SymlinkInfo = Nothing, sharingInfo As FileSharingInfo = Nothing, isDownloadable As Boolean = True, exportInfo As ExportInfo = Nothing, propertyGroups As IEnumerable(Of PropertyGroup) = Nothing, hasExplicitSharedMembers As Boolean? = Nothing, contentHash As String = Nothing, fileLockInfo As FileLockMetadata = Nothing)
  overload: Dropbox.Api.Files.FileMetadata.#ctor*
  nameWithType.vb: FileMetadata.FileMetadata(String, String, DateTime, DateTime, String, UInt64, String, String, String, String, MediaInfo, SymlinkInfo, FileSharingInfo, Boolean, ExportInfo, IEnumerable(Of PropertyGroup), Nullable(Of Boolean), String, FileLockMetadata)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Files.FileMetadata.FileMetadata(System.String, System.String, System.DateTime, System.DateTime, System.String, System.UInt64, System.String, System.String, System.String, System.String, Dropbox.Api.Files.MediaInfo, Dropbox.Api.Files.SymlinkInfo, Dropbox.Api.Files.FileSharingInfo, System.Boolean, Dropbox.Api.Files.ExportInfo, System.Collections.Generic.IEnumerable(Of Dropbox.Api.FileProperties.PropertyGroup), System.Nullable(Of System.Boolean), System.String, Dropbox.Api.Files.FileLockMetadata)
  name.vb: FileMetadata(String, String, DateTime, DateTime, String, UInt64, String, String, String, String, MediaInfo, SymlinkInfo, FileSharingInfo, Boolean, ExportInfo, IEnumerable(Of PropertyGroup), Nullable(Of Boolean), String, FileLockMetadata)
- uid: Dropbox.Api.Files.FileMetadata.Id
  commentId: P:Dropbox.Api.Files.FileMetadata.Id
  id: Id
  parent: Dropbox.Api.Files.FileMetadata
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: FileMetadata.Id
  fullName: Dropbox.Api.Files.FileMetadata.Id
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Id
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
    startLine: 183
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>A unique identifier for the file.</p>\n"
  example: []
  syntax:
    content: public string Id { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: Dropbox.Api.Files.FileMetadata.Id*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.FileMetadata.ClientModified
  commentId: P:Dropbox.Api.Files.FileMetadata.ClientModified
  id: ClientModified
  parent: Dropbox.Api.Files.FileMetadata
  langs:
  - csharp
  - vb
  name: ClientModified
  nameWithType: FileMetadata.ClientModified
  fullName: Dropbox.Api.Files.FileMetadata.ClientModified
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ClientModified
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
    startLine: 192
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>For files, this is the modification time set by the desktop client when the\nfile was added to Dropbox. Since this time is not verified (the Dropbox server\nstores whatever the desktop client sends up), this should only be used for display\npurposes (such as sorting) and not, for example, to determine if a file has changed\nor not.</p>\n"
  example: []
  syntax:
    content: public DateTime ClientModified { get; protected set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property ClientModified As Date
  overload: Dropbox.Api.Files.FileMetadata.ClientModified*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.FileMetadata.ServerModified
  commentId: P:Dropbox.Api.Files.FileMetadata.ServerModified
  id: ServerModified
  parent: Dropbox.Api.Files.FileMetadata
  langs:
  - csharp
  - vb
  name: ServerModified
  nameWithType: FileMetadata.ServerModified
  fullName: Dropbox.Api.Files.FileMetadata.ServerModified
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ServerModified
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
    startLine: 197
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The last time the file was modified on Dropbox.</p>\n"
  example: []
  syntax:
    content: public DateTime ServerModified { get; protected set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property ServerModified As Date
  overload: Dropbox.Api.Files.FileMetadata.ServerModified*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.FileMetadata.Rev
  commentId: P:Dropbox.Api.Files.FileMetadata.Rev
  id: Rev
  parent: Dropbox.Api.Files.FileMetadata
  langs:
  - csharp
  - vb
  name: Rev
  nameWithType: FileMetadata.Rev
  fullName: Dropbox.Api.Files.FileMetadata.Rev
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Rev
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
    startLine: 204
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>A unique identifier for the current revision of a file. This field is the\nsame rev as elsewhere in the API and can be used to detect changes and avoid\nconflicts.</p>\n"
  example: []
  syntax:
    content: public string Rev { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Rev As String
  overload: Dropbox.Api.Files.FileMetadata.Rev*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.FileMetadata.Size
  commentId: P:Dropbox.Api.Files.FileMetadata.Size
  id: Size
  parent: Dropbox.Api.Files.FileMetadata
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: FileMetadata.Size
  fullName: Dropbox.Api.Files.FileMetadata.Size
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Size
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
    startLine: 209
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The file size in bytes.</p>\n"
  example: []
  syntax:
    content: public ulong Size { get; protected set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public Property Size As ULong
  overload: Dropbox.Api.Files.FileMetadata.Size*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.FileMetadata.MediaInfo
  commentId: P:Dropbox.Api.Files.FileMetadata.MediaInfo
  id: MediaInfo
  parent: Dropbox.Api.Files.FileMetadata
  langs:
  - csharp
  - vb
  name: MediaInfo
  nameWithType: FileMetadata.MediaInfo
  fullName: Dropbox.Api.Files.FileMetadata.MediaInfo
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: MediaInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
    startLine: 221
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Additional information if the file is a photo or video. This field will not\nbe set on entries returned by <xref href=\"Dropbox.Api.Files.Routes.FilesAppRoutes.ListFolderAsync(Dropbox.Api.Files.ListFolderArg)\" data-throw-if-not-resolved=\"false\"></xref> <xref href=\"Dropbox.Api.Files.Routes.FilesUserRoutes.ListFolderAsync(Dropbox.Api.Files.ListFolderArg)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Dropbox.Api.Files.Routes.FilesAppRoutes.ListFolderContinueAsync(Dropbox.Api.Files.ListFolderContinueArg)\" data-throw-if-not-resolved=\"false\"></xref> <xref href=\"Dropbox.Api.Files.Routes.FilesUserRoutes.ListFolderContinueAsync(Dropbox.Api.Files.ListFolderContinueArg)\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"Dropbox.Api.Files.Routes.FilesUserRoutes.GetThumbnailBatchAsync(Dropbox.Api.Files.GetThumbnailBatchArg)\" data-throw-if-not-resolved=\"false\"></xref>, starting\nDecember 2, 2019.</p>\n"
  example: []
  syntax:
    content: public MediaInfo MediaInfo { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Files.MediaInfo
    content.vb: Public Property MediaInfo As MediaInfo
  overload: Dropbox.Api.Files.FileMetadata.MediaInfo*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.FileMetadata.SymlinkInfo
  commentId: P:Dropbox.Api.Files.FileMetadata.SymlinkInfo
  id: SymlinkInfo
  parent: Dropbox.Api.Files.FileMetadata
  langs:
  - csharp
  - vb
  name: SymlinkInfo
  nameWithType: FileMetadata.SymlinkInfo
  fullName: Dropbox.Api.Files.FileMetadata.SymlinkInfo
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: SymlinkInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
    startLine: 226
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Set if this file is a symlink.</p>\n"
  example: []
  syntax:
    content: public SymlinkInfo SymlinkInfo { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Files.SymlinkInfo
    content.vb: Public Property SymlinkInfo As SymlinkInfo
  overload: Dropbox.Api.Files.FileMetadata.SymlinkInfo*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.FileMetadata.SharingInfo
  commentId: P:Dropbox.Api.Files.FileMetadata.SharingInfo
  id: SharingInfo
  parent: Dropbox.Api.Files.FileMetadata
  langs:
  - csharp
  - vb
  name: SharingInfo
  nameWithType: FileMetadata.SharingInfo
  fullName: Dropbox.Api.Files.FileMetadata.SharingInfo
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: SharingInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
    startLine: 231
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Set if this file is contained in a shared folder.</p>\n"
  example: []
  syntax:
    content: public FileSharingInfo SharingInfo { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Files.FileSharingInfo
    content.vb: Public Property SharingInfo As FileSharingInfo
  overload: Dropbox.Api.Files.FileMetadata.SharingInfo*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.FileMetadata.IsDownloadable
  commentId: P:Dropbox.Api.Files.FileMetadata.IsDownloadable
  id: IsDownloadable
  parent: Dropbox.Api.Files.FileMetadata
  langs:
  - csharp
  - vb
  name: IsDownloadable
  nameWithType: FileMetadata.IsDownloadable
  fullName: Dropbox.Api.Files.FileMetadata.IsDownloadable
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsDownloadable
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
    startLine: 237
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>If true, file can be downloaded directly; else the file must be\nexported.</p>\n"
  example: []
  syntax:
    content: public bool IsDownloadable { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsDownloadable As Boolean
  overload: Dropbox.Api.Files.FileMetadata.IsDownloadable*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.FileMetadata.ExportInfo
  commentId: P:Dropbox.Api.Files.FileMetadata.ExportInfo
  id: ExportInfo
  parent: Dropbox.Api.Files.FileMetadata
  langs:
  - csharp
  - vb
  name: ExportInfo
  nameWithType: FileMetadata.ExportInfo
  fullName: Dropbox.Api.Files.FileMetadata.ExportInfo
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ExportInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
    startLine: 243
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Information about format this file can be exported to. This filed must be set\nif <xref href=\"Dropbox.Api.Files.FileMetadata.IsDownloadable\" data-throw-if-not-resolved=\"false\"></xref> is set to false.</p>\n"
  example: []
  syntax:
    content: public ExportInfo ExportInfo { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Files.ExportInfo
    content.vb: Public Property ExportInfo As ExportInfo
  overload: Dropbox.Api.Files.FileMetadata.ExportInfo*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.FileMetadata.PropertyGroups
  commentId: P:Dropbox.Api.Files.FileMetadata.PropertyGroups
  id: PropertyGroups
  parent: Dropbox.Api.Files.FileMetadata
  langs:
  - csharp
  - vb
  name: PropertyGroups
  nameWithType: FileMetadata.PropertyGroups
  fullName: Dropbox.Api.Files.FileMetadata.PropertyGroups
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: PropertyGroups
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
    startLine: 249
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Additional information if the file has custom properties with the property\ntemplate specified.</p>\n"
  example: []
  syntax:
    content: public IList<PropertyGroup> PropertyGroups { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Dropbox.Api.FileProperties.PropertyGroup}
    content.vb: Public Property PropertyGroups As IList(Of PropertyGroup)
  overload: Dropbox.Api.Files.FileMetadata.PropertyGroups*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.FileMetadata.HasExplicitSharedMembers
  commentId: P:Dropbox.Api.Files.FileMetadata.HasExplicitSharedMembers
  id: HasExplicitSharedMembers
  parent: Dropbox.Api.Files.FileMetadata
  langs:
  - csharp
  - vb
  name: HasExplicitSharedMembers
  nameWithType: FileMetadata.HasExplicitSharedMembers
  fullName: Dropbox.Api.Files.FileMetadata.HasExplicitSharedMembers
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: HasExplicitSharedMembers
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
    startLine: 260
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>This flag will only be present if include_has_explicit_shared_members  is\ntrue in <xref href=\"Dropbox.Api.Files.Routes.FilesAppRoutes.ListFolderAsync(Dropbox.Api.Files.ListFolderArg)\" data-throw-if-not-resolved=\"false\"></xref> <xref href=\"Dropbox.Api.Files.Routes.FilesUserRoutes.ListFolderAsync(Dropbox.Api.Files.ListFolderArg)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Dropbox.Api.Files.Routes.FilesUserRoutes.GetMetadataAsync(Dropbox.Api.Files.GetMetadataArg)\" data-throw-if-not-resolved=\"false\"></xref>. If this  flag\nis present, it will be true if this file has any explicit shared  members. This is\ndifferent from sharing_info in that this could be true  in the case where a file\nhas explicit members but is not contained within  a shared folder.</p>\n"
  example: []
  syntax:
    content: public bool? HasExplicitSharedMembers { get; protected set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property HasExplicitSharedMembers As Boolean?
  overload: Dropbox.Api.Files.FileMetadata.HasExplicitSharedMembers*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.FileMetadata.ContentHash
  commentId: P:Dropbox.Api.Files.FileMetadata.ContentHash
  id: ContentHash
  parent: Dropbox.Api.Files.FileMetadata
  langs:
  - csharp
  - vb
  name: ContentHash
  nameWithType: FileMetadata.ContentHash
  fullName: Dropbox.Api.Files.FileMetadata.ContentHash
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ContentHash
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
    startLine: 268
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>A hash of the file content. This field can be used to verify data integrity.\nFor more information see our <a href=\"https://www.dropbox.com/developers/reference/content-hash\">Content hash</a>\npage.</p>\n"
  example: []
  syntax:
    content: public string ContentHash { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ContentHash As String
  overload: Dropbox.Api.Files.FileMetadata.ContentHash*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.FileMetadata.FileLockInfo
  commentId: P:Dropbox.Api.Files.FileMetadata.FileLockInfo
  id: FileLockInfo
  parent: Dropbox.Api.Files.FileMetadata
  langs:
  - csharp
  - vb
  name: FileLockInfo
  nameWithType: FileMetadata.FileLockInfo
  fullName: Dropbox.Api.Files.FileMetadata.FileLockInfo
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: FileLockInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/FileMetadata.cs
    startLine: 273
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>If present, the metadata associated with the file&apos;s current lock.</p>\n"
  example: []
  syntax:
    content: public FileLockMetadata FileLockInfo { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Files.FileLockMetadata
    content.vb: Public Property FileLockInfo As FileLockMetadata
  overload: Dropbox.Api.Files.FileMetadata.FileLockInfo*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Files.ExportResult
  commentId: T:Dropbox.Api.Files.ExportResult
  name: ExportResult
  nameWithType: ExportResult
  fullName: Dropbox.Api.Files.ExportResult
- uid: Dropbox.Api.Files.GetTemporaryLinkResult
  commentId: T:Dropbox.Api.Files.GetTemporaryLinkResult
  parent: Dropbox.Api.Files
  name: GetTemporaryLinkResult
  nameWithType: GetTemporaryLinkResult
  fullName: Dropbox.Api.Files.GetTemporaryLinkResult
- uid: Dropbox.Api.Files.GetThumbnailBatchResultData
  commentId: T:Dropbox.Api.Files.GetThumbnailBatchResultData
  parent: Dropbox.Api.Files
  name: GetThumbnailBatchResultData
  nameWithType: GetThumbnailBatchResultData
  fullName: Dropbox.Api.Files.GetThumbnailBatchResultData
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Files.Metadata
  commentId: T:Dropbox.Api.Files.Metadata
  parent: Dropbox.Api.Files
  name: Metadata
  nameWithType: Metadata
  fullName: Dropbox.Api.Files.Metadata
- uid: Dropbox.Api.Files.Metadata.IsFile
  commentId: P:Dropbox.Api.Files.Metadata.IsFile
  parent: Dropbox.Api.Files.Metadata
  name: IsFile
  nameWithType: Metadata.IsFile
  fullName: Dropbox.Api.Files.Metadata.IsFile
- uid: Dropbox.Api.Files.Metadata.AsFile
  commentId: P:Dropbox.Api.Files.Metadata.AsFile
  parent: Dropbox.Api.Files.Metadata
  name: AsFile
  nameWithType: Metadata.AsFile
  fullName: Dropbox.Api.Files.Metadata.AsFile
- uid: Dropbox.Api.Files.Metadata.IsFolder
  commentId: P:Dropbox.Api.Files.Metadata.IsFolder
  parent: Dropbox.Api.Files.Metadata
  name: IsFolder
  nameWithType: Metadata.IsFolder
  fullName: Dropbox.Api.Files.Metadata.IsFolder
- uid: Dropbox.Api.Files.Metadata.AsFolder
  commentId: P:Dropbox.Api.Files.Metadata.AsFolder
  parent: Dropbox.Api.Files.Metadata
  name: AsFolder
  nameWithType: Metadata.AsFolder
  fullName: Dropbox.Api.Files.Metadata.AsFolder
- uid: Dropbox.Api.Files.Metadata.IsDeleted
  commentId: P:Dropbox.Api.Files.Metadata.IsDeleted
  parent: Dropbox.Api.Files.Metadata
  name: IsDeleted
  nameWithType: Metadata.IsDeleted
  fullName: Dropbox.Api.Files.Metadata.IsDeleted
- uid: Dropbox.Api.Files.Metadata.AsDeleted
  commentId: P:Dropbox.Api.Files.Metadata.AsDeleted
  parent: Dropbox.Api.Files.Metadata
  name: AsDeleted
  nameWithType: Metadata.AsDeleted
  fullName: Dropbox.Api.Files.Metadata.AsDeleted
- uid: Dropbox.Api.Files.Metadata.Name
  commentId: P:Dropbox.Api.Files.Metadata.Name
  parent: Dropbox.Api.Files.Metadata
  name: Name
  nameWithType: Metadata.Name
  fullName: Dropbox.Api.Files.Metadata.Name
- uid: Dropbox.Api.Files.Metadata.PathLower
  commentId: P:Dropbox.Api.Files.Metadata.PathLower
  parent: Dropbox.Api.Files.Metadata
  name: PathLower
  nameWithType: Metadata.PathLower
  fullName: Dropbox.Api.Files.Metadata.PathLower
- uid: Dropbox.Api.Files.Metadata.PathDisplay
  commentId: P:Dropbox.Api.Files.Metadata.PathDisplay
  parent: Dropbox.Api.Files.Metadata
  name: PathDisplay
  nameWithType: Metadata.PathDisplay
  fullName: Dropbox.Api.Files.Metadata.PathDisplay
- uid: Dropbox.Api.Files.Metadata.ParentSharedFolderId
  commentId: P:Dropbox.Api.Files.Metadata.ParentSharedFolderId
  parent: Dropbox.Api.Files.Metadata
  name: ParentSharedFolderId
  nameWithType: Metadata.ParentSharedFolderId
  fullName: Dropbox.Api.Files.Metadata.ParentSharedFolderId
- uid: Dropbox.Api.Files.Metadata.PreviewUrl
  commentId: P:Dropbox.Api.Files.Metadata.PreviewUrl
  parent: Dropbox.Api.Files.Metadata
  name: PreviewUrl
  nameWithType: Metadata.PreviewUrl
  fullName: Dropbox.Api.Files.Metadata.PreviewUrl
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Files.FileMetadata
  commentId: T:Dropbox.Api.Files.FileMetadata
  parent: Dropbox.Api.Files
  name: FileMetadata
  nameWithType: FileMetadata
  fullName: Dropbox.Api.Files.FileMetadata
- uid: Dropbox.Api.Files.Routes.FilesAppRoutes.ListFolderContinueAsync(Dropbox.Api.Files.ListFolderContinueArg)
  commentId: M:Dropbox.Api.Files.Routes.FilesAppRoutes.ListFolderContinueAsync(Dropbox.Api.Files.ListFolderContinueArg)
  isExternal: true
- uid: Dropbox.Api.Files.Routes.FilesUserRoutes.ListFolderContinueAsync(Dropbox.Api.Files.ListFolderContinueArg)
  commentId: M:Dropbox.Api.Files.Routes.FilesUserRoutes.ListFolderContinueAsync(Dropbox.Api.Files.ListFolderContinueArg)
  isExternal: true
- uid: Dropbox.Api.Files.FileSharingInfo.ParentSharedFolderId
  commentId: P:Dropbox.Api.Files.FileSharingInfo.ParentSharedFolderId
  isExternal: true
- uid: Dropbox.Api.Files.FolderSharingInfo.ParentSharedFolderId
  commentId: P:Dropbox.Api.Files.FolderSharingInfo.ParentSharedFolderId
  isExternal: true
- uid: Dropbox.Api.Files.Routes.FilesAppRoutes.ListFolderAsync(Dropbox.Api.Files.ListFolderArg)
  commentId: M:Dropbox.Api.Files.Routes.FilesAppRoutes.ListFolderAsync(Dropbox.Api.Files.ListFolderArg)
  isExternal: true
- uid: Dropbox.Api.Files.Routes.FilesUserRoutes.ListFolderAsync(Dropbox.Api.Files.ListFolderArg)
  commentId: M:Dropbox.Api.Files.Routes.FilesUserRoutes.ListFolderAsync(Dropbox.Api.Files.ListFolderArg)
  isExternal: true
- uid: Dropbox.Api.Files.Routes.FilesUserRoutes.GetThumbnailBatchAsync(Dropbox.Api.Files.GetThumbnailBatchArg)
  commentId: M:Dropbox.Api.Files.Routes.FilesUserRoutes.GetThumbnailBatchAsync(Dropbox.Api.Files.GetThumbnailBatchArg)
  isExternal: true
- uid: Dropbox.Api.Files.Routes.FilesUserRoutes.GetMetadataAsync(Dropbox.Api.Files.GetMetadataArg)
  commentId: M:Dropbox.Api.Files.Routes.FilesUserRoutes.GetMetadataAsync(Dropbox.Api.Files.GetMetadataArg)
  isExternal: true
- uid: Dropbox.Api.Files.FileMetadata.#ctor*
  commentId: Overload:Dropbox.Api.Files.FileMetadata.#ctor
  name: FileMetadata
  nameWithType: FileMetadata.FileMetadata
  fullName: Dropbox.Api.Files.FileMetadata.FileMetadata
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Dropbox.Api.Files.MediaInfo
  commentId: T:Dropbox.Api.Files.MediaInfo
  parent: Dropbox.Api.Files
  name: MediaInfo
  nameWithType: MediaInfo
  fullName: Dropbox.Api.Files.MediaInfo
- uid: Dropbox.Api.Files.SymlinkInfo
  commentId: T:Dropbox.Api.Files.SymlinkInfo
  parent: Dropbox.Api.Files
  name: SymlinkInfo
  nameWithType: SymlinkInfo
  fullName: Dropbox.Api.Files.SymlinkInfo
- uid: Dropbox.Api.Files.FileSharingInfo
  commentId: T:Dropbox.Api.Files.FileSharingInfo
  parent: Dropbox.Api.Files
  name: FileSharingInfo
  nameWithType: FileSharingInfo
  fullName: Dropbox.Api.Files.FileSharingInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Files.ExportInfo
  commentId: T:Dropbox.Api.Files.ExportInfo
  parent: Dropbox.Api.Files
  name: ExportInfo
  nameWithType: ExportInfo
  fullName: Dropbox.Api.Files.ExportInfo
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyGroup}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.FileProperties.PropertyGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PropertyGroup>
  nameWithType: IEnumerable<PropertyGroup>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.FileProperties.PropertyGroup>
  nameWithType.vb: IEnumerable(Of PropertyGroup)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.FileProperties.PropertyGroup)
  name.vb: IEnumerable(Of PropertyGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.FileProperties.PropertyGroup
    name: PropertyGroup
    nameWithType: PropertyGroup
    fullName: Dropbox.Api.FileProperties.PropertyGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.FileProperties.PropertyGroup
    name: PropertyGroup
    nameWithType: PropertyGroup
    fullName: Dropbox.Api.FileProperties.PropertyGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Files.FileLockMetadata
  commentId: T:Dropbox.Api.Files.FileLockMetadata
  parent: Dropbox.Api.Files
  name: FileLockMetadata
  nameWithType: FileLockMetadata
  fullName: Dropbox.Api.Files.FileLockMetadata
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Files.FileMetadata.Id*
  commentId: Overload:Dropbox.Api.Files.FileMetadata.Id
  name: Id
  nameWithType: FileMetadata.Id
  fullName: Dropbox.Api.Files.FileMetadata.Id
- uid: Dropbox.Api.Files.FileMetadata.ClientModified*
  commentId: Overload:Dropbox.Api.Files.FileMetadata.ClientModified
  name: ClientModified
  nameWithType: FileMetadata.ClientModified
  fullName: Dropbox.Api.Files.FileMetadata.ClientModified
- uid: Dropbox.Api.Files.FileMetadata.ServerModified*
  commentId: Overload:Dropbox.Api.Files.FileMetadata.ServerModified
  name: ServerModified
  nameWithType: FileMetadata.ServerModified
  fullName: Dropbox.Api.Files.FileMetadata.ServerModified
- uid: Dropbox.Api.Files.FileMetadata.Rev*
  commentId: Overload:Dropbox.Api.Files.FileMetadata.Rev
  name: Rev
  nameWithType: FileMetadata.Rev
  fullName: Dropbox.Api.Files.FileMetadata.Rev
- uid: Dropbox.Api.Files.FileMetadata.Size*
  commentId: Overload:Dropbox.Api.Files.FileMetadata.Size
  name: Size
  nameWithType: FileMetadata.Size
  fullName: Dropbox.Api.Files.FileMetadata.Size
- uid: Dropbox.Api.Files.FileMetadata.MediaInfo*
  commentId: Overload:Dropbox.Api.Files.FileMetadata.MediaInfo
  name: MediaInfo
  nameWithType: FileMetadata.MediaInfo
  fullName: Dropbox.Api.Files.FileMetadata.MediaInfo
- uid: Dropbox.Api.Files.FileMetadata.SymlinkInfo*
  commentId: Overload:Dropbox.Api.Files.FileMetadata.SymlinkInfo
  name: SymlinkInfo
  nameWithType: FileMetadata.SymlinkInfo
  fullName: Dropbox.Api.Files.FileMetadata.SymlinkInfo
- uid: Dropbox.Api.Files.FileMetadata.SharingInfo*
  commentId: Overload:Dropbox.Api.Files.FileMetadata.SharingInfo
  name: SharingInfo
  nameWithType: FileMetadata.SharingInfo
  fullName: Dropbox.Api.Files.FileMetadata.SharingInfo
- uid: Dropbox.Api.Files.FileMetadata.IsDownloadable*
  commentId: Overload:Dropbox.Api.Files.FileMetadata.IsDownloadable
  name: IsDownloadable
  nameWithType: FileMetadata.IsDownloadable
  fullName: Dropbox.Api.Files.FileMetadata.IsDownloadable
- uid: Dropbox.Api.Files.FileMetadata.IsDownloadable
  commentId: P:Dropbox.Api.Files.FileMetadata.IsDownloadable
  isExternal: true
- uid: Dropbox.Api.Files.FileMetadata.ExportInfo*
  commentId: Overload:Dropbox.Api.Files.FileMetadata.ExportInfo
  name: ExportInfo
  nameWithType: FileMetadata.ExportInfo
  fullName: Dropbox.Api.Files.FileMetadata.ExportInfo
- uid: Dropbox.Api.Files.FileMetadata.PropertyGroups*
  commentId: Overload:Dropbox.Api.Files.FileMetadata.PropertyGroups
  name: PropertyGroups
  nameWithType: FileMetadata.PropertyGroups
  fullName: Dropbox.Api.Files.FileMetadata.PropertyGroups
- uid: System.Collections.Generic.IList{Dropbox.Api.FileProperties.PropertyGroup}
  commentId: T:System.Collections.Generic.IList{Dropbox.Api.FileProperties.PropertyGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<PropertyGroup>
  nameWithType: IList<PropertyGroup>
  fullName: System.Collections.Generic.IList<Dropbox.Api.FileProperties.PropertyGroup>
  nameWithType.vb: IList(Of PropertyGroup)
  fullName.vb: System.Collections.Generic.IList(Of Dropbox.Api.FileProperties.PropertyGroup)
  name.vb: IList(Of PropertyGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.FileProperties.PropertyGroup
    name: PropertyGroup
    nameWithType: PropertyGroup
    fullName: Dropbox.Api.FileProperties.PropertyGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.FileProperties.PropertyGroup
    name: PropertyGroup
    nameWithType: PropertyGroup
    fullName: Dropbox.Api.FileProperties.PropertyGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Files.FileMetadata.HasExplicitSharedMembers*
  commentId: Overload:Dropbox.Api.Files.FileMetadata.HasExplicitSharedMembers
  name: HasExplicitSharedMembers
  nameWithType: FileMetadata.HasExplicitSharedMembers
  fullName: Dropbox.Api.Files.FileMetadata.HasExplicitSharedMembers
- uid: Dropbox.Api.Files.FileMetadata.ContentHash*
  commentId: Overload:Dropbox.Api.Files.FileMetadata.ContentHash
  name: ContentHash
  nameWithType: FileMetadata.ContentHash
  fullName: Dropbox.Api.Files.FileMetadata.ContentHash
- uid: Dropbox.Api.Files.FileMetadata.FileLockInfo*
  commentId: Overload:Dropbox.Api.Files.FileMetadata.FileLockInfo
  name: FileLockInfo
  nameWithType: FileMetadata.FileLockInfo
  fullName: Dropbox.Api.Files.FileMetadata.FileLockInfo
