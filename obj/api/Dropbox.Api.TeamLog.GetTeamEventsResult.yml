### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamLog.GetTeamEventsResult
  commentId: T:Dropbox.Api.TeamLog.GetTeamEventsResult
  id: GetTeamEventsResult
  parent: Dropbox.Api.TeamLog
  children:
  - Dropbox.Api.TeamLog.GetTeamEventsResult.#ctor(System.Collections.Generic.IEnumerable{Dropbox.Api.TeamLog.TeamEvent},System.String,System.Boolean)
  - Dropbox.Api.TeamLog.GetTeamEventsResult.Cursor
  - Dropbox.Api.TeamLog.GetTeamEventsResult.Events
  - Dropbox.Api.TeamLog.GetTeamEventsResult.HasMore
  langs:
  - csharp
  - vb
  name: GetTeamEventsResult
  nameWithType: GetTeamEventsResult
  fullName: Dropbox.Api.TeamLog.GetTeamEventsResult
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsResult.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: GetTeamEventsResult
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsResult.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>The get team events result object</p>\n"
  example: []
  syntax:
    content: public class GetTeamEventsResult
    content.vb: Public Class GetTeamEventsResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.TeamLog.GetTeamEventsResult.#ctor(System.Collections.Generic.IEnumerable{Dropbox.Api.TeamLog.TeamEvent},System.String,System.Boolean)
  commentId: M:Dropbox.Api.TeamLog.GetTeamEventsResult.#ctor(System.Collections.Generic.IEnumerable{Dropbox.Api.TeamLog.TeamEvent},System.String,System.Boolean)
  id: '#ctor(System.Collections.Generic.IEnumerable{Dropbox.Api.TeamLog.TeamEvent},System.String,System.Boolean)'
  parent: Dropbox.Api.TeamLog.GetTeamEventsResult
  langs:
  - csharp
  - vb
  name: GetTeamEventsResult(IEnumerable<TeamEvent>, String, Boolean)
  nameWithType: GetTeamEventsResult.GetTeamEventsResult(IEnumerable<TeamEvent>, String, Boolean)
  fullName: Dropbox.Api.TeamLog.GetTeamEventsResult.GetTeamEventsResult(System.Collections.Generic.IEnumerable<Dropbox.Api.TeamLog.TeamEvent>, System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsResult.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsResult.cs
    startLine: 50
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamLog.GetTeamEventsResult\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public GetTeamEventsResult(IEnumerable<TeamEvent> events, string cursor, bool hasMore)
    parameters:
    - id: events
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.TeamLog.TeamEvent}
      description: >-
        List of events. Note that events are not guaranteed to be

        sorted by their timestamp value.
    - id: cursor
      type: System.String
      description: >-
        Pass the cursor into <xref href="Dropbox.Api.TeamLog.Routes.TeamLogTeamRoutes.GetEventsContinueAsync(Dropbox.Api.TeamLog.GetTeamEventsContinueArg)" data-throw-if-not-resolved="false"></xref> to

        obtain additional events. The value of <code data-dev-comment-type="paramref" class="paramref">cursor</code> may change for

        each response from <xref href="Dropbox.Api.TeamLog.Routes.TeamLogTeamRoutes.GetEventsContinueAsync(Dropbox.Api.TeamLog.GetTeamEventsContinueArg)" data-throw-if-not-resolved="false"></xref>,

        regardless of the value of <code data-dev-comment-type="paramref" class="paramref">hasMore</code>; older cursor strings may

        expire. Thus, callers should ensure that they update their cursor based on the

        latest value of <code data-dev-comment-type="paramref" class="paramref">cursor</code> after each call, and poll regularly if

        they wish to poll for new events. Callers should handle reset exceptions for

        expired cursors.
    - id: hasMore
      type: System.Boolean
      description: >-
        Is true if there may be additional events that have not been

        returned yet. An additional call to <xref href="Dropbox.Api.TeamLog.Routes.TeamLogTeamRoutes.GetEventsContinueAsync(Dropbox.Api.TeamLog.GetTeamEventsContinueArg)" data-throw-if-not-resolved="false"></xref> can

        retrieve them. Note that <code data-dev-comment-type="paramref" class="paramref">hasMore</code> may be <code>true</code>, even if

        <code data-dev-comment-type="paramref" class="paramref">events</code> is empty.
    content.vb: Public Sub New(events As IEnumerable(Of TeamEvent), cursor As String, hasMore As Boolean)
  overload: Dropbox.Api.TeamLog.GetTeamEventsResult.#ctor*
  nameWithType.vb: GetTeamEventsResult.GetTeamEventsResult(IEnumerable(Of TeamEvent), String, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.TeamLog.GetTeamEventsResult.GetTeamEventsResult(System.Collections.Generic.IEnumerable(Of Dropbox.Api.TeamLog.TeamEvent), System.String, System.Boolean)
  name.vb: GetTeamEventsResult(IEnumerable(Of TeamEvent), String, Boolean)
- uid: Dropbox.Api.TeamLog.GetTeamEventsResult.Events
  commentId: P:Dropbox.Api.TeamLog.GetTeamEventsResult.Events
  id: Events
  parent: Dropbox.Api.TeamLog.GetTeamEventsResult
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: GetTeamEventsResult.Events
  fullName: Dropbox.Api.TeamLog.GetTeamEventsResult.Events
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsResult.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Events
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsResult.cs
    startLine: 86
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>List of events. Note that events are not guaranteed to be sorted by their\ntimestamp value.</p>\n"
  example: []
  syntax:
    content: public IList<TeamEvent> Events { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Dropbox.Api.TeamLog.TeamEvent}
    content.vb: Public Property Events As IList(Of TeamEvent)
  overload: Dropbox.Api.TeamLog.GetTeamEventsResult.Events*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.TeamLog.GetTeamEventsResult.Cursor
  commentId: P:Dropbox.Api.TeamLog.GetTeamEventsResult.Cursor
  id: Cursor
  parent: Dropbox.Api.TeamLog.GetTeamEventsResult
  langs:
  - csharp
  - vb
  name: Cursor
  nameWithType: GetTeamEventsResult.Cursor
  fullName: Dropbox.Api.TeamLog.GetTeamEventsResult.Cursor
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsResult.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Cursor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsResult.cs
    startLine: 101
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Pass the cursor into <xref href=\"Dropbox.Api.TeamLog.Routes.TeamLogTeamRoutes.GetEventsContinueAsync(Dropbox.Api.TeamLog.GetTeamEventsContinueArg)\" data-throw-if-not-resolved=\"false\"></xref> to\nobtain additional events.</p>\n<p>The value of <xref href=\"Dropbox.Api.TeamLog.GetTeamEventsResult.Cursor\" data-throw-if-not-resolved=\"false\"></xref> may change for each response from <xref href=\"Dropbox.Api.TeamLog.Routes.TeamLogTeamRoutes.GetEventsContinueAsync(Dropbox.Api.TeamLog.GetTeamEventsContinueArg)\" data-throw-if-not-resolved=\"false\"></xref>,\nregardless of the value of <xref href=\"Dropbox.Api.TeamLog.GetTeamEventsResult.HasMore\" data-throw-if-not-resolved=\"false\"></xref>; older cursor strings may\nexpire.</p>\n<p>Thus, callers should ensure that they update their cursor based on the latest\nvalue of <xref href=\"Dropbox.Api.TeamLog.GetTeamEventsResult.Cursor\" data-throw-if-not-resolved=\"false\"></xref> after each call, and poll regularly if they wish to\npoll for new events.</p>\n<p>Callers should handle reset exceptions for expired cursors.</p>\n"
  example: []
  syntax:
    content: public string Cursor { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Cursor As String
  overload: Dropbox.Api.TeamLog.GetTeamEventsResult.Cursor*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.TeamLog.GetTeamEventsResult.HasMore
  commentId: P:Dropbox.Api.TeamLog.GetTeamEventsResult.HasMore
  id: HasMore
  parent: Dropbox.Api.TeamLog.GetTeamEventsResult
  langs:
  - csharp
  - vb
  name: HasMore
  nameWithType: GetTeamEventsResult.HasMore
  fullName: Dropbox.Api.TeamLog.GetTeamEventsResult.HasMore
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsResult.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: HasMore
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GetTeamEventsResult.cs
    startLine: 110
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Is true if there may be additional events that have not been returned yet. An\nadditional call to <xref href=\"Dropbox.Api.TeamLog.Routes.TeamLogTeamRoutes.GetEventsContinueAsync(Dropbox.Api.TeamLog.GetTeamEventsContinueArg)\" data-throw-if-not-resolved=\"false\"></xref> can\nretrieve them. Note that <xref href=\"Dropbox.Api.TeamLog.GetTeamEventsResult.HasMore\" data-throw-if-not-resolved=\"false\"></xref> may be <code>true</code>, even if <xref href=\"Dropbox.Api.TeamLog.GetTeamEventsResult.Events\" data-throw-if-not-resolved=\"false\"></xref> is empty.</p>\n"
  example: []
  syntax:
    content: public bool HasMore { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HasMore As Boolean
  overload: Dropbox.Api.TeamLog.GetTeamEventsResult.HasMore*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.TeamLog
  commentId: N:Dropbox.Api.TeamLog
  name: Dropbox.Api.TeamLog
  nameWithType: Dropbox.Api.TeamLog
  fullName: Dropbox.Api.TeamLog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.TeamLog.GetTeamEventsResult
  commentId: T:Dropbox.Api.TeamLog.GetTeamEventsResult
  parent: Dropbox.Api.TeamLog
  name: GetTeamEventsResult
  nameWithType: GetTeamEventsResult
  fullName: Dropbox.Api.TeamLog.GetTeamEventsResult
- uid: Dropbox.Api.TeamLog.Routes.TeamLogTeamRoutes.GetEventsContinueAsync(Dropbox.Api.TeamLog.GetTeamEventsContinueArg)
  commentId: M:Dropbox.Api.TeamLog.Routes.TeamLogTeamRoutes.GetEventsContinueAsync(Dropbox.Api.TeamLog.GetTeamEventsContinueArg)
  isExternal: true
- uid: Dropbox.Api.TeamLog.GetTeamEventsResult.#ctor*
  commentId: Overload:Dropbox.Api.TeamLog.GetTeamEventsResult.#ctor
  name: GetTeamEventsResult
  nameWithType: GetTeamEventsResult.GetTeamEventsResult
  fullName: Dropbox.Api.TeamLog.GetTeamEventsResult.GetTeamEventsResult
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.TeamLog.TeamEvent}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.TeamLog.TeamEvent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TeamEvent>
  nameWithType: IEnumerable<TeamEvent>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.TeamLog.TeamEvent>
  nameWithType.vb: IEnumerable(Of TeamEvent)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.TeamLog.TeamEvent)
  name.vb: IEnumerable(Of TeamEvent)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.TeamLog.TeamEvent
    name: TeamEvent
    nameWithType: TeamEvent
    fullName: Dropbox.Api.TeamLog.TeamEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.TeamLog.TeamEvent
    name: TeamEvent
    nameWithType: TeamEvent
    fullName: Dropbox.Api.TeamLog.TeamEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Dropbox.Api.TeamLog.GetTeamEventsResult.Events*
  commentId: Overload:Dropbox.Api.TeamLog.GetTeamEventsResult.Events
  name: Events
  nameWithType: GetTeamEventsResult.Events
  fullName: Dropbox.Api.TeamLog.GetTeamEventsResult.Events
- uid: System.Collections.Generic.IList{Dropbox.Api.TeamLog.TeamEvent}
  commentId: T:System.Collections.Generic.IList{Dropbox.Api.TeamLog.TeamEvent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TeamEvent>
  nameWithType: IList<TeamEvent>
  fullName: System.Collections.Generic.IList<Dropbox.Api.TeamLog.TeamEvent>
  nameWithType.vb: IList(Of TeamEvent)
  fullName.vb: System.Collections.Generic.IList(Of Dropbox.Api.TeamLog.TeamEvent)
  name.vb: IList(Of TeamEvent)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.TeamLog.TeamEvent
    name: TeamEvent
    nameWithType: TeamEvent
    fullName: Dropbox.Api.TeamLog.TeamEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.TeamLog.TeamEvent
    name: TeamEvent
    nameWithType: TeamEvent
    fullName: Dropbox.Api.TeamLog.TeamEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.TeamLog.GetTeamEventsResult.Cursor
  commentId: P:Dropbox.Api.TeamLog.GetTeamEventsResult.Cursor
  isExternal: true
- uid: Dropbox.Api.TeamLog.GetTeamEventsResult.HasMore
  commentId: P:Dropbox.Api.TeamLog.GetTeamEventsResult.HasMore
  isExternal: true
- uid: Dropbox.Api.TeamLog.GetTeamEventsResult.Cursor*
  commentId: Overload:Dropbox.Api.TeamLog.GetTeamEventsResult.Cursor
  name: Cursor
  nameWithType: GetTeamEventsResult.Cursor
  fullName: Dropbox.Api.TeamLog.GetTeamEventsResult.Cursor
- uid: Dropbox.Api.TeamLog.GetTeamEventsResult.Events
  commentId: P:Dropbox.Api.TeamLog.GetTeamEventsResult.Events
  isExternal: true
- uid: Dropbox.Api.TeamLog.GetTeamEventsResult.HasMore*
  commentId: Overload:Dropbox.Api.TeamLog.GetTeamEventsResult.HasMore
  name: HasMore
  nameWithType: GetTeamEventsResult.HasMore
  fullName: Dropbox.Api.TeamLog.GetTeamEventsResult.HasMore
