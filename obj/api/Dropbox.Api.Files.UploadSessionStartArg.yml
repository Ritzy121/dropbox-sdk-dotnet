### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.UploadSessionStartArg
  commentId: T:Dropbox.Api.Files.UploadSessionStartArg
  id: UploadSessionStartArg
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.UploadSessionStartArg.#ctor(System.Boolean,Dropbox.Api.Files.UploadSessionType,System.String)
  - Dropbox.Api.Files.UploadSessionStartArg.Close
  - Dropbox.Api.Files.UploadSessionStartArg.ContentHash
  - Dropbox.Api.Files.UploadSessionStartArg.SessionType
  langs:
  - csharp
  - vb
  name: UploadSessionStartArg
  nameWithType: UploadSessionStartArg
  fullName: Dropbox.Api.Files.UploadSessionStartArg
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionStartArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: UploadSessionStartArg
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionStartArg.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The upload session start arg object</p>\n"
  example: []
  syntax:
    content: public class UploadSessionStartArg
    content.vb: Public Class UploadSessionStartArg
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.UploadSessionStartArg.#ctor(System.Boolean,Dropbox.Api.Files.UploadSessionType,System.String)
  commentId: M:Dropbox.Api.Files.UploadSessionStartArg.#ctor(System.Boolean,Dropbox.Api.Files.UploadSessionType,System.String)
  id: '#ctor(System.Boolean,Dropbox.Api.Files.UploadSessionType,System.String)'
  parent: Dropbox.Api.Files.UploadSessionStartArg
  langs:
  - csharp
  - vb
  name: UploadSessionStartArg(Boolean, UploadSessionType, String)
  nameWithType: UploadSessionStartArg.UploadSessionStartArg(Boolean, UploadSessionType, String)
  fullName: Dropbox.Api.Files.UploadSessionStartArg.UploadSessionStartArg(System.Boolean, Dropbox.Api.Files.UploadSessionType, System.String)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionStartArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionStartArg.cs
    startLine: 45
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.UploadSessionStartArg\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public UploadSessionStartArg(bool close = false, UploadSessionType sessionType = null, string contentHash = null)
    parameters:
    - id: close
      type: System.Boolean
      description: >-
        If true, the current session will be closed, at which point you

        won&apos;t be able to call <xref href="Dropbox.Api.Files.Routes.FilesUserRoutes.UploadSessionAppendV2Async(Dropbox.Api.Files.UploadSessionAppendArg%2cSystem.IO.Stream)" data-throw-if-not-resolved="false"></xref>

        anymore with the current session.
    - id: sessionType
      type: Dropbox.Api.Files.UploadSessionType
      description: >-
        Type of upload session you want to start. If not

        specified, default is <xref href="Dropbox.Api.Files.UploadSessionType.Sequential" data-throw-if-not-resolved="false"></xref>.
    - id: contentHash
      type: System.String
      description: >-
        A hash of the file content uploaded in this call. If

        provided and the uploaded content does not match this hash, an error will be

        returned. For more information see our <a href="https://www.dropbox.com/developers/reference/content-hash">Content hash</a>

        page.
    content.vb: Public Sub New(close As Boolean = False, sessionType As UploadSessionType = Nothing, contentHash As String = Nothing)
  overload: Dropbox.Api.Files.UploadSessionStartArg.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.UploadSessionStartArg.Close
  commentId: P:Dropbox.Api.Files.UploadSessionStartArg.Close
  id: Close
  parent: Dropbox.Api.Files.UploadSessionStartArg
  langs:
  - csharp
  - vb
  name: Close
  nameWithType: UploadSessionStartArg.Close
  fullName: Dropbox.Api.Files.UploadSessionStartArg.Close
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionStartArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Close
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionStartArg.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>If true, the current session will be closed, at which point you won&apos;t be able\nto call <xref href=\"Dropbox.Api.Files.Routes.FilesUserRoutes.UploadSessionAppendV2Async(Dropbox.Api.Files.UploadSessionAppendArg%2cSystem.IO.Stream)\" data-throw-if-not-resolved=\"false\"></xref>\nanymore with the current session.</p>\n"
  example: []
  syntax:
    content: public bool Close { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Close As Boolean
  overload: Dropbox.Api.Files.UploadSessionStartArg.Close*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.UploadSessionStartArg.SessionType
  commentId: P:Dropbox.Api.Files.UploadSessionStartArg.SessionType
  id: SessionType
  parent: Dropbox.Api.Files.UploadSessionStartArg
  langs:
  - csharp
  - vb
  name: SessionType
  nameWithType: UploadSessionStartArg.SessionType
  fullName: Dropbox.Api.Files.UploadSessionStartArg.SessionType
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionStartArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: SessionType
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionStartArg.cs
    startLine: 90
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Type of upload session you want to start. If not specified, default is <xref href=\"Dropbox.Api.Files.UploadSessionType.Sequential\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public UploadSessionType SessionType { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Files.UploadSessionType
    content.vb: Public Property SessionType As UploadSessionType
  overload: Dropbox.Api.Files.UploadSessionStartArg.SessionType*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.UploadSessionStartArg.ContentHash
  commentId: P:Dropbox.Api.Files.UploadSessionStartArg.ContentHash
  id: ContentHash
  parent: Dropbox.Api.Files.UploadSessionStartArg
  langs:
  - csharp
  - vb
  name: ContentHash
  nameWithType: UploadSessionStartArg.ContentHash
  fullName: Dropbox.Api.Files.UploadSessionStartArg.ContentHash
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionStartArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ContentHash
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionStartArg.cs
    startLine: 99
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>A hash of the file content uploaded in this call. If provided and the\nuploaded content does not match this hash, an error will be returned. For more\ninformation see our <a href=\"https://www.dropbox.com/developers/reference/content-hash\">Content hash</a>\npage.</p>\n"
  example: []
  syntax:
    content: public string ContentHash { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ContentHash As String
  overload: Dropbox.Api.Files.UploadSessionStartArg.ContentHash*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Files.UploadSessionStartArg
  commentId: T:Dropbox.Api.Files.UploadSessionStartArg
  parent: Dropbox.Api.Files
  name: UploadSessionStartArg
  nameWithType: UploadSessionStartArg
  fullName: Dropbox.Api.Files.UploadSessionStartArg
- uid: Dropbox.Api.Files.Routes.FilesUserRoutes.UploadSessionAppendV2Async(Dropbox.Api.Files.UploadSessionAppendArg,System.IO.Stream)
  commentId: M:Dropbox.Api.Files.Routes.FilesUserRoutes.UploadSessionAppendV2Async(Dropbox.Api.Files.UploadSessionAppendArg,System.IO.Stream)
  isExternal: true
- uid: Dropbox.Api.Files.UploadSessionType.Sequential
  commentId: T:Dropbox.Api.Files.UploadSessionType.Sequential
  parent: Dropbox.Api.Files
  name: UploadSessionType.Sequential
  nameWithType: UploadSessionType.Sequential
  fullName: Dropbox.Api.Files.UploadSessionType.Sequential
- uid: Dropbox.Api.Files.UploadSessionStartArg.#ctor*
  commentId: Overload:Dropbox.Api.Files.UploadSessionStartArg.#ctor
  name: UploadSessionStartArg
  nameWithType: UploadSessionStartArg.UploadSessionStartArg
  fullName: Dropbox.Api.Files.UploadSessionStartArg.UploadSessionStartArg
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Files.UploadSessionType
  commentId: T:Dropbox.Api.Files.UploadSessionType
  parent: Dropbox.Api.Files
  name: UploadSessionType
  nameWithType: UploadSessionType
  fullName: Dropbox.Api.Files.UploadSessionType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dropbox.Api.Files.UploadSessionStartArg.Close*
  commentId: Overload:Dropbox.Api.Files.UploadSessionStartArg.Close
  name: Close
  nameWithType: UploadSessionStartArg.Close
  fullName: Dropbox.Api.Files.UploadSessionStartArg.Close
- uid: Dropbox.Api.Files.UploadSessionStartArg.SessionType*
  commentId: Overload:Dropbox.Api.Files.UploadSessionStartArg.SessionType
  name: SessionType
  nameWithType: UploadSessionStartArg.SessionType
  fullName: Dropbox.Api.Files.UploadSessionStartArg.SessionType
- uid: Dropbox.Api.Files.UploadSessionStartArg.ContentHash*
  commentId: Overload:Dropbox.Api.Files.UploadSessionStartArg.ContentHash
  name: ContentHash
  nameWithType: UploadSessionStartArg.ContentHash
  fullName: Dropbox.Api.Files.UploadSessionStartArg.ContentHash
