### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult
  commentId: T:Dropbox.Api.Team.LegalHoldsListHeldRevisionResult
  id: LegalHoldsListHeldRevisionResult
  parent: Dropbox.Api.Team
  children:
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.#ctor(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.LegalHoldHeldRevisionMetadata},System.Boolean,System.String)
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.Cursor
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.Entries
  - Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.HasMore
  langs:
  - csharp
  - vb
  name: LegalHoldsListHeldRevisionResult
  nameWithType: LegalHoldsListHeldRevisionResult
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionResult.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LegalHoldsListHeldRevisionResult
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionResult.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>The legal holds list held revision result object</p>\n"
  example: []
  syntax:
    content: public class LegalHoldsListHeldRevisionResult
    content.vb: Public Class LegalHoldsListHeldRevisionResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.#ctor(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.LegalHoldHeldRevisionMetadata},System.Boolean,System.String)
  commentId: M:Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.#ctor(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.LegalHoldHeldRevisionMetadata},System.Boolean,System.String)
  id: '#ctor(System.Collections.Generic.IEnumerable{Dropbox.Api.Team.LegalHoldHeldRevisionMetadata},System.Boolean,System.String)'
  parent: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult
  langs:
  - csharp
  - vb
  name: LegalHoldsListHeldRevisionResult(IEnumerable<LegalHoldHeldRevisionMetadata>, Boolean, String)
  nameWithType: LegalHoldsListHeldRevisionResult.LegalHoldsListHeldRevisionResult(IEnumerable<LegalHoldHeldRevisionMetadata>, Boolean, String)
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.LegalHoldsListHeldRevisionResult(System.Collections.Generic.IEnumerable<Dropbox.Api.Team.LegalHoldHeldRevisionMetadata>, System.Boolean, System.String)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionResult.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionResult.cs
    startLine: 41
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Team.LegalHoldsListHeldRevisionResult\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsListHeldRevisionResult(IEnumerable<LegalHoldHeldRevisionMetadata> entries, bool hasMore, string cursor = null)
    parameters:
    - id: entries
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.LegalHoldHeldRevisionMetadata}
      description: List of file entries that under the hold.
    - id: hasMore
      type: System.Boolean
      description: >-
        True if there are more file entries that haven&apos;t been

        returned. You can retrieve them with a call to

        /legal_holds/list_held_revisions_continue.
    - id: cursor
      type: System.String
      description: >-
        The cursor idicates where to continue reading file metadata

        entries for the next API call. When there are no more entries, the cursor will

        return none. Pass the cursor into

        /2/team/legal_holds/list_held_revisions/continue.
    content.vb: Public Sub New(entries As IEnumerable(Of LegalHoldHeldRevisionMetadata), hasMore As Boolean, cursor As String = Nothing)
  overload: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.#ctor*
  nameWithType.vb: LegalHoldsListHeldRevisionResult.LegalHoldsListHeldRevisionResult(IEnumerable(Of LegalHoldHeldRevisionMetadata), Boolean, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.LegalHoldsListHeldRevisionResult(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.LegalHoldHeldRevisionMetadata), System.Boolean, System.String)
  name.vb: LegalHoldsListHeldRevisionResult(IEnumerable(Of LegalHoldHeldRevisionMetadata), Boolean, String)
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.Entries
  commentId: P:Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.Entries
  id: Entries
  parent: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult
  langs:
  - csharp
  - vb
  name: Entries
  nameWithType: LegalHoldsListHeldRevisionResult.Entries
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.Entries
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionResult.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Entries
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionResult.cs
    startLine: 79
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>List of file entries that under the hold.</p>\n"
  example: []
  syntax:
    content: public IList<LegalHoldHeldRevisionMetadata> Entries { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Dropbox.Api.Team.LegalHoldHeldRevisionMetadata}
    content.vb: Public Property Entries As IList(Of LegalHoldHeldRevisionMetadata)
  overload: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.Entries*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.HasMore
  commentId: P:Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.HasMore
  id: HasMore
  parent: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult
  langs:
  - csharp
  - vb
  name: HasMore
  nameWithType: LegalHoldsListHeldRevisionResult.HasMore
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.HasMore
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionResult.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: HasMore
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionResult.cs
    startLine: 85
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>True if there are more file entries that haven&apos;t been returned. You can\nretrieve them with a call to /legal_holds/list_held_revisions_continue.</p>\n"
  example: []
  syntax:
    content: public bool HasMore { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HasMore As Boolean
  overload: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.HasMore*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.Cursor
  commentId: P:Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.Cursor
  id: Cursor
  parent: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult
  langs:
  - csharp
  - vb
  name: Cursor
  nameWithType: LegalHoldsListHeldRevisionResult.Cursor
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.Cursor
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionResult.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Cursor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsListHeldRevisionResult.cs
    startLine: 92
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>The cursor idicates where to continue reading file metadata entries for the\nnext API call. When there are no more entries, the cursor will return none.</p>\n<p>Pass the cursor into /2/team/legal_holds/list_held_revisions/continue.</p>\n"
  example: []
  syntax:
    content: public string Cursor { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Cursor As String
  overload: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.Cursor*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Team
  commentId: N:Dropbox.Api.Team
  name: Dropbox.Api.Team
  nameWithType: Dropbox.Api.Team
  fullName: Dropbox.Api.Team
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult
  commentId: T:Dropbox.Api.Team.LegalHoldsListHeldRevisionResult
  parent: Dropbox.Api.Team
  name: LegalHoldsListHeldRevisionResult
  nameWithType: LegalHoldsListHeldRevisionResult
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.#ctor*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.#ctor
  name: LegalHoldsListHeldRevisionResult
  nameWithType: LegalHoldsListHeldRevisionResult.LegalHoldsListHeldRevisionResult
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.LegalHoldsListHeldRevisionResult
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Team.LegalHoldHeldRevisionMetadata}
  commentId: T:System.Collections.Generic.IEnumerable{Dropbox.Api.Team.LegalHoldHeldRevisionMetadata}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<LegalHoldHeldRevisionMetadata>
  nameWithType: IEnumerable<LegalHoldHeldRevisionMetadata>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Team.LegalHoldHeldRevisionMetadata>
  nameWithType.vb: IEnumerable(Of LegalHoldHeldRevisionMetadata)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Team.LegalHoldHeldRevisionMetadata)
  name.vb: IEnumerable(Of LegalHoldHeldRevisionMetadata)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.LegalHoldHeldRevisionMetadata
    name: LegalHoldHeldRevisionMetadata
    nameWithType: LegalHoldHeldRevisionMetadata
    fullName: Dropbox.Api.Team.LegalHoldHeldRevisionMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.LegalHoldHeldRevisionMetadata
    name: LegalHoldHeldRevisionMetadata
    nameWithType: LegalHoldHeldRevisionMetadata
    fullName: Dropbox.Api.Team.LegalHoldHeldRevisionMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.Entries*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.Entries
  name: Entries
  nameWithType: LegalHoldsListHeldRevisionResult.Entries
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.Entries
- uid: System.Collections.Generic.IList{Dropbox.Api.Team.LegalHoldHeldRevisionMetadata}
  commentId: T:System.Collections.Generic.IList{Dropbox.Api.Team.LegalHoldHeldRevisionMetadata}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<LegalHoldHeldRevisionMetadata>
  nameWithType: IList<LegalHoldHeldRevisionMetadata>
  fullName: System.Collections.Generic.IList<Dropbox.Api.Team.LegalHoldHeldRevisionMetadata>
  nameWithType.vb: IList(Of LegalHoldHeldRevisionMetadata)
  fullName.vb: System.Collections.Generic.IList(Of Dropbox.Api.Team.LegalHoldHeldRevisionMetadata)
  name.vb: IList(Of LegalHoldHeldRevisionMetadata)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Team.LegalHoldHeldRevisionMetadata
    name: LegalHoldHeldRevisionMetadata
    nameWithType: LegalHoldHeldRevisionMetadata
    fullName: Dropbox.Api.Team.LegalHoldHeldRevisionMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Team.LegalHoldHeldRevisionMetadata
    name: LegalHoldHeldRevisionMetadata
    nameWithType: LegalHoldHeldRevisionMetadata
    fullName: Dropbox.Api.Team.LegalHoldHeldRevisionMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.HasMore*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.HasMore
  name: HasMore
  nameWithType: LegalHoldsListHeldRevisionResult.HasMore
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.HasMore
- uid: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.Cursor*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.Cursor
  name: Cursor
  nameWithType: LegalHoldsListHeldRevisionResult.Cursor
  fullName: Dropbox.Api.Team.LegalHoldsListHeldRevisionResult.Cursor
