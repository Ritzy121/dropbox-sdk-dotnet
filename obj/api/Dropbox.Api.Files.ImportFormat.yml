### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.ImportFormat
  commentId: T:Dropbox.Api.Files.ImportFormat
  id: ImportFormat
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.ImportFormat.#ctor
  - Dropbox.Api.Files.ImportFormat.AsHtml
  - Dropbox.Api.Files.ImportFormat.AsMarkdown
  - Dropbox.Api.Files.ImportFormat.AsOther
  - Dropbox.Api.Files.ImportFormat.AsPlainText
  - Dropbox.Api.Files.ImportFormat.IsHtml
  - Dropbox.Api.Files.ImportFormat.IsMarkdown
  - Dropbox.Api.Files.ImportFormat.IsOther
  - Dropbox.Api.Files.ImportFormat.IsPlainText
  langs:
  - csharp
  - vb
  name: ImportFormat
  nameWithType: ImportFormat
  fullName: Dropbox.Api.Files.ImportFormat
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ImportFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: ImportFormat
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ImportFormat.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The import format of the incoming Paper doc content.</p>\n"
  example: []
  syntax:
    content: public class ImportFormat
    content.vb: Public Class ImportFormat
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Files.ImportFormat.Html
  - Dropbox.Api.Files.ImportFormat.Markdown
  - Dropbox.Api.Files.ImportFormat.Other
  - Dropbox.Api.Files.ImportFormat.PlainText
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.ImportFormat.#ctor
  commentId: M:Dropbox.Api.Files.ImportFormat.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Files.ImportFormat
  langs:
  - csharp
  - vb
  name: ImportFormat()
  nameWithType: ImportFormat.ImportFormat()
  fullName: Dropbox.Api.Files.ImportFormat.ImportFormat()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ImportFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ImportFormat.cs
    startLine: 32
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.ImportFormat\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public ImportFormat()
    content.vb: Public Sub New
  overload: Dropbox.Api.Files.ImportFormat.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.ImportFormat.IsHtml
  commentId: P:Dropbox.Api.Files.ImportFormat.IsHtml
  id: IsHtml
  parent: Dropbox.Api.Files.ImportFormat
  langs:
  - csharp
  - vb
  name: IsHtml
  nameWithType: ImportFormat.IsHtml
  fullName: Dropbox.Api.Files.ImportFormat.IsHtml
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ImportFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsHtml
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ImportFormat.cs
    startLine: 39
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Html</p>\n"
  example: []
  syntax:
    content: public bool IsHtml { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsHtml As Boolean
  overload: Dropbox.Api.Files.ImportFormat.IsHtml*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.ImportFormat.AsHtml
  commentId: P:Dropbox.Api.Files.ImportFormat.AsHtml
  id: AsHtml
  parent: Dropbox.Api.Files.ImportFormat
  langs:
  - csharp
  - vb
  name: AsHtml
  nameWithType: ImportFormat.AsHtml
  fullName: Dropbox.Api.Files.ImportFormat.AsHtml
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ImportFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsHtml
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ImportFormat.cs
    startLine: 50
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Html, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public ImportFormat.Html AsHtml { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.ImportFormat.Html
    content.vb: Public ReadOnly Property AsHtml As ImportFormat.Html
  overload: Dropbox.Api.Files.ImportFormat.AsHtml*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.ImportFormat.IsMarkdown
  commentId: P:Dropbox.Api.Files.ImportFormat.IsMarkdown
  id: IsMarkdown
  parent: Dropbox.Api.Files.ImportFormat
  langs:
  - csharp
  - vb
  name: IsMarkdown
  nameWithType: ImportFormat.IsMarkdown
  fullName: Dropbox.Api.Files.ImportFormat.IsMarkdown
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ImportFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsMarkdown
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ImportFormat.cs
    startLine: 61
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Markdown</p>\n"
  example: []
  syntax:
    content: public bool IsMarkdown { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMarkdown As Boolean
  overload: Dropbox.Api.Files.ImportFormat.IsMarkdown*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.ImportFormat.AsMarkdown
  commentId: P:Dropbox.Api.Files.ImportFormat.AsMarkdown
  id: AsMarkdown
  parent: Dropbox.Api.Files.ImportFormat
  langs:
  - csharp
  - vb
  name: AsMarkdown
  nameWithType: ImportFormat.AsMarkdown
  fullName: Dropbox.Api.Files.ImportFormat.AsMarkdown
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ImportFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsMarkdown
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ImportFormat.cs
    startLine: 72
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Markdown, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public ImportFormat.Markdown AsMarkdown { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.ImportFormat.Markdown
    content.vb: Public ReadOnly Property AsMarkdown As ImportFormat.Markdown
  overload: Dropbox.Api.Files.ImportFormat.AsMarkdown*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.ImportFormat.IsPlainText
  commentId: P:Dropbox.Api.Files.ImportFormat.IsPlainText
  id: IsPlainText
  parent: Dropbox.Api.Files.ImportFormat
  langs:
  - csharp
  - vb
  name: IsPlainText
  nameWithType: ImportFormat.IsPlainText
  fullName: Dropbox.Api.Files.ImportFormat.IsPlainText
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ImportFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsPlainText
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ImportFormat.cs
    startLine: 83
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is PlainText</p>\n"
  example: []
  syntax:
    content: public bool IsPlainText { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPlainText As Boolean
  overload: Dropbox.Api.Files.ImportFormat.IsPlainText*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.ImportFormat.AsPlainText
  commentId: P:Dropbox.Api.Files.ImportFormat.AsPlainText
  id: AsPlainText
  parent: Dropbox.Api.Files.ImportFormat
  langs:
  - csharp
  - vb
  name: AsPlainText
  nameWithType: ImportFormat.AsPlainText
  fullName: Dropbox.Api.Files.ImportFormat.AsPlainText
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ImportFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsPlainText
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ImportFormat.cs
    startLine: 94
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a PlainText, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public ImportFormat.PlainText AsPlainText { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.ImportFormat.PlainText
    content.vb: Public ReadOnly Property AsPlainText As ImportFormat.PlainText
  overload: Dropbox.Api.Files.ImportFormat.AsPlainText*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.ImportFormat.IsOther
  commentId: P:Dropbox.Api.Files.ImportFormat.IsOther
  id: IsOther
  parent: Dropbox.Api.Files.ImportFormat
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: ImportFormat.IsOther
  fullName: Dropbox.Api.Files.ImportFormat.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ImportFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ImportFormat.cs
    startLine: 105
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.Files.ImportFormat.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.ImportFormat.AsOther
  commentId: P:Dropbox.Api.Files.ImportFormat.AsOther
  id: AsOther
  parent: Dropbox.Api.Files.ImportFormat
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: ImportFormat.AsOther
  fullName: Dropbox.Api.Files.ImportFormat.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ImportFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ImportFormat.cs
    startLine: 116
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public ImportFormat.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.ImportFormat.Other
    content.vb: Public ReadOnly Property AsOther As ImportFormat.Other
  overload: Dropbox.Api.Files.ImportFormat.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Files.ImportFormat
  commentId: T:Dropbox.Api.Files.ImportFormat
  parent: Dropbox.Api.Files
  name: ImportFormat
  nameWithType: ImportFormat
  fullName: Dropbox.Api.Files.ImportFormat
- uid: Dropbox.Api.Files.ImportFormat.#ctor*
  commentId: Overload:Dropbox.Api.Files.ImportFormat.#ctor
  name: ImportFormat
  nameWithType: ImportFormat.ImportFormat
  fullName: Dropbox.Api.Files.ImportFormat.ImportFormat
- uid: Dropbox.Api.Files.ImportFormat.IsHtml*
  commentId: Overload:Dropbox.Api.Files.ImportFormat.IsHtml
  name: IsHtml
  nameWithType: ImportFormat.IsHtml
  fullName: Dropbox.Api.Files.ImportFormat.IsHtml
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Files.ImportFormat.AsHtml*
  commentId: Overload:Dropbox.Api.Files.ImportFormat.AsHtml
  name: AsHtml
  nameWithType: ImportFormat.AsHtml
  fullName: Dropbox.Api.Files.ImportFormat.AsHtml
- uid: Dropbox.Api.Files.ImportFormat.Html
  commentId: T:Dropbox.Api.Files.ImportFormat.Html
  parent: Dropbox.Api.Files
  name: ImportFormat.Html
  nameWithType: ImportFormat.Html
  fullName: Dropbox.Api.Files.ImportFormat.Html
- uid: Dropbox.Api.Files.ImportFormat.IsMarkdown*
  commentId: Overload:Dropbox.Api.Files.ImportFormat.IsMarkdown
  name: IsMarkdown
  nameWithType: ImportFormat.IsMarkdown
  fullName: Dropbox.Api.Files.ImportFormat.IsMarkdown
- uid: Dropbox.Api.Files.ImportFormat.AsMarkdown*
  commentId: Overload:Dropbox.Api.Files.ImportFormat.AsMarkdown
  name: AsMarkdown
  nameWithType: ImportFormat.AsMarkdown
  fullName: Dropbox.Api.Files.ImportFormat.AsMarkdown
- uid: Dropbox.Api.Files.ImportFormat.Markdown
  commentId: T:Dropbox.Api.Files.ImportFormat.Markdown
  parent: Dropbox.Api.Files
  name: ImportFormat.Markdown
  nameWithType: ImportFormat.Markdown
  fullName: Dropbox.Api.Files.ImportFormat.Markdown
- uid: Dropbox.Api.Files.ImportFormat.IsPlainText*
  commentId: Overload:Dropbox.Api.Files.ImportFormat.IsPlainText
  name: IsPlainText
  nameWithType: ImportFormat.IsPlainText
  fullName: Dropbox.Api.Files.ImportFormat.IsPlainText
- uid: Dropbox.Api.Files.ImportFormat.AsPlainText*
  commentId: Overload:Dropbox.Api.Files.ImportFormat.AsPlainText
  name: AsPlainText
  nameWithType: ImportFormat.AsPlainText
  fullName: Dropbox.Api.Files.ImportFormat.AsPlainText
- uid: Dropbox.Api.Files.ImportFormat.PlainText
  commentId: T:Dropbox.Api.Files.ImportFormat.PlainText
  parent: Dropbox.Api.Files
  name: ImportFormat.PlainText
  nameWithType: ImportFormat.PlainText
  fullName: Dropbox.Api.Files.ImportFormat.PlainText
- uid: Dropbox.Api.Files.ImportFormat.IsOther*
  commentId: Overload:Dropbox.Api.Files.ImportFormat.IsOther
  name: IsOther
  nameWithType: ImportFormat.IsOther
  fullName: Dropbox.Api.Files.ImportFormat.IsOther
- uid: Dropbox.Api.Files.ImportFormat.AsOther*
  commentId: Overload:Dropbox.Api.Files.ImportFormat.AsOther
  name: AsOther
  nameWithType: ImportFormat.AsOther
  fullName: Dropbox.Api.Files.ImportFormat.AsOther
- uid: Dropbox.Api.Files.ImportFormat.Other
  commentId: T:Dropbox.Api.Files.ImportFormat.Other
  parent: Dropbox.Api.Files
  name: ImportFormat.Other
  nameWithType: ImportFormat.Other
  fullName: Dropbox.Api.Files.ImportFormat.Other
