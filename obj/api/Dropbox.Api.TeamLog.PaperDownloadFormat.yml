### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat
  commentId: T:Dropbox.Api.TeamLog.PaperDownloadFormat
  id: PaperDownloadFormat
  parent: Dropbox.Api.TeamLog
  children:
  - Dropbox.Api.TeamLog.PaperDownloadFormat.#ctor
  - Dropbox.Api.TeamLog.PaperDownloadFormat.AsDocx
  - Dropbox.Api.TeamLog.PaperDownloadFormat.AsHtml
  - Dropbox.Api.TeamLog.PaperDownloadFormat.AsMarkdown
  - Dropbox.Api.TeamLog.PaperDownloadFormat.AsOther
  - Dropbox.Api.TeamLog.PaperDownloadFormat.AsPdf
  - Dropbox.Api.TeamLog.PaperDownloadFormat.IsDocx
  - Dropbox.Api.TeamLog.PaperDownloadFormat.IsHtml
  - Dropbox.Api.TeamLog.PaperDownloadFormat.IsMarkdown
  - Dropbox.Api.TeamLog.PaperDownloadFormat.IsOther
  - Dropbox.Api.TeamLog.PaperDownloadFormat.IsPdf
  langs:
  - csharp
  - vb
  name: PaperDownloadFormat
  nameWithType: PaperDownloadFormat
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: PaperDownloadFormat
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>The paper download format object</p>\n"
  example: []
  syntax:
    content: public class PaperDownloadFormat
    content.vb: Public Class PaperDownloadFormat
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.TeamLog.PaperDownloadFormat.Docx
  - Dropbox.Api.TeamLog.PaperDownloadFormat.Html
  - Dropbox.Api.TeamLog.PaperDownloadFormat.Markdown
  - Dropbox.Api.TeamLog.PaperDownloadFormat.Other
  - Dropbox.Api.TeamLog.PaperDownloadFormat.Pdf
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.#ctor
  commentId: M:Dropbox.Api.TeamLog.PaperDownloadFormat.#ctor
  id: '#ctor'
  parent: Dropbox.Api.TeamLog.PaperDownloadFormat
  langs:
  - csharp
  - vb
  name: PaperDownloadFormat()
  nameWithType: PaperDownloadFormat.PaperDownloadFormat()
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.PaperDownloadFormat()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamLog.PaperDownloadFormat\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public PaperDownloadFormat()
    content.vb: Public Sub New
  overload: Dropbox.Api.TeamLog.PaperDownloadFormat.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.IsDocx
  commentId: P:Dropbox.Api.TeamLog.PaperDownloadFormat.IsDocx
  id: IsDocx
  parent: Dropbox.Api.TeamLog.PaperDownloadFormat
  langs:
  - csharp
  - vb
  name: IsDocx
  nameWithType: PaperDownloadFormat.IsDocx
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.IsDocx
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsDocx
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Docx</p>\n"
  example: []
  syntax:
    content: public bool IsDocx { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDocx As Boolean
  overload: Dropbox.Api.TeamLog.PaperDownloadFormat.IsDocx*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.AsDocx
  commentId: P:Dropbox.Api.TeamLog.PaperDownloadFormat.AsDocx
  id: AsDocx
  parent: Dropbox.Api.TeamLog.PaperDownloadFormat
  langs:
  - csharp
  - vb
  name: AsDocx
  nameWithType: PaperDownloadFormat.AsDocx
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.AsDocx
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsDocx
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
    startLine: 51
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Docx, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperDownloadFormat.Docx AsDocx { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.PaperDownloadFormat.Docx
    content.vb: Public ReadOnly Property AsDocx As PaperDownloadFormat.Docx
  overload: Dropbox.Api.TeamLog.PaperDownloadFormat.AsDocx*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.IsHtml
  commentId: P:Dropbox.Api.TeamLog.PaperDownloadFormat.IsHtml
  id: IsHtml
  parent: Dropbox.Api.TeamLog.PaperDownloadFormat
  langs:
  - csharp
  - vb
  name: IsHtml
  nameWithType: PaperDownloadFormat.IsHtml
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.IsHtml
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsHtml
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Html</p>\n"
  example: []
  syntax:
    content: public bool IsHtml { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsHtml As Boolean
  overload: Dropbox.Api.TeamLog.PaperDownloadFormat.IsHtml*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.AsHtml
  commentId: P:Dropbox.Api.TeamLog.PaperDownloadFormat.AsHtml
  id: AsHtml
  parent: Dropbox.Api.TeamLog.PaperDownloadFormat
  langs:
  - csharp
  - vb
  name: AsHtml
  nameWithType: PaperDownloadFormat.AsHtml
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.AsHtml
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsHtml
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Html, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperDownloadFormat.Html AsHtml { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.PaperDownloadFormat.Html
    content.vb: Public ReadOnly Property AsHtml As PaperDownloadFormat.Html
  overload: Dropbox.Api.TeamLog.PaperDownloadFormat.AsHtml*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.IsMarkdown
  commentId: P:Dropbox.Api.TeamLog.PaperDownloadFormat.IsMarkdown
  id: IsMarkdown
  parent: Dropbox.Api.TeamLog.PaperDownloadFormat
  langs:
  - csharp
  - vb
  name: IsMarkdown
  nameWithType: PaperDownloadFormat.IsMarkdown
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.IsMarkdown
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsMarkdown
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Markdown</p>\n"
  example: []
  syntax:
    content: public bool IsMarkdown { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMarkdown As Boolean
  overload: Dropbox.Api.TeamLog.PaperDownloadFormat.IsMarkdown*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.AsMarkdown
  commentId: P:Dropbox.Api.TeamLog.PaperDownloadFormat.AsMarkdown
  id: AsMarkdown
  parent: Dropbox.Api.TeamLog.PaperDownloadFormat
  langs:
  - csharp
  - vb
  name: AsMarkdown
  nameWithType: PaperDownloadFormat.AsMarkdown
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.AsMarkdown
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsMarkdown
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
    startLine: 95
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Markdown, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperDownloadFormat.Markdown AsMarkdown { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.PaperDownloadFormat.Markdown
    content.vb: Public ReadOnly Property AsMarkdown As PaperDownloadFormat.Markdown
  overload: Dropbox.Api.TeamLog.PaperDownloadFormat.AsMarkdown*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.IsPdf
  commentId: P:Dropbox.Api.TeamLog.PaperDownloadFormat.IsPdf
  id: IsPdf
  parent: Dropbox.Api.TeamLog.PaperDownloadFormat
  langs:
  - csharp
  - vb
  name: IsPdf
  nameWithType: PaperDownloadFormat.IsPdf
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.IsPdf
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsPdf
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
    startLine: 106
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Pdf</p>\n"
  example: []
  syntax:
    content: public bool IsPdf { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPdf As Boolean
  overload: Dropbox.Api.TeamLog.PaperDownloadFormat.IsPdf*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.AsPdf
  commentId: P:Dropbox.Api.TeamLog.PaperDownloadFormat.AsPdf
  id: AsPdf
  parent: Dropbox.Api.TeamLog.PaperDownloadFormat
  langs:
  - csharp
  - vb
  name: AsPdf
  nameWithType: PaperDownloadFormat.AsPdf
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.AsPdf
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsPdf
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
    startLine: 117
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Pdf, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperDownloadFormat.Pdf AsPdf { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.PaperDownloadFormat.Pdf
    content.vb: Public ReadOnly Property AsPdf As PaperDownloadFormat.Pdf
  overload: Dropbox.Api.TeamLog.PaperDownloadFormat.AsPdf*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.IsOther
  commentId: P:Dropbox.Api.TeamLog.PaperDownloadFormat.IsOther
  id: IsOther
  parent: Dropbox.Api.TeamLog.PaperDownloadFormat
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: PaperDownloadFormat.IsOther
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
    startLine: 128
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.TeamLog.PaperDownloadFormat.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.AsOther
  commentId: P:Dropbox.Api.TeamLog.PaperDownloadFormat.AsOther
  id: AsOther
  parent: Dropbox.Api.TeamLog.PaperDownloadFormat
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: PaperDownloadFormat.AsOther
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperDownloadFormat.cs
    startLine: 139
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperDownloadFormat.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.PaperDownloadFormat.Other
    content.vb: Public ReadOnly Property AsOther As PaperDownloadFormat.Other
  overload: Dropbox.Api.TeamLog.PaperDownloadFormat.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.TeamLog
  commentId: N:Dropbox.Api.TeamLog
  name: Dropbox.Api.TeamLog
  nameWithType: Dropbox.Api.TeamLog
  fullName: Dropbox.Api.TeamLog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat
  commentId: T:Dropbox.Api.TeamLog.PaperDownloadFormat
  parent: Dropbox.Api.TeamLog
  name: PaperDownloadFormat
  nameWithType: PaperDownloadFormat
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.#ctor*
  commentId: Overload:Dropbox.Api.TeamLog.PaperDownloadFormat.#ctor
  name: PaperDownloadFormat
  nameWithType: PaperDownloadFormat.PaperDownloadFormat
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.PaperDownloadFormat
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.IsDocx*
  commentId: Overload:Dropbox.Api.TeamLog.PaperDownloadFormat.IsDocx
  name: IsDocx
  nameWithType: PaperDownloadFormat.IsDocx
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.IsDocx
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.AsDocx*
  commentId: Overload:Dropbox.Api.TeamLog.PaperDownloadFormat.AsDocx
  name: AsDocx
  nameWithType: PaperDownloadFormat.AsDocx
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.AsDocx
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.Docx
  commentId: T:Dropbox.Api.TeamLog.PaperDownloadFormat.Docx
  parent: Dropbox.Api.TeamLog
  name: PaperDownloadFormat.Docx
  nameWithType: PaperDownloadFormat.Docx
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.Docx
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.IsHtml*
  commentId: Overload:Dropbox.Api.TeamLog.PaperDownloadFormat.IsHtml
  name: IsHtml
  nameWithType: PaperDownloadFormat.IsHtml
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.IsHtml
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.AsHtml*
  commentId: Overload:Dropbox.Api.TeamLog.PaperDownloadFormat.AsHtml
  name: AsHtml
  nameWithType: PaperDownloadFormat.AsHtml
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.AsHtml
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.Html
  commentId: T:Dropbox.Api.TeamLog.PaperDownloadFormat.Html
  parent: Dropbox.Api.TeamLog
  name: PaperDownloadFormat.Html
  nameWithType: PaperDownloadFormat.Html
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.Html
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.IsMarkdown*
  commentId: Overload:Dropbox.Api.TeamLog.PaperDownloadFormat.IsMarkdown
  name: IsMarkdown
  nameWithType: PaperDownloadFormat.IsMarkdown
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.IsMarkdown
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.AsMarkdown*
  commentId: Overload:Dropbox.Api.TeamLog.PaperDownloadFormat.AsMarkdown
  name: AsMarkdown
  nameWithType: PaperDownloadFormat.AsMarkdown
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.AsMarkdown
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.Markdown
  commentId: T:Dropbox.Api.TeamLog.PaperDownloadFormat.Markdown
  parent: Dropbox.Api.TeamLog
  name: PaperDownloadFormat.Markdown
  nameWithType: PaperDownloadFormat.Markdown
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.Markdown
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.IsPdf*
  commentId: Overload:Dropbox.Api.TeamLog.PaperDownloadFormat.IsPdf
  name: IsPdf
  nameWithType: PaperDownloadFormat.IsPdf
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.IsPdf
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.AsPdf*
  commentId: Overload:Dropbox.Api.TeamLog.PaperDownloadFormat.AsPdf
  name: AsPdf
  nameWithType: PaperDownloadFormat.AsPdf
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.AsPdf
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.Pdf
  commentId: T:Dropbox.Api.TeamLog.PaperDownloadFormat.Pdf
  parent: Dropbox.Api.TeamLog
  name: PaperDownloadFormat.Pdf
  nameWithType: PaperDownloadFormat.Pdf
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.Pdf
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.IsOther*
  commentId: Overload:Dropbox.Api.TeamLog.PaperDownloadFormat.IsOther
  name: IsOther
  nameWithType: PaperDownloadFormat.IsOther
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.IsOther
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.AsOther*
  commentId: Overload:Dropbox.Api.TeamLog.PaperDownloadFormat.AsOther
  name: AsOther
  nameWithType: PaperDownloadFormat.AsOther
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.AsOther
- uid: Dropbox.Api.TeamLog.PaperDownloadFormat.Other
  commentId: T:Dropbox.Api.TeamLog.PaperDownloadFormat.Other
  parent: Dropbox.Api.TeamLog
  name: PaperDownloadFormat.Other
  nameWithType: PaperDownloadFormat.Other
  fullName: Dropbox.Api.TeamLog.PaperDownloadFormat.Other
