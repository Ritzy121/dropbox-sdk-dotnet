### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.LookupError
  commentId: T:Dropbox.Api.Files.LookupError
  id: LookupError
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.LookupError.#ctor
  - Dropbox.Api.Files.LookupError.AsLocked
  - Dropbox.Api.Files.LookupError.AsMalformedPath
  - Dropbox.Api.Files.LookupError.AsNotFile
  - Dropbox.Api.Files.LookupError.AsNotFolder
  - Dropbox.Api.Files.LookupError.AsNotFound
  - Dropbox.Api.Files.LookupError.AsOther
  - Dropbox.Api.Files.LookupError.AsRestrictedContent
  - Dropbox.Api.Files.LookupError.AsUnsupportedContentType
  - Dropbox.Api.Files.LookupError.IsLocked
  - Dropbox.Api.Files.LookupError.IsMalformedPath
  - Dropbox.Api.Files.LookupError.IsNotFile
  - Dropbox.Api.Files.LookupError.IsNotFolder
  - Dropbox.Api.Files.LookupError.IsNotFound
  - Dropbox.Api.Files.LookupError.IsOther
  - Dropbox.Api.Files.LookupError.IsRestrictedContent
  - Dropbox.Api.Files.LookupError.IsUnsupportedContentType
  langs:
  - csharp
  - vb
  name: LookupError
  nameWithType: LookupError
  fullName: Dropbox.Api.Files.LookupError
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: LookupError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The lookup error object</p>\n"
  example: []
  syntax:
    content: public class LookupError
    content.vb: Public Class LookupError
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Files.LookupError.Locked
  - Dropbox.Api.Files.LookupError.MalformedPath
  - Dropbox.Api.Files.LookupError.NotFile
  - Dropbox.Api.Files.LookupError.NotFolder
  - Dropbox.Api.Files.LookupError.NotFound
  - Dropbox.Api.Files.LookupError.Other
  - Dropbox.Api.Files.LookupError.RestrictedContent
  - Dropbox.Api.Files.LookupError.UnsupportedContentType
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.LookupError.#ctor
  commentId: M:Dropbox.Api.Files.LookupError.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Files.LookupError
  langs:
  - csharp
  - vb
  name: LookupError()
  nameWithType: LookupError.LookupError()
  fullName: Dropbox.Api.Files.LookupError.LookupError()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
    startLine: 32
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.LookupError\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public LookupError()
    content.vb: Public Sub New
  overload: Dropbox.Api.Files.LookupError.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.LookupError.IsMalformedPath
  commentId: P:Dropbox.Api.Files.LookupError.IsMalformedPath
  id: IsMalformedPath
  parent: Dropbox.Api.Files.LookupError
  langs:
  - csharp
  - vb
  name: IsMalformedPath
  nameWithType: LookupError.IsMalformedPath
  fullName: Dropbox.Api.Files.LookupError.IsMalformedPath
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsMalformedPath
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
    startLine: 39
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is MalformedPath</p>\n"
  example: []
  syntax:
    content: public bool IsMalformedPath { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMalformedPath As Boolean
  overload: Dropbox.Api.Files.LookupError.IsMalformedPath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.LookupError.AsMalformedPath
  commentId: P:Dropbox.Api.Files.LookupError.AsMalformedPath
  id: AsMalformedPath
  parent: Dropbox.Api.Files.LookupError
  langs:
  - csharp
  - vb
  name: AsMalformedPath
  nameWithType: LookupError.AsMalformedPath
  fullName: Dropbox.Api.Files.LookupError.AsMalformedPath
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsMalformedPath
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
    startLine: 50
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a MalformedPath, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LookupError.MalformedPath AsMalformedPath { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.LookupError.MalformedPath
    content.vb: Public ReadOnly Property AsMalformedPath As LookupError.MalformedPath
  overload: Dropbox.Api.Files.LookupError.AsMalformedPath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.LookupError.IsNotFound
  commentId: P:Dropbox.Api.Files.LookupError.IsNotFound
  id: IsNotFound
  parent: Dropbox.Api.Files.LookupError
  langs:
  - csharp
  - vb
  name: IsNotFound
  nameWithType: LookupError.IsNotFound
  fullName: Dropbox.Api.Files.LookupError.IsNotFound
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsNotFound
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
    startLine: 61
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is NotFound</p>\n"
  example: []
  syntax:
    content: public bool IsNotFound { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNotFound As Boolean
  overload: Dropbox.Api.Files.LookupError.IsNotFound*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.LookupError.AsNotFound
  commentId: P:Dropbox.Api.Files.LookupError.AsNotFound
  id: AsNotFound
  parent: Dropbox.Api.Files.LookupError
  langs:
  - csharp
  - vb
  name: AsNotFound
  nameWithType: LookupError.AsNotFound
  fullName: Dropbox.Api.Files.LookupError.AsNotFound
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsNotFound
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
    startLine: 72
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a NotFound, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LookupError.NotFound AsNotFound { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.LookupError.NotFound
    content.vb: Public ReadOnly Property AsNotFound As LookupError.NotFound
  overload: Dropbox.Api.Files.LookupError.AsNotFound*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.LookupError.IsNotFile
  commentId: P:Dropbox.Api.Files.LookupError.IsNotFile
  id: IsNotFile
  parent: Dropbox.Api.Files.LookupError
  langs:
  - csharp
  - vb
  name: IsNotFile
  nameWithType: LookupError.IsNotFile
  fullName: Dropbox.Api.Files.LookupError.IsNotFile
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsNotFile
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
    startLine: 83
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is NotFile</p>\n"
  example: []
  syntax:
    content: public bool IsNotFile { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNotFile As Boolean
  overload: Dropbox.Api.Files.LookupError.IsNotFile*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.LookupError.AsNotFile
  commentId: P:Dropbox.Api.Files.LookupError.AsNotFile
  id: AsNotFile
  parent: Dropbox.Api.Files.LookupError
  langs:
  - csharp
  - vb
  name: AsNotFile
  nameWithType: LookupError.AsNotFile
  fullName: Dropbox.Api.Files.LookupError.AsNotFile
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsNotFile
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
    startLine: 94
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a NotFile, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LookupError.NotFile AsNotFile { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.LookupError.NotFile
    content.vb: Public ReadOnly Property AsNotFile As LookupError.NotFile
  overload: Dropbox.Api.Files.LookupError.AsNotFile*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.LookupError.IsNotFolder
  commentId: P:Dropbox.Api.Files.LookupError.IsNotFolder
  id: IsNotFolder
  parent: Dropbox.Api.Files.LookupError
  langs:
  - csharp
  - vb
  name: IsNotFolder
  nameWithType: LookupError.IsNotFolder
  fullName: Dropbox.Api.Files.LookupError.IsNotFolder
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsNotFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
    startLine: 105
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is NotFolder</p>\n"
  example: []
  syntax:
    content: public bool IsNotFolder { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNotFolder As Boolean
  overload: Dropbox.Api.Files.LookupError.IsNotFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.LookupError.AsNotFolder
  commentId: P:Dropbox.Api.Files.LookupError.AsNotFolder
  id: AsNotFolder
  parent: Dropbox.Api.Files.LookupError
  langs:
  - csharp
  - vb
  name: AsNotFolder
  nameWithType: LookupError.AsNotFolder
  fullName: Dropbox.Api.Files.LookupError.AsNotFolder
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsNotFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
    startLine: 116
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a NotFolder, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LookupError.NotFolder AsNotFolder { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.LookupError.NotFolder
    content.vb: Public ReadOnly Property AsNotFolder As LookupError.NotFolder
  overload: Dropbox.Api.Files.LookupError.AsNotFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.LookupError.IsRestrictedContent
  commentId: P:Dropbox.Api.Files.LookupError.IsRestrictedContent
  id: IsRestrictedContent
  parent: Dropbox.Api.Files.LookupError
  langs:
  - csharp
  - vb
  name: IsRestrictedContent
  nameWithType: LookupError.IsRestrictedContent
  fullName: Dropbox.Api.Files.LookupError.IsRestrictedContent
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsRestrictedContent
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
    startLine: 127
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is RestrictedContent</p>\n"
  example: []
  syntax:
    content: public bool IsRestrictedContent { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRestrictedContent As Boolean
  overload: Dropbox.Api.Files.LookupError.IsRestrictedContent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.LookupError.AsRestrictedContent
  commentId: P:Dropbox.Api.Files.LookupError.AsRestrictedContent
  id: AsRestrictedContent
  parent: Dropbox.Api.Files.LookupError
  langs:
  - csharp
  - vb
  name: AsRestrictedContent
  nameWithType: LookupError.AsRestrictedContent
  fullName: Dropbox.Api.Files.LookupError.AsRestrictedContent
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsRestrictedContent
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
    startLine: 138
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a RestrictedContent, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LookupError.RestrictedContent AsRestrictedContent { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.LookupError.RestrictedContent
    content.vb: Public ReadOnly Property AsRestrictedContent As LookupError.RestrictedContent
  overload: Dropbox.Api.Files.LookupError.AsRestrictedContent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.LookupError.IsUnsupportedContentType
  commentId: P:Dropbox.Api.Files.LookupError.IsUnsupportedContentType
  id: IsUnsupportedContentType
  parent: Dropbox.Api.Files.LookupError
  langs:
  - csharp
  - vb
  name: IsUnsupportedContentType
  nameWithType: LookupError.IsUnsupportedContentType
  fullName: Dropbox.Api.Files.LookupError.IsUnsupportedContentType
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsUnsupportedContentType
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
    startLine: 150
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is\nUnsupportedContentType</p>\n"
  example: []
  syntax:
    content: public bool IsUnsupportedContentType { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUnsupportedContentType As Boolean
  overload: Dropbox.Api.Files.LookupError.IsUnsupportedContentType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.LookupError.AsUnsupportedContentType
  commentId: P:Dropbox.Api.Files.LookupError.AsUnsupportedContentType
  id: AsUnsupportedContentType
  parent: Dropbox.Api.Files.LookupError
  langs:
  - csharp
  - vb
  name: AsUnsupportedContentType
  nameWithType: LookupError.AsUnsupportedContentType
  fullName: Dropbox.Api.Files.LookupError.AsUnsupportedContentType
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsUnsupportedContentType
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
    startLine: 161
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a UnsupportedContentType, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LookupError.UnsupportedContentType AsUnsupportedContentType { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.LookupError.UnsupportedContentType
    content.vb: Public ReadOnly Property AsUnsupportedContentType As LookupError.UnsupportedContentType
  overload: Dropbox.Api.Files.LookupError.AsUnsupportedContentType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.LookupError.IsLocked
  commentId: P:Dropbox.Api.Files.LookupError.IsLocked
  id: IsLocked
  parent: Dropbox.Api.Files.LookupError
  langs:
  - csharp
  - vb
  name: IsLocked
  nameWithType: LookupError.IsLocked
  fullName: Dropbox.Api.Files.LookupError.IsLocked
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsLocked
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
    startLine: 172
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Locked</p>\n"
  example: []
  syntax:
    content: public bool IsLocked { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLocked As Boolean
  overload: Dropbox.Api.Files.LookupError.IsLocked*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.LookupError.AsLocked
  commentId: P:Dropbox.Api.Files.LookupError.AsLocked
  id: AsLocked
  parent: Dropbox.Api.Files.LookupError
  langs:
  - csharp
  - vb
  name: AsLocked
  nameWithType: LookupError.AsLocked
  fullName: Dropbox.Api.Files.LookupError.AsLocked
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsLocked
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
    startLine: 183
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Locked, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LookupError.Locked AsLocked { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.LookupError.Locked
    content.vb: Public ReadOnly Property AsLocked As LookupError.Locked
  overload: Dropbox.Api.Files.LookupError.AsLocked*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.LookupError.IsOther
  commentId: P:Dropbox.Api.Files.LookupError.IsOther
  id: IsOther
  parent: Dropbox.Api.Files.LookupError
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: LookupError.IsOther
  fullName: Dropbox.Api.Files.LookupError.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
    startLine: 194
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.Files.LookupError.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.LookupError.AsOther
  commentId: P:Dropbox.Api.Files.LookupError.AsOther
  id: AsOther
  parent: Dropbox.Api.Files.LookupError
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: LookupError.AsOther
  fullName: Dropbox.Api.Files.LookupError.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/LookupError.cs
    startLine: 205
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LookupError.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.LookupError.Other
    content.vb: Public ReadOnly Property AsOther As LookupError.Other
  overload: Dropbox.Api.Files.LookupError.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Files.LookupError
  commentId: T:Dropbox.Api.Files.LookupError
  parent: Dropbox.Api.Files
  name: LookupError
  nameWithType: LookupError
  fullName: Dropbox.Api.Files.LookupError
- uid: Dropbox.Api.Files.LookupError.#ctor*
  commentId: Overload:Dropbox.Api.Files.LookupError.#ctor
  name: LookupError
  nameWithType: LookupError.LookupError
  fullName: Dropbox.Api.Files.LookupError.LookupError
- uid: Dropbox.Api.Files.LookupError.IsMalformedPath*
  commentId: Overload:Dropbox.Api.Files.LookupError.IsMalformedPath
  name: IsMalformedPath
  nameWithType: LookupError.IsMalformedPath
  fullName: Dropbox.Api.Files.LookupError.IsMalformedPath
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Files.LookupError.AsMalformedPath*
  commentId: Overload:Dropbox.Api.Files.LookupError.AsMalformedPath
  name: AsMalformedPath
  nameWithType: LookupError.AsMalformedPath
  fullName: Dropbox.Api.Files.LookupError.AsMalformedPath
- uid: Dropbox.Api.Files.LookupError.MalformedPath
  commentId: T:Dropbox.Api.Files.LookupError.MalformedPath
  parent: Dropbox.Api.Files
  name: LookupError.MalformedPath
  nameWithType: LookupError.MalformedPath
  fullName: Dropbox.Api.Files.LookupError.MalformedPath
- uid: Dropbox.Api.Files.LookupError.IsNotFound*
  commentId: Overload:Dropbox.Api.Files.LookupError.IsNotFound
  name: IsNotFound
  nameWithType: LookupError.IsNotFound
  fullName: Dropbox.Api.Files.LookupError.IsNotFound
- uid: Dropbox.Api.Files.LookupError.AsNotFound*
  commentId: Overload:Dropbox.Api.Files.LookupError.AsNotFound
  name: AsNotFound
  nameWithType: LookupError.AsNotFound
  fullName: Dropbox.Api.Files.LookupError.AsNotFound
- uid: Dropbox.Api.Files.LookupError.NotFound
  commentId: T:Dropbox.Api.Files.LookupError.NotFound
  parent: Dropbox.Api.Files
  name: LookupError.NotFound
  nameWithType: LookupError.NotFound
  fullName: Dropbox.Api.Files.LookupError.NotFound
- uid: Dropbox.Api.Files.LookupError.IsNotFile*
  commentId: Overload:Dropbox.Api.Files.LookupError.IsNotFile
  name: IsNotFile
  nameWithType: LookupError.IsNotFile
  fullName: Dropbox.Api.Files.LookupError.IsNotFile
- uid: Dropbox.Api.Files.LookupError.AsNotFile*
  commentId: Overload:Dropbox.Api.Files.LookupError.AsNotFile
  name: AsNotFile
  nameWithType: LookupError.AsNotFile
  fullName: Dropbox.Api.Files.LookupError.AsNotFile
- uid: Dropbox.Api.Files.LookupError.NotFile
  commentId: T:Dropbox.Api.Files.LookupError.NotFile
  parent: Dropbox.Api.Files
  name: LookupError.NotFile
  nameWithType: LookupError.NotFile
  fullName: Dropbox.Api.Files.LookupError.NotFile
- uid: Dropbox.Api.Files.LookupError.IsNotFolder*
  commentId: Overload:Dropbox.Api.Files.LookupError.IsNotFolder
  name: IsNotFolder
  nameWithType: LookupError.IsNotFolder
  fullName: Dropbox.Api.Files.LookupError.IsNotFolder
- uid: Dropbox.Api.Files.LookupError.AsNotFolder*
  commentId: Overload:Dropbox.Api.Files.LookupError.AsNotFolder
  name: AsNotFolder
  nameWithType: LookupError.AsNotFolder
  fullName: Dropbox.Api.Files.LookupError.AsNotFolder
- uid: Dropbox.Api.Files.LookupError.NotFolder
  commentId: T:Dropbox.Api.Files.LookupError.NotFolder
  parent: Dropbox.Api.Files
  name: LookupError.NotFolder
  nameWithType: LookupError.NotFolder
  fullName: Dropbox.Api.Files.LookupError.NotFolder
- uid: Dropbox.Api.Files.LookupError.IsRestrictedContent*
  commentId: Overload:Dropbox.Api.Files.LookupError.IsRestrictedContent
  name: IsRestrictedContent
  nameWithType: LookupError.IsRestrictedContent
  fullName: Dropbox.Api.Files.LookupError.IsRestrictedContent
- uid: Dropbox.Api.Files.LookupError.AsRestrictedContent*
  commentId: Overload:Dropbox.Api.Files.LookupError.AsRestrictedContent
  name: AsRestrictedContent
  nameWithType: LookupError.AsRestrictedContent
  fullName: Dropbox.Api.Files.LookupError.AsRestrictedContent
- uid: Dropbox.Api.Files.LookupError.RestrictedContent
  commentId: T:Dropbox.Api.Files.LookupError.RestrictedContent
  parent: Dropbox.Api.Files
  name: LookupError.RestrictedContent
  nameWithType: LookupError.RestrictedContent
  fullName: Dropbox.Api.Files.LookupError.RestrictedContent
- uid: Dropbox.Api.Files.LookupError.IsUnsupportedContentType*
  commentId: Overload:Dropbox.Api.Files.LookupError.IsUnsupportedContentType
  name: IsUnsupportedContentType
  nameWithType: LookupError.IsUnsupportedContentType
  fullName: Dropbox.Api.Files.LookupError.IsUnsupportedContentType
- uid: Dropbox.Api.Files.LookupError.AsUnsupportedContentType*
  commentId: Overload:Dropbox.Api.Files.LookupError.AsUnsupportedContentType
  name: AsUnsupportedContentType
  nameWithType: LookupError.AsUnsupportedContentType
  fullName: Dropbox.Api.Files.LookupError.AsUnsupportedContentType
- uid: Dropbox.Api.Files.LookupError.UnsupportedContentType
  commentId: T:Dropbox.Api.Files.LookupError.UnsupportedContentType
  parent: Dropbox.Api.Files
  name: LookupError.UnsupportedContentType
  nameWithType: LookupError.UnsupportedContentType
  fullName: Dropbox.Api.Files.LookupError.UnsupportedContentType
- uid: Dropbox.Api.Files.LookupError.IsLocked*
  commentId: Overload:Dropbox.Api.Files.LookupError.IsLocked
  name: IsLocked
  nameWithType: LookupError.IsLocked
  fullName: Dropbox.Api.Files.LookupError.IsLocked
- uid: Dropbox.Api.Files.LookupError.AsLocked*
  commentId: Overload:Dropbox.Api.Files.LookupError.AsLocked
  name: AsLocked
  nameWithType: LookupError.AsLocked
  fullName: Dropbox.Api.Files.LookupError.AsLocked
- uid: Dropbox.Api.Files.LookupError.Locked
  commentId: T:Dropbox.Api.Files.LookupError.Locked
  parent: Dropbox.Api.Files
  name: LookupError.Locked
  nameWithType: LookupError.Locked
  fullName: Dropbox.Api.Files.LookupError.Locked
- uid: Dropbox.Api.Files.LookupError.IsOther*
  commentId: Overload:Dropbox.Api.Files.LookupError.IsOther
  name: IsOther
  nameWithType: LookupError.IsOther
  fullName: Dropbox.Api.Files.LookupError.IsOther
- uid: Dropbox.Api.Files.LookupError.AsOther*
  commentId: Overload:Dropbox.Api.Files.LookupError.AsOther
  name: AsOther
  nameWithType: LookupError.AsOther
  fullName: Dropbox.Api.Files.LookupError.AsOther
- uid: Dropbox.Api.Files.LookupError.Other
  commentId: T:Dropbox.Api.Files.LookupError.Other
  parent: Dropbox.Api.Files
  name: LookupError.Other
  nameWithType: LookupError.Other
  fullName: Dropbox.Api.Files.LookupError.Other
