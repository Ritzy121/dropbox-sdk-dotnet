### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamLog.AccountState
  commentId: T:Dropbox.Api.TeamLog.AccountState
  id: AccountState
  parent: Dropbox.Api.TeamLog
  children:
  - Dropbox.Api.TeamLog.AccountState.#ctor
  - Dropbox.Api.TeamLog.AccountState.AsLocked
  - Dropbox.Api.TeamLog.AccountState.AsOther
  - Dropbox.Api.TeamLog.AccountState.AsUnlocked
  - Dropbox.Api.TeamLog.AccountState.IsLocked
  - Dropbox.Api.TeamLog.AccountState.IsOther
  - Dropbox.Api.TeamLog.AccountState.IsUnlocked
  langs:
  - csharp
  - vb
  name: AccountState
  nameWithType: AccountState
  fullName: Dropbox.Api.TeamLog.AccountState
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountState.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AccountState
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountState.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>The account state object</p>\n"
  example: []
  syntax:
    content: public class AccountState
    content.vb: Public Class AccountState
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.TeamLog.AccountState.Locked
  - Dropbox.Api.TeamLog.AccountState.Other
  - Dropbox.Api.TeamLog.AccountState.Unlocked
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.TeamLog.AccountState.#ctor
  commentId: M:Dropbox.Api.TeamLog.AccountState.#ctor
  id: '#ctor'
  parent: Dropbox.Api.TeamLog.AccountState
  langs:
  - csharp
  - vb
  name: AccountState()
  nameWithType: AccountState.AccountState()
  fullName: Dropbox.Api.TeamLog.AccountState.AccountState()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountState.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountState.cs
    startLine: 32
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamLog.AccountState\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public AccountState()
    content.vb: Public Sub New
  overload: Dropbox.Api.TeamLog.AccountState.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.TeamLog.AccountState.IsLocked
  commentId: P:Dropbox.Api.TeamLog.AccountState.IsLocked
  id: IsLocked
  parent: Dropbox.Api.TeamLog.AccountState
  langs:
  - csharp
  - vb
  name: IsLocked
  nameWithType: AccountState.IsLocked
  fullName: Dropbox.Api.TeamLog.AccountState.IsLocked
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountState.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsLocked
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountState.cs
    startLine: 39
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Locked</p>\n"
  example: []
  syntax:
    content: public bool IsLocked { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLocked As Boolean
  overload: Dropbox.Api.TeamLog.AccountState.IsLocked*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AccountState.AsLocked
  commentId: P:Dropbox.Api.TeamLog.AccountState.AsLocked
  id: AsLocked
  parent: Dropbox.Api.TeamLog.AccountState
  langs:
  - csharp
  - vb
  name: AsLocked
  nameWithType: AccountState.AsLocked
  fullName: Dropbox.Api.TeamLog.AccountState.AsLocked
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountState.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsLocked
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountState.cs
    startLine: 50
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Locked, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AccountState.Locked AsLocked { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AccountState.Locked
    content.vb: Public ReadOnly Property AsLocked As AccountState.Locked
  overload: Dropbox.Api.TeamLog.AccountState.AsLocked*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AccountState.IsUnlocked
  commentId: P:Dropbox.Api.TeamLog.AccountState.IsUnlocked
  id: IsUnlocked
  parent: Dropbox.Api.TeamLog.AccountState
  langs:
  - csharp
  - vb
  name: IsUnlocked
  nameWithType: AccountState.IsUnlocked
  fullName: Dropbox.Api.TeamLog.AccountState.IsUnlocked
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountState.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsUnlocked
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountState.cs
    startLine: 61
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Unlocked</p>\n"
  example: []
  syntax:
    content: public bool IsUnlocked { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUnlocked As Boolean
  overload: Dropbox.Api.TeamLog.AccountState.IsUnlocked*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AccountState.AsUnlocked
  commentId: P:Dropbox.Api.TeamLog.AccountState.AsUnlocked
  id: AsUnlocked
  parent: Dropbox.Api.TeamLog.AccountState
  langs:
  - csharp
  - vb
  name: AsUnlocked
  nameWithType: AccountState.AsUnlocked
  fullName: Dropbox.Api.TeamLog.AccountState.AsUnlocked
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountState.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsUnlocked
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountState.cs
    startLine: 72
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Unlocked, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AccountState.Unlocked AsUnlocked { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AccountState.Unlocked
    content.vb: Public ReadOnly Property AsUnlocked As AccountState.Unlocked
  overload: Dropbox.Api.TeamLog.AccountState.AsUnlocked*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AccountState.IsOther
  commentId: P:Dropbox.Api.TeamLog.AccountState.IsOther
  id: IsOther
  parent: Dropbox.Api.TeamLog.AccountState
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: AccountState.IsOther
  fullName: Dropbox.Api.TeamLog.AccountState.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountState.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountState.cs
    startLine: 83
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.TeamLog.AccountState.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AccountState.AsOther
  commentId: P:Dropbox.Api.TeamLog.AccountState.AsOther
  id: AsOther
  parent: Dropbox.Api.TeamLog.AccountState
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: AccountState.AsOther
  fullName: Dropbox.Api.TeamLog.AccountState.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountState.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountState.cs
    startLine: 94
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AccountState.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AccountState.Other
    content.vb: Public ReadOnly Property AsOther As AccountState.Other
  overload: Dropbox.Api.TeamLog.AccountState.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.TeamLog
  commentId: N:Dropbox.Api.TeamLog
  name: Dropbox.Api.TeamLog
  nameWithType: Dropbox.Api.TeamLog
  fullName: Dropbox.Api.TeamLog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.TeamLog.AccountState
  commentId: T:Dropbox.Api.TeamLog.AccountState
  parent: Dropbox.Api.TeamLog
  name: AccountState
  nameWithType: AccountState
  fullName: Dropbox.Api.TeamLog.AccountState
- uid: Dropbox.Api.TeamLog.AccountState.#ctor*
  commentId: Overload:Dropbox.Api.TeamLog.AccountState.#ctor
  name: AccountState
  nameWithType: AccountState.AccountState
  fullName: Dropbox.Api.TeamLog.AccountState.AccountState
- uid: Dropbox.Api.TeamLog.AccountState.IsLocked*
  commentId: Overload:Dropbox.Api.TeamLog.AccountState.IsLocked
  name: IsLocked
  nameWithType: AccountState.IsLocked
  fullName: Dropbox.Api.TeamLog.AccountState.IsLocked
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.TeamLog.AccountState.AsLocked*
  commentId: Overload:Dropbox.Api.TeamLog.AccountState.AsLocked
  name: AsLocked
  nameWithType: AccountState.AsLocked
  fullName: Dropbox.Api.TeamLog.AccountState.AsLocked
- uid: Dropbox.Api.TeamLog.AccountState.Locked
  commentId: T:Dropbox.Api.TeamLog.AccountState.Locked
  parent: Dropbox.Api.TeamLog
  name: AccountState.Locked
  nameWithType: AccountState.Locked
  fullName: Dropbox.Api.TeamLog.AccountState.Locked
- uid: Dropbox.Api.TeamLog.AccountState.IsUnlocked*
  commentId: Overload:Dropbox.Api.TeamLog.AccountState.IsUnlocked
  name: IsUnlocked
  nameWithType: AccountState.IsUnlocked
  fullName: Dropbox.Api.TeamLog.AccountState.IsUnlocked
- uid: Dropbox.Api.TeamLog.AccountState.AsUnlocked*
  commentId: Overload:Dropbox.Api.TeamLog.AccountState.AsUnlocked
  name: AsUnlocked
  nameWithType: AccountState.AsUnlocked
  fullName: Dropbox.Api.TeamLog.AccountState.AsUnlocked
- uid: Dropbox.Api.TeamLog.AccountState.Unlocked
  commentId: T:Dropbox.Api.TeamLog.AccountState.Unlocked
  parent: Dropbox.Api.TeamLog
  name: AccountState.Unlocked
  nameWithType: AccountState.Unlocked
  fullName: Dropbox.Api.TeamLog.AccountState.Unlocked
- uid: Dropbox.Api.TeamLog.AccountState.IsOther*
  commentId: Overload:Dropbox.Api.TeamLog.AccountState.IsOther
  name: IsOther
  nameWithType: AccountState.IsOther
  fullName: Dropbox.Api.TeamLog.AccountState.IsOther
- uid: Dropbox.Api.TeamLog.AccountState.AsOther*
  commentId: Overload:Dropbox.Api.TeamLog.AccountState.AsOther
  name: AsOther
  nameWithType: AccountState.AsOther
  fullName: Dropbox.Api.TeamLog.AccountState.AsOther
- uid: Dropbox.Api.TeamLog.AccountState.Other
  commentId: T:Dropbox.Api.TeamLog.AccountState.Other
  parent: Dropbox.Api.TeamLog
  name: AccountState.Other
  nameWithType: AccountState.Other
  fullName: Dropbox.Api.TeamLog.AccountState.Other
