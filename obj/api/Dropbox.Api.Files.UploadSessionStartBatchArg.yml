### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.UploadSessionStartBatchArg
  commentId: T:Dropbox.Api.Files.UploadSessionStartBatchArg
  id: UploadSessionStartBatchArg
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.UploadSessionStartBatchArg.#ctor(System.UInt64,Dropbox.Api.Files.UploadSessionType)
  - Dropbox.Api.Files.UploadSessionStartBatchArg.NumSessions
  - Dropbox.Api.Files.UploadSessionStartBatchArg.SessionType
  langs:
  - csharp
  - vb
  name: UploadSessionStartBatchArg
  nameWithType: UploadSessionStartBatchArg
  fullName: Dropbox.Api.Files.UploadSessionStartBatchArg
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionStartBatchArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: UploadSessionStartBatchArg
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionStartBatchArg.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The upload session start batch arg object</p>\n"
  example: []
  syntax:
    content: public class UploadSessionStartBatchArg
    content.vb: Public Class UploadSessionStartBatchArg
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.UploadSessionStartBatchArg.#ctor(System.UInt64,Dropbox.Api.Files.UploadSessionType)
  commentId: M:Dropbox.Api.Files.UploadSessionStartBatchArg.#ctor(System.UInt64,Dropbox.Api.Files.UploadSessionType)
  id: '#ctor(System.UInt64,Dropbox.Api.Files.UploadSessionType)'
  parent: Dropbox.Api.Files.UploadSessionStartBatchArg
  langs:
  - csharp
  - vb
  name: UploadSessionStartBatchArg(UInt64, UploadSessionType)
  nameWithType: UploadSessionStartBatchArg.UploadSessionStartBatchArg(UInt64, UploadSessionType)
  fullName: Dropbox.Api.Files.UploadSessionStartBatchArg.UploadSessionStartBatchArg(System.UInt64, Dropbox.Api.Files.UploadSessionType)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionStartBatchArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionStartBatchArg.cs
    startLine: 37
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.UploadSessionStartBatchArg\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public UploadSessionStartBatchArg(ulong numSessions, UploadSessionType sessionType = null)
    parameters:
    - id: numSessions
      type: System.UInt64
      description: The number of upload sessions to start.
    - id: sessionType
      type: Dropbox.Api.Files.UploadSessionType
      description: >-
        Type of upload session you want to start. If not

        specified, default is <xref href="Dropbox.Api.Files.UploadSessionType.Sequential" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(numSessions As ULong, sessionType As UploadSessionType = Nothing)
  overload: Dropbox.Api.Files.UploadSessionStartBatchArg.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.UploadSessionStartBatchArg.NumSessions
  commentId: P:Dropbox.Api.Files.UploadSessionStartBatchArg.NumSessions
  id: NumSessions
  parent: Dropbox.Api.Files.UploadSessionStartBatchArg
  langs:
  - csharp
  - vb
  name: NumSessions
  nameWithType: UploadSessionStartBatchArg.NumSessions
  fullName: Dropbox.Api.Files.UploadSessionStartBatchArg.NumSessions
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionStartBatchArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: NumSessions
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionStartBatchArg.cs
    startLine: 67
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The number of upload sessions to start.</p>\n"
  example: []
  syntax:
    content: public ulong NumSessions { get; protected set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public Property NumSessions As ULong
  overload: Dropbox.Api.Files.UploadSessionStartBatchArg.NumSessions*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.UploadSessionStartBatchArg.SessionType
  commentId: P:Dropbox.Api.Files.UploadSessionStartBatchArg.SessionType
  id: SessionType
  parent: Dropbox.Api.Files.UploadSessionStartBatchArg
  langs:
  - csharp
  - vb
  name: SessionType
  nameWithType: UploadSessionStartBatchArg.SessionType
  fullName: Dropbox.Api.Files.UploadSessionStartBatchArg.SessionType
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionStartBatchArg.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: SessionType
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/UploadSessionStartBatchArg.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Type of upload session you want to start. If not specified, default is <xref href=\"Dropbox.Api.Files.UploadSessionType.Sequential\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public UploadSessionType SessionType { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Files.UploadSessionType
    content.vb: Public Property SessionType As UploadSessionType
  overload: Dropbox.Api.Files.UploadSessionStartBatchArg.SessionType*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Files.UploadSessionStartBatchArg
  commentId: T:Dropbox.Api.Files.UploadSessionStartBatchArg
  parent: Dropbox.Api.Files
  name: UploadSessionStartBatchArg
  nameWithType: UploadSessionStartBatchArg
  fullName: Dropbox.Api.Files.UploadSessionStartBatchArg
- uid: Dropbox.Api.Files.UploadSessionType.Sequential
  commentId: T:Dropbox.Api.Files.UploadSessionType.Sequential
  parent: Dropbox.Api.Files
  name: UploadSessionType.Sequential
  nameWithType: UploadSessionType.Sequential
  fullName: Dropbox.Api.Files.UploadSessionType.Sequential
- uid: Dropbox.Api.Files.UploadSessionStartBatchArg.#ctor*
  commentId: Overload:Dropbox.Api.Files.UploadSessionStartBatchArg.#ctor
  name: UploadSessionStartBatchArg
  nameWithType: UploadSessionStartBatchArg.UploadSessionStartBatchArg
  fullName: Dropbox.Api.Files.UploadSessionStartBatchArg.UploadSessionStartBatchArg
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Dropbox.Api.Files.UploadSessionType
  commentId: T:Dropbox.Api.Files.UploadSessionType
  parent: Dropbox.Api.Files
  name: UploadSessionType
  nameWithType: UploadSessionType
  fullName: Dropbox.Api.Files.UploadSessionType
- uid: Dropbox.Api.Files.UploadSessionStartBatchArg.NumSessions*
  commentId: Overload:Dropbox.Api.Files.UploadSessionStartBatchArg.NumSessions
  name: NumSessions
  nameWithType: UploadSessionStartBatchArg.NumSessions
  fullName: Dropbox.Api.Files.UploadSessionStartBatchArg.NumSessions
- uid: Dropbox.Api.Files.UploadSessionStartBatchArg.SessionType*
  commentId: Overload:Dropbox.Api.Files.UploadSessionStartBatchArg.SessionType
  name: SessionType
  nameWithType: UploadSessionStartBatchArg.SessionType
  fullName: Dropbox.Api.Files.UploadSessionStartBatchArg.SessionType
