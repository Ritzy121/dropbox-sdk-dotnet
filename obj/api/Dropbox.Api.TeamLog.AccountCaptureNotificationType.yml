### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamLog.AccountCaptureNotificationType
  commentId: T:Dropbox.Api.TeamLog.AccountCaptureNotificationType
  id: AccountCaptureNotificationType
  parent: Dropbox.Api.TeamLog
  children:
  - Dropbox.Api.TeamLog.AccountCaptureNotificationType.#ctor
  - Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsActionableNotification
  - Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsOther
  - Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsProactiveWarningNotification
  - Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsActionableNotification
  - Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsOther
  - Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsProactiveWarningNotification
  langs:
  - csharp
  - vb
  name: AccountCaptureNotificationType
  nameWithType: AccountCaptureNotificationType
  fullName: Dropbox.Api.TeamLog.AccountCaptureNotificationType
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountCaptureNotificationType.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AccountCaptureNotificationType
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountCaptureNotificationType.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>The account capture notification type object</p>\n"
  example: []
  syntax:
    content: public class AccountCaptureNotificationType
    content.vb: Public Class AccountCaptureNotificationType
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.TeamLog.AccountCaptureNotificationType.ActionableNotification
  - Dropbox.Api.TeamLog.AccountCaptureNotificationType.Other
  - Dropbox.Api.TeamLog.AccountCaptureNotificationType.ProactiveWarningNotification
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.TeamLog.AccountCaptureNotificationType.#ctor
  commentId: M:Dropbox.Api.TeamLog.AccountCaptureNotificationType.#ctor
  id: '#ctor'
  parent: Dropbox.Api.TeamLog.AccountCaptureNotificationType
  langs:
  - csharp
  - vb
  name: AccountCaptureNotificationType()
  nameWithType: AccountCaptureNotificationType.AccountCaptureNotificationType()
  fullName: Dropbox.Api.TeamLog.AccountCaptureNotificationType.AccountCaptureNotificationType()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountCaptureNotificationType.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountCaptureNotificationType.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamLog.AccountCaptureNotificationType\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public AccountCaptureNotificationType()
    content.vb: Public Sub New
  overload: Dropbox.Api.TeamLog.AccountCaptureNotificationType.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsActionableNotification
  commentId: P:Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsActionableNotification
  id: IsActionableNotification
  parent: Dropbox.Api.TeamLog.AccountCaptureNotificationType
  langs:
  - csharp
  - vb
  name: IsActionableNotification
  nameWithType: AccountCaptureNotificationType.IsActionableNotification
  fullName: Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsActionableNotification
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountCaptureNotificationType.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsActionableNotification
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountCaptureNotificationType.cs
    startLine: 41
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is\nActionableNotification</p>\n"
  example: []
  syntax:
    content: public bool IsActionableNotification { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsActionableNotification As Boolean
  overload: Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsActionableNotification*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsActionableNotification
  commentId: P:Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsActionableNotification
  id: AsActionableNotification
  parent: Dropbox.Api.TeamLog.AccountCaptureNotificationType
  langs:
  - csharp
  - vb
  name: AsActionableNotification
  nameWithType: AccountCaptureNotificationType.AsActionableNotification
  fullName: Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsActionableNotification
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountCaptureNotificationType.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsActionableNotification
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountCaptureNotificationType.cs
    startLine: 52
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a ActionableNotification, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AccountCaptureNotificationType.ActionableNotification AsActionableNotification { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AccountCaptureNotificationType.ActionableNotification
    content.vb: Public ReadOnly Property AsActionableNotification As AccountCaptureNotificationType.ActionableNotification
  overload: Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsActionableNotification*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsProactiveWarningNotification
  commentId: P:Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsProactiveWarningNotification
  id: IsProactiveWarningNotification
  parent: Dropbox.Api.TeamLog.AccountCaptureNotificationType
  langs:
  - csharp
  - vb
  name: IsProactiveWarningNotification
  nameWithType: AccountCaptureNotificationType.IsProactiveWarningNotification
  fullName: Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsProactiveWarningNotification
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountCaptureNotificationType.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsProactiveWarningNotification
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountCaptureNotificationType.cs
    startLine: 64
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is\nProactiveWarningNotification</p>\n"
  example: []
  syntax:
    content: public bool IsProactiveWarningNotification { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsProactiveWarningNotification As Boolean
  overload: Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsProactiveWarningNotification*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsProactiveWarningNotification
  commentId: P:Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsProactiveWarningNotification
  id: AsProactiveWarningNotification
  parent: Dropbox.Api.TeamLog.AccountCaptureNotificationType
  langs:
  - csharp
  - vb
  name: AsProactiveWarningNotification
  nameWithType: AccountCaptureNotificationType.AsProactiveWarningNotification
  fullName: Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsProactiveWarningNotification
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountCaptureNotificationType.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsProactiveWarningNotification
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountCaptureNotificationType.cs
    startLine: 75
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a ProactiveWarningNotification, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AccountCaptureNotificationType.ProactiveWarningNotification AsProactiveWarningNotification { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AccountCaptureNotificationType.ProactiveWarningNotification
    content.vb: Public ReadOnly Property AsProactiveWarningNotification As AccountCaptureNotificationType.ProactiveWarningNotification
  overload: Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsProactiveWarningNotification*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsOther
  commentId: P:Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsOther
  id: IsOther
  parent: Dropbox.Api.TeamLog.AccountCaptureNotificationType
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: AccountCaptureNotificationType.IsOther
  fullName: Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountCaptureNotificationType.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountCaptureNotificationType.cs
    startLine: 86
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsOther
  commentId: P:Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsOther
  id: AsOther
  parent: Dropbox.Api.TeamLog.AccountCaptureNotificationType
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: AccountCaptureNotificationType.AsOther
  fullName: Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountCaptureNotificationType.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/AccountCaptureNotificationType.cs
    startLine: 97
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AccountCaptureNotificationType.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.AccountCaptureNotificationType.Other
    content.vb: Public ReadOnly Property AsOther As AccountCaptureNotificationType.Other
  overload: Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.TeamLog
  commentId: N:Dropbox.Api.TeamLog
  name: Dropbox.Api.TeamLog
  nameWithType: Dropbox.Api.TeamLog
  fullName: Dropbox.Api.TeamLog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.TeamLog.AccountCaptureNotificationType
  commentId: T:Dropbox.Api.TeamLog.AccountCaptureNotificationType
  parent: Dropbox.Api.TeamLog
  name: AccountCaptureNotificationType
  nameWithType: AccountCaptureNotificationType
  fullName: Dropbox.Api.TeamLog.AccountCaptureNotificationType
- uid: Dropbox.Api.TeamLog.AccountCaptureNotificationType.#ctor*
  commentId: Overload:Dropbox.Api.TeamLog.AccountCaptureNotificationType.#ctor
  name: AccountCaptureNotificationType
  nameWithType: AccountCaptureNotificationType.AccountCaptureNotificationType
  fullName: Dropbox.Api.TeamLog.AccountCaptureNotificationType.AccountCaptureNotificationType
- uid: Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsActionableNotification*
  commentId: Overload:Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsActionableNotification
  name: IsActionableNotification
  nameWithType: AccountCaptureNotificationType.IsActionableNotification
  fullName: Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsActionableNotification
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsActionableNotification*
  commentId: Overload:Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsActionableNotification
  name: AsActionableNotification
  nameWithType: AccountCaptureNotificationType.AsActionableNotification
  fullName: Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsActionableNotification
- uid: Dropbox.Api.TeamLog.AccountCaptureNotificationType.ActionableNotification
  commentId: T:Dropbox.Api.TeamLog.AccountCaptureNotificationType.ActionableNotification
  parent: Dropbox.Api.TeamLog
  name: AccountCaptureNotificationType.ActionableNotification
  nameWithType: AccountCaptureNotificationType.ActionableNotification
  fullName: Dropbox.Api.TeamLog.AccountCaptureNotificationType.ActionableNotification
- uid: Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsProactiveWarningNotification*
  commentId: Overload:Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsProactiveWarningNotification
  name: IsProactiveWarningNotification
  nameWithType: AccountCaptureNotificationType.IsProactiveWarningNotification
  fullName: Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsProactiveWarningNotification
- uid: Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsProactiveWarningNotification*
  commentId: Overload:Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsProactiveWarningNotification
  name: AsProactiveWarningNotification
  nameWithType: AccountCaptureNotificationType.AsProactiveWarningNotification
  fullName: Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsProactiveWarningNotification
- uid: Dropbox.Api.TeamLog.AccountCaptureNotificationType.ProactiveWarningNotification
  commentId: T:Dropbox.Api.TeamLog.AccountCaptureNotificationType.ProactiveWarningNotification
  parent: Dropbox.Api.TeamLog
  name: AccountCaptureNotificationType.ProactiveWarningNotification
  nameWithType: AccountCaptureNotificationType.ProactiveWarningNotification
  fullName: Dropbox.Api.TeamLog.AccountCaptureNotificationType.ProactiveWarningNotification
- uid: Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsOther*
  commentId: Overload:Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsOther
  name: IsOther
  nameWithType: AccountCaptureNotificationType.IsOther
  fullName: Dropbox.Api.TeamLog.AccountCaptureNotificationType.IsOther
- uid: Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsOther*
  commentId: Overload:Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsOther
  name: AsOther
  nameWithType: AccountCaptureNotificationType.AsOther
  fullName: Dropbox.Api.TeamLog.AccountCaptureNotificationType.AsOther
- uid: Dropbox.Api.TeamLog.AccountCaptureNotificationType.Other
  commentId: T:Dropbox.Api.TeamLog.AccountCaptureNotificationType.Other
  parent: Dropbox.Api.TeamLog
  name: AccountCaptureNotificationType.Other
  nameWithType: AccountCaptureNotificationType.Other
  fullName: Dropbox.Api.TeamLog.AccountCaptureNotificationType.Other
