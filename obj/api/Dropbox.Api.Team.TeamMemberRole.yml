### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Team.TeamMemberRole
  commentId: T:Dropbox.Api.Team.TeamMemberRole
  id: TeamMemberRole
  parent: Dropbox.Api.Team
  children:
  - Dropbox.Api.Team.TeamMemberRole.#ctor(System.String,System.String,System.String)
  - Dropbox.Api.Team.TeamMemberRole.Description
  - Dropbox.Api.Team.TeamMemberRole.Name
  - Dropbox.Api.Team.TeamMemberRole.RoleId
  langs:
  - csharp
  - vb
  name: TeamMemberRole
  nameWithType: TeamMemberRole
  fullName: Dropbox.Api.Team.TeamMemberRole
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamMemberRole.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: TeamMemberRole
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamMemberRole.cs
    startLine: 16
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>A role which can be attached to a team member. This replaces AdminTier; each\nAdminTier corresponds to a new TeamMemberRole with a matching name.</p>\n"
  example: []
  syntax:
    content: public class TeamMemberRole
    content.vb: Public Class TeamMemberRole
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Team.TeamMemberRole.#ctor(System.String,System.String,System.String)
  commentId: M:Dropbox.Api.Team.TeamMemberRole.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Dropbox.Api.Team.TeamMemberRole
  langs:
  - csharp
  - vb
  name: TeamMemberRole(String, String, String)
  nameWithType: TeamMemberRole.TeamMemberRole(String, String, String)
  fullName: Dropbox.Api.Team.TeamMemberRole.TeamMemberRole(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamMemberRole.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamMemberRole.cs
    startLine: 38
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Team.TeamMemberRole\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public TeamMemberRole(string roleId, string name, string description)
    parameters:
    - id: roleId
      type: System.String
      description: >-
        A string containing encoded role ID. For roles defined by

        Dropbox, this is the same across all teams.
    - id: name
      type: System.String
      description: The role display name.
    - id: description
      type: System.String
      description: >-
        Role description. Describes which permissions come with

        this role.
    content.vb: Public Sub New(roleId As String, name As String, description As String)
  overload: Dropbox.Api.Team.TeamMemberRole.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.TeamMemberRole.RoleId
  commentId: P:Dropbox.Api.Team.TeamMemberRole.RoleId
  id: RoleId
  parent: Dropbox.Api.Team.TeamMemberRole
  langs:
  - csharp
  - vb
  name: RoleId
  nameWithType: TeamMemberRole.RoleId
  fullName: Dropbox.Api.Team.TeamMemberRole.RoleId
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamMemberRole.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: RoleId
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamMemberRole.cs
    startLine: 92
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>A string containing encoded role ID. For roles defined by Dropbox, this is\nthe same across all teams.</p>\n"
  example: []
  syntax:
    content: public string RoleId { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RoleId As String
  overload: Dropbox.Api.Team.TeamMemberRole.RoleId*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Team.TeamMemberRole.Name
  commentId: P:Dropbox.Api.Team.TeamMemberRole.Name
  id: Name
  parent: Dropbox.Api.Team.TeamMemberRole
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TeamMemberRole.Name
  fullName: Dropbox.Api.Team.TeamMemberRole.Name
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamMemberRole.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Name
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamMemberRole.cs
    startLine: 97
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>The role display name.</p>\n"
  example: []
  syntax:
    content: public string Name { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Dropbox.Api.Team.TeamMemberRole.Name*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Team.TeamMemberRole.Description
  commentId: P:Dropbox.Api.Team.TeamMemberRole.Description
  id: Description
  parent: Dropbox.Api.Team.TeamMemberRole
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: TeamMemberRole.Description
  fullName: Dropbox.Api.Team.TeamMemberRole.Description
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamMemberRole.cs
      branch: doc_fx_integration
      repo: https://github.com/dropbox/dropbox-sdk-dotnet.git
    id: Description
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamMemberRole.cs
    startLine: 102
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Role description. Describes which permissions come with this role.</p>\n"
  example: []
  syntax:
    content: public string Description { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Dropbox.Api.Team.TeamMemberRole.Description*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Team
  commentId: N:Dropbox.Api.Team
  name: Dropbox.Api.Team
  nameWithType: Dropbox.Api.Team
  fullName: Dropbox.Api.Team
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dropbox.Api.Team.TeamMemberRole
  commentId: T:Dropbox.Api.Team.TeamMemberRole
  name: TeamMemberRole
  nameWithType: TeamMemberRole
  fullName: Dropbox.Api.Team.TeamMemberRole
- uid: Dropbox.Api.Team.TeamMemberRole.#ctor*
  commentId: Overload:Dropbox.Api.Team.TeamMemberRole.#ctor
  name: TeamMemberRole
  nameWithType: TeamMemberRole.TeamMemberRole
  fullName: Dropbox.Api.Team.TeamMemberRole.TeamMemberRole
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dropbox.Api.Team.TeamMemberRole.RoleId*
  commentId: Overload:Dropbox.Api.Team.TeamMemberRole.RoleId
  name: RoleId
  nameWithType: TeamMemberRole.RoleId
  fullName: Dropbox.Api.Team.TeamMemberRole.RoleId
- uid: Dropbox.Api.Team.TeamMemberRole.Name*
  commentId: Overload:Dropbox.Api.Team.TeamMemberRole.Name
  name: Name
  nameWithType: TeamMemberRole.Name
  fullName: Dropbox.Api.Team.TeamMemberRole.Name
- uid: Dropbox.Api.Team.TeamMemberRole.Description*
  commentId: Overload:Dropbox.Api.Team.TeamMemberRole.Description
  name: Description
  nameWithType: TeamMemberRole.Description
  fullName: Dropbox.Api.Team.TeamMemberRole.Description
