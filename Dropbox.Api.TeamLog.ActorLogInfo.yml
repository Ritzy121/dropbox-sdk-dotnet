### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamLog.ActorLogInfo
  commentId: T:Dropbox.Api.TeamLog.ActorLogInfo
  id: ActorLogInfo
  parent: Dropbox.Api.TeamLog
  children:
  - Dropbox.Api.TeamLog.ActorLogInfo.#ctor
  - Dropbox.Api.TeamLog.ActorLogInfo.AsAdmin
  - Dropbox.Api.TeamLog.ActorLogInfo.AsAnonymous
  - Dropbox.Api.TeamLog.ActorLogInfo.AsApp
  - Dropbox.Api.TeamLog.ActorLogInfo.AsDropbox
  - Dropbox.Api.TeamLog.ActorLogInfo.AsOther
  - Dropbox.Api.TeamLog.ActorLogInfo.AsReseller
  - Dropbox.Api.TeamLog.ActorLogInfo.AsUser
  - Dropbox.Api.TeamLog.ActorLogInfo.IsAdmin
  - Dropbox.Api.TeamLog.ActorLogInfo.IsAnonymous
  - Dropbox.Api.TeamLog.ActorLogInfo.IsApp
  - Dropbox.Api.TeamLog.ActorLogInfo.IsDropbox
  - Dropbox.Api.TeamLog.ActorLogInfo.IsOther
  - Dropbox.Api.TeamLog.ActorLogInfo.IsReseller
  - Dropbox.Api.TeamLog.ActorLogInfo.IsUser
  langs:
  - csharp
  - vb
  name: ActorLogInfo
  nameWithType: ActorLogInfo
  fullName: Dropbox.Api.TeamLog.ActorLogInfo
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: ActorLogInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>The entity who performed the action.</p>\n"
  example: []
  syntax:
    content: 'public class ActorLogInfo : object'
    content.vb: >-
      Public Class ActorLogInfo
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.TeamLog.ActorLogInfo.Admin
  - Dropbox.Api.TeamLog.ActorLogInfo.Anonymous
  - Dropbox.Api.TeamLog.ActorLogInfo.App
  - Dropbox.Api.TeamLog.ActorLogInfo.Dropbox
  - Dropbox.Api.TeamLog.ActorLogInfo.Other
  - Dropbox.Api.TeamLog.ActorLogInfo.Reseller
  - Dropbox.Api.TeamLog.ActorLogInfo.User
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.TeamLog.ActorLogInfo.#ctor
  commentId: M:Dropbox.Api.TeamLog.ActorLogInfo.#ctor
  id: '#ctor'
  parent: Dropbox.Api.TeamLog.ActorLogInfo
  langs:
  - csharp
  - vb
  name: ActorLogInfo()
  nameWithType: ActorLogInfo.ActorLogInfo()
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.ActorLogInfo()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
    startLine: 32
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamLog.ActorLogInfo\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public ActorLogInfo()
    content.vb: Public Sub New
  overload: Dropbox.Api.TeamLog.ActorLogInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.TeamLog.ActorLogInfo.IsAdmin
  commentId: P:Dropbox.Api.TeamLog.ActorLogInfo.IsAdmin
  id: IsAdmin
  parent: Dropbox.Api.TeamLog.ActorLogInfo
  langs:
  - csharp
  - vb
  name: IsAdmin
  nameWithType: ActorLogInfo.IsAdmin
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.IsAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
    startLine: 39
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Admin</p>\n"
  example: []
  syntax:
    content: public bool IsAdmin { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAdmin As Boolean
  overload: Dropbox.Api.TeamLog.ActorLogInfo.IsAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ActorLogInfo.AsAdmin
  commentId: P:Dropbox.Api.TeamLog.ActorLogInfo.AsAdmin
  id: AsAdmin
  parent: Dropbox.Api.TeamLog.ActorLogInfo
  langs:
  - csharp
  - vb
  name: AsAdmin
  nameWithType: ActorLogInfo.AsAdmin
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.AsAdmin
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsAdmin
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
    startLine: 50
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Admin, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public ActorLogInfo.Admin AsAdmin { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.ActorLogInfo.Admin
    content.vb: Public ReadOnly Property AsAdmin As ActorLogInfo.Admin
  overload: Dropbox.Api.TeamLog.ActorLogInfo.AsAdmin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ActorLogInfo.IsAnonymous
  commentId: P:Dropbox.Api.TeamLog.ActorLogInfo.IsAnonymous
  id: IsAnonymous
  parent: Dropbox.Api.TeamLog.ActorLogInfo
  langs:
  - csharp
  - vb
  name: IsAnonymous
  nameWithType: ActorLogInfo.IsAnonymous
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.IsAnonymous
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsAnonymous
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
    startLine: 61
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Anonymous</p>\n"
  example: []
  syntax:
    content: public bool IsAnonymous { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAnonymous As Boolean
  overload: Dropbox.Api.TeamLog.ActorLogInfo.IsAnonymous*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ActorLogInfo.AsAnonymous
  commentId: P:Dropbox.Api.TeamLog.ActorLogInfo.AsAnonymous
  id: AsAnonymous
  parent: Dropbox.Api.TeamLog.ActorLogInfo
  langs:
  - csharp
  - vb
  name: AsAnonymous
  nameWithType: ActorLogInfo.AsAnonymous
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.AsAnonymous
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsAnonymous
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
    startLine: 72
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Anonymous, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public ActorLogInfo.Anonymous AsAnonymous { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.ActorLogInfo.Anonymous
    content.vb: Public ReadOnly Property AsAnonymous As ActorLogInfo.Anonymous
  overload: Dropbox.Api.TeamLog.ActorLogInfo.AsAnonymous*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ActorLogInfo.IsApp
  commentId: P:Dropbox.Api.TeamLog.ActorLogInfo.IsApp
  id: IsApp
  parent: Dropbox.Api.TeamLog.ActorLogInfo
  langs:
  - csharp
  - vb
  name: IsApp
  nameWithType: ActorLogInfo.IsApp
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.IsApp
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsApp
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
    startLine: 83
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is App</p>\n"
  example: []
  syntax:
    content: public bool IsApp { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsApp As Boolean
  overload: Dropbox.Api.TeamLog.ActorLogInfo.IsApp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ActorLogInfo.AsApp
  commentId: P:Dropbox.Api.TeamLog.ActorLogInfo.AsApp
  id: AsApp
  parent: Dropbox.Api.TeamLog.ActorLogInfo
  langs:
  - csharp
  - vb
  name: AsApp
  nameWithType: ActorLogInfo.AsApp
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.AsApp
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsApp
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
    startLine: 94
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a App, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public ActorLogInfo.App AsApp { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.ActorLogInfo.App
    content.vb: Public ReadOnly Property AsApp As ActorLogInfo.App
  overload: Dropbox.Api.TeamLog.ActorLogInfo.AsApp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ActorLogInfo.IsDropbox
  commentId: P:Dropbox.Api.TeamLog.ActorLogInfo.IsDropbox
  id: IsDropbox
  parent: Dropbox.Api.TeamLog.ActorLogInfo
  langs:
  - csharp
  - vb
  name: IsDropbox
  nameWithType: ActorLogInfo.IsDropbox
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.IsDropbox
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsDropbox
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
    startLine: 105
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Dropbox</p>\n"
  example: []
  syntax:
    content: public bool IsDropbox { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDropbox As Boolean
  overload: Dropbox.Api.TeamLog.ActorLogInfo.IsDropbox*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ActorLogInfo.AsDropbox
  commentId: P:Dropbox.Api.TeamLog.ActorLogInfo.AsDropbox
  id: AsDropbox
  parent: Dropbox.Api.TeamLog.ActorLogInfo
  langs:
  - csharp
  - vb
  name: AsDropbox
  nameWithType: ActorLogInfo.AsDropbox
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.AsDropbox
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsDropbox
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
    startLine: 116
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Dropbox, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public ActorLogInfo.Dropbox AsDropbox { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.ActorLogInfo.Dropbox
    content.vb: Public ReadOnly Property AsDropbox As ActorLogInfo.Dropbox
  overload: Dropbox.Api.TeamLog.ActorLogInfo.AsDropbox*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ActorLogInfo.IsReseller
  commentId: P:Dropbox.Api.TeamLog.ActorLogInfo.IsReseller
  id: IsReseller
  parent: Dropbox.Api.TeamLog.ActorLogInfo
  langs:
  - csharp
  - vb
  name: IsReseller
  nameWithType: ActorLogInfo.IsReseller
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.IsReseller
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsReseller
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
    startLine: 127
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Reseller</p>\n"
  example: []
  syntax:
    content: public bool IsReseller { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReseller As Boolean
  overload: Dropbox.Api.TeamLog.ActorLogInfo.IsReseller*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ActorLogInfo.AsReseller
  commentId: P:Dropbox.Api.TeamLog.ActorLogInfo.AsReseller
  id: AsReseller
  parent: Dropbox.Api.TeamLog.ActorLogInfo
  langs:
  - csharp
  - vb
  name: AsReseller
  nameWithType: ActorLogInfo.AsReseller
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.AsReseller
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsReseller
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
    startLine: 138
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Reseller, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public ActorLogInfo.Reseller AsReseller { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.ActorLogInfo.Reseller
    content.vb: Public ReadOnly Property AsReseller As ActorLogInfo.Reseller
  overload: Dropbox.Api.TeamLog.ActorLogInfo.AsReseller*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ActorLogInfo.IsUser
  commentId: P:Dropbox.Api.TeamLog.ActorLogInfo.IsUser
  id: IsUser
  parent: Dropbox.Api.TeamLog.ActorLogInfo
  langs:
  - csharp
  - vb
  name: IsUser
  nameWithType: ActorLogInfo.IsUser
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.IsUser
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsUser
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
    startLine: 149
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is User</p>\n"
  example: []
  syntax:
    content: public bool IsUser { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUser As Boolean
  overload: Dropbox.Api.TeamLog.ActorLogInfo.IsUser*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ActorLogInfo.AsUser
  commentId: P:Dropbox.Api.TeamLog.ActorLogInfo.AsUser
  id: AsUser
  parent: Dropbox.Api.TeamLog.ActorLogInfo
  langs:
  - csharp
  - vb
  name: AsUser
  nameWithType: ActorLogInfo.AsUser
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.AsUser
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsUser
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
    startLine: 160
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a User, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public ActorLogInfo.User AsUser { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.ActorLogInfo.User
    content.vb: Public ReadOnly Property AsUser As ActorLogInfo.User
  overload: Dropbox.Api.TeamLog.ActorLogInfo.AsUser*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ActorLogInfo.IsOther
  commentId: P:Dropbox.Api.TeamLog.ActorLogInfo.IsOther
  id: IsOther
  parent: Dropbox.Api.TeamLog.ActorLogInfo
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: ActorLogInfo.IsOther
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
    startLine: 171
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.TeamLog.ActorLogInfo.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.ActorLogInfo.AsOther
  commentId: P:Dropbox.Api.TeamLog.ActorLogInfo.AsOther
  id: AsOther
  parent: Dropbox.Api.TeamLog.ActorLogInfo
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: ActorLogInfo.AsOther
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/ActorLogInfo.cs
    startLine: 182
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public ActorLogInfo.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.ActorLogInfo.Other
    content.vb: Public ReadOnly Property AsOther As ActorLogInfo.Other
  overload: Dropbox.Api.TeamLog.ActorLogInfo.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.TeamLog
  commentId: N:Dropbox.Api.TeamLog
  name: Dropbox.Api.TeamLog
  nameWithType: Dropbox.Api.TeamLog
  fullName: Dropbox.Api.TeamLog
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.TeamLog.ActorLogInfo
  commentId: T:Dropbox.Api.TeamLog.ActorLogInfo
  parent: Dropbox.Api.TeamLog
  name: ActorLogInfo
  nameWithType: ActorLogInfo
  fullName: Dropbox.Api.TeamLog.ActorLogInfo
- uid: Dropbox.Api.TeamLog.ActorLogInfo.#ctor*
  commentId: Overload:Dropbox.Api.TeamLog.ActorLogInfo.#ctor
  name: ActorLogInfo
  nameWithType: ActorLogInfo.ActorLogInfo
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.ActorLogInfo
- uid: Dropbox.Api.TeamLog.ActorLogInfo.IsAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.ActorLogInfo.IsAdmin
  name: IsAdmin
  nameWithType: ActorLogInfo.IsAdmin
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.IsAdmin
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.TeamLog.ActorLogInfo.AsAdmin*
  commentId: Overload:Dropbox.Api.TeamLog.ActorLogInfo.AsAdmin
  name: AsAdmin
  nameWithType: ActorLogInfo.AsAdmin
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.AsAdmin
- uid: Dropbox.Api.TeamLog.ActorLogInfo.Admin
  commentId: T:Dropbox.Api.TeamLog.ActorLogInfo.Admin
  parent: Dropbox.Api.TeamLog
  name: ActorLogInfo.Admin
  nameWithType: ActorLogInfo.Admin
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.Admin
- uid: Dropbox.Api.TeamLog.ActorLogInfo.IsAnonymous*
  commentId: Overload:Dropbox.Api.TeamLog.ActorLogInfo.IsAnonymous
  name: IsAnonymous
  nameWithType: ActorLogInfo.IsAnonymous
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.IsAnonymous
- uid: Dropbox.Api.TeamLog.ActorLogInfo.AsAnonymous*
  commentId: Overload:Dropbox.Api.TeamLog.ActorLogInfo.AsAnonymous
  name: AsAnonymous
  nameWithType: ActorLogInfo.AsAnonymous
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.AsAnonymous
- uid: Dropbox.Api.TeamLog.ActorLogInfo.Anonymous
  commentId: T:Dropbox.Api.TeamLog.ActorLogInfo.Anonymous
  parent: Dropbox.Api.TeamLog
  name: ActorLogInfo.Anonymous
  nameWithType: ActorLogInfo.Anonymous
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.Anonymous
- uid: Dropbox.Api.TeamLog.ActorLogInfo.IsApp*
  commentId: Overload:Dropbox.Api.TeamLog.ActorLogInfo.IsApp
  name: IsApp
  nameWithType: ActorLogInfo.IsApp
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.IsApp
- uid: Dropbox.Api.TeamLog.ActorLogInfo.AsApp*
  commentId: Overload:Dropbox.Api.TeamLog.ActorLogInfo.AsApp
  name: AsApp
  nameWithType: ActorLogInfo.AsApp
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.AsApp
- uid: Dropbox.Api.TeamLog.ActorLogInfo.App
  commentId: T:Dropbox.Api.TeamLog.ActorLogInfo.App
  parent: Dropbox.Api.TeamLog
  name: ActorLogInfo.App
  nameWithType: ActorLogInfo.App
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.App
- uid: Dropbox.Api.TeamLog.ActorLogInfo.IsDropbox*
  commentId: Overload:Dropbox.Api.TeamLog.ActorLogInfo.IsDropbox
  name: IsDropbox
  nameWithType: ActorLogInfo.IsDropbox
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.IsDropbox
- uid: Dropbox.Api.TeamLog.ActorLogInfo.AsDropbox*
  commentId: Overload:Dropbox.Api.TeamLog.ActorLogInfo.AsDropbox
  name: AsDropbox
  nameWithType: ActorLogInfo.AsDropbox
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.AsDropbox
- uid: Dropbox.Api.TeamLog.ActorLogInfo.Dropbox
  commentId: T:Dropbox.Api.TeamLog.ActorLogInfo.Dropbox
  parent: Dropbox.Api.TeamLog
  name: ActorLogInfo.Dropbox
  nameWithType: ActorLogInfo.Dropbox
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.Dropbox
- uid: Dropbox.Api.TeamLog.ActorLogInfo.IsReseller*
  commentId: Overload:Dropbox.Api.TeamLog.ActorLogInfo.IsReseller
  name: IsReseller
  nameWithType: ActorLogInfo.IsReseller
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.IsReseller
- uid: Dropbox.Api.TeamLog.ActorLogInfo.AsReseller*
  commentId: Overload:Dropbox.Api.TeamLog.ActorLogInfo.AsReseller
  name: AsReseller
  nameWithType: ActorLogInfo.AsReseller
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.AsReseller
- uid: Dropbox.Api.TeamLog.ActorLogInfo.Reseller
  commentId: T:Dropbox.Api.TeamLog.ActorLogInfo.Reseller
  parent: Dropbox.Api.TeamLog
  name: ActorLogInfo.Reseller
  nameWithType: ActorLogInfo.Reseller
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.Reseller
- uid: Dropbox.Api.TeamLog.ActorLogInfo.IsUser*
  commentId: Overload:Dropbox.Api.TeamLog.ActorLogInfo.IsUser
  name: IsUser
  nameWithType: ActorLogInfo.IsUser
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.IsUser
- uid: Dropbox.Api.TeamLog.ActorLogInfo.AsUser*
  commentId: Overload:Dropbox.Api.TeamLog.ActorLogInfo.AsUser
  name: AsUser
  nameWithType: ActorLogInfo.AsUser
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.AsUser
- uid: Dropbox.Api.TeamLog.ActorLogInfo.User
  commentId: T:Dropbox.Api.TeamLog.ActorLogInfo.User
  parent: Dropbox.Api.TeamLog
  name: ActorLogInfo.User
  nameWithType: ActorLogInfo.User
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.User
- uid: Dropbox.Api.TeamLog.ActorLogInfo.IsOther*
  commentId: Overload:Dropbox.Api.TeamLog.ActorLogInfo.IsOther
  name: IsOther
  nameWithType: ActorLogInfo.IsOther
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.IsOther
- uid: Dropbox.Api.TeamLog.ActorLogInfo.AsOther*
  commentId: Overload:Dropbox.Api.TeamLog.ActorLogInfo.AsOther
  name: AsOther
  nameWithType: ActorLogInfo.AsOther
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.AsOther
- uid: Dropbox.Api.TeamLog.ActorLogInfo.Other
  commentId: T:Dropbox.Api.TeamLog.ActorLogInfo.Other
  parent: Dropbox.Api.TeamLog
  name: ActorLogInfo.Other
  nameWithType: ActorLogInfo.Other
  fullName: Dropbox.Api.TeamLog.ActorLogInfo.Other
shouldSkipMarkup: true
