### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.ExportInfo
  commentId: T:Dropbox.Api.Files.ExportInfo
  id: ExportInfo
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.ExportInfo.#ctor
  - Dropbox.Api.Files.ExportInfo.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})
  - Dropbox.Api.Files.ExportInfo.ExportAs
  - Dropbox.Api.Files.ExportInfo.ExportOptions
  langs:
  - csharp
  - vb
  name: ExportInfo
  nameWithType: ExportInfo
  fullName: Dropbox.Api.Files.ExportInfo
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ExportInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: ExportInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ExportInfo.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Export information for a file.</p>\n"
  example: []
  syntax:
    content: 'public class ExportInfo : object'
    content.vb: >-
      Public Class ExportInfo
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.ExportInfo.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Dropbox.Api.Files.ExportInfo.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})'
  parent: Dropbox.Api.Files.ExportInfo
  langs:
  - csharp
  - vb
  name: ExportInfo(String, System.Collections.Generic.IEnumerable<String>)
  nameWithType: ExportInfo.ExportInfo(String, System.Collections.Generic.IEnumerable<String>)
  fullName: Dropbox.Api.Files.ExportInfo.ExportInfo(System.String, System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ExportInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ExportInfo.cs
    startLine: 35
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.ExportInfo\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public ExportInfo(string exportAs = null, System.Collections.Generic.IEnumerable<string> exportOptions = null)
    parameters:
    - id: exportAs
      type: System.String
      description: Format to which the file can be exported to.
    - id: exportOptions
      type: System.Collections.Generic.IEnumerable{System.String}
      description: >-
        Additional formats to which the file can be exported.

        These values can be specified as the export_format in /files/export.
    content.vb: Public Sub New(exportAs As String = Nothing, exportOptions As System.Collections.Generic.IEnumerable(Of String) = Nothing)
  overload: Dropbox.Api.Files.ExportInfo.#ctor*
  nameWithType.vb: ExportInfo.ExportInfo(String, System.Collections.Generic.IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Files.ExportInfo.ExportInfo(System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: ExportInfo(String, System.Collections.Generic.IEnumerable(Of String))
- uid: Dropbox.Api.Files.ExportInfo.#ctor
  commentId: M:Dropbox.Api.Files.ExportInfo.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Files.ExportInfo
  langs:
  - csharp
  - vb
  name: ExportInfo()
  nameWithType: ExportInfo.ExportInfo()
  fullName: Dropbox.Api.Files.ExportInfo.ExportInfo()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ExportInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ExportInfo.cs
    startLine: 49
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.ExportInfo\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: >-
    This is to construct an instance of the object when

    deserializing.
  example: []
  syntax:
    content: public ExportInfo()
    content.vb: Public Sub New
  overload: Dropbox.Api.Files.ExportInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.ExportInfo.ExportAs
  commentId: P:Dropbox.Api.Files.ExportInfo.ExportAs
  id: ExportAs
  parent: Dropbox.Api.Files.ExportInfo
  langs:
  - csharp
  - vb
  name: ExportAs
  nameWithType: ExportInfo.ExportAs
  fullName: Dropbox.Api.Files.ExportInfo.ExportAs
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ExportInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: ExportAs
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ExportInfo.cs
    startLine: 57
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Format to which the file can be exported to.</p>\n"
  example: []
  syntax:
    content: public string ExportAs { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ExportAs As String
  overload: Dropbox.Api.Files.ExportInfo.ExportAs*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.ExportInfo.ExportOptions
  commentId: P:Dropbox.Api.Files.ExportInfo.ExportOptions
  id: ExportOptions
  parent: Dropbox.Api.Files.ExportInfo
  langs:
  - csharp
  - vb
  name: ExportOptions
  nameWithType: ExportInfo.ExportOptions
  fullName: Dropbox.Api.Files.ExportInfo.ExportOptions
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ExportInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: ExportOptions
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ExportInfo.cs
    startLine: 63
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Additional formats to which the file can be exported. These values can be\nspecified as the export_format in /files/export.</p>\n"
  example: []
  syntax:
    content: public System.Collections.Generic.IList<string> ExportOptions { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property ExportOptions As System.Collections.Generic.IList(Of String)
  overload: Dropbox.Api.Files.ExportInfo.ExportOptions*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Files.ExportInfo
  commentId: T:Dropbox.Api.Files.ExportInfo
  parent: Dropbox.Api.Files
  name: ExportInfo
  nameWithType: ExportInfo
  fullName: Dropbox.Api.Files.ExportInfo
- uid: Dropbox.Api.Files.ExportInfo.#ctor*
  commentId: Overload:Dropbox.Api.Files.ExportInfo.#ctor
  name: ExportInfo
  nameWithType: ExportInfo.ExportInfo
  fullName: Dropbox.Api.Files.ExportInfo.ExportInfo
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: '!:System.Collections.Generic.IEnumerable{System.String}'
  definition: System.Collections.Generic.IEnumerable`1
  name: System.Collections.Generic.IEnumerable<String>
  nameWithType: System.Collections.Generic.IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: System.Collections.Generic.IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: System.Collections.Generic.IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: System.Collections.Generic.IEnumerable
    nameWithType: System.Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: System.Collections.Generic.IEnumerable
    nameWithType: System.Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: System.Collections.Generic.IEnumerable<>
  nameWithType: System.Collections.Generic.IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: System.Collections.Generic.IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: System.Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: System.Collections.Generic.IEnumerable
    nameWithType: System.Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: System.Collections.Generic.IEnumerable
    nameWithType: System.Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Files.ExportInfo.ExportAs*
  commentId: Overload:Dropbox.Api.Files.ExportInfo.ExportAs
  name: ExportAs
  nameWithType: ExportInfo.ExportAs
  fullName: Dropbox.Api.Files.ExportInfo.ExportAs
- uid: Dropbox.Api.Files.ExportInfo.ExportOptions*
  commentId: Overload:Dropbox.Api.Files.ExportInfo.ExportOptions
  name: ExportOptions
  nameWithType: ExportInfo.ExportOptions
  fullName: Dropbox.Api.Files.ExportInfo.ExportOptions
- uid: System.Collections.Generic.IList{System.String}
  commentId: '!:System.Collections.Generic.IList{System.String}'
  definition: System.Collections.Generic.IList`1
  name: System.Collections.Generic.IList<String>
  nameWithType: System.Collections.Generic.IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: System.Collections.Generic.IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: System.Collections.Generic.IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  isExternal: true
  name: System.Collections.Generic.IList<>
  nameWithType: System.Collections.Generic.IList<>
  fullName: System.Collections.Generic.IList<>
  nameWithType.vb: System.Collections.Generic.IList(Of )
  fullName.vb: System.Collections.Generic.IList(Of )
  name.vb: System.Collections.Generic.IList(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
