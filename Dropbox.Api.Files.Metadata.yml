### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.Metadata
  commentId: T:Dropbox.Api.Files.Metadata
  id: Metadata
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.Metadata.#ctor
  - Dropbox.Api.Files.Metadata.#ctor(System.String,System.String,System.String,System.String)
  - Dropbox.Api.Files.Metadata.AsDeleted
  - Dropbox.Api.Files.Metadata.AsFile
  - Dropbox.Api.Files.Metadata.AsFolder
  - Dropbox.Api.Files.Metadata.IsDeleted
  - Dropbox.Api.Files.Metadata.IsFile
  - Dropbox.Api.Files.Metadata.IsFolder
  - Dropbox.Api.Files.Metadata.Name
  - Dropbox.Api.Files.Metadata.ParentSharedFolderId
  - Dropbox.Api.Files.Metadata.PathDisplay
  - Dropbox.Api.Files.Metadata.PathLower
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: Metadata
  fullName: Dropbox.Api.Files.Metadata
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Metadata
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
    startLine: 26
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Metadata for a file or folder.</p>\n"
  example: []
  syntax:
    content: 'public class Metadata : object'
    content.vb: >-
      Public Class Metadata
          Inherits Object
  seealso:
  - linkId: Dropbox.Api.Files.DeleteBatchResultData
    commentId: T:Dropbox.Api.Files.DeleteBatchResultData
  - linkId: Dropbox.Api.Files.DeleteResult
    commentId: T:Dropbox.Api.Files.DeleteResult
  - linkId: Dropbox.Api.Files.DeletedMetadata
    commentId: T:Dropbox.Api.Files.DeletedMetadata
  - linkId: Dropbox.Api.Files.FileMetadata
    commentId: T:Dropbox.Api.Files.FileMetadata
  - linkId: Dropbox.Api.Files.FolderMetadata
    commentId: T:Dropbox.Api.Files.FolderMetadata
  - linkId: Dropbox.Api.Files.GetCopyReferenceResult
    commentId: T:Dropbox.Api.Files.GetCopyReferenceResult
  - linkId: Dropbox.Api.Files.LockFileResult
    commentId: T:Dropbox.Api.Files.LockFileResult
  - linkId: Dropbox.Api.Files.RelocationBatchResultData
    commentId: T:Dropbox.Api.Files.RelocationBatchResultData
  - linkId: Dropbox.Api.Files.RelocationResult
    commentId: T:Dropbox.Api.Files.RelocationResult
  - linkId: Dropbox.Api.Files.SaveCopyReferenceResult
    commentId: T:Dropbox.Api.Files.SaveCopyReferenceResult
  - linkId: Dropbox.Api.Files.SearchMatch
    commentId: T:Dropbox.Api.Files.SearchMatch
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Files.DeletedMetadata
  - Dropbox.Api.Files.FileMetadata
  - Dropbox.Api.Files.FolderMetadata
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.Metadata.#ctor(System.String,System.String,System.String,System.String)
  commentId: M:Dropbox.Api.Files.Metadata.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: Dropbox.Api.Files.Metadata
  langs:
  - csharp
  - vb
  name: Metadata(String, String, String, String)
  nameWithType: Metadata.Metadata(String, String, String, String)
  fullName: Dropbox.Api.Files.Metadata.Metadata(System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
    startLine: 58
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.Metadata\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: protected Metadata(string name, string pathLower = null, string pathDisplay = null, string parentSharedFolderId = null)
    parameters:
    - id: name
      type: System.String
      description: >-
        The last component of the path (including extension). This never

        contains a slash.
    - id: pathLower
      type: System.String
      description: >-
        The lowercased full path in the user&apos;s Dropbox. This always

        starts with a slash. This field will be null if the file or folder is not

        mounted.
    - id: pathDisplay
      type: System.String
      description: >-
        The cased path to be used for display purposes only. In

        rare instances the casing will not correctly match the user&apos;s filesystem, but this

        behavior will match the path provided in the Core API v1, and at least the last

        path component will have the correct casing. Changes to only the casing of paths

        won&apos;t be returned by <xref href="Dropbox.Api.Files.Routes.FilesUserRoutes.ListFolderContinueAsync(Dropbox.Api.Files.ListFolderContinueArg)" data-throw-if-not-resolved="false"></xref>. This

        field will be null if the file or folder is not mounted.
    - id: parentSharedFolderId
      type: System.String
      description: Please use <xref href="Dropbox.Api.Files.FileSharingInfo.ParentSharedFolderId" data-throw-if-not-resolved="false"></xref> or <xref href="Dropbox.Api.Files.FolderSharingInfo.ParentSharedFolderId" data-throw-if-not-resolved="false"></xref> instead.
    content.vb: Protected Sub New(name As String, pathLower As String = Nothing, pathDisplay As String = Nothing, parentSharedFolderId As String = Nothing)
  overload: Dropbox.Api.Files.Metadata.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Dropbox.Api.Files.Metadata.#ctor
  commentId: M:Dropbox.Api.Files.Metadata.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Files.Metadata
  langs:
  - csharp
  - vb
  name: Metadata()
  nameWithType: Metadata.Metadata()
  fullName: Dropbox.Api.Files.Metadata.Metadata()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
    startLine: 87
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.Metadata\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: >-
    This is to construct an instance of the object when

    deserializing.
  example: []
  syntax:
    content: public Metadata()
    content.vb: Public Sub New
  overload: Dropbox.Api.Files.Metadata.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.Metadata.IsFile
  commentId: P:Dropbox.Api.Files.Metadata.IsFile
  id: IsFile
  parent: Dropbox.Api.Files.Metadata
  langs:
  - csharp
  - vb
  name: IsFile
  nameWithType: Metadata.IsFile
  fullName: Dropbox.Api.Files.Metadata.IsFile
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsFile
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
    startLine: 95
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is File</p>\n"
  example: []
  syntax:
    content: public bool IsFile { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFile As Boolean
  overload: Dropbox.Api.Files.Metadata.IsFile*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.Metadata.AsFile
  commentId: P:Dropbox.Api.Files.Metadata.AsFile
  id: AsFile
  parent: Dropbox.Api.Files.Metadata
  langs:
  - csharp
  - vb
  name: AsFile
  nameWithType: Metadata.AsFile
  fullName: Dropbox.Api.Files.Metadata.AsFile
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsFile
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
    startLine: 106
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a <xref href=\"Dropbox.Api.Files.FileMetadata\" data-throw-if-not-resolved=\"false\"></xref>, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public FileMetadata AsFile { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.FileMetadata
    content.vb: Public ReadOnly Property AsFile As FileMetadata
  overload: Dropbox.Api.Files.Metadata.AsFile*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.Metadata.IsFolder
  commentId: P:Dropbox.Api.Files.Metadata.IsFolder
  id: IsFolder
  parent: Dropbox.Api.Files.Metadata
  langs:
  - csharp
  - vb
  name: IsFolder
  nameWithType: Metadata.IsFolder
  fullName: Dropbox.Api.Files.Metadata.IsFolder
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
    startLine: 117
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Folder</p>\n"
  example: []
  syntax:
    content: public bool IsFolder { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFolder As Boolean
  overload: Dropbox.Api.Files.Metadata.IsFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.Metadata.AsFolder
  commentId: P:Dropbox.Api.Files.Metadata.AsFolder
  id: AsFolder
  parent: Dropbox.Api.Files.Metadata
  langs:
  - csharp
  - vb
  name: AsFolder
  nameWithType: Metadata.AsFolder
  fullName: Dropbox.Api.Files.Metadata.AsFolder
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsFolder
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
    startLine: 128
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a <xref href=\"Dropbox.Api.Files.FolderMetadata\" data-throw-if-not-resolved=\"false\"></xref>, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public FolderMetadata AsFolder { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.FolderMetadata
    content.vb: Public ReadOnly Property AsFolder As FolderMetadata
  overload: Dropbox.Api.Files.Metadata.AsFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.Metadata.IsDeleted
  commentId: P:Dropbox.Api.Files.Metadata.IsDeleted
  id: IsDeleted
  parent: Dropbox.Api.Files.Metadata
  langs:
  - csharp
  - vb
  name: IsDeleted
  nameWithType: Metadata.IsDeleted
  fullName: Dropbox.Api.Files.Metadata.IsDeleted
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsDeleted
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
    startLine: 139
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Deleted</p>\n"
  example: []
  syntax:
    content: public bool IsDeleted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDeleted As Boolean
  overload: Dropbox.Api.Files.Metadata.IsDeleted*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.Metadata.AsDeleted
  commentId: P:Dropbox.Api.Files.Metadata.AsDeleted
  id: AsDeleted
  parent: Dropbox.Api.Files.Metadata
  langs:
  - csharp
  - vb
  name: AsDeleted
  nameWithType: Metadata.AsDeleted
  fullName: Dropbox.Api.Files.Metadata.AsDeleted
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsDeleted
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
    startLine: 151
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a <xref href=\"Dropbox.Api.Files.DeletedMetadata\" data-throw-if-not-resolved=\"false\"></xref>, or\n<code>null</code>.</p>\n"
  example: []
  syntax:
    content: public DeletedMetadata AsDeleted { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.DeletedMetadata
    content.vb: Public ReadOnly Property AsDeleted As DeletedMetadata
  overload: Dropbox.Api.Files.Metadata.AsDeleted*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.Metadata.Name
  commentId: P:Dropbox.Api.Files.Metadata.Name
  id: Name
  parent: Dropbox.Api.Files.Metadata
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Metadata.Name
  fullName: Dropbox.Api.Files.Metadata.Name
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Name
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
    startLine: 163
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The last component of the path (including extension). This never contains a\nslash.</p>\n"
  example: []
  syntax:
    content: public string Name { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Dropbox.Api.Files.Metadata.Name*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.Metadata.PathLower
  commentId: P:Dropbox.Api.Files.Metadata.PathLower
  id: PathLower
  parent: Dropbox.Api.Files.Metadata
  langs:
  - csharp
  - vb
  name: PathLower
  nameWithType: Metadata.PathLower
  fullName: Dropbox.Api.Files.Metadata.PathLower
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: PathLower
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
    startLine: 169
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The lowercased full path in the user&apos;s Dropbox. This always starts with a\nslash. This field will be null if the file or folder is not mounted.</p>\n"
  example: []
  syntax:
    content: public string PathLower { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PathLower As String
  overload: Dropbox.Api.Files.Metadata.PathLower*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.Metadata.PathDisplay
  commentId: P:Dropbox.Api.Files.Metadata.PathDisplay
  id: PathDisplay
  parent: Dropbox.Api.Files.Metadata
  langs:
  - csharp
  - vb
  name: PathDisplay
  nameWithType: Metadata.PathDisplay
  fullName: Dropbox.Api.Files.Metadata.PathDisplay
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: PathDisplay
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
    startLine: 179
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The cased path to be used for display purposes only. In rare instances the\ncasing will not correctly match the user&apos;s filesystem, but this behavior will match\nthe path provided in the Core API v1, and at least the last path component will\nhave the correct casing. Changes to only the casing of paths won&apos;t be returned by\n<xref href=\"Dropbox.Api.Files.Routes.FilesUserRoutes.ListFolderContinueAsync(Dropbox.Api.Files.ListFolderContinueArg)\" data-throw-if-not-resolved=\"false\"></xref>.\nThis field will be null if the file or folder is not mounted.</p>\n"
  example: []
  syntax:
    content: public string PathDisplay { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PathDisplay As String
  overload: Dropbox.Api.Files.Metadata.PathDisplay*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.Metadata.ParentSharedFolderId
  commentId: P:Dropbox.Api.Files.Metadata.ParentSharedFolderId
  id: ParentSharedFolderId
  parent: Dropbox.Api.Files.Metadata
  langs:
  - csharp
  - vb
  name: ParentSharedFolderId
  nameWithType: Metadata.ParentSharedFolderId
  fullName: Dropbox.Api.Files.Metadata.ParentSharedFolderId
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: ParentSharedFolderId
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/Metadata.cs
    startLine: 186
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Please use <xref href=\"Dropbox.Api.Files.FileSharingInfo.ParentSharedFolderId\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Dropbox.Api.Files.FolderSharingInfo.ParentSharedFolderId\" data-throw-if-not-resolved=\"false\"></xref>\ninstead.</p>\n"
  example: []
  syntax:
    content: public string ParentSharedFolderId { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ParentSharedFolderId As String
  overload: Dropbox.Api.Files.Metadata.ParentSharedFolderId*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Files.DeleteBatchResultData
  commentId: T:Dropbox.Api.Files.DeleteBatchResultData
  parent: Dropbox.Api.Files
  name: DeleteBatchResultData
  nameWithType: DeleteBatchResultData
  fullName: Dropbox.Api.Files.DeleteBatchResultData
- uid: Dropbox.Api.Files.DeleteResult
  commentId: T:Dropbox.Api.Files.DeleteResult
  parent: Dropbox.Api.Files
  name: DeleteResult
  nameWithType: DeleteResult
  fullName: Dropbox.Api.Files.DeleteResult
- uid: Dropbox.Api.Files.DeletedMetadata
  commentId: T:Dropbox.Api.Files.DeletedMetadata
  parent: Dropbox.Api.Files
  name: DeletedMetadata
  nameWithType: DeletedMetadata
  fullName: Dropbox.Api.Files.DeletedMetadata
- uid: Dropbox.Api.Files.FileMetadata
  commentId: T:Dropbox.Api.Files.FileMetadata
  parent: Dropbox.Api.Files
  name: FileMetadata
  nameWithType: FileMetadata
  fullName: Dropbox.Api.Files.FileMetadata
- uid: Dropbox.Api.Files.FolderMetadata
  commentId: T:Dropbox.Api.Files.FolderMetadata
  parent: Dropbox.Api.Files
  name: FolderMetadata
  nameWithType: FolderMetadata
  fullName: Dropbox.Api.Files.FolderMetadata
- uid: Dropbox.Api.Files.GetCopyReferenceResult
  commentId: T:Dropbox.Api.Files.GetCopyReferenceResult
  parent: Dropbox.Api.Files
  name: GetCopyReferenceResult
  nameWithType: GetCopyReferenceResult
  fullName: Dropbox.Api.Files.GetCopyReferenceResult
- uid: Dropbox.Api.Files.LockFileResult
  commentId: T:Dropbox.Api.Files.LockFileResult
  parent: Dropbox.Api.Files
  name: LockFileResult
  nameWithType: LockFileResult
  fullName: Dropbox.Api.Files.LockFileResult
- uid: Dropbox.Api.Files.RelocationBatchResultData
  commentId: T:Dropbox.Api.Files.RelocationBatchResultData
  name: RelocationBatchResultData
  nameWithType: RelocationBatchResultData
  fullName: Dropbox.Api.Files.RelocationBatchResultData
- uid: Dropbox.Api.Files.RelocationResult
  commentId: T:Dropbox.Api.Files.RelocationResult
  parent: Dropbox.Api.Files
  name: RelocationResult
  nameWithType: RelocationResult
  fullName: Dropbox.Api.Files.RelocationResult
- uid: Dropbox.Api.Files.SaveCopyReferenceResult
  commentId: T:Dropbox.Api.Files.SaveCopyReferenceResult
  parent: Dropbox.Api.Files
  name: SaveCopyReferenceResult
  nameWithType: SaveCopyReferenceResult
  fullName: Dropbox.Api.Files.SaveCopyReferenceResult
- uid: Dropbox.Api.Files.SearchMatch
  commentId: T:Dropbox.Api.Files.SearchMatch
  name: SearchMatch
  nameWithType: SearchMatch
  fullName: Dropbox.Api.Files.SearchMatch
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Files.Metadata
  commentId: T:Dropbox.Api.Files.Metadata
  parent: Dropbox.Api.Files
  name: Metadata
  nameWithType: Metadata
  fullName: Dropbox.Api.Files.Metadata
- uid: Dropbox.Api.Files.Routes.FilesUserRoutes.ListFolderContinueAsync(Dropbox.Api.Files.ListFolderContinueArg)
  commentId: M:Dropbox.Api.Files.Routes.FilesUserRoutes.ListFolderContinueAsync(Dropbox.Api.Files.ListFolderContinueArg)
  isExternal: true
- uid: Dropbox.Api.Files.FileSharingInfo.ParentSharedFolderId
  commentId: P:Dropbox.Api.Files.FileSharingInfo.ParentSharedFolderId
  isExternal: true
- uid: Dropbox.Api.Files.FolderSharingInfo.ParentSharedFolderId
  commentId: P:Dropbox.Api.Files.FolderSharingInfo.ParentSharedFolderId
  isExternal: true
- uid: Dropbox.Api.Files.Metadata.#ctor*
  commentId: Overload:Dropbox.Api.Files.Metadata.#ctor
  name: Metadata
  nameWithType: Metadata.Metadata
  fullName: Dropbox.Api.Files.Metadata.Metadata
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dropbox.Api.Files.Metadata.IsFile*
  commentId: Overload:Dropbox.Api.Files.Metadata.IsFile
  name: IsFile
  nameWithType: Metadata.IsFile
  fullName: Dropbox.Api.Files.Metadata.IsFile
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Files.Metadata.AsFile*
  commentId: Overload:Dropbox.Api.Files.Metadata.AsFile
  name: AsFile
  nameWithType: Metadata.AsFile
  fullName: Dropbox.Api.Files.Metadata.AsFile
- uid: Dropbox.Api.Files.Metadata.IsFolder*
  commentId: Overload:Dropbox.Api.Files.Metadata.IsFolder
  name: IsFolder
  nameWithType: Metadata.IsFolder
  fullName: Dropbox.Api.Files.Metadata.IsFolder
- uid: Dropbox.Api.Files.Metadata.AsFolder*
  commentId: Overload:Dropbox.Api.Files.Metadata.AsFolder
  name: AsFolder
  nameWithType: Metadata.AsFolder
  fullName: Dropbox.Api.Files.Metadata.AsFolder
- uid: Dropbox.Api.Files.Metadata.IsDeleted*
  commentId: Overload:Dropbox.Api.Files.Metadata.IsDeleted
  name: IsDeleted
  nameWithType: Metadata.IsDeleted
  fullName: Dropbox.Api.Files.Metadata.IsDeleted
- uid: Dropbox.Api.Files.Metadata.AsDeleted*
  commentId: Overload:Dropbox.Api.Files.Metadata.AsDeleted
  name: AsDeleted
  nameWithType: Metadata.AsDeleted
  fullName: Dropbox.Api.Files.Metadata.AsDeleted
- uid: Dropbox.Api.Files.Metadata.Name*
  commentId: Overload:Dropbox.Api.Files.Metadata.Name
  name: Name
  nameWithType: Metadata.Name
  fullName: Dropbox.Api.Files.Metadata.Name
- uid: Dropbox.Api.Files.Metadata.PathLower*
  commentId: Overload:Dropbox.Api.Files.Metadata.PathLower
  name: PathLower
  nameWithType: Metadata.PathLower
  fullName: Dropbox.Api.Files.Metadata.PathLower
- uid: Dropbox.Api.Files.Metadata.PathDisplay*
  commentId: Overload:Dropbox.Api.Files.Metadata.PathDisplay
  name: PathDisplay
  nameWithType: Metadata.PathDisplay
  fullName: Dropbox.Api.Files.Metadata.PathDisplay
- uid: Dropbox.Api.Files.Metadata.ParentSharedFolderId*
  commentId: Overload:Dropbox.Api.Files.Metadata.ParentSharedFolderId
  name: ParentSharedFolderId
  nameWithType: Metadata.ParentSharedFolderId
  fullName: Dropbox.Api.Files.Metadata.ParentSharedFolderId
shouldSkipMarkup: true
