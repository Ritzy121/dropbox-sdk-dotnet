### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.SearchResult
  commentId: T:Dropbox.Api.Files.SearchResult
  id: SearchResult
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.SearchResult.#ctor
  - Dropbox.Api.Files.SearchResult.#ctor(System.Collections.Generic.IEnumerable{Dropbox.Api.Files.SearchMatch},System.Boolean,System.UInt64)
  - Dropbox.Api.Files.SearchResult.Matches
  - Dropbox.Api.Files.SearchResult.More
  - Dropbox.Api.Files.SearchResult.Start
  langs:
  - csharp
  - vb
  name: SearchResult
  nameWithType: SearchResult
  fullName: Dropbox.Api.Files.SearchResult
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchResult.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: SearchResult
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchResult.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The search result object</p>\n"
  example: []
  syntax:
    content: 'public class SearchResult : object'
    content.vb: >-
      Public Class SearchResult
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.SearchResult.#ctor(System.Collections.Generic.IEnumerable{Dropbox.Api.Files.SearchMatch},System.Boolean,System.UInt64)
  commentId: M:Dropbox.Api.Files.SearchResult.#ctor(System.Collections.Generic.IEnumerable{Dropbox.Api.Files.SearchMatch},System.Boolean,System.UInt64)
  id: '#ctor(System.Collections.Generic.IEnumerable{Dropbox.Api.Files.SearchMatch},System.Boolean,System.UInt64)'
  parent: Dropbox.Api.Files.SearchResult
  langs:
  - csharp
  - vb
  name: SearchResult(System.Collections.Generic.IEnumerable<SearchMatch>, Boolean, UInt64)
  nameWithType: SearchResult.SearchResult(System.Collections.Generic.IEnumerable<SearchMatch>, Boolean, UInt64)
  fullName: Dropbox.Api.Files.SearchResult.SearchResult(System.Collections.Generic.IEnumerable<Dropbox.Api.Files.SearchMatch>, System.Boolean, System.UInt64)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchResult.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchResult.cs
    startLine: 39
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.SearchResult\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public SearchResult(System.Collections.Generic.IEnumerable<SearchMatch> matches, bool more, ulong start)
    parameters:
    - id: matches
      type: System.Collections.Generic.IEnumerable{Dropbox.Api.Files.SearchMatch}
      description: A list (possibly empty) of matches for the query.
    - id: more
      type: System.Boolean
      description: >-
        Used for paging. If true, indicates there is another page of

        results available that can be fetched by calling <xref href="Dropbox.Api.Files.Routes.FilesUserRoutes.SearchAsync(Dropbox.Api.Files.SearchArg)" data-throw-if-not-resolved="false"></xref> again.
    - id: start
      type: System.UInt64
      description: >-
        Used for paging. Value to set the start argument to when

        calling <xref href="Dropbox.Api.Files.Routes.FilesUserRoutes.SearchAsync(Dropbox.Api.Files.SearchArg)" data-throw-if-not-resolved="false"></xref> to

        fetch the next page of results.
    content.vb: Public Sub New(matches As System.Collections.Generic.IEnumerable(Of SearchMatch), more As Boolean, start As ULong)
  overload: Dropbox.Api.Files.SearchResult.#ctor*
  nameWithType.vb: SearchResult.SearchResult(System.Collections.Generic.IEnumerable(Of SearchMatch), Boolean, UInt64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Files.SearchResult.SearchResult(System.Collections.Generic.IEnumerable(Of Dropbox.Api.Files.SearchMatch), System.Boolean, System.UInt64)
  name.vb: SearchResult(System.Collections.Generic.IEnumerable(Of SearchMatch), Boolean, UInt64)
- uid: Dropbox.Api.Files.SearchResult.#ctor
  commentId: M:Dropbox.Api.Files.SearchResult.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Files.SearchResult
  langs:
  - csharp
  - vb
  name: SearchResult()
  nameWithType: SearchResult.SearchResult()
  fullName: Dropbox.Api.Files.SearchResult.SearchResult()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchResult.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchResult.cs
    startLine: 60
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.SearchResult\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: >-
    This is to construct an instance of the object when

    deserializing.
  example: []
  syntax:
    content: public SearchResult()
    content.vb: Public Sub New
  overload: Dropbox.Api.Files.SearchResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.SearchResult.Matches
  commentId: P:Dropbox.Api.Files.SearchResult.Matches
  id: Matches
  parent: Dropbox.Api.Files.SearchResult
  langs:
  - csharp
  - vb
  name: Matches
  nameWithType: SearchResult.Matches
  fullName: Dropbox.Api.Files.SearchResult.Matches
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchResult.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Matches
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchResult.cs
    startLine: 68
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>A list (possibly empty) of matches for the query.</p>\n"
  example: []
  syntax:
    content: public System.Collections.Generic.IList<SearchMatch> Matches { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Dropbox.Api.Files.SearchMatch}
    content.vb: Public Property Matches As System.Collections.Generic.IList(Of SearchMatch)
  overload: Dropbox.Api.Files.SearchResult.Matches*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.SearchResult.More
  commentId: P:Dropbox.Api.Files.SearchResult.More
  id: More
  parent: Dropbox.Api.Files.SearchResult
  langs:
  - csharp
  - vb
  name: More
  nameWithType: SearchResult.More
  fullName: Dropbox.Api.Files.SearchResult.More
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchResult.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: More
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchResult.cs
    startLine: 75
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Used for paging. If true, indicates there is another page of results\navailable that can be fetched by calling <xref href=\"Dropbox.Api.Files.Routes.FilesUserRoutes.SearchAsync(Dropbox.Api.Files.SearchArg)\" data-throw-if-not-resolved=\"false\"></xref> again.</p>\n"
  example: []
  syntax:
    content: public bool More { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property More As Boolean
  overload: Dropbox.Api.Files.SearchResult.More*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.SearchResult.Start
  commentId: P:Dropbox.Api.Files.SearchResult.Start
  id: Start
  parent: Dropbox.Api.Files.SearchResult
  langs:
  - csharp
  - vb
  name: Start
  nameWithType: SearchResult.Start
  fullName: Dropbox.Api.Files.SearchResult.Start
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchResult.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Start
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/SearchResult.cs
    startLine: 82
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Used for paging. Value to set the start argument to when calling <xref href=\"Dropbox.Api.Files.Routes.FilesUserRoutes.SearchAsync(Dropbox.Api.Files.SearchArg)\" data-throw-if-not-resolved=\"false\"></xref> to fetch the next\npage of results.</p>\n"
  example: []
  syntax:
    content: public ulong Start { get; protected set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public Property Start As ULong
  overload: Dropbox.Api.Files.SearchResult.Start*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Files.SearchResult
  commentId: T:Dropbox.Api.Files.SearchResult
  parent: Dropbox.Api.Files
  name: SearchResult
  nameWithType: SearchResult
  fullName: Dropbox.Api.Files.SearchResult
- uid: Dropbox.Api.Files.Routes.FilesUserRoutes.SearchAsync(Dropbox.Api.Files.SearchArg)
  commentId: M:Dropbox.Api.Files.Routes.FilesUserRoutes.SearchAsync(Dropbox.Api.Files.SearchArg)
  isExternal: true
- uid: Dropbox.Api.Files.SearchResult.#ctor*
  commentId: Overload:Dropbox.Api.Files.SearchResult.#ctor
  name: SearchResult
  nameWithType: SearchResult.SearchResult
  fullName: Dropbox.Api.Files.SearchResult.SearchResult
- uid: System.Collections.Generic.IEnumerable{Dropbox.Api.Files.SearchMatch}
  commentId: '!:System.Collections.Generic.IEnumerable{Dropbox.Api.Files.SearchMatch}'
  definition: System.Collections.Generic.IEnumerable`1
  name: System.Collections.Generic.IEnumerable<SearchMatch>
  nameWithType: System.Collections.Generic.IEnumerable<SearchMatch>
  fullName: System.Collections.Generic.IEnumerable<Dropbox.Api.Files.SearchMatch>
  nameWithType.vb: System.Collections.Generic.IEnumerable(Of SearchMatch)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Dropbox.Api.Files.SearchMatch)
  name.vb: System.Collections.Generic.IEnumerable(Of SearchMatch)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: System.Collections.Generic.IEnumerable
    nameWithType: System.Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Files.SearchMatch
    name: SearchMatch
    nameWithType: SearchMatch
    fullName: Dropbox.Api.Files.SearchMatch
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: System.Collections.Generic.IEnumerable
    nameWithType: System.Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Files.SearchMatch
    name: SearchMatch
    nameWithType: SearchMatch
    fullName: Dropbox.Api.Files.SearchMatch
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.UInt64
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: System.Collections.Generic.IEnumerable<>
  nameWithType: System.Collections.Generic.IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: System.Collections.Generic.IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: System.Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: System.Collections.Generic.IEnumerable
    nameWithType: System.Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: System.Collections.Generic.IEnumerable
    nameWithType: System.Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Files.SearchResult.Matches*
  commentId: Overload:Dropbox.Api.Files.SearchResult.Matches
  name: Matches
  nameWithType: SearchResult.Matches
  fullName: Dropbox.Api.Files.SearchResult.Matches
- uid: System.Collections.Generic.IList{Dropbox.Api.Files.SearchMatch}
  commentId: '!:System.Collections.Generic.IList{Dropbox.Api.Files.SearchMatch}'
  definition: System.Collections.Generic.IList`1
  name: System.Collections.Generic.IList<SearchMatch>
  nameWithType: System.Collections.Generic.IList<SearchMatch>
  fullName: System.Collections.Generic.IList<Dropbox.Api.Files.SearchMatch>
  nameWithType.vb: System.Collections.Generic.IList(Of SearchMatch)
  fullName.vb: System.Collections.Generic.IList(Of Dropbox.Api.Files.SearchMatch)
  name.vb: System.Collections.Generic.IList(Of SearchMatch)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Dropbox.Api.Files.SearchMatch
    name: SearchMatch
    nameWithType: SearchMatch
    fullName: Dropbox.Api.Files.SearchMatch
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Dropbox.Api.Files.SearchMatch
    name: SearchMatch
    nameWithType: SearchMatch
    fullName: Dropbox.Api.Files.SearchMatch
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  isExternal: true
  name: System.Collections.Generic.IList<>
  nameWithType: System.Collections.Generic.IList<>
  fullName: System.Collections.Generic.IList<>
  nameWithType.vb: System.Collections.Generic.IList(Of )
  fullName.vb: System.Collections.Generic.IList(Of )
  name.vb: System.Collections.Generic.IList(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Files.SearchResult.More*
  commentId: Overload:Dropbox.Api.Files.SearchResult.More
  name: More
  nameWithType: SearchResult.More
  fullName: Dropbox.Api.Files.SearchResult.More
- uid: Dropbox.Api.Files.SearchResult.Start*
  commentId: Overload:Dropbox.Api.Files.SearchResult.Start
  name: Start
  nameWithType: SearchResult.Start
  fullName: Dropbox.Api.Files.SearchResult.Start
shouldSkipMarkup: true
