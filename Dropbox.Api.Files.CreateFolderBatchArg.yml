### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.CreateFolderBatchArg
  commentId: T:Dropbox.Api.Files.CreateFolderBatchArg
  id: CreateFolderBatchArg
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.CreateFolderBatchArg.#ctor
  - Dropbox.Api.Files.CreateFolderBatchArg.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)
  - Dropbox.Api.Files.CreateFolderBatchArg.Autorename
  - Dropbox.Api.Files.CreateFolderBatchArg.ForceAsync
  - Dropbox.Api.Files.CreateFolderBatchArg.Paths
  langs:
  - csharp
  - vb
  name: CreateFolderBatchArg
  nameWithType: CreateFolderBatchArg
  fullName: Dropbox.Api.Files.CreateFolderBatchArg
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/CreateFolderBatchArg.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: CreateFolderBatchArg
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/CreateFolderBatchArg.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The create folder batch arg object</p>\n"
  example: []
  syntax:
    content: 'public class CreateFolderBatchArg : object'
    content.vb: >-
      Public Class CreateFolderBatchArg
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.CreateFolderBatchArg.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)
  commentId: M:Dropbox.Api.Files.CreateFolderBatchArg.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)'
  parent: Dropbox.Api.Files.CreateFolderBatchArg
  langs:
  - csharp
  - vb
  name: CreateFolderBatchArg(System.Collections.Generic.IEnumerable<String>, Boolean, Boolean)
  nameWithType: CreateFolderBatchArg.CreateFolderBatchArg(System.Collections.Generic.IEnumerable<String>, Boolean, Boolean)
  fullName: Dropbox.Api.Files.CreateFolderBatchArg.CreateFolderBatchArg(System.Collections.Generic.IEnumerable<System.String>, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/CreateFolderBatchArg.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/CreateFolderBatchArg.cs
    startLine: 39
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.CreateFolderBatchArg\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public CreateFolderBatchArg(System.Collections.Generic.IEnumerable<string> paths, bool autorename = false, bool forceAsync = false)
    parameters:
    - id: paths
      type: System.Collections.Generic.IEnumerable{System.String}
      description: >-
        List of paths to be created in the user&apos;s Dropbox. Duplicate

        path arguments in the batch are considered only once.
    - id: autorename
      type: System.Boolean
      description: >-
        If there&apos;s a conflict, have the Dropbox server try to

        autorename the folder to avoid the conflict.
    - id: forceAsync
      type: System.Boolean
      description: >-
        Whether to force the create to happen

        asynchronously.
    content.vb: Public Sub New(paths As System.Collections.Generic.IEnumerable(Of String), autorename As Boolean = False, forceAsync As Boolean = False)
  overload: Dropbox.Api.Files.CreateFolderBatchArg.#ctor*
  nameWithType.vb: CreateFolderBatchArg.CreateFolderBatchArg(System.Collections.Generic.IEnumerable(Of String), Boolean, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.Files.CreateFolderBatchArg.CreateFolderBatchArg(System.Collections.Generic.IEnumerable(Of System.String), System.Boolean, System.Boolean)
  name.vb: CreateFolderBatchArg(System.Collections.Generic.IEnumerable(Of String), Boolean, Boolean)
- uid: Dropbox.Api.Files.CreateFolderBatchArg.#ctor
  commentId: M:Dropbox.Api.Files.CreateFolderBatchArg.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Files.CreateFolderBatchArg
  langs:
  - csharp
  - vb
  name: CreateFolderBatchArg()
  nameWithType: CreateFolderBatchArg.CreateFolderBatchArg()
  fullName: Dropbox.Api.Files.CreateFolderBatchArg.CreateFolderBatchArg()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/CreateFolderBatchArg.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/CreateFolderBatchArg.cs
    startLine: 65
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.CreateFolderBatchArg\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  remarks: >-
    This is to construct an instance of the object when

    deserializing.
  example: []
  syntax:
    content: public CreateFolderBatchArg()
    content.vb: Public Sub New
  overload: Dropbox.Api.Files.CreateFolderBatchArg.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.CreateFolderBatchArg.Paths
  commentId: P:Dropbox.Api.Files.CreateFolderBatchArg.Paths
  id: Paths
  parent: Dropbox.Api.Files.CreateFolderBatchArg
  langs:
  - csharp
  - vb
  name: Paths
  nameWithType: CreateFolderBatchArg.Paths
  fullName: Dropbox.Api.Files.CreateFolderBatchArg.Paths
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/CreateFolderBatchArg.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Paths
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/CreateFolderBatchArg.cs
    startLine: 76
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>List of paths to be created in the user&apos;s Dropbox. Duplicate path arguments\nin the batch are considered only once.</p>\n"
  example: []
  syntax:
    content: public System.Collections.Generic.IList<string> Paths { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property Paths As System.Collections.Generic.IList(Of String)
  overload: Dropbox.Api.Files.CreateFolderBatchArg.Paths*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.CreateFolderBatchArg.Autorename
  commentId: P:Dropbox.Api.Files.CreateFolderBatchArg.Autorename
  id: Autorename
  parent: Dropbox.Api.Files.CreateFolderBatchArg
  langs:
  - csharp
  - vb
  name: Autorename
  nameWithType: CreateFolderBatchArg.Autorename
  fullName: Dropbox.Api.Files.CreateFolderBatchArg.Autorename
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/CreateFolderBatchArg.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Autorename
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/CreateFolderBatchArg.cs
    startLine: 82
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>If there&apos;s a conflict, have the Dropbox server try to autorename the folder\nto avoid the conflict.</p>\n"
  example: []
  syntax:
    content: public bool Autorename { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Autorename As Boolean
  overload: Dropbox.Api.Files.CreateFolderBatchArg.Autorename*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.CreateFolderBatchArg.ForceAsync
  commentId: P:Dropbox.Api.Files.CreateFolderBatchArg.ForceAsync
  id: ForceAsync
  parent: Dropbox.Api.Files.CreateFolderBatchArg
  langs:
  - csharp
  - vb
  name: ForceAsync
  nameWithType: CreateFolderBatchArg.ForceAsync
  fullName: Dropbox.Api.Files.CreateFolderBatchArg.ForceAsync
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/CreateFolderBatchArg.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: ForceAsync
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/CreateFolderBatchArg.cs
    startLine: 87
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Whether to force the create to happen asynchronously.</p>\n"
  example: []
  syntax:
    content: public bool ForceAsync { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ForceAsync As Boolean
  overload: Dropbox.Api.Files.CreateFolderBatchArg.ForceAsync*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Files.CreateFolderBatchArg
  commentId: T:Dropbox.Api.Files.CreateFolderBatchArg
  parent: Dropbox.Api.Files
  name: CreateFolderBatchArg
  nameWithType: CreateFolderBatchArg
  fullName: Dropbox.Api.Files.CreateFolderBatchArg
- uid: Dropbox.Api.Files.CreateFolderBatchArg.#ctor*
  commentId: Overload:Dropbox.Api.Files.CreateFolderBatchArg.#ctor
  name: CreateFolderBatchArg
  nameWithType: CreateFolderBatchArg.CreateFolderBatchArg
  fullName: Dropbox.Api.Files.CreateFolderBatchArg.CreateFolderBatchArg
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: '!:System.Collections.Generic.IEnumerable{System.String}'
  definition: System.Collections.Generic.IEnumerable`1
  name: System.Collections.Generic.IEnumerable<String>
  nameWithType: System.Collections.Generic.IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: System.Collections.Generic.IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: System.Collections.Generic.IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: System.Collections.Generic.IEnumerable
    nameWithType: System.Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: System.Collections.Generic.IEnumerable
    nameWithType: System.Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: System.Collections.Generic.IEnumerable<>
  nameWithType: System.Collections.Generic.IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: System.Collections.Generic.IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: System.Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: System.Collections.Generic.IEnumerable
    nameWithType: System.Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: System.Collections.Generic.IEnumerable
    nameWithType: System.Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Files.CreateFolderBatchArg.Paths*
  commentId: Overload:Dropbox.Api.Files.CreateFolderBatchArg.Paths
  name: Paths
  nameWithType: CreateFolderBatchArg.Paths
  fullName: Dropbox.Api.Files.CreateFolderBatchArg.Paths
- uid: System.Collections.Generic.IList{System.String}
  commentId: '!:System.Collections.Generic.IList{System.String}'
  definition: System.Collections.Generic.IList`1
  name: System.Collections.Generic.IList<String>
  nameWithType: System.Collections.Generic.IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: System.Collections.Generic.IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: System.Collections.Generic.IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  isExternal: true
  name: System.Collections.Generic.IList<>
  nameWithType: System.Collections.Generic.IList<>
  fullName: System.Collections.Generic.IList<>
  nameWithType.vb: System.Collections.Generic.IList(Of )
  fullName.vb: System.Collections.Generic.IList(Of )
  name.vb: System.Collections.Generic.IList(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.Files.CreateFolderBatchArg.Autorename*
  commentId: Overload:Dropbox.Api.Files.CreateFolderBatchArg.Autorename
  name: Autorename
  nameWithType: CreateFolderBatchArg.Autorename
  fullName: Dropbox.Api.Files.CreateFolderBatchArg.Autorename
- uid: Dropbox.Api.Files.CreateFolderBatchArg.ForceAsync*
  commentId: Overload:Dropbox.Api.Files.CreateFolderBatchArg.ForceAsync
  name: ForceAsync
  nameWithType: CreateFolderBatchArg.ForceAsync
  fullName: Dropbox.Api.Files.CreateFolderBatchArg.ForceAsync
shouldSkipMarkup: true
