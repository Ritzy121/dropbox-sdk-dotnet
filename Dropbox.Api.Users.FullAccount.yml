### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Users.FullAccount
  commentId: T:Dropbox.Api.Users.FullAccount
  id: FullAccount
  parent: Dropbox.Api.Users
  children:
  - Dropbox.Api.Users.FullAccount.#ctor
  - Dropbox.Api.Users.FullAccount.#ctor(System.String,Dropbox.Api.Users.Name,System.String,System.Boolean,System.Boolean,System.String,System.String,System.Boolean,Dropbox.Api.UsersCommon.AccountType,Dropbox.Api.Common.RootInfo,System.String,System.String,Dropbox.Api.Users.FullTeam,System.String)
  - Dropbox.Api.Users.FullAccount.AccountType
  - Dropbox.Api.Users.FullAccount.Country
  - Dropbox.Api.Users.FullAccount.IsPaired
  - Dropbox.Api.Users.FullAccount.Locale
  - Dropbox.Api.Users.FullAccount.ReferralLink
  - Dropbox.Api.Users.FullAccount.RootInfo
  - Dropbox.Api.Users.FullAccount.Team
  - Dropbox.Api.Users.FullAccount.TeamMemberId
  langs:
  - csharp
  - vb
  name: FullAccount
  nameWithType: FullAccount
  fullName: Dropbox.Api.Users.FullAccount
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: FullAccount
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
    startLine: 16
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Users
  summary: "\n<p>Detailed information about the current user&apos;s account.</p>\n"
  example: []
  syntax:
    content: 'public class FullAccount : Account'
    content.vb: >-
      Public Class FullAccount
          Inherits Account
  inheritance:
  - System.Object
  - Dropbox.Api.Users.Account
  inheritedMembers:
  - Dropbox.Api.Users.Account.AccountId
  - Dropbox.Api.Users.Account.Name
  - Dropbox.Api.Users.Account.Email
  - Dropbox.Api.Users.Account.EmailVerified
  - Dropbox.Api.Users.Account.Disabled
  - Dropbox.Api.Users.Account.ProfilePhotoUrl
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Users.FullAccount.#ctor(System.String,Dropbox.Api.Users.Name,System.String,System.Boolean,System.Boolean,System.String,System.String,System.Boolean,Dropbox.Api.UsersCommon.AccountType,Dropbox.Api.Common.RootInfo,System.String,System.String,Dropbox.Api.Users.FullTeam,System.String)
  commentId: M:Dropbox.Api.Users.FullAccount.#ctor(System.String,Dropbox.Api.Users.Name,System.String,System.Boolean,System.Boolean,System.String,System.String,System.Boolean,Dropbox.Api.UsersCommon.AccountType,Dropbox.Api.Common.RootInfo,System.String,System.String,Dropbox.Api.Users.FullTeam,System.String)
  id: '#ctor(System.String,Dropbox.Api.Users.Name,System.String,System.Boolean,System.Boolean,System.String,System.String,System.Boolean,Dropbox.Api.UsersCommon.AccountType,Dropbox.Api.Common.RootInfo,System.String,System.String,Dropbox.Api.Users.FullTeam,System.String)'
  parent: Dropbox.Api.Users.FullAccount
  langs:
  - csharp
  - vb
  name: FullAccount(String, Name, String, Boolean, Boolean, String, String, Boolean, AccountType, RootInfo, String, String, FullTeam, String)
  nameWithType: FullAccount.FullAccount(String, Name, String, Boolean, Boolean, String, String, Boolean, AccountType, RootInfo, String, String, FullTeam, String)
  fullName: Dropbox.Api.Users.FullAccount.FullAccount(System.String, Dropbox.Api.Users.Name, System.String, System.Boolean, System.Boolean, System.String, System.String, System.Boolean, Dropbox.Api.UsersCommon.AccountType, Dropbox.Api.Common.RootInfo, System.String, System.String, Dropbox.Api.Users.FullTeam, System.String)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
    startLine: 61
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Users
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Users.FullAccount\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public FullAccount(string accountId, Name name, string email, bool emailVerified, bool disabled, string locale, string referralLink, bool isPaired, AccountType accountType, RootInfo rootInfo, string profilePhotoUrl = null, string country = null, FullTeam team = null, string teamMemberId = null)
    parameters:
    - id: accountId
      type: System.String
      description: The user&apos;s unique Dropbox ID.
    - id: name
      type: Dropbox.Api.Users.Name
      description: Details of a user&apos;s name.
    - id: email
      type: System.String
      description: >-
        The user&apos;s email address. Do not rely on this without checking

        the <code data-dev-comment-type="paramref" class="paramref">emailVerified</code> field. Even then, it&apos;s possible that the user

        has since lost access to their email.
    - id: emailVerified
      type: System.Boolean
      description: >-
        Whether the user has verified their email

        address.
    - id: disabled
      type: System.Boolean
      description: Whether the user has been disabled.
    - id: locale
      type: System.String
      description: >-
        The language that the user specified. Locale tags will be <a href="http://en.wikipedia.org/wiki/IETF_language_tag">IETF language

        tags</a>.
    - id: referralLink
      type: System.String
      description: The user&apos;s <a href="https://www.dropbox.com/referrals">referral link</a>.
    - id: isPaired
      type: System.Boolean
      description: >-
        Whether the user has a personal and work account. If the

        current account is personal, then <code data-dev-comment-type="paramref" class="paramref">team</code> will always be

        <code>null</code>, but <code data-dev-comment-type="paramref" class="paramref">isPaired</code> will indicate if a work account is

        linked.
    - id: accountType
      type: Dropbox.Api.UsersCommon.AccountType
      description: What type of account this user has.
    - id: rootInfo
      type: Dropbox.Api.Common.RootInfo
      description: The root info for this account.
    - id: profilePhotoUrl
      type: System.String
      description: >-
        URL for the photo representing the user, if one is

        set.
    - id: country
      type: System.String
      description: >-
        The user&apos;s two-letter country code, if available. Country

        codes are based on <a href="http://en.wikipedia.org/wiki/ISO_3166-1">ISO

        3166-1</a>.
    - id: team
      type: Dropbox.Api.Users.FullTeam
      description: >-
        If this account is a member of a team, information about that

        team.
    - id: teamMemberId
      type: System.String
      description: >-
        This account&apos;s unique team member id. This field will

        only be present if <code data-dev-comment-type="paramref" class="paramref">team</code> is present.
    content.vb: Public Sub New(accountId As String, name As Name, email As String, emailVerified As Boolean, disabled As Boolean, locale As String, referralLink As String, isPaired As Boolean, accountType As AccountType, rootInfo As RootInfo, profilePhotoUrl As String = Nothing, country As String = Nothing, team As FullTeam = Nothing, teamMemberId As String = Nothing)
  overload: Dropbox.Api.Users.FullAccount.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Users.FullAccount.#ctor
  commentId: M:Dropbox.Api.Users.FullAccount.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Users.FullAccount
  langs:
  - csharp
  - vb
  name: FullAccount()
  nameWithType: FullAccount.FullAccount()
  fullName: Dropbox.Api.Users.FullAccount.FullAccount()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
    startLine: 128
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Users
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Users.FullAccount\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: >-
    This is to construct an instance of the object when

    deserializing.
  example: []
  syntax:
    content: public FullAccount()
    content.vb: Public Sub New
  overload: Dropbox.Api.Users.FullAccount.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Users.FullAccount.Locale
  commentId: P:Dropbox.Api.Users.FullAccount.Locale
  id: Locale
  parent: Dropbox.Api.Users.FullAccount
  langs:
  - csharp
  - vb
  name: Locale
  nameWithType: FullAccount.Locale
  fullName: Dropbox.Api.Users.FullAccount.Locale
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Locale
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
    startLine: 138
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Users
  summary: "\n<p>The language that the user specified. Locale tags will be <a href=\"http://en.wikipedia.org/wiki/IETF_language_tag\">IETF language\ntags</a>.</p>\n"
  example: []
  syntax:
    content: public string Locale { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Locale As String
  overload: Dropbox.Api.Users.FullAccount.Locale*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Users.FullAccount.ReferralLink
  commentId: P:Dropbox.Api.Users.FullAccount.ReferralLink
  id: ReferralLink
  parent: Dropbox.Api.Users.FullAccount
  langs:
  - csharp
  - vb
  name: ReferralLink
  nameWithType: FullAccount.ReferralLink
  fullName: Dropbox.Api.Users.FullAccount.ReferralLink
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: ReferralLink
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
    startLine: 144
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Users
  summary: "\n<p>The user&apos;s <a href=\"https://www.dropbox.com/referrals\">referral\nlink</a>.</p>\n"
  example: []
  syntax:
    content: public string ReferralLink { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ReferralLink As String
  overload: Dropbox.Api.Users.FullAccount.ReferralLink*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Users.FullAccount.IsPaired
  commentId: P:Dropbox.Api.Users.FullAccount.IsPaired
  id: IsPaired
  parent: Dropbox.Api.Users.FullAccount
  langs:
  - csharp
  - vb
  name: IsPaired
  nameWithType: FullAccount.IsPaired
  fullName: Dropbox.Api.Users.FullAccount.IsPaired
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsPaired
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
    startLine: 151
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Users
  summary: "\n<p>Whether the user has a personal and work account. If the current account is\npersonal, then <xref href=\"Dropbox.Api.Users.FullAccount.Team\" data-throw-if-not-resolved=\"false\"></xref> will always be <code>null</code>, but <xref href=\"Dropbox.Api.Users.FullAccount.IsPaired\" data-throw-if-not-resolved=\"false\"></xref> will indicate if a work account is linked.</p>\n"
  example: []
  syntax:
    content: public bool IsPaired { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsPaired As Boolean
  overload: Dropbox.Api.Users.FullAccount.IsPaired*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Users.FullAccount.AccountType
  commentId: P:Dropbox.Api.Users.FullAccount.AccountType
  id: AccountType
  parent: Dropbox.Api.Users.FullAccount
  langs:
  - csharp
  - vb
  name: AccountType
  nameWithType: FullAccount.AccountType
  fullName: Dropbox.Api.Users.FullAccount.AccountType
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AccountType
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
    startLine: 156
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Users
  summary: "\n<p>What type of account this user has.</p>\n"
  example: []
  syntax:
    content: public AccountType AccountType { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.UsersCommon.AccountType
    content.vb: Public Property AccountType As AccountType
  overload: Dropbox.Api.Users.FullAccount.AccountType*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Users.FullAccount.RootInfo
  commentId: P:Dropbox.Api.Users.FullAccount.RootInfo
  id: RootInfo
  parent: Dropbox.Api.Users.FullAccount
  langs:
  - csharp
  - vb
  name: RootInfo
  nameWithType: FullAccount.RootInfo
  fullName: Dropbox.Api.Users.FullAccount.RootInfo
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: RootInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
    startLine: 161
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Users
  summary: "\n<p>The root info for this account.</p>\n"
  example: []
  syntax:
    content: public RootInfo RootInfo { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Common.RootInfo
    content.vb: Public Property RootInfo As RootInfo
  overload: Dropbox.Api.Users.FullAccount.RootInfo*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Users.FullAccount.Country
  commentId: P:Dropbox.Api.Users.FullAccount.Country
  id: Country
  parent: Dropbox.Api.Users.FullAccount
  langs:
  - csharp
  - vb
  name: Country
  nameWithType: FullAccount.Country
  fullName: Dropbox.Api.Users.FullAccount.Country
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Country
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
    startLine: 167
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Users
  summary: "\n<p>The user&apos;s two-letter country code, if available. Country codes are based on\n<a href=\"http://en.wikipedia.org/wiki/ISO_3166-1\">ISO 3166-1</a>.</p>\n"
  example: []
  syntax:
    content: public string Country { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Country As String
  overload: Dropbox.Api.Users.FullAccount.Country*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Users.FullAccount.Team
  commentId: P:Dropbox.Api.Users.FullAccount.Team
  id: Team
  parent: Dropbox.Api.Users.FullAccount
  langs:
  - csharp
  - vb
  name: Team
  nameWithType: FullAccount.Team
  fullName: Dropbox.Api.Users.FullAccount.Team
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Team
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
    startLine: 172
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Users
  summary: "\n<p>If this account is a member of a team, information about that team.</p>\n"
  example: []
  syntax:
    content: public FullTeam Team { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.Users.FullTeam
    content.vb: Public Property Team As FullTeam
  overload: Dropbox.Api.Users.FullAccount.Team*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Users.FullAccount.TeamMemberId
  commentId: P:Dropbox.Api.Users.FullAccount.TeamMemberId
  id: TeamMemberId
  parent: Dropbox.Api.Users.FullAccount
  langs:
  - csharp
  - vb
  name: TeamMemberId
  nameWithType: FullAccount.TeamMemberId
  fullName: Dropbox.Api.Users.FullAccount.TeamMemberId
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: TeamMemberId
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Users/FullAccount.cs
    startLine: 178
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Users
  summary: "\n<p>This account&apos;s unique team member id. This field will only be present if <xref href=\"Dropbox.Api.Users.FullAccount.Team\" data-throw-if-not-resolved=\"false\"></xref> is present.</p>\n"
  example: []
  syntax:
    content: public string TeamMemberId { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TeamMemberId As String
  overload: Dropbox.Api.Users.FullAccount.TeamMemberId*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Users
  commentId: N:Dropbox.Api.Users
  name: Dropbox.Api.Users
  nameWithType: Dropbox.Api.Users
  fullName: Dropbox.Api.Users
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Users.Account
  commentId: T:Dropbox.Api.Users.Account
  parent: Dropbox.Api.Users
  name: Account
  nameWithType: Account
  fullName: Dropbox.Api.Users.Account
- uid: Dropbox.Api.Users.Account.AccountId
  commentId: P:Dropbox.Api.Users.Account.AccountId
  parent: Dropbox.Api.Users.Account
  name: AccountId
  nameWithType: Account.AccountId
  fullName: Dropbox.Api.Users.Account.AccountId
- uid: Dropbox.Api.Users.Account.Name
  commentId: P:Dropbox.Api.Users.Account.Name
  parent: Dropbox.Api.Users.Account
  name: Name
  nameWithType: Account.Name
  fullName: Dropbox.Api.Users.Account.Name
- uid: Dropbox.Api.Users.Account.Email
  commentId: P:Dropbox.Api.Users.Account.Email
  parent: Dropbox.Api.Users.Account
  name: Email
  nameWithType: Account.Email
  fullName: Dropbox.Api.Users.Account.Email
- uid: Dropbox.Api.Users.Account.EmailVerified
  commentId: P:Dropbox.Api.Users.Account.EmailVerified
  parent: Dropbox.Api.Users.Account
  name: EmailVerified
  nameWithType: Account.EmailVerified
  fullName: Dropbox.Api.Users.Account.EmailVerified
- uid: Dropbox.Api.Users.Account.Disabled
  commentId: P:Dropbox.Api.Users.Account.Disabled
  parent: Dropbox.Api.Users.Account
  name: Disabled
  nameWithType: Account.Disabled
  fullName: Dropbox.Api.Users.Account.Disabled
- uid: Dropbox.Api.Users.Account.ProfilePhotoUrl
  commentId: P:Dropbox.Api.Users.Account.ProfilePhotoUrl
  parent: Dropbox.Api.Users.Account
  name: ProfilePhotoUrl
  nameWithType: Account.ProfilePhotoUrl
  fullName: Dropbox.Api.Users.Account.ProfilePhotoUrl
- uid: Dropbox.Api.Users.FullAccount
  commentId: T:Dropbox.Api.Users.FullAccount
  parent: Dropbox.Api.Users
  name: FullAccount
  nameWithType: FullAccount
  fullName: Dropbox.Api.Users.FullAccount
- uid: Dropbox.Api.Users.FullAccount.#ctor*
  commentId: Overload:Dropbox.Api.Users.FullAccount.#ctor
  name: FullAccount
  nameWithType: FullAccount.FullAccount
  fullName: Dropbox.Api.Users.FullAccount.FullAccount
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dropbox.Api.Users.Name
  commentId: T:Dropbox.Api.Users.Name
  parent: Dropbox.Api.Users
  name: Name
  nameWithType: Name
  fullName: Dropbox.Api.Users.Name
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.UsersCommon.AccountType
  commentId: T:Dropbox.Api.UsersCommon.AccountType
  parent: Dropbox.Api.UsersCommon
  name: AccountType
  nameWithType: AccountType
  fullName: Dropbox.Api.UsersCommon.AccountType
- uid: Dropbox.Api.Common.RootInfo
  commentId: T:Dropbox.Api.Common.RootInfo
  parent: Dropbox.Api.Common
  name: RootInfo
  nameWithType: RootInfo
  fullName: Dropbox.Api.Common.RootInfo
- uid: Dropbox.Api.Users.FullTeam
  commentId: T:Dropbox.Api.Users.FullTeam
  parent: Dropbox.Api.Users
  name: FullTeam
  nameWithType: FullTeam
  fullName: Dropbox.Api.Users.FullTeam
- uid: Dropbox.Api.UsersCommon
  commentId: N:Dropbox.Api.UsersCommon
  name: Dropbox.Api.UsersCommon
  nameWithType: Dropbox.Api.UsersCommon
  fullName: Dropbox.Api.UsersCommon
- uid: Dropbox.Api.Common
  commentId: N:Dropbox.Api.Common
  name: Dropbox.Api.Common
  nameWithType: Dropbox.Api.Common
  fullName: Dropbox.Api.Common
- uid: Dropbox.Api.Users.FullAccount.Locale*
  commentId: Overload:Dropbox.Api.Users.FullAccount.Locale
  name: Locale
  nameWithType: FullAccount.Locale
  fullName: Dropbox.Api.Users.FullAccount.Locale
- uid: Dropbox.Api.Users.FullAccount.ReferralLink*
  commentId: Overload:Dropbox.Api.Users.FullAccount.ReferralLink
  name: ReferralLink
  nameWithType: FullAccount.ReferralLink
  fullName: Dropbox.Api.Users.FullAccount.ReferralLink
- uid: Dropbox.Api.Users.FullAccount.Team
  commentId: P:Dropbox.Api.Users.FullAccount.Team
  isExternal: true
- uid: Dropbox.Api.Users.FullAccount.IsPaired
  commentId: P:Dropbox.Api.Users.FullAccount.IsPaired
  isExternal: true
- uid: Dropbox.Api.Users.FullAccount.IsPaired*
  commentId: Overload:Dropbox.Api.Users.FullAccount.IsPaired
  name: IsPaired
  nameWithType: FullAccount.IsPaired
  fullName: Dropbox.Api.Users.FullAccount.IsPaired
- uid: Dropbox.Api.Users.FullAccount.AccountType*
  commentId: Overload:Dropbox.Api.Users.FullAccount.AccountType
  name: AccountType
  nameWithType: FullAccount.AccountType
  fullName: Dropbox.Api.Users.FullAccount.AccountType
- uid: Dropbox.Api.Users.FullAccount.RootInfo*
  commentId: Overload:Dropbox.Api.Users.FullAccount.RootInfo
  name: RootInfo
  nameWithType: FullAccount.RootInfo
  fullName: Dropbox.Api.Users.FullAccount.RootInfo
- uid: Dropbox.Api.Users.FullAccount.Country*
  commentId: Overload:Dropbox.Api.Users.FullAccount.Country
  name: Country
  nameWithType: FullAccount.Country
  fullName: Dropbox.Api.Users.FullAccount.Country
- uid: Dropbox.Api.Users.FullAccount.Team*
  commentId: Overload:Dropbox.Api.Users.FullAccount.Team
  name: Team
  nameWithType: FullAccount.Team
  fullName: Dropbox.Api.Users.FullAccount.Team
- uid: Dropbox.Api.Users.FullAccount.TeamMemberId*
  commentId: Overload:Dropbox.Api.Users.FullAccount.TeamMemberId
  name: TeamMemberId
  nameWithType: FullAccount.TeamMemberId
  fullName: Dropbox.Api.Users.FullAccount.TeamMemberId
shouldSkipMarkup: true
