### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamPolicies.SsoPolicy.Optional
  commentId: T:Dropbox.Api.TeamPolicies.SsoPolicy.Optional
  id: SsoPolicy.Optional
  parent: Dropbox.Api.TeamPolicies
  children:
  - Dropbox.Api.TeamPolicies.SsoPolicy.Optional.Instance
  langs:
  - csharp
  - vb
  name: SsoPolicy.Optional
  nameWithType: SsoPolicy.Optional
  fullName: Dropbox.Api.TeamPolicies.SsoPolicy.Optional
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/SsoPolicy.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Optional
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/SsoPolicy.cs
    startLine: 281
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamPolicies
  summary: "\n<p>Users will be able to sign in with either their Dropbox or single sign-on\ncredentials.</p>\n"
  example: []
  syntax:
    content: 'public sealed class Optional : SsoPolicy'
    content.vb: >-
      Public NotInheritable Class Optional
          Inherits SsoPolicy
  inheritance:
  - System.Object
  - Dropbox.Api.TeamPolicies.SsoPolicy
  inheritedMembers:
  - Dropbox.Api.TeamPolicies.SsoPolicy.IsDisabled
  - Dropbox.Api.TeamPolicies.SsoPolicy.AsDisabled
  - Dropbox.Api.TeamPolicies.SsoPolicy.IsOptional
  - Dropbox.Api.TeamPolicies.SsoPolicy.AsOptional
  - Dropbox.Api.TeamPolicies.SsoPolicy.IsRequired
  - Dropbox.Api.TeamPolicies.SsoPolicy.AsRequired
  - Dropbox.Api.TeamPolicies.SsoPolicy.IsOther
  - Dropbox.Api.TeamPolicies.SsoPolicy.AsOther
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Dropbox.Api.TeamPolicies.SsoPolicy.Optional.Instance
  commentId: F:Dropbox.Api.TeamPolicies.SsoPolicy.Optional.Instance
  id: Instance
  parent: Dropbox.Api.TeamPolicies.SsoPolicy.Optional
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: SsoPolicy.Optional.Instance
  fullName: Dropbox.Api.TeamPolicies.SsoPolicy.Optional.Instance
  type: Field
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/SsoPolicy.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Instance
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamPolicies/SsoPolicy.cs
    startLine: 305
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamPolicies
  summary: "\n<p>A singleton instance of Optional</p>\n"
  example: []
  syntax:
    content: public static readonly SsoPolicy.Optional Instance
    return:
      type: Dropbox.Api.TeamPolicies.SsoPolicy.Optional
    content.vb: Public Shared ReadOnly Instance As SsoPolicy.Optional
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Dropbox.Api.TeamPolicies
  commentId: N:Dropbox.Api.TeamPolicies
  name: Dropbox.Api.TeamPolicies
  nameWithType: Dropbox.Api.TeamPolicies
  fullName: Dropbox.Api.TeamPolicies
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.TeamPolicies.SsoPolicy
  commentId: T:Dropbox.Api.TeamPolicies.SsoPolicy
  parent: Dropbox.Api.TeamPolicies
  name: SsoPolicy
  nameWithType: SsoPolicy
  fullName: Dropbox.Api.TeamPolicies.SsoPolicy
- uid: Dropbox.Api.TeamPolicies.SsoPolicy.IsDisabled
  commentId: P:Dropbox.Api.TeamPolicies.SsoPolicy.IsDisabled
  parent: Dropbox.Api.TeamPolicies.SsoPolicy
  name: IsDisabled
  nameWithType: SsoPolicy.IsDisabled
  fullName: Dropbox.Api.TeamPolicies.SsoPolicy.IsDisabled
- uid: Dropbox.Api.TeamPolicies.SsoPolicy.AsDisabled
  commentId: P:Dropbox.Api.TeamPolicies.SsoPolicy.AsDisabled
  parent: Dropbox.Api.TeamPolicies.SsoPolicy
  name: AsDisabled
  nameWithType: SsoPolicy.AsDisabled
  fullName: Dropbox.Api.TeamPolicies.SsoPolicy.AsDisabled
- uid: Dropbox.Api.TeamPolicies.SsoPolicy.IsOptional
  commentId: P:Dropbox.Api.TeamPolicies.SsoPolicy.IsOptional
  parent: Dropbox.Api.TeamPolicies.SsoPolicy
  name: IsOptional
  nameWithType: SsoPolicy.IsOptional
  fullName: Dropbox.Api.TeamPolicies.SsoPolicy.IsOptional
- uid: Dropbox.Api.TeamPolicies.SsoPolicy.AsOptional
  commentId: P:Dropbox.Api.TeamPolicies.SsoPolicy.AsOptional
  parent: Dropbox.Api.TeamPolicies.SsoPolicy
  name: AsOptional
  nameWithType: SsoPolicy.AsOptional
  fullName: Dropbox.Api.TeamPolicies.SsoPolicy.AsOptional
- uid: Dropbox.Api.TeamPolicies.SsoPolicy.IsRequired
  commentId: P:Dropbox.Api.TeamPolicies.SsoPolicy.IsRequired
  parent: Dropbox.Api.TeamPolicies.SsoPolicy
  name: IsRequired
  nameWithType: SsoPolicy.IsRequired
  fullName: Dropbox.Api.TeamPolicies.SsoPolicy.IsRequired
- uid: Dropbox.Api.TeamPolicies.SsoPolicy.AsRequired
  commentId: P:Dropbox.Api.TeamPolicies.SsoPolicy.AsRequired
  parent: Dropbox.Api.TeamPolicies.SsoPolicy
  name: AsRequired
  nameWithType: SsoPolicy.AsRequired
  fullName: Dropbox.Api.TeamPolicies.SsoPolicy.AsRequired
- uid: Dropbox.Api.TeamPolicies.SsoPolicy.IsOther
  commentId: P:Dropbox.Api.TeamPolicies.SsoPolicy.IsOther
  parent: Dropbox.Api.TeamPolicies.SsoPolicy
  name: IsOther
  nameWithType: SsoPolicy.IsOther
  fullName: Dropbox.Api.TeamPolicies.SsoPolicy.IsOther
- uid: Dropbox.Api.TeamPolicies.SsoPolicy.AsOther
  commentId: P:Dropbox.Api.TeamPolicies.SsoPolicy.AsOther
  parent: Dropbox.Api.TeamPolicies.SsoPolicy
  name: AsOther
  nameWithType: SsoPolicy.AsOther
  fullName: Dropbox.Api.TeamPolicies.SsoPolicy.AsOther
- uid: Dropbox.Api.TeamPolicies.SsoPolicy.Optional
  commentId: T:Dropbox.Api.TeamPolicies.SsoPolicy.Optional
  parent: Dropbox.Api.TeamPolicies
  name: SsoPolicy.Optional
  nameWithType: SsoPolicy.Optional
  fullName: Dropbox.Api.TeamPolicies.SsoPolicy.Optional
shouldSkipMarkup: true
