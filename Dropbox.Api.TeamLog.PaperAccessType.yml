### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamLog.PaperAccessType
  commentId: T:Dropbox.Api.TeamLog.PaperAccessType
  id: PaperAccessType
  parent: Dropbox.Api.TeamLog
  children:
  - Dropbox.Api.TeamLog.PaperAccessType.#ctor
  - Dropbox.Api.TeamLog.PaperAccessType.AsCommenter
  - Dropbox.Api.TeamLog.PaperAccessType.AsEditor
  - Dropbox.Api.TeamLog.PaperAccessType.AsOther
  - Dropbox.Api.TeamLog.PaperAccessType.AsViewer
  - Dropbox.Api.TeamLog.PaperAccessType.IsCommenter
  - Dropbox.Api.TeamLog.PaperAccessType.IsEditor
  - Dropbox.Api.TeamLog.PaperAccessType.IsOther
  - Dropbox.Api.TeamLog.PaperAccessType.IsViewer
  langs:
  - csharp
  - vb
  name: PaperAccessType
  nameWithType: PaperAccessType
  fullName: Dropbox.Api.TeamLog.PaperAccessType
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperAccessType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: PaperAccessType
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperAccessType.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>The paper access type object</p>\n"
  example: []
  syntax:
    content: 'public class PaperAccessType : object'
    content.vb: >-
      Public Class PaperAccessType
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.TeamLog.PaperAccessType.Commenter
  - Dropbox.Api.TeamLog.PaperAccessType.Editor
  - Dropbox.Api.TeamLog.PaperAccessType.Other
  - Dropbox.Api.TeamLog.PaperAccessType.Viewer
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.TeamLog.PaperAccessType.#ctor
  commentId: M:Dropbox.Api.TeamLog.PaperAccessType.#ctor
  id: '#ctor'
  parent: Dropbox.Api.TeamLog.PaperAccessType
  langs:
  - csharp
  - vb
  name: PaperAccessType()
  nameWithType: PaperAccessType.PaperAccessType()
  fullName: Dropbox.Api.TeamLog.PaperAccessType.PaperAccessType()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperAccessType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperAccessType.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamLog.PaperAccessType\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public PaperAccessType()
    content.vb: Public Sub New
  overload: Dropbox.Api.TeamLog.PaperAccessType.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.TeamLog.PaperAccessType.IsCommenter
  commentId: P:Dropbox.Api.TeamLog.PaperAccessType.IsCommenter
  id: IsCommenter
  parent: Dropbox.Api.TeamLog.PaperAccessType
  langs:
  - csharp
  - vb
  name: IsCommenter
  nameWithType: PaperAccessType.IsCommenter
  fullName: Dropbox.Api.TeamLog.PaperAccessType.IsCommenter
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperAccessType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsCommenter
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperAccessType.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Commenter</p>\n"
  example: []
  syntax:
    content: public bool IsCommenter { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCommenter As Boolean
  overload: Dropbox.Api.TeamLog.PaperAccessType.IsCommenter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.PaperAccessType.AsCommenter
  commentId: P:Dropbox.Api.TeamLog.PaperAccessType.AsCommenter
  id: AsCommenter
  parent: Dropbox.Api.TeamLog.PaperAccessType
  langs:
  - csharp
  - vb
  name: AsCommenter
  nameWithType: PaperAccessType.AsCommenter
  fullName: Dropbox.Api.TeamLog.PaperAccessType.AsCommenter
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperAccessType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsCommenter
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperAccessType.cs
    startLine: 51
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Commenter, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperAccessType.Commenter AsCommenter { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.PaperAccessType.Commenter
    content.vb: Public ReadOnly Property AsCommenter As PaperAccessType.Commenter
  overload: Dropbox.Api.TeamLog.PaperAccessType.AsCommenter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.PaperAccessType.IsEditor
  commentId: P:Dropbox.Api.TeamLog.PaperAccessType.IsEditor
  id: IsEditor
  parent: Dropbox.Api.TeamLog.PaperAccessType
  langs:
  - csharp
  - vb
  name: IsEditor
  nameWithType: PaperAccessType.IsEditor
  fullName: Dropbox.Api.TeamLog.PaperAccessType.IsEditor
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperAccessType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsEditor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperAccessType.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Editor</p>\n"
  example: []
  syntax:
    content: public bool IsEditor { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEditor As Boolean
  overload: Dropbox.Api.TeamLog.PaperAccessType.IsEditor*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.PaperAccessType.AsEditor
  commentId: P:Dropbox.Api.TeamLog.PaperAccessType.AsEditor
  id: AsEditor
  parent: Dropbox.Api.TeamLog.PaperAccessType
  langs:
  - csharp
  - vb
  name: AsEditor
  nameWithType: PaperAccessType.AsEditor
  fullName: Dropbox.Api.TeamLog.PaperAccessType.AsEditor
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperAccessType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsEditor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperAccessType.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Editor, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperAccessType.Editor AsEditor { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.PaperAccessType.Editor
    content.vb: Public ReadOnly Property AsEditor As PaperAccessType.Editor
  overload: Dropbox.Api.TeamLog.PaperAccessType.AsEditor*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.PaperAccessType.IsViewer
  commentId: P:Dropbox.Api.TeamLog.PaperAccessType.IsViewer
  id: IsViewer
  parent: Dropbox.Api.TeamLog.PaperAccessType
  langs:
  - csharp
  - vb
  name: IsViewer
  nameWithType: PaperAccessType.IsViewer
  fullName: Dropbox.Api.TeamLog.PaperAccessType.IsViewer
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperAccessType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsViewer
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperAccessType.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Viewer</p>\n"
  example: []
  syntax:
    content: public bool IsViewer { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsViewer As Boolean
  overload: Dropbox.Api.TeamLog.PaperAccessType.IsViewer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.PaperAccessType.AsViewer
  commentId: P:Dropbox.Api.TeamLog.PaperAccessType.AsViewer
  id: AsViewer
  parent: Dropbox.Api.TeamLog.PaperAccessType
  langs:
  - csharp
  - vb
  name: AsViewer
  nameWithType: PaperAccessType.AsViewer
  fullName: Dropbox.Api.TeamLog.PaperAccessType.AsViewer
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperAccessType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsViewer
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperAccessType.cs
    startLine: 95
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Viewer, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperAccessType.Viewer AsViewer { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.PaperAccessType.Viewer
    content.vb: Public ReadOnly Property AsViewer As PaperAccessType.Viewer
  overload: Dropbox.Api.TeamLog.PaperAccessType.AsViewer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.PaperAccessType.IsOther
  commentId: P:Dropbox.Api.TeamLog.PaperAccessType.IsOther
  id: IsOther
  parent: Dropbox.Api.TeamLog.PaperAccessType
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: PaperAccessType.IsOther
  fullName: Dropbox.Api.TeamLog.PaperAccessType.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperAccessType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperAccessType.cs
    startLine: 106
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.TeamLog.PaperAccessType.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.PaperAccessType.AsOther
  commentId: P:Dropbox.Api.TeamLog.PaperAccessType.AsOther
  id: AsOther
  parent: Dropbox.Api.TeamLog.PaperAccessType
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: PaperAccessType.AsOther
  fullName: Dropbox.Api.TeamLog.PaperAccessType.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperAccessType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/PaperAccessType.cs
    startLine: 117
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperAccessType.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.PaperAccessType.Other
    content.vb: Public ReadOnly Property AsOther As PaperAccessType.Other
  overload: Dropbox.Api.TeamLog.PaperAccessType.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.TeamLog
  commentId: N:Dropbox.Api.TeamLog
  name: Dropbox.Api.TeamLog
  nameWithType: Dropbox.Api.TeamLog
  fullName: Dropbox.Api.TeamLog
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.TeamLog.PaperAccessType
  commentId: T:Dropbox.Api.TeamLog.PaperAccessType
  parent: Dropbox.Api.TeamLog
  name: PaperAccessType
  nameWithType: PaperAccessType
  fullName: Dropbox.Api.TeamLog.PaperAccessType
- uid: Dropbox.Api.TeamLog.PaperAccessType.#ctor*
  commentId: Overload:Dropbox.Api.TeamLog.PaperAccessType.#ctor
  name: PaperAccessType
  nameWithType: PaperAccessType.PaperAccessType
  fullName: Dropbox.Api.TeamLog.PaperAccessType.PaperAccessType
- uid: Dropbox.Api.TeamLog.PaperAccessType.IsCommenter*
  commentId: Overload:Dropbox.Api.TeamLog.PaperAccessType.IsCommenter
  name: IsCommenter
  nameWithType: PaperAccessType.IsCommenter
  fullName: Dropbox.Api.TeamLog.PaperAccessType.IsCommenter
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.TeamLog.PaperAccessType.AsCommenter*
  commentId: Overload:Dropbox.Api.TeamLog.PaperAccessType.AsCommenter
  name: AsCommenter
  nameWithType: PaperAccessType.AsCommenter
  fullName: Dropbox.Api.TeamLog.PaperAccessType.AsCommenter
- uid: Dropbox.Api.TeamLog.PaperAccessType.Commenter
  commentId: T:Dropbox.Api.TeamLog.PaperAccessType.Commenter
  parent: Dropbox.Api.TeamLog
  name: PaperAccessType.Commenter
  nameWithType: PaperAccessType.Commenter
  fullName: Dropbox.Api.TeamLog.PaperAccessType.Commenter
- uid: Dropbox.Api.TeamLog.PaperAccessType.IsEditor*
  commentId: Overload:Dropbox.Api.TeamLog.PaperAccessType.IsEditor
  name: IsEditor
  nameWithType: PaperAccessType.IsEditor
  fullName: Dropbox.Api.TeamLog.PaperAccessType.IsEditor
- uid: Dropbox.Api.TeamLog.PaperAccessType.AsEditor*
  commentId: Overload:Dropbox.Api.TeamLog.PaperAccessType.AsEditor
  name: AsEditor
  nameWithType: PaperAccessType.AsEditor
  fullName: Dropbox.Api.TeamLog.PaperAccessType.AsEditor
- uid: Dropbox.Api.TeamLog.PaperAccessType.Editor
  commentId: T:Dropbox.Api.TeamLog.PaperAccessType.Editor
  parent: Dropbox.Api.TeamLog
  name: PaperAccessType.Editor
  nameWithType: PaperAccessType.Editor
  fullName: Dropbox.Api.TeamLog.PaperAccessType.Editor
- uid: Dropbox.Api.TeamLog.PaperAccessType.IsViewer*
  commentId: Overload:Dropbox.Api.TeamLog.PaperAccessType.IsViewer
  name: IsViewer
  nameWithType: PaperAccessType.IsViewer
  fullName: Dropbox.Api.TeamLog.PaperAccessType.IsViewer
- uid: Dropbox.Api.TeamLog.PaperAccessType.AsViewer*
  commentId: Overload:Dropbox.Api.TeamLog.PaperAccessType.AsViewer
  name: AsViewer
  nameWithType: PaperAccessType.AsViewer
  fullName: Dropbox.Api.TeamLog.PaperAccessType.AsViewer
- uid: Dropbox.Api.TeamLog.PaperAccessType.Viewer
  commentId: T:Dropbox.Api.TeamLog.PaperAccessType.Viewer
  parent: Dropbox.Api.TeamLog
  name: PaperAccessType.Viewer
  nameWithType: PaperAccessType.Viewer
  fullName: Dropbox.Api.TeamLog.PaperAccessType.Viewer
- uid: Dropbox.Api.TeamLog.PaperAccessType.IsOther*
  commentId: Overload:Dropbox.Api.TeamLog.PaperAccessType.IsOther
  name: IsOther
  nameWithType: PaperAccessType.IsOther
  fullName: Dropbox.Api.TeamLog.PaperAccessType.IsOther
- uid: Dropbox.Api.TeamLog.PaperAccessType.AsOther*
  commentId: Overload:Dropbox.Api.TeamLog.PaperAccessType.AsOther
  name: AsOther
  nameWithType: PaperAccessType.AsOther
  fullName: Dropbox.Api.TeamLog.PaperAccessType.AsOther
- uid: Dropbox.Api.TeamLog.PaperAccessType.Other
  commentId: T:Dropbox.Api.TeamLog.PaperAccessType.Other
  parent: Dropbox.Api.TeamLog
  name: PaperAccessType.Other
  nameWithType: PaperAccessType.Other
  fullName: Dropbox.Api.TeamLog.PaperAccessType.Other
shouldSkipMarkup: true
