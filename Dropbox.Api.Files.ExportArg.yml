### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.ExportArg
  commentId: T:Dropbox.Api.Files.ExportArg
  id: ExportArg
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.ExportArg.#ctor
  - Dropbox.Api.Files.ExportArg.#ctor(System.String,System.String)
  - Dropbox.Api.Files.ExportArg.ExportFormat
  - Dropbox.Api.Files.ExportArg.Path
  langs:
  - csharp
  - vb
  name: ExportArg
  nameWithType: ExportArg
  fullName: Dropbox.Api.Files.ExportArg
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ExportArg.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: ExportArg
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ExportArg.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The export arg object</p>\n"
  example: []
  syntax:
    content: 'public class ExportArg : object'
    content.vb: >-
      Public Class ExportArg
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.ExportArg.#ctor(System.String,System.String)
  commentId: M:Dropbox.Api.Files.ExportArg.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Dropbox.Api.Files.ExportArg
  langs:
  - csharp
  - vb
  name: ExportArg(String, String)
  nameWithType: ExportArg.ExportArg(String, String)
  fullName: Dropbox.Api.Files.ExportArg.ExportArg(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ExportArg.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ExportArg.cs
    startLine: 38
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.ExportArg\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public ExportArg(string path, string exportFormat = null)
    parameters:
    - id: path
      type: System.String
      description: The path of the file to be exported.
    - id: exportFormat
      type: System.String
      description: >-
        The file format to which the file should be exported.

        This must be one of the formats listed in the file&apos;s export_options returned by

        <xref href="Dropbox.Api.Files.Routes.FilesUserRoutes.GetMetadataAsync(Dropbox.Api.Files.GetMetadataArg)" data-throw-if-not-resolved="false"></xref>. If none

        is specified, the default format (specified in export_as in file metadata) will be

        used.
    content.vb: Public Sub New(path As String, exportFormat As String = Nothing)
  overload: Dropbox.Api.Files.ExportArg.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.ExportArg.#ctor
  commentId: M:Dropbox.Api.Files.ExportArg.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Files.ExportArg
  langs:
  - csharp
  - vb
  name: ExportArg()
  nameWithType: ExportArg.ExportArg()
  fullName: Dropbox.Api.Files.ExportArg.ExportArg()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ExportArg.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ExportArg.cs
    startLine: 59
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.ExportArg\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: >-
    This is to construct an instance of the object when

    deserializing.
  example: []
  syntax:
    content: public ExportArg()
    content.vb: Public Sub New
  overload: Dropbox.Api.Files.ExportArg.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.ExportArg.Path
  commentId: P:Dropbox.Api.Files.ExportArg.Path
  id: Path
  parent: Dropbox.Api.Files.ExportArg
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: ExportArg.Path
  fullName: Dropbox.Api.Files.ExportArg.Path
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ExportArg.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Path
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ExportArg.cs
    startLine: 67
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The path of the file to be exported.</p>\n"
  example: []
  syntax:
    content: public string Path { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Path As String
  overload: Dropbox.Api.Files.ExportArg.Path*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.Files.ExportArg.ExportFormat
  commentId: P:Dropbox.Api.Files.ExportArg.ExportFormat
  id: ExportFormat
  parent: Dropbox.Api.Files.ExportArg
  langs:
  - csharp
  - vb
  name: ExportFormat
  nameWithType: ExportArg.ExportFormat
  fullName: Dropbox.Api.Files.ExportArg.ExportFormat
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ExportArg.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: ExportFormat
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/ExportArg.cs
    startLine: 76
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The file format to which the file should be exported. This must be one of the\nformats listed in the file&apos;s export_options returned by <xref href=\"Dropbox.Api.Files.Routes.FilesUserRoutes.GetMetadataAsync(Dropbox.Api.Files.GetMetadataArg)\" data-throw-if-not-resolved=\"false\"></xref>. If none is\nspecified, the default format (specified in export_as in file metadata) will be\nused.</p>\n"
  example: []
  syntax:
    content: public string ExportFormat { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ExportFormat As String
  overload: Dropbox.Api.Files.ExportArg.ExportFormat*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Files.ExportArg
  commentId: T:Dropbox.Api.Files.ExportArg
  parent: Dropbox.Api.Files
  name: ExportArg
  nameWithType: ExportArg
  fullName: Dropbox.Api.Files.ExportArg
- uid: Dropbox.Api.Files.Routes.FilesUserRoutes.GetMetadataAsync(Dropbox.Api.Files.GetMetadataArg)
  commentId: M:Dropbox.Api.Files.Routes.FilesUserRoutes.GetMetadataAsync(Dropbox.Api.Files.GetMetadataArg)
  isExternal: true
- uid: Dropbox.Api.Files.ExportArg.#ctor*
  commentId: Overload:Dropbox.Api.Files.ExportArg.#ctor
  name: ExportArg
  nameWithType: ExportArg.ExportArg
  fullName: Dropbox.Api.Files.ExportArg.ExportArg
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dropbox.Api.Files.ExportArg.Path*
  commentId: Overload:Dropbox.Api.Files.ExportArg.Path
  name: Path
  nameWithType: ExportArg.Path
  fullName: Dropbox.Api.Files.ExportArg.Path
- uid: Dropbox.Api.Files.ExportArg.ExportFormat*
  commentId: Overload:Dropbox.Api.Files.ExportArg.ExportFormat
  name: ExportFormat
  nameWithType: ExportArg.ExportFormat
  fullName: Dropbox.Api.Files.ExportArg.ExportFormat
shouldSkipMarkup: true
