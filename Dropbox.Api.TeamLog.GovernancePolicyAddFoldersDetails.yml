### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails
  commentId: T:Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails
  id: GovernancePolicyAddFoldersDetails
  parent: Dropbox.Api.TeamLog
  children:
  - Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.#ctor
  - Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.#ctor(System.String,System.String,Dropbox.Api.TeamLog.PolicyType,System.Collections.Generic.IEnumerable{System.String})
  - Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.Folders
  - Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.GovernancePolicyId
  - Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.Name
  - Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.PolicyType
  langs:
  - csharp
  - vb
  name: GovernancePolicyAddFoldersDetails
  nameWithType: GovernancePolicyAddFoldersDetails
  fullName: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyAddFoldersDetails.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: GovernancePolicyAddFoldersDetails
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyAddFoldersDetails.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Added folders to policy.</p>\n"
  example: []
  syntax:
    content: 'public class GovernancePolicyAddFoldersDetails : object'
    content.vb: >-
      Public Class GovernancePolicyAddFoldersDetails
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.#ctor(System.String,System.String,Dropbox.Api.TeamLog.PolicyType,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.#ctor(System.String,System.String,Dropbox.Api.TeamLog.PolicyType,System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.String,System.String,Dropbox.Api.TeamLog.PolicyType,System.Collections.Generic.IEnumerable{System.String})'
  parent: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails
  langs:
  - csharp
  - vb
  name: GovernancePolicyAddFoldersDetails(String, String, PolicyType, System.Collections.Generic.IEnumerable<String>)
  nameWithType: GovernancePolicyAddFoldersDetails.GovernancePolicyAddFoldersDetails(String, String, PolicyType, System.Collections.Generic.IEnumerable<String>)
  fullName: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.GovernancePolicyAddFoldersDetails(System.String, System.String, Dropbox.Api.TeamLog.PolicyType, System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyAddFoldersDetails.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyAddFoldersDetails.cs
    startLine: 37
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public GovernancePolicyAddFoldersDetails(string governancePolicyId, string name, PolicyType policyType = null, System.Collections.Generic.IEnumerable<string> folders = null)
    parameters:
    - id: governancePolicyId
      type: System.String
      description: Policy ID.
    - id: name
      type: System.String
      description: Policy name.
    - id: policyType
      type: Dropbox.Api.TeamLog.PolicyType
      description: Policy type.
    - id: folders
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Folders.
    content.vb: Public Sub New(governancePolicyId As String, name As String, policyType As PolicyType = Nothing, folders As System.Collections.Generic.IEnumerable(Of String) = Nothing)
  overload: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.#ctor*
  nameWithType.vb: GovernancePolicyAddFoldersDetails.GovernancePolicyAddFoldersDetails(String, String, PolicyType, System.Collections.Generic.IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.GovernancePolicyAddFoldersDetails(System.String, System.String, Dropbox.Api.TeamLog.PolicyType, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: GovernancePolicyAddFoldersDetails(String, String, PolicyType, System.Collections.Generic.IEnumerable(Of String))
- uid: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.#ctor
  commentId: M:Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.#ctor
  id: '#ctor'
  parent: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails
  langs:
  - csharp
  - vb
  name: GovernancePolicyAddFoldersDetails()
  nameWithType: GovernancePolicyAddFoldersDetails.GovernancePolicyAddFoldersDetails()
  fullName: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.GovernancePolicyAddFoldersDetails()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyAddFoldersDetails.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyAddFoldersDetails.cs
    startLine: 66
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: >-
    This is to construct an instance of the object when

    deserializing.
  example: []
  syntax:
    content: public GovernancePolicyAddFoldersDetails()
    content.vb: Public Sub New
  overload: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.GovernancePolicyId
  commentId: P:Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.GovernancePolicyId
  id: GovernancePolicyId
  parent: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails
  langs:
  - csharp
  - vb
  name: GovernancePolicyId
  nameWithType: GovernancePolicyAddFoldersDetails.GovernancePolicyId
  fullName: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.GovernancePolicyId
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyAddFoldersDetails.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: GovernancePolicyId
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyAddFoldersDetails.cs
    startLine: 74
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Policy ID.</p>\n"
  example: []
  syntax:
    content: public string GovernancePolicyId { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GovernancePolicyId As String
  overload: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.GovernancePolicyId*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.Name
  commentId: P:Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.Name
  id: Name
  parent: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: GovernancePolicyAddFoldersDetails.Name
  fullName: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.Name
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyAddFoldersDetails.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Name
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyAddFoldersDetails.cs
    startLine: 79
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Policy name.</p>\n"
  example: []
  syntax:
    content: public string Name { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.Name*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.PolicyType
  commentId: P:Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.PolicyType
  id: PolicyType
  parent: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails
  langs:
  - csharp
  - vb
  name: PolicyType
  nameWithType: GovernancePolicyAddFoldersDetails.PolicyType
  fullName: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.PolicyType
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyAddFoldersDetails.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: PolicyType
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyAddFoldersDetails.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Policy type.</p>\n"
  example: []
  syntax:
    content: public PolicyType PolicyType { get; protected set; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.PolicyType
    content.vb: Public Property PolicyType As PolicyType
  overload: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.PolicyType*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.Folders
  commentId: P:Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.Folders
  id: Folders
  parent: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails
  langs:
  - csharp
  - vb
  name: Folders
  nameWithType: GovernancePolicyAddFoldersDetails.Folders
  fullName: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.Folders
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyAddFoldersDetails.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Folders
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/GovernancePolicyAddFoldersDetails.cs
    startLine: 89
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Folders.</p>\n"
  example: []
  syntax:
    content: public System.Collections.Generic.IList<string> Folders { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property Folders As System.Collections.Generic.IList(Of String)
  overload: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.Folders*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Dropbox.Api.TeamLog
  commentId: N:Dropbox.Api.TeamLog
  name: Dropbox.Api.TeamLog
  nameWithType: Dropbox.Api.TeamLog
  fullName: Dropbox.Api.TeamLog
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails
  commentId: T:Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails
  parent: Dropbox.Api.TeamLog
  name: GovernancePolicyAddFoldersDetails
  nameWithType: GovernancePolicyAddFoldersDetails
  fullName: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails
- uid: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.#ctor*
  commentId: Overload:Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.#ctor
  name: GovernancePolicyAddFoldersDetails
  nameWithType: GovernancePolicyAddFoldersDetails.GovernancePolicyAddFoldersDetails
  fullName: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.GovernancePolicyAddFoldersDetails
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dropbox.Api.TeamLog.PolicyType
  commentId: T:Dropbox.Api.TeamLog.PolicyType
  parent: Dropbox.Api.TeamLog
  name: PolicyType
  nameWithType: PolicyType
  fullName: Dropbox.Api.TeamLog.PolicyType
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: '!:System.Collections.Generic.IEnumerable{System.String}'
  definition: System.Collections.Generic.IEnumerable`1
  name: System.Collections.Generic.IEnumerable<String>
  nameWithType: System.Collections.Generic.IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: System.Collections.Generic.IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: System.Collections.Generic.IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: System.Collections.Generic.IEnumerable
    nameWithType: System.Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: System.Collections.Generic.IEnumerable
    nameWithType: System.Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: System.Collections.Generic.IEnumerable<>
  nameWithType: System.Collections.Generic.IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: System.Collections.Generic.IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: System.Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: System.Collections.Generic.IEnumerable
    nameWithType: System.Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: System.Collections.Generic.IEnumerable
    nameWithType: System.Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.GovernancePolicyId*
  commentId: Overload:Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.GovernancePolicyId
  name: GovernancePolicyId
  nameWithType: GovernancePolicyAddFoldersDetails.GovernancePolicyId
  fullName: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.GovernancePolicyId
- uid: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.Name*
  commentId: Overload:Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.Name
  name: Name
  nameWithType: GovernancePolicyAddFoldersDetails.Name
  fullName: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.Name
- uid: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.PolicyType*
  commentId: Overload:Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.PolicyType
  name: PolicyType
  nameWithType: GovernancePolicyAddFoldersDetails.PolicyType
  fullName: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.PolicyType
- uid: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.Folders*
  commentId: Overload:Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.Folders
  name: Folders
  nameWithType: GovernancePolicyAddFoldersDetails.Folders
  fullName: Dropbox.Api.TeamLog.GovernancePolicyAddFoldersDetails.Folders
- uid: System.Collections.Generic.IList{System.String}
  commentId: '!:System.Collections.Generic.IList{System.String}'
  definition: System.Collections.Generic.IList`1
  name: System.Collections.Generic.IList<String>
  nameWithType: System.Collections.Generic.IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: System.Collections.Generic.IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: System.Collections.Generic.IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  isExternal: true
  name: System.Collections.Generic.IList<>
  nameWithType: System.Collections.Generic.IList<>
  fullName: System.Collections.Generic.IList<>
  nameWithType.vb: System.Collections.Generic.IList(Of )
  fullName.vb: System.Collections.Generic.IList(Of )
  name.vb: System.Collections.Generic.IList(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
