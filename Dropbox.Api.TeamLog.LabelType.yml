### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.TeamLog.LabelType
  commentId: T:Dropbox.Api.TeamLog.LabelType
  id: LabelType
  parent: Dropbox.Api.TeamLog
  children:
  - Dropbox.Api.TeamLog.LabelType.#ctor
  - Dropbox.Api.TeamLog.LabelType.AsOther
  - Dropbox.Api.TeamLog.LabelType.AsPersonalInformation
  - Dropbox.Api.TeamLog.LabelType.AsTestOnly
  - Dropbox.Api.TeamLog.LabelType.AsUserDefinedTag
  - Dropbox.Api.TeamLog.LabelType.IsOther
  - Dropbox.Api.TeamLog.LabelType.IsPersonalInformation
  - Dropbox.Api.TeamLog.LabelType.IsTestOnly
  - Dropbox.Api.TeamLog.LabelType.IsUserDefinedTag
  langs:
  - csharp
  - vb
  name: LabelType
  nameWithType: LabelType
  fullName: Dropbox.Api.TeamLog.LabelType
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/LabelType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: LabelType
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/LabelType.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Label type</p>\n"
  example: []
  syntax:
    content: 'public class LabelType : object'
    content.vb: >-
      Public Class LabelType
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.TeamLog.LabelType.Other
  - Dropbox.Api.TeamLog.LabelType.PersonalInformation
  - Dropbox.Api.TeamLog.LabelType.TestOnly
  - Dropbox.Api.TeamLog.LabelType.UserDefinedTag
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.TeamLog.LabelType.#ctor
  commentId: M:Dropbox.Api.TeamLog.LabelType.#ctor
  id: '#ctor'
  parent: Dropbox.Api.TeamLog.LabelType
  langs:
  - csharp
  - vb
  name: LabelType()
  nameWithType: LabelType.LabelType()
  fullName: Dropbox.Api.TeamLog.LabelType.LabelType()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/LabelType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/LabelType.cs
    startLine: 32
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.TeamLog.LabelType\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public LabelType()
    content.vb: Public Sub New
  overload: Dropbox.Api.TeamLog.LabelType.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.TeamLog.LabelType.IsPersonalInformation
  commentId: P:Dropbox.Api.TeamLog.LabelType.IsPersonalInformation
  id: IsPersonalInformation
  parent: Dropbox.Api.TeamLog.LabelType
  langs:
  - csharp
  - vb
  name: IsPersonalInformation
  nameWithType: LabelType.IsPersonalInformation
  fullName: Dropbox.Api.TeamLog.LabelType.IsPersonalInformation
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/LabelType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsPersonalInformation
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/LabelType.cs
    startLine: 39
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is PersonalInformation</p>\n"
  example: []
  syntax:
    content: public bool IsPersonalInformation { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPersonalInformation As Boolean
  overload: Dropbox.Api.TeamLog.LabelType.IsPersonalInformation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.LabelType.AsPersonalInformation
  commentId: P:Dropbox.Api.TeamLog.LabelType.AsPersonalInformation
  id: AsPersonalInformation
  parent: Dropbox.Api.TeamLog.LabelType
  langs:
  - csharp
  - vb
  name: AsPersonalInformation
  nameWithType: LabelType.AsPersonalInformation
  fullName: Dropbox.Api.TeamLog.LabelType.AsPersonalInformation
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/LabelType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsPersonalInformation
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/LabelType.cs
    startLine: 50
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a PersonalInformation, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LabelType.PersonalInformation AsPersonalInformation { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.LabelType.PersonalInformation
    content.vb: Public ReadOnly Property AsPersonalInformation As LabelType.PersonalInformation
  overload: Dropbox.Api.TeamLog.LabelType.AsPersonalInformation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.LabelType.IsTestOnly
  commentId: P:Dropbox.Api.TeamLog.LabelType.IsTestOnly
  id: IsTestOnly
  parent: Dropbox.Api.TeamLog.LabelType
  langs:
  - csharp
  - vb
  name: IsTestOnly
  nameWithType: LabelType.IsTestOnly
  fullName: Dropbox.Api.TeamLog.LabelType.IsTestOnly
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/LabelType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsTestOnly
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/LabelType.cs
    startLine: 61
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is TestOnly</p>\n"
  example: []
  syntax:
    content: public bool IsTestOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTestOnly As Boolean
  overload: Dropbox.Api.TeamLog.LabelType.IsTestOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.LabelType.AsTestOnly
  commentId: P:Dropbox.Api.TeamLog.LabelType.AsTestOnly
  id: AsTestOnly
  parent: Dropbox.Api.TeamLog.LabelType
  langs:
  - csharp
  - vb
  name: AsTestOnly
  nameWithType: LabelType.AsTestOnly
  fullName: Dropbox.Api.TeamLog.LabelType.AsTestOnly
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/LabelType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsTestOnly
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/LabelType.cs
    startLine: 72
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a TestOnly, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LabelType.TestOnly AsTestOnly { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.LabelType.TestOnly
    content.vb: Public ReadOnly Property AsTestOnly As LabelType.TestOnly
  overload: Dropbox.Api.TeamLog.LabelType.AsTestOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.LabelType.IsUserDefinedTag
  commentId: P:Dropbox.Api.TeamLog.LabelType.IsUserDefinedTag
  id: IsUserDefinedTag
  parent: Dropbox.Api.TeamLog.LabelType
  langs:
  - csharp
  - vb
  name: IsUserDefinedTag
  nameWithType: LabelType.IsUserDefinedTag
  fullName: Dropbox.Api.TeamLog.LabelType.IsUserDefinedTag
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/LabelType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsUserDefinedTag
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/LabelType.cs
    startLine: 83
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is UserDefinedTag</p>\n"
  example: []
  syntax:
    content: public bool IsUserDefinedTag { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUserDefinedTag As Boolean
  overload: Dropbox.Api.TeamLog.LabelType.IsUserDefinedTag*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.LabelType.AsUserDefinedTag
  commentId: P:Dropbox.Api.TeamLog.LabelType.AsUserDefinedTag
  id: AsUserDefinedTag
  parent: Dropbox.Api.TeamLog.LabelType
  langs:
  - csharp
  - vb
  name: AsUserDefinedTag
  nameWithType: LabelType.AsUserDefinedTag
  fullName: Dropbox.Api.TeamLog.LabelType.AsUserDefinedTag
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/LabelType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsUserDefinedTag
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/LabelType.cs
    startLine: 94
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a UserDefinedTag, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LabelType.UserDefinedTag AsUserDefinedTag { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.LabelType.UserDefinedTag
    content.vb: Public ReadOnly Property AsUserDefinedTag As LabelType.UserDefinedTag
  overload: Dropbox.Api.TeamLog.LabelType.AsUserDefinedTag*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.LabelType.IsOther
  commentId: P:Dropbox.Api.TeamLog.LabelType.IsOther
  id: IsOther
  parent: Dropbox.Api.TeamLog.LabelType
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: LabelType.IsOther
  fullName: Dropbox.Api.TeamLog.LabelType.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/LabelType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/LabelType.cs
    startLine: 105
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.TeamLog.LabelType.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.TeamLog.LabelType.AsOther
  commentId: P:Dropbox.Api.TeamLog.LabelType.AsOther
  id: AsOther
  parent: Dropbox.Api.TeamLog.LabelType
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: LabelType.AsOther
  fullName: Dropbox.Api.TeamLog.LabelType.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/LabelType.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/TeamLog/LabelType.cs
    startLine: 116
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.TeamLog
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LabelType.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.TeamLog.LabelType.Other
    content.vb: Public ReadOnly Property AsOther As LabelType.Other
  overload: Dropbox.Api.TeamLog.LabelType.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.TeamLog
  commentId: N:Dropbox.Api.TeamLog
  name: Dropbox.Api.TeamLog
  nameWithType: Dropbox.Api.TeamLog
  fullName: Dropbox.Api.TeamLog
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.TeamLog.LabelType
  commentId: T:Dropbox.Api.TeamLog.LabelType
  parent: Dropbox.Api.TeamLog
  name: LabelType
  nameWithType: LabelType
  fullName: Dropbox.Api.TeamLog.LabelType
- uid: Dropbox.Api.TeamLog.LabelType.#ctor*
  commentId: Overload:Dropbox.Api.TeamLog.LabelType.#ctor
  name: LabelType
  nameWithType: LabelType.LabelType
  fullName: Dropbox.Api.TeamLog.LabelType.LabelType
- uid: Dropbox.Api.TeamLog.LabelType.IsPersonalInformation*
  commentId: Overload:Dropbox.Api.TeamLog.LabelType.IsPersonalInformation
  name: IsPersonalInformation
  nameWithType: LabelType.IsPersonalInformation
  fullName: Dropbox.Api.TeamLog.LabelType.IsPersonalInformation
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.TeamLog.LabelType.AsPersonalInformation*
  commentId: Overload:Dropbox.Api.TeamLog.LabelType.AsPersonalInformation
  name: AsPersonalInformation
  nameWithType: LabelType.AsPersonalInformation
  fullName: Dropbox.Api.TeamLog.LabelType.AsPersonalInformation
- uid: Dropbox.Api.TeamLog.LabelType.PersonalInformation
  commentId: T:Dropbox.Api.TeamLog.LabelType.PersonalInformation
  parent: Dropbox.Api.TeamLog
  name: LabelType.PersonalInformation
  nameWithType: LabelType.PersonalInformation
  fullName: Dropbox.Api.TeamLog.LabelType.PersonalInformation
- uid: Dropbox.Api.TeamLog.LabelType.IsTestOnly*
  commentId: Overload:Dropbox.Api.TeamLog.LabelType.IsTestOnly
  name: IsTestOnly
  nameWithType: LabelType.IsTestOnly
  fullName: Dropbox.Api.TeamLog.LabelType.IsTestOnly
- uid: Dropbox.Api.TeamLog.LabelType.AsTestOnly*
  commentId: Overload:Dropbox.Api.TeamLog.LabelType.AsTestOnly
  name: AsTestOnly
  nameWithType: LabelType.AsTestOnly
  fullName: Dropbox.Api.TeamLog.LabelType.AsTestOnly
- uid: Dropbox.Api.TeamLog.LabelType.TestOnly
  commentId: T:Dropbox.Api.TeamLog.LabelType.TestOnly
  parent: Dropbox.Api.TeamLog
  name: LabelType.TestOnly
  nameWithType: LabelType.TestOnly
  fullName: Dropbox.Api.TeamLog.LabelType.TestOnly
- uid: Dropbox.Api.TeamLog.LabelType.IsUserDefinedTag*
  commentId: Overload:Dropbox.Api.TeamLog.LabelType.IsUserDefinedTag
  name: IsUserDefinedTag
  nameWithType: LabelType.IsUserDefinedTag
  fullName: Dropbox.Api.TeamLog.LabelType.IsUserDefinedTag
- uid: Dropbox.Api.TeamLog.LabelType.AsUserDefinedTag*
  commentId: Overload:Dropbox.Api.TeamLog.LabelType.AsUserDefinedTag
  name: AsUserDefinedTag
  nameWithType: LabelType.AsUserDefinedTag
  fullName: Dropbox.Api.TeamLog.LabelType.AsUserDefinedTag
- uid: Dropbox.Api.TeamLog.LabelType.UserDefinedTag
  commentId: T:Dropbox.Api.TeamLog.LabelType.UserDefinedTag
  parent: Dropbox.Api.TeamLog
  name: LabelType.UserDefinedTag
  nameWithType: LabelType.UserDefinedTag
  fullName: Dropbox.Api.TeamLog.LabelType.UserDefinedTag
- uid: Dropbox.Api.TeamLog.LabelType.IsOther*
  commentId: Overload:Dropbox.Api.TeamLog.LabelType.IsOther
  name: IsOther
  nameWithType: LabelType.IsOther
  fullName: Dropbox.Api.TeamLog.LabelType.IsOther
- uid: Dropbox.Api.TeamLog.LabelType.AsOther*
  commentId: Overload:Dropbox.Api.TeamLog.LabelType.AsOther
  name: AsOther
  nameWithType: LabelType.AsOther
  fullName: Dropbox.Api.TeamLog.LabelType.AsOther
- uid: Dropbox.Api.TeamLog.LabelType.Other
  commentId: T:Dropbox.Api.TeamLog.LabelType.Other
  parent: Dropbox.Api.TeamLog
  name: LabelType.Other
  nameWithType: LabelType.Other
  fullName: Dropbox.Api.TeamLog.LabelType.Other
shouldSkipMarkup: true
