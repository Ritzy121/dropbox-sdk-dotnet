### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Auth.AccessError
  commentId: T:Dropbox.Api.Auth.AccessError
  id: AccessError
  parent: Dropbox.Api.Auth
  children:
  - Dropbox.Api.Auth.AccessError.#ctor
  - Dropbox.Api.Auth.AccessError.AsInvalidAccountType
  - Dropbox.Api.Auth.AccessError.AsOther
  - Dropbox.Api.Auth.AccessError.AsPaperAccessDenied
  - Dropbox.Api.Auth.AccessError.IsInvalidAccountType
  - Dropbox.Api.Auth.AccessError.IsOther
  - Dropbox.Api.Auth.AccessError.IsPaperAccessDenied
  langs:
  - csharp
  - vb
  name: AccessError
  nameWithType: AccessError
  fullName: Dropbox.Api.Auth.AccessError
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Auth/AccessError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AccessError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Auth/AccessError.cs
    startLine: 16
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Auth
  summary: "\n<p>Error occurred because the account doesn&apos;t have permission to access the\nresource.</p>\n"
  example: []
  syntax:
    content: 'public class AccessError : object'
    content.vb: >-
      Public Class AccessError
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Auth.AccessError.InvalidAccountType
  - Dropbox.Api.Auth.AccessError.Other
  - Dropbox.Api.Auth.AccessError.PaperAccessDenied
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Auth.AccessError.#ctor
  commentId: M:Dropbox.Api.Auth.AccessError.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Auth.AccessError
  langs:
  - csharp
  - vb
  name: AccessError()
  nameWithType: AccessError.AccessError()
  fullName: Dropbox.Api.Auth.AccessError.AccessError()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Auth/AccessError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Auth/AccessError.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Auth
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Auth.AccessError\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public AccessError()
    content.vb: Public Sub New
  overload: Dropbox.Api.Auth.AccessError.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Auth.AccessError.IsInvalidAccountType
  commentId: P:Dropbox.Api.Auth.AccessError.IsInvalidAccountType
  id: IsInvalidAccountType
  parent: Dropbox.Api.Auth.AccessError
  langs:
  - csharp
  - vb
  name: IsInvalidAccountType
  nameWithType: AccessError.IsInvalidAccountType
  fullName: Dropbox.Api.Auth.AccessError.IsInvalidAccountType
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Auth/AccessError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsInvalidAccountType
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Auth/AccessError.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Auth
  summary: "\n<p>Gets a value indicating whether this instance is InvalidAccountType</p>\n"
  example: []
  syntax:
    content: public bool IsInvalidAccountType { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInvalidAccountType As Boolean
  overload: Dropbox.Api.Auth.AccessError.IsInvalidAccountType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Auth.AccessError.AsInvalidAccountType
  commentId: P:Dropbox.Api.Auth.AccessError.AsInvalidAccountType
  id: AsInvalidAccountType
  parent: Dropbox.Api.Auth.AccessError
  langs:
  - csharp
  - vb
  name: AsInvalidAccountType
  nameWithType: AccessError.AsInvalidAccountType
  fullName: Dropbox.Api.Auth.AccessError.AsInvalidAccountType
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Auth/AccessError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsInvalidAccountType
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Auth/AccessError.cs
    startLine: 51
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Auth
  summary: "\n<p>Gets this instance as a InvalidAccountType, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AccessError.InvalidAccountType AsInvalidAccountType { get; }
    parameters: []
    return:
      type: Dropbox.Api.Auth.AccessError.InvalidAccountType
    content.vb: Public ReadOnly Property AsInvalidAccountType As AccessError.InvalidAccountType
  overload: Dropbox.Api.Auth.AccessError.AsInvalidAccountType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Auth.AccessError.IsPaperAccessDenied
  commentId: P:Dropbox.Api.Auth.AccessError.IsPaperAccessDenied
  id: IsPaperAccessDenied
  parent: Dropbox.Api.Auth.AccessError
  langs:
  - csharp
  - vb
  name: IsPaperAccessDenied
  nameWithType: AccessError.IsPaperAccessDenied
  fullName: Dropbox.Api.Auth.AccessError.IsPaperAccessDenied
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Auth/AccessError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsPaperAccessDenied
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Auth/AccessError.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Auth
  summary: "\n<p>Gets a value indicating whether this instance is PaperAccessDenied</p>\n"
  example: []
  syntax:
    content: public bool IsPaperAccessDenied { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPaperAccessDenied As Boolean
  overload: Dropbox.Api.Auth.AccessError.IsPaperAccessDenied*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Auth.AccessError.AsPaperAccessDenied
  commentId: P:Dropbox.Api.Auth.AccessError.AsPaperAccessDenied
  id: AsPaperAccessDenied
  parent: Dropbox.Api.Auth.AccessError
  langs:
  - csharp
  - vb
  name: AsPaperAccessDenied
  nameWithType: AccessError.AsPaperAccessDenied
  fullName: Dropbox.Api.Auth.AccessError.AsPaperAccessDenied
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Auth/AccessError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsPaperAccessDenied
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Auth/AccessError.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Auth
  summary: "\n<p>Gets this instance as a PaperAccessDenied, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AccessError.PaperAccessDenied AsPaperAccessDenied { get; }
    parameters: []
    return:
      type: Dropbox.Api.Auth.AccessError.PaperAccessDenied
    content.vb: Public ReadOnly Property AsPaperAccessDenied As AccessError.PaperAccessDenied
  overload: Dropbox.Api.Auth.AccessError.AsPaperAccessDenied*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Auth.AccessError.IsOther
  commentId: P:Dropbox.Api.Auth.AccessError.IsOther
  id: IsOther
  parent: Dropbox.Api.Auth.AccessError
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: AccessError.IsOther
  fullName: Dropbox.Api.Auth.AccessError.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Auth/AccessError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Auth/AccessError.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Auth
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.Auth.AccessError.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Auth.AccessError.AsOther
  commentId: P:Dropbox.Api.Auth.AccessError.AsOther
  id: AsOther
  parent: Dropbox.Api.Auth.AccessError
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: AccessError.AsOther
  fullName: Dropbox.Api.Auth.AccessError.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Auth/AccessError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Auth/AccessError.cs
    startLine: 95
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Auth
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public AccessError.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.Auth.AccessError.Other
    content.vb: Public ReadOnly Property AsOther As AccessError.Other
  overload: Dropbox.Api.Auth.AccessError.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Auth
  commentId: N:Dropbox.Api.Auth
  name: Dropbox.Api.Auth
  nameWithType: Dropbox.Api.Auth
  fullName: Dropbox.Api.Auth
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Auth.AccessError
  commentId: T:Dropbox.Api.Auth.AccessError
  parent: Dropbox.Api.Auth
  name: AccessError
  nameWithType: AccessError
  fullName: Dropbox.Api.Auth.AccessError
- uid: Dropbox.Api.Auth.AccessError.#ctor*
  commentId: Overload:Dropbox.Api.Auth.AccessError.#ctor
  name: AccessError
  nameWithType: AccessError.AccessError
  fullName: Dropbox.Api.Auth.AccessError.AccessError
- uid: Dropbox.Api.Auth.AccessError.IsInvalidAccountType*
  commentId: Overload:Dropbox.Api.Auth.AccessError.IsInvalidAccountType
  name: IsInvalidAccountType
  nameWithType: AccessError.IsInvalidAccountType
  fullName: Dropbox.Api.Auth.AccessError.IsInvalidAccountType
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Auth.AccessError.AsInvalidAccountType*
  commentId: Overload:Dropbox.Api.Auth.AccessError.AsInvalidAccountType
  name: AsInvalidAccountType
  nameWithType: AccessError.AsInvalidAccountType
  fullName: Dropbox.Api.Auth.AccessError.AsInvalidAccountType
- uid: Dropbox.Api.Auth.AccessError.InvalidAccountType
  commentId: T:Dropbox.Api.Auth.AccessError.InvalidAccountType
  parent: Dropbox.Api.Auth
  name: AccessError.InvalidAccountType
  nameWithType: AccessError.InvalidAccountType
  fullName: Dropbox.Api.Auth.AccessError.InvalidAccountType
- uid: Dropbox.Api.Auth.AccessError.IsPaperAccessDenied*
  commentId: Overload:Dropbox.Api.Auth.AccessError.IsPaperAccessDenied
  name: IsPaperAccessDenied
  nameWithType: AccessError.IsPaperAccessDenied
  fullName: Dropbox.Api.Auth.AccessError.IsPaperAccessDenied
- uid: Dropbox.Api.Auth.AccessError.AsPaperAccessDenied*
  commentId: Overload:Dropbox.Api.Auth.AccessError.AsPaperAccessDenied
  name: AsPaperAccessDenied
  nameWithType: AccessError.AsPaperAccessDenied
  fullName: Dropbox.Api.Auth.AccessError.AsPaperAccessDenied
- uid: Dropbox.Api.Auth.AccessError.PaperAccessDenied
  commentId: T:Dropbox.Api.Auth.AccessError.PaperAccessDenied
  parent: Dropbox.Api.Auth
  name: AccessError.PaperAccessDenied
  nameWithType: AccessError.PaperAccessDenied
  fullName: Dropbox.Api.Auth.AccessError.PaperAccessDenied
- uid: Dropbox.Api.Auth.AccessError.IsOther*
  commentId: Overload:Dropbox.Api.Auth.AccessError.IsOther
  name: IsOther
  nameWithType: AccessError.IsOther
  fullName: Dropbox.Api.Auth.AccessError.IsOther
- uid: Dropbox.Api.Auth.AccessError.AsOther*
  commentId: Overload:Dropbox.Api.Auth.AccessError.AsOther
  name: AsOther
  nameWithType: AccessError.AsOther
  fullName: Dropbox.Api.Auth.AccessError.AsOther
- uid: Dropbox.Api.Auth.AccessError.Other
  commentId: T:Dropbox.Api.Auth.AccessError.Other
  parent: Dropbox.Api.Auth
  name: AccessError.Other
  nameWithType: AccessError.Other
  fullName: Dropbox.Api.Auth.AccessError.Other
shouldSkipMarkup: true
