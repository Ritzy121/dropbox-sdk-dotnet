### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Team.TeamFolderAccessError
  commentId: T:Dropbox.Api.Team.TeamFolderAccessError
  id: TeamFolderAccessError
  parent: Dropbox.Api.Team
  children:
  - Dropbox.Api.Team.TeamFolderAccessError.#ctor
  - Dropbox.Api.Team.TeamFolderAccessError.AsInvalidTeamFolderId
  - Dropbox.Api.Team.TeamFolderAccessError.AsNoAccess
  - Dropbox.Api.Team.TeamFolderAccessError.AsOther
  - Dropbox.Api.Team.TeamFolderAccessError.IsInvalidTeamFolderId
  - Dropbox.Api.Team.TeamFolderAccessError.IsNoAccess
  - Dropbox.Api.Team.TeamFolderAccessError.IsOther
  langs:
  - csharp
  - vb
  name: TeamFolderAccessError
  nameWithType: TeamFolderAccessError
  fullName: Dropbox.Api.Team.TeamFolderAccessError
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderAccessError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: TeamFolderAccessError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderAccessError.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>The team folder access error object</p>\n"
  example: []
  syntax:
    content: 'public class TeamFolderAccessError : object'
    content.vb: >-
      Public Class TeamFolderAccessError
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Team.TeamFolderAccessError.InvalidTeamFolderId
  - Dropbox.Api.Team.TeamFolderAccessError.NoAccess
  - Dropbox.Api.Team.TeamFolderAccessError.Other
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Team.TeamFolderAccessError.#ctor
  commentId: M:Dropbox.Api.Team.TeamFolderAccessError.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Team.TeamFolderAccessError
  langs:
  - csharp
  - vb
  name: TeamFolderAccessError()
  nameWithType: TeamFolderAccessError.TeamFolderAccessError()
  fullName: Dropbox.Api.Team.TeamFolderAccessError.TeamFolderAccessError()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderAccessError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderAccessError.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Team.TeamFolderAccessError\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public TeamFolderAccessError()
    content.vb: Public Sub New
  overload: Dropbox.Api.Team.TeamFolderAccessError.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.TeamFolderAccessError.IsInvalidTeamFolderId
  commentId: P:Dropbox.Api.Team.TeamFolderAccessError.IsInvalidTeamFolderId
  id: IsInvalidTeamFolderId
  parent: Dropbox.Api.Team.TeamFolderAccessError
  langs:
  - csharp
  - vb
  name: IsInvalidTeamFolderId
  nameWithType: TeamFolderAccessError.IsInvalidTeamFolderId
  fullName: Dropbox.Api.Team.TeamFolderAccessError.IsInvalidTeamFolderId
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderAccessError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsInvalidTeamFolderId
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderAccessError.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is InvalidTeamFolderId</p>\n"
  example: []
  syntax:
    content: public bool IsInvalidTeamFolderId { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInvalidTeamFolderId As Boolean
  overload: Dropbox.Api.Team.TeamFolderAccessError.IsInvalidTeamFolderId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.TeamFolderAccessError.AsInvalidTeamFolderId
  commentId: P:Dropbox.Api.Team.TeamFolderAccessError.AsInvalidTeamFolderId
  id: AsInvalidTeamFolderId
  parent: Dropbox.Api.Team.TeamFolderAccessError
  langs:
  - csharp
  - vb
  name: AsInvalidTeamFolderId
  nameWithType: TeamFolderAccessError.AsInvalidTeamFolderId
  fullName: Dropbox.Api.Team.TeamFolderAccessError.AsInvalidTeamFolderId
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderAccessError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsInvalidTeamFolderId
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderAccessError.cs
    startLine: 51
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a InvalidTeamFolderId, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public TeamFolderAccessError.InvalidTeamFolderId AsInvalidTeamFolderId { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.TeamFolderAccessError.InvalidTeamFolderId
    content.vb: Public ReadOnly Property AsInvalidTeamFolderId As TeamFolderAccessError.InvalidTeamFolderId
  overload: Dropbox.Api.Team.TeamFolderAccessError.AsInvalidTeamFolderId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.TeamFolderAccessError.IsNoAccess
  commentId: P:Dropbox.Api.Team.TeamFolderAccessError.IsNoAccess
  id: IsNoAccess
  parent: Dropbox.Api.Team.TeamFolderAccessError
  langs:
  - csharp
  - vb
  name: IsNoAccess
  nameWithType: TeamFolderAccessError.IsNoAccess
  fullName: Dropbox.Api.Team.TeamFolderAccessError.IsNoAccess
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderAccessError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsNoAccess
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderAccessError.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is NoAccess</p>\n"
  example: []
  syntax:
    content: public bool IsNoAccess { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNoAccess As Boolean
  overload: Dropbox.Api.Team.TeamFolderAccessError.IsNoAccess*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.TeamFolderAccessError.AsNoAccess
  commentId: P:Dropbox.Api.Team.TeamFolderAccessError.AsNoAccess
  id: AsNoAccess
  parent: Dropbox.Api.Team.TeamFolderAccessError
  langs:
  - csharp
  - vb
  name: AsNoAccess
  nameWithType: TeamFolderAccessError.AsNoAccess
  fullName: Dropbox.Api.Team.TeamFolderAccessError.AsNoAccess
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderAccessError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsNoAccess
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderAccessError.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a NoAccess, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public TeamFolderAccessError.NoAccess AsNoAccess { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.TeamFolderAccessError.NoAccess
    content.vb: Public ReadOnly Property AsNoAccess As TeamFolderAccessError.NoAccess
  overload: Dropbox.Api.Team.TeamFolderAccessError.AsNoAccess*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.TeamFolderAccessError.IsOther
  commentId: P:Dropbox.Api.Team.TeamFolderAccessError.IsOther
  id: IsOther
  parent: Dropbox.Api.Team.TeamFolderAccessError
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: TeamFolderAccessError.IsOther
  fullName: Dropbox.Api.Team.TeamFolderAccessError.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderAccessError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderAccessError.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.Team.TeamFolderAccessError.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.TeamFolderAccessError.AsOther
  commentId: P:Dropbox.Api.Team.TeamFolderAccessError.AsOther
  id: AsOther
  parent: Dropbox.Api.Team.TeamFolderAccessError
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: TeamFolderAccessError.AsOther
  fullName: Dropbox.Api.Team.TeamFolderAccessError.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderAccessError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/TeamFolderAccessError.cs
    startLine: 95
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public TeamFolderAccessError.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.TeamFolderAccessError.Other
    content.vb: Public ReadOnly Property AsOther As TeamFolderAccessError.Other
  overload: Dropbox.Api.Team.TeamFolderAccessError.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Team
  commentId: N:Dropbox.Api.Team
  name: Dropbox.Api.Team
  nameWithType: Dropbox.Api.Team
  fullName: Dropbox.Api.Team
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Team.TeamFolderAccessError
  commentId: T:Dropbox.Api.Team.TeamFolderAccessError
  parent: Dropbox.Api.Team
  name: TeamFolderAccessError
  nameWithType: TeamFolderAccessError
  fullName: Dropbox.Api.Team.TeamFolderAccessError
- uid: Dropbox.Api.Team.TeamFolderAccessError.#ctor*
  commentId: Overload:Dropbox.Api.Team.TeamFolderAccessError.#ctor
  name: TeamFolderAccessError
  nameWithType: TeamFolderAccessError.TeamFolderAccessError
  fullName: Dropbox.Api.Team.TeamFolderAccessError.TeamFolderAccessError
- uid: Dropbox.Api.Team.TeamFolderAccessError.IsInvalidTeamFolderId*
  commentId: Overload:Dropbox.Api.Team.TeamFolderAccessError.IsInvalidTeamFolderId
  name: IsInvalidTeamFolderId
  nameWithType: TeamFolderAccessError.IsInvalidTeamFolderId
  fullName: Dropbox.Api.Team.TeamFolderAccessError.IsInvalidTeamFolderId
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Team.TeamFolderAccessError.AsInvalidTeamFolderId*
  commentId: Overload:Dropbox.Api.Team.TeamFolderAccessError.AsInvalidTeamFolderId
  name: AsInvalidTeamFolderId
  nameWithType: TeamFolderAccessError.AsInvalidTeamFolderId
  fullName: Dropbox.Api.Team.TeamFolderAccessError.AsInvalidTeamFolderId
- uid: Dropbox.Api.Team.TeamFolderAccessError.InvalidTeamFolderId
  commentId: T:Dropbox.Api.Team.TeamFolderAccessError.InvalidTeamFolderId
  parent: Dropbox.Api.Team
  name: TeamFolderAccessError.InvalidTeamFolderId
  nameWithType: TeamFolderAccessError.InvalidTeamFolderId
  fullName: Dropbox.Api.Team.TeamFolderAccessError.InvalidTeamFolderId
- uid: Dropbox.Api.Team.TeamFolderAccessError.IsNoAccess*
  commentId: Overload:Dropbox.Api.Team.TeamFolderAccessError.IsNoAccess
  name: IsNoAccess
  nameWithType: TeamFolderAccessError.IsNoAccess
  fullName: Dropbox.Api.Team.TeamFolderAccessError.IsNoAccess
- uid: Dropbox.Api.Team.TeamFolderAccessError.AsNoAccess*
  commentId: Overload:Dropbox.Api.Team.TeamFolderAccessError.AsNoAccess
  name: AsNoAccess
  nameWithType: TeamFolderAccessError.AsNoAccess
  fullName: Dropbox.Api.Team.TeamFolderAccessError.AsNoAccess
- uid: Dropbox.Api.Team.TeamFolderAccessError.NoAccess
  commentId: T:Dropbox.Api.Team.TeamFolderAccessError.NoAccess
  parent: Dropbox.Api.Team
  name: TeamFolderAccessError.NoAccess
  nameWithType: TeamFolderAccessError.NoAccess
  fullName: Dropbox.Api.Team.TeamFolderAccessError.NoAccess
- uid: Dropbox.Api.Team.TeamFolderAccessError.IsOther*
  commentId: Overload:Dropbox.Api.Team.TeamFolderAccessError.IsOther
  name: IsOther
  nameWithType: TeamFolderAccessError.IsOther
  fullName: Dropbox.Api.Team.TeamFolderAccessError.IsOther
- uid: Dropbox.Api.Team.TeamFolderAccessError.AsOther*
  commentId: Overload:Dropbox.Api.Team.TeamFolderAccessError.AsOther
  name: AsOther
  nameWithType: TeamFolderAccessError.AsOther
  fullName: Dropbox.Api.Team.TeamFolderAccessError.AsOther
- uid: Dropbox.Api.Team.TeamFolderAccessError.Other
  commentId: T:Dropbox.Api.Team.TeamFolderAccessError.Other
  parent: Dropbox.Api.Team
  name: TeamFolderAccessError.Other
  nameWithType: TeamFolderAccessError.Other
  fullName: Dropbox.Api.Team.TeamFolderAccessError.Other
shouldSkipMarkup: true
