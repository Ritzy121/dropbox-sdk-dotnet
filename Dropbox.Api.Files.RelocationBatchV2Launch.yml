### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.RelocationBatchV2Launch
  commentId: T:Dropbox.Api.Files.RelocationBatchV2Launch
  id: RelocationBatchV2Launch
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.RelocationBatchV2Launch.#ctor
  - Dropbox.Api.Files.RelocationBatchV2Launch.AsAsyncJobId
  - Dropbox.Api.Files.RelocationBatchV2Launch.AsComplete
  - Dropbox.Api.Files.RelocationBatchV2Launch.IsAsyncJobId
  - Dropbox.Api.Files.RelocationBatchV2Launch.IsComplete
  langs:
  - csharp
  - vb
  name: RelocationBatchV2Launch
  nameWithType: RelocationBatchV2Launch
  fullName: Dropbox.Api.Files.RelocationBatchV2Launch
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchV2Launch.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: RelocationBatchV2Launch
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchV2Launch.cs
    startLine: 18
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Result returned by <xref href=\"Dropbox.Api.Files.Routes.FilesUserRoutes.CopyBatchV2Async(Dropbox.Api.Files.RelocationBatchArgBase)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Dropbox.Api.Files.Routes.FilesUserRoutes.MoveBatchV2Async(Dropbox.Api.Files.MoveBatchArg)\" data-throw-if-not-resolved=\"false\"></xref> that may either\nlaunch an asynchronous job or complete synchronously.</p>\n"
  example: []
  syntax:
    content: 'public class RelocationBatchV2Launch : object'
    content.vb: >-
      Public Class RelocationBatchV2Launch
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Files.RelocationBatchV2Launch.AsyncJobId
  - Dropbox.Api.Files.RelocationBatchV2Launch.Complete
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.RelocationBatchV2Launch.#ctor
  commentId: M:Dropbox.Api.Files.RelocationBatchV2Launch.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Files.RelocationBatchV2Launch
  langs:
  - csharp
  - vb
  name: RelocationBatchV2Launch()
  nameWithType: RelocationBatchV2Launch.RelocationBatchV2Launch()
  fullName: Dropbox.Api.Files.RelocationBatchV2Launch.RelocationBatchV2Launch()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchV2Launch.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchV2Launch.cs
    startLine: 36
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.RelocationBatchV2Launch\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public RelocationBatchV2Launch()
    content.vb: Public Sub New
  overload: Dropbox.Api.Files.RelocationBatchV2Launch.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.RelocationBatchV2Launch.IsComplete
  commentId: P:Dropbox.Api.Files.RelocationBatchV2Launch.IsComplete
  id: IsComplete
  parent: Dropbox.Api.Files.RelocationBatchV2Launch
  langs:
  - csharp
  - vb
  name: IsComplete
  nameWithType: RelocationBatchV2Launch.IsComplete
  fullName: Dropbox.Api.Files.RelocationBatchV2Launch.IsComplete
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchV2Launch.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsComplete
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchV2Launch.cs
    startLine: 43
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Complete</p>\n"
  example: []
  syntax:
    content: public bool IsComplete { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsComplete As Boolean
  overload: Dropbox.Api.Files.RelocationBatchV2Launch.IsComplete*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchV2Launch.AsComplete
  commentId: P:Dropbox.Api.Files.RelocationBatchV2Launch.AsComplete
  id: AsComplete
  parent: Dropbox.Api.Files.RelocationBatchV2Launch
  langs:
  - csharp
  - vb
  name: AsComplete
  nameWithType: RelocationBatchV2Launch.AsComplete
  fullName: Dropbox.Api.Files.RelocationBatchV2Launch.AsComplete
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchV2Launch.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsComplete
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchV2Launch.cs
    startLine: 54
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Complete, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public RelocationBatchV2Launch.Complete AsComplete { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.RelocationBatchV2Launch.Complete
    content.vb: Public ReadOnly Property AsComplete As RelocationBatchV2Launch.Complete
  overload: Dropbox.Api.Files.RelocationBatchV2Launch.AsComplete*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchV2Launch.IsAsyncJobId
  commentId: P:Dropbox.Api.Files.RelocationBatchV2Launch.IsAsyncJobId
  id: IsAsyncJobId
  parent: Dropbox.Api.Files.RelocationBatchV2Launch
  langs:
  - csharp
  - vb
  name: IsAsyncJobId
  nameWithType: RelocationBatchV2Launch.IsAsyncJobId
  fullName: Dropbox.Api.Files.RelocationBatchV2Launch.IsAsyncJobId
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchV2Launch.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsAsyncJobId
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchV2Launch.cs
    startLine: 65
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is AsyncJobId</p>\n"
  example: []
  syntax:
    content: public bool IsAsyncJobId { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAsyncJobId As Boolean
  overload: Dropbox.Api.Files.RelocationBatchV2Launch.IsAsyncJobId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.RelocationBatchV2Launch.AsAsyncJobId
  commentId: P:Dropbox.Api.Files.RelocationBatchV2Launch.AsAsyncJobId
  id: AsAsyncJobId
  parent: Dropbox.Api.Files.RelocationBatchV2Launch
  langs:
  - csharp
  - vb
  name: AsAsyncJobId
  nameWithType: RelocationBatchV2Launch.AsAsyncJobId
  fullName: Dropbox.Api.Files.RelocationBatchV2Launch.AsAsyncJobId
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchV2Launch.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsAsyncJobId
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/RelocationBatchV2Launch.cs
    startLine: 76
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a AsyncJobId, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public RelocationBatchV2Launch.AsyncJobId AsAsyncJobId { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.RelocationBatchV2Launch.AsyncJobId
    content.vb: Public ReadOnly Property AsAsyncJobId As RelocationBatchV2Launch.AsyncJobId
  overload: Dropbox.Api.Files.RelocationBatchV2Launch.AsAsyncJobId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Files.Routes.FilesUserRoutes.CopyBatchV2Async(Dropbox.Api.Files.RelocationBatchArgBase)
  commentId: M:Dropbox.Api.Files.Routes.FilesUserRoutes.CopyBatchV2Async(Dropbox.Api.Files.RelocationBatchArgBase)
  isExternal: true
- uid: Dropbox.Api.Files.Routes.FilesUserRoutes.MoveBatchV2Async(Dropbox.Api.Files.MoveBatchArg)
  commentId: M:Dropbox.Api.Files.Routes.FilesUserRoutes.MoveBatchV2Async(Dropbox.Api.Files.MoveBatchArg)
  isExternal: true
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Files.RelocationBatchV2Launch
  commentId: T:Dropbox.Api.Files.RelocationBatchV2Launch
  parent: Dropbox.Api.Files
  name: RelocationBatchV2Launch
  nameWithType: RelocationBatchV2Launch
  fullName: Dropbox.Api.Files.RelocationBatchV2Launch
- uid: Dropbox.Api.Files.RelocationBatchV2Launch.#ctor*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchV2Launch.#ctor
  name: RelocationBatchV2Launch
  nameWithType: RelocationBatchV2Launch.RelocationBatchV2Launch
  fullName: Dropbox.Api.Files.RelocationBatchV2Launch.RelocationBatchV2Launch
- uid: Dropbox.Api.Files.RelocationBatchV2Launch.IsComplete*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchV2Launch.IsComplete
  name: IsComplete
  nameWithType: RelocationBatchV2Launch.IsComplete
  fullName: Dropbox.Api.Files.RelocationBatchV2Launch.IsComplete
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Files.RelocationBatchV2Launch.AsComplete*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchV2Launch.AsComplete
  name: AsComplete
  nameWithType: RelocationBatchV2Launch.AsComplete
  fullName: Dropbox.Api.Files.RelocationBatchV2Launch.AsComplete
- uid: Dropbox.Api.Files.RelocationBatchV2Launch.Complete
  commentId: T:Dropbox.Api.Files.RelocationBatchV2Launch.Complete
  parent: Dropbox.Api.Files
  name: RelocationBatchV2Launch.Complete
  nameWithType: RelocationBatchV2Launch.Complete
  fullName: Dropbox.Api.Files.RelocationBatchV2Launch.Complete
- uid: Dropbox.Api.Files.RelocationBatchV2Launch.IsAsyncJobId*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchV2Launch.IsAsyncJobId
  name: IsAsyncJobId
  nameWithType: RelocationBatchV2Launch.IsAsyncJobId
  fullName: Dropbox.Api.Files.RelocationBatchV2Launch.IsAsyncJobId
- uid: Dropbox.Api.Files.RelocationBatchV2Launch.AsAsyncJobId*
  commentId: Overload:Dropbox.Api.Files.RelocationBatchV2Launch.AsAsyncJobId
  name: AsAsyncJobId
  nameWithType: RelocationBatchV2Launch.AsAsyncJobId
  fullName: Dropbox.Api.Files.RelocationBatchV2Launch.AsAsyncJobId
- uid: Dropbox.Api.Files.RelocationBatchV2Launch.AsyncJobId
  commentId: T:Dropbox.Api.Files.RelocationBatchV2Launch.AsyncJobId
  parent: Dropbox.Api.Files
  name: RelocationBatchV2Launch.AsyncJobId
  nameWithType: RelocationBatchV2Launch.AsyncJobId
  fullName: Dropbox.Api.Files.RelocationBatchV2Launch.AsyncJobId
shouldSkipMarkup: true
