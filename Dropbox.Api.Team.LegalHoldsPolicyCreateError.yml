### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyCreateError
  id: LegalHoldsPolicyCreateError
  parent: Dropbox.Api.Team
  children:
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.#ctor
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsEmptyMembersList
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInsufficientPermissions
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInvalidDate
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInvalidMembers
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsNameMustBeUnique
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsOther
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsStartDateIsLaterThanEndDate
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsTeamExceededLegalHoldQuota
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsTransientError
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsUnknownLegalHoldError
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsEmptyMembersList
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInsufficientPermissions
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInvalidDate
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInvalidMembers
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsNameMustBeUnique
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsOther
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsStartDateIsLaterThanEndDate
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsTeamExceededLegalHoldQuota
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsTransientError
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsUnknownLegalHoldError
  langs:
  - csharp
  - vb
  name: LegalHoldsPolicyCreateError
  nameWithType: LegalHoldsPolicyCreateError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: LegalHoldsPolicyCreateError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>The legal holds policy create error object</p>\n"
  example: []
  syntax:
    content: 'public class LegalHoldsPolicyCreateError : object'
    content.vb: >-
      Public Class LegalHoldsPolicyCreateError
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.EmptyMembersList
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.InsufficientPermissions
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.InvalidDate
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.InvalidMembers
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.NameMustBeUnique
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.NumberOfUsersOnHoldIsGreaterThanHoldLimitation
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.Other
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.StartDateIsLaterThanEndDate
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.TeamExceededLegalHoldQuota
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.TransientError
  - Dropbox.Api.Team.LegalHoldsPolicyCreateError.UnknownLegalHoldError
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.#ctor
  commentId: M:Dropbox.Api.Team.LegalHoldsPolicyCreateError.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: LegalHoldsPolicyCreateError()
  nameWithType: LegalHoldsPolicyCreateError.LegalHoldsPolicyCreateError()
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.LegalHoldsPolicyCreateError()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Team.LegalHoldsPolicyCreateError\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyCreateError()
    content.vb: Public Sub New
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsStartDateIsLaterThanEndDate
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsStartDateIsLaterThanEndDate
  id: IsStartDateIsLaterThanEndDate
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: IsStartDateIsLaterThanEndDate
  nameWithType: LegalHoldsPolicyCreateError.IsStartDateIsLaterThanEndDate
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsStartDateIsLaterThanEndDate
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsStartDateIsLaterThanEndDate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 41
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is\nStartDateIsLaterThanEndDate</p>\n"
  example: []
  syntax:
    content: public bool IsStartDateIsLaterThanEndDate { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsStartDateIsLaterThanEndDate As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsStartDateIsLaterThanEndDate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsStartDateIsLaterThanEndDate
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsStartDateIsLaterThanEndDate
  id: AsStartDateIsLaterThanEndDate
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: AsStartDateIsLaterThanEndDate
  nameWithType: LegalHoldsPolicyCreateError.AsStartDateIsLaterThanEndDate
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsStartDateIsLaterThanEndDate
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsStartDateIsLaterThanEndDate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 52
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a StartDateIsLaterThanEndDate, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyCreateError.StartDateIsLaterThanEndDate AsStartDateIsLaterThanEndDate { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyCreateError.StartDateIsLaterThanEndDate
    content.vb: Public ReadOnly Property AsStartDateIsLaterThanEndDate As LegalHoldsPolicyCreateError.StartDateIsLaterThanEndDate
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsStartDateIsLaterThanEndDate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsEmptyMembersList
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsEmptyMembersList
  id: IsEmptyMembersList
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: IsEmptyMembersList
  nameWithType: LegalHoldsPolicyCreateError.IsEmptyMembersList
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsEmptyMembersList
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsEmptyMembersList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 63
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is EmptyMembersList</p>\n"
  example: []
  syntax:
    content: public bool IsEmptyMembersList { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmptyMembersList As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsEmptyMembersList*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsEmptyMembersList
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsEmptyMembersList
  id: AsEmptyMembersList
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: AsEmptyMembersList
  nameWithType: LegalHoldsPolicyCreateError.AsEmptyMembersList
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsEmptyMembersList
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsEmptyMembersList
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 74
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a EmptyMembersList, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyCreateError.EmptyMembersList AsEmptyMembersList { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyCreateError.EmptyMembersList
    content.vb: Public ReadOnly Property AsEmptyMembersList As LegalHoldsPolicyCreateError.EmptyMembersList
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsEmptyMembersList*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInvalidMembers
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInvalidMembers
  id: IsInvalidMembers
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: IsInvalidMembers
  nameWithType: LegalHoldsPolicyCreateError.IsInvalidMembers
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInvalidMembers
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsInvalidMembers
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 85
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is InvalidMembers</p>\n"
  example: []
  syntax:
    content: public bool IsInvalidMembers { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInvalidMembers As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInvalidMembers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInvalidMembers
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInvalidMembers
  id: AsInvalidMembers
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: AsInvalidMembers
  nameWithType: LegalHoldsPolicyCreateError.AsInvalidMembers
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInvalidMembers
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsInvalidMembers
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 96
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a InvalidMembers, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyCreateError.InvalidMembers AsInvalidMembers { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyCreateError.InvalidMembers
    content.vb: Public ReadOnly Property AsInvalidMembers As LegalHoldsPolicyCreateError.InvalidMembers
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInvalidMembers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  id: IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  nameWithType: LegalHoldsPolicyCreateError.IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 108
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is\nNumberOfUsersOnHoldIsGreaterThanHoldLimitation</p>\n"
  example: []
  syntax:
    content: public bool IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  id: AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  nameWithType: LegalHoldsPolicyCreateError.AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 120
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a NumberOfUsersOnHoldIsGreaterThanHoldLimitation, or\n<code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyCreateError.NumberOfUsersOnHoldIsGreaterThanHoldLimitation AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyCreateError.NumberOfUsersOnHoldIsGreaterThanHoldLimitation
    content.vb: Public ReadOnly Property AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation As LegalHoldsPolicyCreateError.NumberOfUsersOnHoldIsGreaterThanHoldLimitation
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsTransientError
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsTransientError
  id: IsTransientError
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: IsTransientError
  nameWithType: LegalHoldsPolicyCreateError.IsTransientError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsTransientError
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsTransientError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 131
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is TransientError</p>\n"
  example: []
  syntax:
    content: public bool IsTransientError { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTransientError As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsTransientError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsTransientError
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsTransientError
  id: AsTransientError
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: AsTransientError
  nameWithType: LegalHoldsPolicyCreateError.AsTransientError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsTransientError
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsTransientError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 142
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a TransientError, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyCreateError.TransientError AsTransientError { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyCreateError.TransientError
    content.vb: Public ReadOnly Property AsTransientError As LegalHoldsPolicyCreateError.TransientError
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsTransientError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsNameMustBeUnique
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsNameMustBeUnique
  id: IsNameMustBeUnique
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: IsNameMustBeUnique
  nameWithType: LegalHoldsPolicyCreateError.IsNameMustBeUnique
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsNameMustBeUnique
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsNameMustBeUnique
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 153
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is NameMustBeUnique</p>\n"
  example: []
  syntax:
    content: public bool IsNameMustBeUnique { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNameMustBeUnique As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsNameMustBeUnique*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsNameMustBeUnique
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsNameMustBeUnique
  id: AsNameMustBeUnique
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: AsNameMustBeUnique
  nameWithType: LegalHoldsPolicyCreateError.AsNameMustBeUnique
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsNameMustBeUnique
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsNameMustBeUnique
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 164
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a NameMustBeUnique, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyCreateError.NameMustBeUnique AsNameMustBeUnique { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyCreateError.NameMustBeUnique
    content.vb: Public ReadOnly Property AsNameMustBeUnique As LegalHoldsPolicyCreateError.NameMustBeUnique
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsNameMustBeUnique*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsTeamExceededLegalHoldQuota
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsTeamExceededLegalHoldQuota
  id: IsTeamExceededLegalHoldQuota
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: IsTeamExceededLegalHoldQuota
  nameWithType: LegalHoldsPolicyCreateError.IsTeamExceededLegalHoldQuota
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsTeamExceededLegalHoldQuota
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsTeamExceededLegalHoldQuota
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 176
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is\nTeamExceededLegalHoldQuota</p>\n"
  example: []
  syntax:
    content: public bool IsTeamExceededLegalHoldQuota { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTeamExceededLegalHoldQuota As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsTeamExceededLegalHoldQuota*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsTeamExceededLegalHoldQuota
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsTeamExceededLegalHoldQuota
  id: AsTeamExceededLegalHoldQuota
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: AsTeamExceededLegalHoldQuota
  nameWithType: LegalHoldsPolicyCreateError.AsTeamExceededLegalHoldQuota
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsTeamExceededLegalHoldQuota
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsTeamExceededLegalHoldQuota
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 187
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a TeamExceededLegalHoldQuota, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyCreateError.TeamExceededLegalHoldQuota AsTeamExceededLegalHoldQuota { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyCreateError.TeamExceededLegalHoldQuota
    content.vb: Public ReadOnly Property AsTeamExceededLegalHoldQuota As LegalHoldsPolicyCreateError.TeamExceededLegalHoldQuota
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsTeamExceededLegalHoldQuota*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInvalidDate
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInvalidDate
  id: IsInvalidDate
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: IsInvalidDate
  nameWithType: LegalHoldsPolicyCreateError.IsInvalidDate
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInvalidDate
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsInvalidDate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 198
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is InvalidDate</p>\n"
  example: []
  syntax:
    content: public bool IsInvalidDate { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInvalidDate As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInvalidDate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInvalidDate
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInvalidDate
  id: AsInvalidDate
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: AsInvalidDate
  nameWithType: LegalHoldsPolicyCreateError.AsInvalidDate
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInvalidDate
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsInvalidDate
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 209
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a InvalidDate, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyCreateError.InvalidDate AsInvalidDate { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyCreateError.InvalidDate
    content.vb: Public ReadOnly Property AsInvalidDate As LegalHoldsPolicyCreateError.InvalidDate
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInvalidDate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsUnknownLegalHoldError
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsUnknownLegalHoldError
  id: IsUnknownLegalHoldError
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: IsUnknownLegalHoldError
  nameWithType: LegalHoldsPolicyCreateError.IsUnknownLegalHoldError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsUnknownLegalHoldError
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsUnknownLegalHoldError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 220
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is UnknownLegalHoldError</p>\n"
  example: []
  syntax:
    content: public bool IsUnknownLegalHoldError { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUnknownLegalHoldError As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsUnknownLegalHoldError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsUnknownLegalHoldError
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsUnknownLegalHoldError
  id: AsUnknownLegalHoldError
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: AsUnknownLegalHoldError
  nameWithType: LegalHoldsPolicyCreateError.AsUnknownLegalHoldError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsUnknownLegalHoldError
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsUnknownLegalHoldError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 231
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a UnknownLegalHoldError, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyCreateError.UnknownLegalHoldError AsUnknownLegalHoldError { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyCreateError.UnknownLegalHoldError
    content.vb: Public ReadOnly Property AsUnknownLegalHoldError As LegalHoldsPolicyCreateError.UnknownLegalHoldError
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsUnknownLegalHoldError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInsufficientPermissions
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInsufficientPermissions
  id: IsInsufficientPermissions
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: IsInsufficientPermissions
  nameWithType: LegalHoldsPolicyCreateError.IsInsufficientPermissions
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInsufficientPermissions
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsInsufficientPermissions
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 243
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is\nInsufficientPermissions</p>\n"
  example: []
  syntax:
    content: public bool IsInsufficientPermissions { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInsufficientPermissions As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInsufficientPermissions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInsufficientPermissions
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInsufficientPermissions
  id: AsInsufficientPermissions
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: AsInsufficientPermissions
  nameWithType: LegalHoldsPolicyCreateError.AsInsufficientPermissions
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInsufficientPermissions
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsInsufficientPermissions
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 254
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a InsufficientPermissions, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyCreateError.InsufficientPermissions AsInsufficientPermissions { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyCreateError.InsufficientPermissions
    content.vb: Public ReadOnly Property AsInsufficientPermissions As LegalHoldsPolicyCreateError.InsufficientPermissions
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInsufficientPermissions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsOther
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsOther
  id: IsOther
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: LegalHoldsPolicyCreateError.IsOther
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 265
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsOther
  commentId: P:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsOther
  id: AsOther
  parent: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: LegalHoldsPolicyCreateError.AsOther
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/LegalHoldsPolicyCreateError.cs
    startLine: 276
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public LegalHoldsPolicyCreateError.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.LegalHoldsPolicyCreateError.Other
    content.vb: Public ReadOnly Property AsOther As LegalHoldsPolicyCreateError.Other
  overload: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Team
  commentId: N:Dropbox.Api.Team
  name: Dropbox.Api.Team
  nameWithType: Dropbox.Api.Team
  fullName: Dropbox.Api.Team
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyCreateError
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyCreateError
  nameWithType: LegalHoldsPolicyCreateError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.#ctor*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.#ctor
  name: LegalHoldsPolicyCreateError
  nameWithType: LegalHoldsPolicyCreateError.LegalHoldsPolicyCreateError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.LegalHoldsPolicyCreateError
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsStartDateIsLaterThanEndDate*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsStartDateIsLaterThanEndDate
  name: IsStartDateIsLaterThanEndDate
  nameWithType: LegalHoldsPolicyCreateError.IsStartDateIsLaterThanEndDate
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsStartDateIsLaterThanEndDate
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsStartDateIsLaterThanEndDate*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsStartDateIsLaterThanEndDate
  name: AsStartDateIsLaterThanEndDate
  nameWithType: LegalHoldsPolicyCreateError.AsStartDateIsLaterThanEndDate
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsStartDateIsLaterThanEndDate
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.StartDateIsLaterThanEndDate
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyCreateError.StartDateIsLaterThanEndDate
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyCreateError.StartDateIsLaterThanEndDate
  nameWithType: LegalHoldsPolicyCreateError.StartDateIsLaterThanEndDate
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.StartDateIsLaterThanEndDate
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsEmptyMembersList*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsEmptyMembersList
  name: IsEmptyMembersList
  nameWithType: LegalHoldsPolicyCreateError.IsEmptyMembersList
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsEmptyMembersList
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsEmptyMembersList*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsEmptyMembersList
  name: AsEmptyMembersList
  nameWithType: LegalHoldsPolicyCreateError.AsEmptyMembersList
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsEmptyMembersList
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.EmptyMembersList
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyCreateError.EmptyMembersList
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyCreateError.EmptyMembersList
  nameWithType: LegalHoldsPolicyCreateError.EmptyMembersList
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.EmptyMembersList
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInvalidMembers*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInvalidMembers
  name: IsInvalidMembers
  nameWithType: LegalHoldsPolicyCreateError.IsInvalidMembers
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInvalidMembers
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInvalidMembers*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInvalidMembers
  name: AsInvalidMembers
  nameWithType: LegalHoldsPolicyCreateError.AsInvalidMembers
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInvalidMembers
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.InvalidMembers
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyCreateError.InvalidMembers
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyCreateError.InvalidMembers
  nameWithType: LegalHoldsPolicyCreateError.InvalidMembers
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.InvalidMembers
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  name: IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  nameWithType: LegalHoldsPolicyCreateError.IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  name: AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  nameWithType: LegalHoldsPolicyCreateError.AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsNumberOfUsersOnHoldIsGreaterThanHoldLimitation
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.NumberOfUsersOnHoldIsGreaterThanHoldLimitation
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyCreateError.NumberOfUsersOnHoldIsGreaterThanHoldLimitation
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyCreateError.NumberOfUsersOnHoldIsGreaterThanHoldLimitation
  nameWithType: LegalHoldsPolicyCreateError.NumberOfUsersOnHoldIsGreaterThanHoldLimitation
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.NumberOfUsersOnHoldIsGreaterThanHoldLimitation
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsTransientError*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsTransientError
  name: IsTransientError
  nameWithType: LegalHoldsPolicyCreateError.IsTransientError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsTransientError
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsTransientError*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsTransientError
  name: AsTransientError
  nameWithType: LegalHoldsPolicyCreateError.AsTransientError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsTransientError
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.TransientError
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyCreateError.TransientError
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyCreateError.TransientError
  nameWithType: LegalHoldsPolicyCreateError.TransientError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.TransientError
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsNameMustBeUnique*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsNameMustBeUnique
  name: IsNameMustBeUnique
  nameWithType: LegalHoldsPolicyCreateError.IsNameMustBeUnique
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsNameMustBeUnique
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsNameMustBeUnique*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsNameMustBeUnique
  name: AsNameMustBeUnique
  nameWithType: LegalHoldsPolicyCreateError.AsNameMustBeUnique
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsNameMustBeUnique
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.NameMustBeUnique
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyCreateError.NameMustBeUnique
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyCreateError.NameMustBeUnique
  nameWithType: LegalHoldsPolicyCreateError.NameMustBeUnique
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.NameMustBeUnique
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsTeamExceededLegalHoldQuota*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsTeamExceededLegalHoldQuota
  name: IsTeamExceededLegalHoldQuota
  nameWithType: LegalHoldsPolicyCreateError.IsTeamExceededLegalHoldQuota
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsTeamExceededLegalHoldQuota
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsTeamExceededLegalHoldQuota*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsTeamExceededLegalHoldQuota
  name: AsTeamExceededLegalHoldQuota
  nameWithType: LegalHoldsPolicyCreateError.AsTeamExceededLegalHoldQuota
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsTeamExceededLegalHoldQuota
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.TeamExceededLegalHoldQuota
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyCreateError.TeamExceededLegalHoldQuota
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyCreateError.TeamExceededLegalHoldQuota
  nameWithType: LegalHoldsPolicyCreateError.TeamExceededLegalHoldQuota
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.TeamExceededLegalHoldQuota
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInvalidDate*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInvalidDate
  name: IsInvalidDate
  nameWithType: LegalHoldsPolicyCreateError.IsInvalidDate
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInvalidDate
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInvalidDate*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInvalidDate
  name: AsInvalidDate
  nameWithType: LegalHoldsPolicyCreateError.AsInvalidDate
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInvalidDate
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.InvalidDate
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyCreateError.InvalidDate
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyCreateError.InvalidDate
  nameWithType: LegalHoldsPolicyCreateError.InvalidDate
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.InvalidDate
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsUnknownLegalHoldError*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsUnknownLegalHoldError
  name: IsUnknownLegalHoldError
  nameWithType: LegalHoldsPolicyCreateError.IsUnknownLegalHoldError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsUnknownLegalHoldError
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsUnknownLegalHoldError*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsUnknownLegalHoldError
  name: AsUnknownLegalHoldError
  nameWithType: LegalHoldsPolicyCreateError.AsUnknownLegalHoldError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsUnknownLegalHoldError
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.UnknownLegalHoldError
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyCreateError.UnknownLegalHoldError
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyCreateError.UnknownLegalHoldError
  nameWithType: LegalHoldsPolicyCreateError.UnknownLegalHoldError
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.UnknownLegalHoldError
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInsufficientPermissions*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInsufficientPermissions
  name: IsInsufficientPermissions
  nameWithType: LegalHoldsPolicyCreateError.IsInsufficientPermissions
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsInsufficientPermissions
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInsufficientPermissions*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInsufficientPermissions
  name: AsInsufficientPermissions
  nameWithType: LegalHoldsPolicyCreateError.AsInsufficientPermissions
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsInsufficientPermissions
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.InsufficientPermissions
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyCreateError.InsufficientPermissions
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyCreateError.InsufficientPermissions
  nameWithType: LegalHoldsPolicyCreateError.InsufficientPermissions
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.InsufficientPermissions
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsOther*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsOther
  name: IsOther
  nameWithType: LegalHoldsPolicyCreateError.IsOther
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.IsOther
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsOther*
  commentId: Overload:Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsOther
  name: AsOther
  nameWithType: LegalHoldsPolicyCreateError.AsOther
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.AsOther
- uid: Dropbox.Api.Team.LegalHoldsPolicyCreateError.Other
  commentId: T:Dropbox.Api.Team.LegalHoldsPolicyCreateError.Other
  parent: Dropbox.Api.Team
  name: LegalHoldsPolicyCreateError.Other
  nameWithType: LegalHoldsPolicyCreateError.Other
  fullName: Dropbox.Api.Team.LegalHoldsPolicyCreateError.Other
shouldSkipMarkup: true
