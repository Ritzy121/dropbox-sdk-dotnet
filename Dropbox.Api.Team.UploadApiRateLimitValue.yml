### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Team.UploadApiRateLimitValue
  commentId: T:Dropbox.Api.Team.UploadApiRateLimitValue
  id: UploadApiRateLimitValue
  parent: Dropbox.Api.Team
  children:
  - Dropbox.Api.Team.UploadApiRateLimitValue.#ctor
  - Dropbox.Api.Team.UploadApiRateLimitValue.AsLimit
  - Dropbox.Api.Team.UploadApiRateLimitValue.AsOther
  - Dropbox.Api.Team.UploadApiRateLimitValue.AsUnlimited
  - Dropbox.Api.Team.UploadApiRateLimitValue.IsLimit
  - Dropbox.Api.Team.UploadApiRateLimitValue.IsOther
  - Dropbox.Api.Team.UploadApiRateLimitValue.IsUnlimited
  langs:
  - csharp
  - vb
  name: UploadApiRateLimitValue
  nameWithType: UploadApiRateLimitValue
  fullName: Dropbox.Api.Team.UploadApiRateLimitValue
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/UploadApiRateLimitValue.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: UploadApiRateLimitValue
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/UploadApiRateLimitValue.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>The value for <xref href=\"Dropbox.Api.Team.Feature.UploadApiRateLimit\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: 'public class UploadApiRateLimitValue : object'
    content.vb: >-
      Public Class UploadApiRateLimitValue
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Team.UploadApiRateLimitValue.Limit
  - Dropbox.Api.Team.UploadApiRateLimitValue.Other
  - Dropbox.Api.Team.UploadApiRateLimitValue.Unlimited
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Team.UploadApiRateLimitValue.#ctor
  commentId: M:Dropbox.Api.Team.UploadApiRateLimitValue.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Team.UploadApiRateLimitValue
  langs:
  - csharp
  - vb
  name: UploadApiRateLimitValue()
  nameWithType: UploadApiRateLimitValue.UploadApiRateLimitValue()
  fullName: Dropbox.Api.Team.UploadApiRateLimitValue.UploadApiRateLimitValue()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/UploadApiRateLimitValue.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/UploadApiRateLimitValue.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Team.UploadApiRateLimitValue\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public UploadApiRateLimitValue()
    content.vb: Public Sub New
  overload: Dropbox.Api.Team.UploadApiRateLimitValue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Team.UploadApiRateLimitValue.IsUnlimited
  commentId: P:Dropbox.Api.Team.UploadApiRateLimitValue.IsUnlimited
  id: IsUnlimited
  parent: Dropbox.Api.Team.UploadApiRateLimitValue
  langs:
  - csharp
  - vb
  name: IsUnlimited
  nameWithType: UploadApiRateLimitValue.IsUnlimited
  fullName: Dropbox.Api.Team.UploadApiRateLimitValue.IsUnlimited
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/UploadApiRateLimitValue.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsUnlimited
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/UploadApiRateLimitValue.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is Unlimited</p>\n"
  example: []
  syntax:
    content: public bool IsUnlimited { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUnlimited As Boolean
  overload: Dropbox.Api.Team.UploadApiRateLimitValue.IsUnlimited*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.UploadApiRateLimitValue.AsUnlimited
  commentId: P:Dropbox.Api.Team.UploadApiRateLimitValue.AsUnlimited
  id: AsUnlimited
  parent: Dropbox.Api.Team.UploadApiRateLimitValue
  langs:
  - csharp
  - vb
  name: AsUnlimited
  nameWithType: UploadApiRateLimitValue.AsUnlimited
  fullName: Dropbox.Api.Team.UploadApiRateLimitValue.AsUnlimited
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/UploadApiRateLimitValue.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsUnlimited
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/UploadApiRateLimitValue.cs
    startLine: 51
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a Unlimited, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public UploadApiRateLimitValue.Unlimited AsUnlimited { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.UploadApiRateLimitValue.Unlimited
    content.vb: Public ReadOnly Property AsUnlimited As UploadApiRateLimitValue.Unlimited
  overload: Dropbox.Api.Team.UploadApiRateLimitValue.AsUnlimited*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.UploadApiRateLimitValue.IsLimit
  commentId: P:Dropbox.Api.Team.UploadApiRateLimitValue.IsLimit
  id: IsLimit
  parent: Dropbox.Api.Team.UploadApiRateLimitValue
  langs:
  - csharp
  - vb
  name: IsLimit
  nameWithType: UploadApiRateLimitValue.IsLimit
  fullName: Dropbox.Api.Team.UploadApiRateLimitValue.IsLimit
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/UploadApiRateLimitValue.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsLimit
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/UploadApiRateLimitValue.cs
    startLine: 62
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is Limit</p>\n"
  example: []
  syntax:
    content: public bool IsLimit { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLimit As Boolean
  overload: Dropbox.Api.Team.UploadApiRateLimitValue.IsLimit*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.UploadApiRateLimitValue.AsLimit
  commentId: P:Dropbox.Api.Team.UploadApiRateLimitValue.AsLimit
  id: AsLimit
  parent: Dropbox.Api.Team.UploadApiRateLimitValue
  langs:
  - csharp
  - vb
  name: AsLimit
  nameWithType: UploadApiRateLimitValue.AsLimit
  fullName: Dropbox.Api.Team.UploadApiRateLimitValue.AsLimit
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/UploadApiRateLimitValue.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsLimit
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/UploadApiRateLimitValue.cs
    startLine: 73
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a Limit, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public UploadApiRateLimitValue.Limit AsLimit { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.UploadApiRateLimitValue.Limit
    content.vb: Public ReadOnly Property AsLimit As UploadApiRateLimitValue.Limit
  overload: Dropbox.Api.Team.UploadApiRateLimitValue.AsLimit*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.UploadApiRateLimitValue.IsOther
  commentId: P:Dropbox.Api.Team.UploadApiRateLimitValue.IsOther
  id: IsOther
  parent: Dropbox.Api.Team.UploadApiRateLimitValue
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: UploadApiRateLimitValue.IsOther
  fullName: Dropbox.Api.Team.UploadApiRateLimitValue.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/UploadApiRateLimitValue.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/UploadApiRateLimitValue.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.Team.UploadApiRateLimitValue.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Team.UploadApiRateLimitValue.AsOther
  commentId: P:Dropbox.Api.Team.UploadApiRateLimitValue.AsOther
  id: AsOther
  parent: Dropbox.Api.Team.UploadApiRateLimitValue
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: UploadApiRateLimitValue.AsOther
  fullName: Dropbox.Api.Team.UploadApiRateLimitValue.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/UploadApiRateLimitValue.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Team/UploadApiRateLimitValue.cs
    startLine: 95
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Team
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public UploadApiRateLimitValue.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.Team.UploadApiRateLimitValue.Other
    content.vb: Public ReadOnly Property AsOther As UploadApiRateLimitValue.Other
  overload: Dropbox.Api.Team.UploadApiRateLimitValue.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Team.Feature.UploadApiRateLimit
  commentId: T:Dropbox.Api.Team.Feature.UploadApiRateLimit
  parent: Dropbox.Api.Team
  name: Feature.UploadApiRateLimit
  nameWithType: Feature.UploadApiRateLimit
  fullName: Dropbox.Api.Team.Feature.UploadApiRateLimit
- uid: Dropbox.Api.Team
  commentId: N:Dropbox.Api.Team
  name: Dropbox.Api.Team
  nameWithType: Dropbox.Api.Team
  fullName: Dropbox.Api.Team
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Team.UploadApiRateLimitValue
  commentId: T:Dropbox.Api.Team.UploadApiRateLimitValue
  parent: Dropbox.Api.Team
  name: UploadApiRateLimitValue
  nameWithType: UploadApiRateLimitValue
  fullName: Dropbox.Api.Team.UploadApiRateLimitValue
- uid: Dropbox.Api.Team.UploadApiRateLimitValue.#ctor*
  commentId: Overload:Dropbox.Api.Team.UploadApiRateLimitValue.#ctor
  name: UploadApiRateLimitValue
  nameWithType: UploadApiRateLimitValue.UploadApiRateLimitValue
  fullName: Dropbox.Api.Team.UploadApiRateLimitValue.UploadApiRateLimitValue
- uid: Dropbox.Api.Team.UploadApiRateLimitValue.IsUnlimited*
  commentId: Overload:Dropbox.Api.Team.UploadApiRateLimitValue.IsUnlimited
  name: IsUnlimited
  nameWithType: UploadApiRateLimitValue.IsUnlimited
  fullName: Dropbox.Api.Team.UploadApiRateLimitValue.IsUnlimited
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Team.UploadApiRateLimitValue.AsUnlimited*
  commentId: Overload:Dropbox.Api.Team.UploadApiRateLimitValue.AsUnlimited
  name: AsUnlimited
  nameWithType: UploadApiRateLimitValue.AsUnlimited
  fullName: Dropbox.Api.Team.UploadApiRateLimitValue.AsUnlimited
- uid: Dropbox.Api.Team.UploadApiRateLimitValue.Unlimited
  commentId: T:Dropbox.Api.Team.UploadApiRateLimitValue.Unlimited
  parent: Dropbox.Api.Team
  name: UploadApiRateLimitValue.Unlimited
  nameWithType: UploadApiRateLimitValue.Unlimited
  fullName: Dropbox.Api.Team.UploadApiRateLimitValue.Unlimited
- uid: Dropbox.Api.Team.UploadApiRateLimitValue.IsLimit*
  commentId: Overload:Dropbox.Api.Team.UploadApiRateLimitValue.IsLimit
  name: IsLimit
  nameWithType: UploadApiRateLimitValue.IsLimit
  fullName: Dropbox.Api.Team.UploadApiRateLimitValue.IsLimit
- uid: Dropbox.Api.Team.UploadApiRateLimitValue.AsLimit*
  commentId: Overload:Dropbox.Api.Team.UploadApiRateLimitValue.AsLimit
  name: AsLimit
  nameWithType: UploadApiRateLimitValue.AsLimit
  fullName: Dropbox.Api.Team.UploadApiRateLimitValue.AsLimit
- uid: Dropbox.Api.Team.UploadApiRateLimitValue.Limit
  commentId: T:Dropbox.Api.Team.UploadApiRateLimitValue.Limit
  parent: Dropbox.Api.Team
  name: UploadApiRateLimitValue.Limit
  nameWithType: UploadApiRateLimitValue.Limit
  fullName: Dropbox.Api.Team.UploadApiRateLimitValue.Limit
- uid: Dropbox.Api.Team.UploadApiRateLimitValue.IsOther*
  commentId: Overload:Dropbox.Api.Team.UploadApiRateLimitValue.IsOther
  name: IsOther
  nameWithType: UploadApiRateLimitValue.IsOther
  fullName: Dropbox.Api.Team.UploadApiRateLimitValue.IsOther
- uid: Dropbox.Api.Team.UploadApiRateLimitValue.AsOther*
  commentId: Overload:Dropbox.Api.Team.UploadApiRateLimitValue.AsOther
  name: AsOther
  nameWithType: UploadApiRateLimitValue.AsOther
  fullName: Dropbox.Api.Team.UploadApiRateLimitValue.AsOther
- uid: Dropbox.Api.Team.UploadApiRateLimitValue.Other
  commentId: T:Dropbox.Api.Team.UploadApiRateLimitValue.Other
  parent: Dropbox.Api.Team
  name: UploadApiRateLimitValue.Other
  nameWithType: UploadApiRateLimitValue.Other
  fullName: Dropbox.Api.Team.UploadApiRateLimitValue.Other
shouldSkipMarkup: true
