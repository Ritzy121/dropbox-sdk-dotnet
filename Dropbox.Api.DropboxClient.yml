### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.DropboxClient
  commentId: T:Dropbox.Api.DropboxClient
  id: DropboxClient
  parent: Dropbox.Api
  children:
  - Dropbox.Api.DropboxClient.#ctor(System.String)
  - Dropbox.Api.DropboxClient.#ctor(System.String,DateTime)
  - Dropbox.Api.DropboxClient.#ctor(System.String,DateTime,Dropbox.Api.DropboxClientConfig)
  - Dropbox.Api.DropboxClient.#ctor(System.String,Dropbox.Api.DropboxClientConfig)
  - Dropbox.Api.DropboxClient.#ctor(System.String,System.String)
  - Dropbox.Api.DropboxClient.#ctor(System.String,System.String,DateTime,System.String)
  - Dropbox.Api.DropboxClient.#ctor(System.String,System.String,DateTime,System.String,Dropbox.Api.DropboxClientConfig)
  - Dropbox.Api.DropboxClient.#ctor(System.String,System.String,DateTime,System.String,System.String)
  - Dropbox.Api.DropboxClient.#ctor(System.String,System.String,DateTime,System.String,System.String,Dropbox.Api.DropboxClientConfig)
  - Dropbox.Api.DropboxClient.#ctor(System.String,System.String,Dropbox.Api.DropboxClientConfig)
  - Dropbox.Api.DropboxClient.#ctor(System.String,System.String,System.String)
  - Dropbox.Api.DropboxClient.#ctor(System.String,System.String,System.String,Dropbox.Api.DropboxClientConfig)
  - Dropbox.Api.DropboxClient.#ctor(System.String,System.String,System.String,System.String,Dropbox.Api.DropboxClientConfig)
  - Dropbox.Api.DropboxClient.Account
  - Dropbox.Api.DropboxClient.Auth
  - Dropbox.Api.DropboxClient.Check
  - Dropbox.Api.DropboxClient.Contacts
  - Dropbox.Api.DropboxClient.FileProperties
  - Dropbox.Api.DropboxClient.FileRequests
  - Dropbox.Api.DropboxClient.Files
  - Dropbox.Api.DropboxClient.Paper
  - Dropbox.Api.DropboxClient.RefreshAccessToken(System.String[])
  - Dropbox.Api.DropboxClient.Sharing
  - Dropbox.Api.DropboxClient.Users
  - Dropbox.Api.DropboxClient.WithPathRoot(Dropbox.Api.Common.PathRoot)
  langs:
  - csharp
  - vb
  name: DropboxClient
  nameWithType: DropboxClient
  fullName: Dropbox.Api.DropboxClient
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: DropboxClient
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
    startLine: 20
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\nThe client which contains endpoints which perform user-level actions.\n"
  example: []
  syntax:
    content: 'public sealed class DropboxClient : DropboxClientBase'
    content.vb: >-
      Public NotInheritable Class DropboxClient
          Inherits DropboxClientBase
  inheritance:
  - System.Object
  - Dropbox.Api.DropboxClientBase
  inheritedMembers:
  - Dropbox.Api.DropboxClientBase.Dispose
  - Dropbox.Api.DropboxClientBase.Dispose(System.Boolean)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Dropbox.Api.DropboxClient.#ctor(System.String)
  commentId: M:Dropbox.Api.DropboxClient.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: DropboxClient(String)
  nameWithType: DropboxClient.DropboxClient(String)
  fullName: Dropbox.Api.DropboxClient.DropboxClient(System.String)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
    startLine: 26
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\nInitializes a new instance of the <xref href=\"Dropbox.Api.DropboxClient\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DropboxClient(string oauth2Token)
    parameters:
    - id: oauth2Token
      type: System.String
      description: The oauth2 access token for making client requests.
    content.vb: Public Sub New(oauth2Token As String)
  overload: Dropbox.Api.DropboxClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.DropboxClient.#ctor(System.String,System.String)
  commentId: M:Dropbox.Api.DropboxClient.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: DropboxClient(String, String)
  nameWithType: DropboxClient.DropboxClient(String, String)
  fullName: Dropbox.Api.DropboxClient.DropboxClient(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
    startLine: 36
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\nInitializes a new instance of the <xref href=\"Dropbox.Api.DropboxClient\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DropboxClient(string oauth2RefreshToken, string appKey)
    parameters:
    - id: oauth2RefreshToken
      type: System.String
      description: The oauth2 access token for making client requests.
    - id: appKey
      type: System.String
      description: The app key to be used for refreshing tokens.
    content.vb: Public Sub New(oauth2RefreshToken As String, appKey As String)
  overload: Dropbox.Api.DropboxClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.DropboxClient.#ctor(System.String,System.String,Dropbox.Api.DropboxClientConfig)
  commentId: M:Dropbox.Api.DropboxClient.#ctor(System.String,System.String,Dropbox.Api.DropboxClientConfig)
  id: '#ctor(System.String,System.String,Dropbox.Api.DropboxClientConfig)'
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: DropboxClient(String, String, DropboxClientConfig)
  nameWithType: DropboxClient.DropboxClient(String, String, DropboxClientConfig)
  fullName: Dropbox.Api.DropboxClient.DropboxClient(System.String, System.String, Dropbox.Api.DropboxClientConfig)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
    startLine: 47
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\nInitializes a new instance of the <xref href=\"Dropbox.Api.DropboxClient\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DropboxClient(string oauth2RefreshToken, string appKey, DropboxClientConfig config)
    parameters:
    - id: oauth2RefreshToken
      type: System.String
      description: The oauth2 access token for making client requests.
    - id: appKey
      type: System.String
      description: The app key to be used for refreshing tokens.
    - id: config
      type: Dropbox.Api.DropboxClientConfig
      description: The <xref href="Dropbox.Api.DropboxClientConfig" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(oauth2RefreshToken As String, appKey As String, config As DropboxClientConfig)
  overload: Dropbox.Api.DropboxClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.DropboxClient.#ctor(System.String,System.String,System.String,Dropbox.Api.DropboxClientConfig)
  commentId: M:Dropbox.Api.DropboxClient.#ctor(System.String,System.String,System.String,Dropbox.Api.DropboxClientConfig)
  id: '#ctor(System.String,System.String,System.String,Dropbox.Api.DropboxClientConfig)'
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: DropboxClient(String, String, String, DropboxClientConfig)
  nameWithType: DropboxClient.DropboxClient(String, String, String, DropboxClientConfig)
  fullName: Dropbox.Api.DropboxClient.DropboxClient(System.String, System.String, System.String, Dropbox.Api.DropboxClientConfig)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
    startLine: 59
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\nInitializes a new instance of the <xref href=\"Dropbox.Api.DropboxClient\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DropboxClient(string oauth2RefreshToken, string appKey, string appSecret, DropboxClientConfig config)
    parameters:
    - id: oauth2RefreshToken
      type: System.String
      description: The oauth2 refresh token for refreshing access tokens.
    - id: appKey
      type: System.String
      description: The app key to be used for refreshing tokens.
    - id: appSecret
      type: System.String
      description: The app secret to be used for refreshing tokens.
    - id: config
      type: Dropbox.Api.DropboxClientConfig
      description: The <xref href="Dropbox.Api.DropboxClientConfig" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(oauth2RefreshToken As String, appKey As String, appSecret As String, config As DropboxClientConfig)
  overload: Dropbox.Api.DropboxClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.DropboxClient.#ctor(System.String,System.String,System.String)
  commentId: M:Dropbox.Api.DropboxClient.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: DropboxClient(String, String, String)
  nameWithType: DropboxClient.DropboxClient(String, String, String)
  fullName: Dropbox.Api.DropboxClient.DropboxClient(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
    startLine: 70
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\nInitializes a new instance of the <xref href=\"Dropbox.Api.DropboxClient\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DropboxClient(string oauth2RefreshToken, string appKey, string appSecret)
    parameters:
    - id: oauth2RefreshToken
      type: System.String
      description: The oauth2 refresh token for refreshing access tokens.
    - id: appKey
      type: System.String
      description: The app key to be used for refreshing tokens.
    - id: appSecret
      type: System.String
      description: The app secret to be used for refreshing tokens.
    content.vb: Public Sub New(oauth2RefreshToken As String, appKey As String, appSecret As String)
  overload: Dropbox.Api.DropboxClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.DropboxClient.#ctor(System.String,Dropbox.Api.DropboxClientConfig)
  commentId: M:Dropbox.Api.DropboxClient.#ctor(System.String,Dropbox.Api.DropboxClientConfig)
  id: '#ctor(System.String,Dropbox.Api.DropboxClientConfig)'
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: DropboxClient(String, DropboxClientConfig)
  nameWithType: DropboxClient.DropboxClient(String, DropboxClientConfig)
  fullName: Dropbox.Api.DropboxClient.DropboxClient(System.String, Dropbox.Api.DropboxClientConfig)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
    startLine: 80
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\nInitializes a new instance of the <xref href=\"Dropbox.Api.DropboxClient\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DropboxClient(string oauth2AccessToken, DropboxClientConfig config)
    parameters:
    - id: oauth2AccessToken
      type: System.String
      description: The oauth2 access token for making client requests.
    - id: config
      type: Dropbox.Api.DropboxClientConfig
      description: The <xref href="Dropbox.Api.DropboxClientConfig" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(oauth2AccessToken As String, config As DropboxClientConfig)
  overload: Dropbox.Api.DropboxClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.DropboxClient.#ctor(System.String,DateTime)
  commentId: M:Dropbox.Api.DropboxClient.#ctor(System.String,DateTime)
  id: '#ctor(System.String,DateTime)'
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: DropboxClient(String, DateTime)
  nameWithType: DropboxClient.DropboxClient(String, DateTime)
  fullName: Dropbox.Api.DropboxClient.DropboxClient(System.String, DateTime)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
    startLine: 90
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\nInitializes a new instance of the <xref href=\"Dropbox.Api.DropboxClient\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DropboxClient(string oauth2AccessToken, DateTime oauth2AccessTokenExpiresAt)
    parameters:
    - id: oauth2AccessToken
      type: System.String
      description: The oauth2 access token for making client requests.
    - id: oauth2AccessTokenExpiresAt
      type: DateTime
      description: The time when the current access token expires, can be null if using long-lived tokens.
    content.vb: Public Sub New(oauth2AccessToken As String, oauth2AccessTokenExpiresAt As DateTime)
  overload: Dropbox.Api.DropboxClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.DropboxClient.#ctor(System.String,DateTime,Dropbox.Api.DropboxClientConfig)
  commentId: M:Dropbox.Api.DropboxClient.#ctor(System.String,DateTime,Dropbox.Api.DropboxClientConfig)
  id: '#ctor(System.String,DateTime,Dropbox.Api.DropboxClientConfig)'
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: DropboxClient(String, DateTime, DropboxClientConfig)
  nameWithType: DropboxClient.DropboxClient(String, DateTime, DropboxClientConfig)
  fullName: Dropbox.Api.DropboxClient.DropboxClient(System.String, DateTime, Dropbox.Api.DropboxClientConfig)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
    startLine: 101
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\nInitializes a new instance of the <xref href=\"Dropbox.Api.DropboxClient\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DropboxClient(string oauth2AccessToken, DateTime oauth2AccessTokenExpiresAt, DropboxClientConfig config)
    parameters:
    - id: oauth2AccessToken
      type: System.String
      description: The oauth2 access token for making client requests.
    - id: oauth2AccessTokenExpiresAt
      type: DateTime
      description: The time when the current access token expires, can be null if using long-lived tokens.
    - id: config
      type: Dropbox.Api.DropboxClientConfig
      description: The <xref href="Dropbox.Api.DropboxClientConfig" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(oauth2AccessToken As String, oauth2AccessTokenExpiresAt As DateTime, config As DropboxClientConfig)
  overload: Dropbox.Api.DropboxClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.DropboxClient.#ctor(System.String,System.String,DateTime,System.String,System.String)
  commentId: M:Dropbox.Api.DropboxClient.#ctor(System.String,System.String,DateTime,System.String,System.String)
  id: '#ctor(System.String,System.String,DateTime,System.String,System.String)'
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: DropboxClient(String, String, DateTime, String, String)
  nameWithType: DropboxClient.DropboxClient(String, String, DateTime, String, String)
  fullName: Dropbox.Api.DropboxClient.DropboxClient(System.String, System.String, DateTime, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
    startLine: 114
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\nInitializes a new instance of the <xref href=\"Dropbox.Api.DropboxClient\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DropboxClient(string oauth2AccessToken, string oauth2RefreshToken, DateTime oauth2AccessTokenExpiresAt, string appKey, string appSecret)
    parameters:
    - id: oauth2AccessToken
      type: System.String
      description: The oauth2 access token for making client requests.
    - id: oauth2RefreshToken
      type: System.String
      description: The oauth2 refresh token for refreshing access tokens.
    - id: oauth2AccessTokenExpiresAt
      type: DateTime
      description: The time when the current access token expires, can be null if using long-lived tokens.
    - id: appKey
      type: System.String
      description: The app key to be used for refreshing tokens.
    - id: appSecret
      type: System.String
      description: The app secret to be used for refreshing tokens.
    content.vb: Public Sub New(oauth2AccessToken As String, oauth2RefreshToken As String, oauth2AccessTokenExpiresAt As DateTime, appKey As String, appSecret As String)
  overload: Dropbox.Api.DropboxClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.DropboxClient.#ctor(System.String,System.String,DateTime,System.String,Dropbox.Api.DropboxClientConfig)
  commentId: M:Dropbox.Api.DropboxClient.#ctor(System.String,System.String,DateTime,System.String,Dropbox.Api.DropboxClientConfig)
  id: '#ctor(System.String,System.String,DateTime,System.String,Dropbox.Api.DropboxClientConfig)'
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: DropboxClient(String, String, DateTime, String, DropboxClientConfig)
  nameWithType: DropboxClient.DropboxClient(String, String, DateTime, String, DropboxClientConfig)
  fullName: Dropbox.Api.DropboxClient.DropboxClient(System.String, System.String, DateTime, System.String, Dropbox.Api.DropboxClientConfig)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
    startLine: 127
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\nInitializes a new instance of the <xref href=\"Dropbox.Api.DropboxClient\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DropboxClient(string oauth2AccessToken, string oauth2RefreshToken, DateTime oauth2AccessTokenExpiresAt, string appKey, DropboxClientConfig config)
    parameters:
    - id: oauth2AccessToken
      type: System.String
      description: The oauth2 access token for making client requests.
    - id: oauth2RefreshToken
      type: System.String
      description: The oauth2 refresh token for refreshing access tokens.
    - id: oauth2AccessTokenExpiresAt
      type: DateTime
      description: The time when the current access token expires, can be null if using long-lived tokens.
    - id: appKey
      type: System.String
      description: The app key to be used for refreshing tokens.
    - id: config
      type: Dropbox.Api.DropboxClientConfig
      description: The <xref href="Dropbox.Api.DropboxClientConfig" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(oauth2AccessToken As String, oauth2RefreshToken As String, oauth2AccessTokenExpiresAt As DateTime, appKey As String, config As DropboxClientConfig)
  overload: Dropbox.Api.DropboxClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.DropboxClient.#ctor(System.String,System.String,DateTime,System.String)
  commentId: M:Dropbox.Api.DropboxClient.#ctor(System.String,System.String,DateTime,System.String)
  id: '#ctor(System.String,System.String,DateTime,System.String)'
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: DropboxClient(String, String, DateTime, String)
  nameWithType: DropboxClient.DropboxClient(String, String, DateTime, String)
  fullName: Dropbox.Api.DropboxClient.DropboxClient(System.String, System.String, DateTime, System.String)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
    startLine: 143
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\nInitializes a new instance of the <xref href=\"Dropbox.Api.DropboxClient\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DropboxClient(string oauth2AccessToken, string oauth2RefreshToken, DateTime oauth2AccessTokenExpiresAt, string appKey)
    parameters:
    - id: oauth2AccessToken
      type: System.String
      description: The oauth2 access token for making client requests.
    - id: oauth2RefreshToken
      type: System.String
      description: The oauth2 refresh token for refreshing access tokens.
    - id: oauth2AccessTokenExpiresAt
      type: DateTime
      description: The time when the current access token expires, can be null if using long-lived tokens.
    - id: appKey
      type: System.String
      description: The app key to be used for refreshing tokens.
    content.vb: Public Sub New(oauth2AccessToken As String, oauth2RefreshToken As String, oauth2AccessTokenExpiresAt As DateTime, appKey As String)
  overload: Dropbox.Api.DropboxClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.DropboxClient.#ctor(System.String,System.String,DateTime,System.String,System.String,Dropbox.Api.DropboxClientConfig)
  commentId: M:Dropbox.Api.DropboxClient.#ctor(System.String,System.String,DateTime,System.String,System.String,Dropbox.Api.DropboxClientConfig)
  id: '#ctor(System.String,System.String,DateTime,System.String,System.String,Dropbox.Api.DropboxClientConfig)'
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: DropboxClient(String, String, DateTime, String, String, DropboxClientConfig)
  nameWithType: DropboxClient.DropboxClient(String, String, DateTime, String, String, DropboxClientConfig)
  fullName: Dropbox.Api.DropboxClient.DropboxClient(System.String, System.String, DateTime, System.String, System.String, Dropbox.Api.DropboxClientConfig)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
    startLine: 157
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\nInitializes a new instance of the <xref href=\"Dropbox.Api.DropboxClient\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DropboxClient(string oauth2AccessToken, string oauth2RefreshToken, DateTime oauth2AccessTokenExpiresAt, string appKey, string appSecret, DropboxClientConfig config)
    parameters:
    - id: oauth2AccessToken
      type: System.String
      description: The oauth2 access token for making client requests.
    - id: oauth2RefreshToken
      type: System.String
      description: The oauth2 refresh token for refreshing access tokens.
    - id: oauth2AccessTokenExpiresAt
      type: DateTime
      description: The time when the current access token expires, can be null if using long-lived tokens.
    - id: appKey
      type: System.String
      description: The app key to be used for refreshing tokens.
    - id: appSecret
      type: System.String
      description: The app secret to be used for refreshing tokens.
    - id: config
      type: Dropbox.Api.DropboxClientConfig
      description: The <xref href="Dropbox.Api.DropboxClientConfig" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(oauth2AccessToken As String, oauth2RefreshToken As String, oauth2AccessTokenExpiresAt As DateTime, appKey As String, appSecret As String, config As DropboxClientConfig)
  overload: Dropbox.Api.DropboxClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.DropboxClient.#ctor(System.String,System.String,System.String,System.String,Dropbox.Api.DropboxClientConfig)
  commentId: M:Dropbox.Api.DropboxClient.#ctor(System.String,System.String,System.String,System.String,Dropbox.Api.DropboxClientConfig)
  id: '#ctor(System.String,System.String,System.String,System.String,Dropbox.Api.DropboxClientConfig)'
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: DropboxClient(String, String, String, String, DropboxClientConfig)
  nameWithType: DropboxClient.DropboxClient(String, String, String, String, DropboxClientConfig)
  fullName: Dropbox.Api.DropboxClient.DropboxClient(System.String, System.String, System.String, System.String, Dropbox.Api.DropboxClientConfig)
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
    startLine: 174
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\nInitializes a new instance of the <xref href=\"Dropbox.Api.DropboxClient\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DropboxClient(string oauth2AccessToken, string oauth2RefreshToken, string appKey, string appSecret, DropboxClientConfig config)
    parameters:
    - id: oauth2AccessToken
      type: System.String
      description: The oauth2 access token for making client requests.
    - id: oauth2RefreshToken
      type: System.String
      description: The oauth2 refresh token for refreshing access tokens.
    - id: appKey
      type: System.String
      description: The app key to be used for refreshing tokens.
    - id: appSecret
      type: System.String
      description: The app secret to be used for refreshing tokens.
    - id: config
      type: Dropbox.Api.DropboxClientConfig
      description: The <xref href="Dropbox.Api.DropboxClientConfig" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(oauth2AccessToken As String, oauth2RefreshToken As String, appKey As String, appSecret As String, config As DropboxClientConfig)
  overload: Dropbox.Api.DropboxClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.DropboxClient.WithPathRoot(Dropbox.Api.Common.PathRoot)
  commentId: M:Dropbox.Api.DropboxClient.WithPathRoot(Dropbox.Api.Common.PathRoot)
  id: WithPathRoot(Dropbox.Api.Common.PathRoot)
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: WithPathRoot(PathRoot)
  nameWithType: DropboxClient.WithPathRoot(PathRoot)
  fullName: Dropbox.Api.DropboxClient.WithPathRoot(Dropbox.Api.Common.PathRoot)
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: WithPathRoot
    path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
    startLine: 244
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\nSet the value for Dropbox-Api-Path-Root header. This allows accessing content outside of user&apos;s\nhome namespace. Below is sample code of accessing content inside team space. See\n<a href=\"https://www.dropbox.com/developers/reference/namespace-guide\">Namespace Guide</a> for details\nabout user space vs team space.\n<pre><code>// Fetch root namespace info from user&apos;s account info.\nvar account = await client.Users.GetCurrentAccountAsync();\n\nif (!account.RootInfo.IsTeam)\n{\n    Console.WriteLine(&quot;This user doesn&apos;t belong to a team with shared space.&quot;);\n}\nelse\n{\n    try\n    {\n        // Point path root to namespace id of team space.\n        client = client.WithPathRoot(new PathRoot.Root(account.RootInfo.RootNamespaceId));\n        await client.Files.ListFolderAsync(path);\n    }\n    catch (PathRootException ex)\n    {\n        // Handle race condition when user switched team.\n        Console.WriteLine(\n            &quot;The user&apos;s root namespace ID has changed to {0}&quot;,\n            ex.ErrorResponse.AsInvalidRoot.Value);\n    }\n}</code></pre>\n"
  example: []
  syntax:
    content: public DropboxClient WithPathRoot(PathRoot pathRoot)
    parameters:
    - id: pathRoot
      type: Dropbox.Api.Common.PathRoot
      description: The path root object.
    return:
      type: Dropbox.Api.DropboxClient
      description: A <xref href="Dropbox.Api.DropboxClient" data-throw-if-not-resolved="false"></xref> instance with Dropbox-Api-Path-Root header set.
    content.vb: Public Function WithPathRoot(pathRoot As PathRoot) As DropboxClient
  overload: Dropbox.Api.DropboxClient.WithPathRoot*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.DropboxClient.RefreshAccessToken(System.String[])
  commentId: M:Dropbox.Api.DropboxClient.RefreshAccessToken(System.String[])
  id: RefreshAccessToken(System.String[])
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: RefreshAccessToken(String[])
  nameWithType: DropboxClient.RefreshAccessToken(String[])
  fullName: Dropbox.Api.DropboxClient.RefreshAccessToken(System.String[])
  type: Method
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: RefreshAccessToken
    path: dropbox-sdk-dotnet/Dropbox.Api/DropboxClient.cs
    startLine: 259
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\nRefreshes access token regardless of if existing token is expired.\n"
  example: []
  syntax:
    content: public Task<bool> RefreshAccessToken(string[] scopeList)
    parameters:
    - id: scopeList
      type: System.String[]
      description: subset of scopes to refresh token with, or null to refresh with all scopes.
    return:
      type: Task{System.Boolean}
      description: true if token is successfully refreshed, false otherwise.
    content.vb: Public Function RefreshAccessToken(scopeList As String()) As Task(Of Boolean)
  overload: Dropbox.Api.DropboxClient.RefreshAccessToken*
  nameWithType.vb: DropboxClient.RefreshAccessToken(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Dropbox.Api.DropboxClient.RefreshAccessToken(System.String())
  name.vb: RefreshAccessToken(String())
- uid: Dropbox.Api.DropboxClient.Account
  commentId: P:Dropbox.Api.DropboxClient.Account
  id: Account
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: Account
  nameWithType: DropboxClient.Account
  fullName: Dropbox.Api.DropboxClient.Account
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Account
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
    startLine: 25
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\n<p>Gets the Account routes.</p>\n"
  example: []
  syntax:
    content: public AccountUserRoutes Account { get; }
    parameters: []
    return:
      type: Dropbox.Api.Account.Routes.AccountUserRoutes
    content.vb: Public ReadOnly Property Account As AccountUserRoutes
  overload: Dropbox.Api.DropboxClient.Account*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.DropboxClient.Auth
  commentId: P:Dropbox.Api.DropboxClient.Auth
  id: Auth
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: Auth
  nameWithType: DropboxClient.Auth
  fullName: Dropbox.Api.DropboxClient.Auth
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Auth
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
    startLine: 30
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\n<p>Gets the Auth routes.</p>\n"
  example: []
  syntax:
    content: public AuthUserRoutes Auth { get; }
    parameters: []
    return:
      type: Dropbox.Api.Auth.Routes.AuthUserRoutes
    content.vb: Public ReadOnly Property Auth As AuthUserRoutes
  overload: Dropbox.Api.DropboxClient.Auth*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.DropboxClient.Check
  commentId: P:Dropbox.Api.DropboxClient.Check
  id: Check
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: Check
  nameWithType: DropboxClient.Check
  fullName: Dropbox.Api.DropboxClient.Check
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Check
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
    startLine: 35
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\n<p>Gets the Check routes.</p>\n"
  example: []
  syntax:
    content: public CheckUserRoutes Check { get; }
    parameters: []
    return:
      type: Dropbox.Api.Check.Routes.CheckUserRoutes
    content.vb: Public ReadOnly Property Check As CheckUserRoutes
  overload: Dropbox.Api.DropboxClient.Check*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.DropboxClient.Contacts
  commentId: P:Dropbox.Api.DropboxClient.Contacts
  id: Contacts
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: Contacts
  nameWithType: DropboxClient.Contacts
  fullName: Dropbox.Api.DropboxClient.Contacts
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Contacts
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
    startLine: 40
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\n<p>Gets the Contacts routes.</p>\n"
  example: []
  syntax:
    content: public ContactsUserRoutes Contacts { get; }
    parameters: []
    return:
      type: Dropbox.Api.Contacts.Routes.ContactsUserRoutes
    content.vb: Public ReadOnly Property Contacts As ContactsUserRoutes
  overload: Dropbox.Api.DropboxClient.Contacts*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.DropboxClient.FileProperties
  commentId: P:Dropbox.Api.DropboxClient.FileProperties
  id: FileProperties
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: FileProperties
  nameWithType: DropboxClient.FileProperties
  fullName: Dropbox.Api.DropboxClient.FileProperties
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: FileProperties
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
    startLine: 45
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\n<p>Gets the FileProperties routes.</p>\n"
  example: []
  syntax:
    content: public FilePropertiesUserRoutes FileProperties { get; }
    parameters: []
    return:
      type: Dropbox.Api.FileProperties.Routes.FilePropertiesUserRoutes
    content.vb: Public ReadOnly Property FileProperties As FilePropertiesUserRoutes
  overload: Dropbox.Api.DropboxClient.FileProperties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.DropboxClient.FileRequests
  commentId: P:Dropbox.Api.DropboxClient.FileRequests
  id: FileRequests
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: FileRequests
  nameWithType: DropboxClient.FileRequests
  fullName: Dropbox.Api.DropboxClient.FileRequests
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: FileRequests
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
    startLine: 50
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\n<p>Gets the FileRequests routes.</p>\n"
  example: []
  syntax:
    content: public FileRequestsUserRoutes FileRequests { get; }
    parameters: []
    return:
      type: Dropbox.Api.FileRequests.Routes.FileRequestsUserRoutes
    content.vb: Public ReadOnly Property FileRequests As FileRequestsUserRoutes
  overload: Dropbox.Api.DropboxClient.FileRequests*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.DropboxClient.Files
  commentId: P:Dropbox.Api.DropboxClient.Files
  id: Files
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: Files
  nameWithType: DropboxClient.Files
  fullName: Dropbox.Api.DropboxClient.Files
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Files
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
    startLine: 55
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\n<p>Gets the Files routes.</p>\n"
  example: []
  syntax:
    content: public FilesUserRoutes Files { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.Routes.FilesUserRoutes
    content.vb: Public ReadOnly Property Files As FilesUserRoutes
  overload: Dropbox.Api.DropboxClient.Files*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.DropboxClient.Paper
  commentId: P:Dropbox.Api.DropboxClient.Paper
  id: Paper
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: Paper
  nameWithType: DropboxClient.Paper
  fullName: Dropbox.Api.DropboxClient.Paper
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Paper
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
    startLine: 60
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\n<p>Gets the Paper routes.</p>\n"
  example: []
  syntax:
    content: public PaperUserRoutes Paper { get; }
    parameters: []
    return:
      type: Dropbox.Api.Paper.Routes.PaperUserRoutes
    content.vb: Public ReadOnly Property Paper As PaperUserRoutes
  overload: Dropbox.Api.DropboxClient.Paper*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.DropboxClient.Sharing
  commentId: P:Dropbox.Api.DropboxClient.Sharing
  id: Sharing
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: Sharing
  nameWithType: DropboxClient.Sharing
  fullName: Dropbox.Api.DropboxClient.Sharing
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Sharing
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
    startLine: 65
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\n<p>Gets the Sharing routes.</p>\n"
  example: []
  syntax:
    content: public SharingUserRoutes Sharing { get; }
    parameters: []
    return:
      type: Dropbox.Api.Sharing.Routes.SharingUserRoutes
    content.vb: Public ReadOnly Property Sharing As SharingUserRoutes
  overload: Dropbox.Api.DropboxClient.Sharing*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.DropboxClient.Users
  commentId: P:Dropbox.Api.DropboxClient.Users
  id: Users
  parent: Dropbox.Api.DropboxClient
  langs:
  - csharp
  - vb
  name: Users
  nameWithType: DropboxClient.Users
  fullName: Dropbox.Api.DropboxClient.Users
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: Users
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/DropboxClient.cs
    startLine: 70
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api
  summary: "\n<p>Gets the Users routes.</p>\n"
  example: []
  syntax:
    content: public UsersUserRoutes Users { get; }
    parameters: []
    return:
      type: Dropbox.Api.Users.Routes.UsersUserRoutes
    content.vb: Public ReadOnly Property Users As UsersUserRoutes
  overload: Dropbox.Api.DropboxClient.Users*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api
  commentId: N:Dropbox.Api
  name: Dropbox.Api
  nameWithType: Dropbox.Api
  fullName: Dropbox.Api
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.DropboxClientBase
  commentId: T:Dropbox.Api.DropboxClientBase
  parent: Dropbox.Api
  name: DropboxClientBase
  nameWithType: DropboxClientBase
  fullName: Dropbox.Api.DropboxClientBase
- uid: Dropbox.Api.DropboxClientBase.Dispose
  commentId: M:Dropbox.Api.DropboxClientBase.Dispose
  parent: Dropbox.Api.DropboxClientBase
  name: Dispose()
  nameWithType: DropboxClientBase.Dispose()
  fullName: Dropbox.Api.DropboxClientBase.Dispose()
  spec.csharp:
  - uid: Dropbox.Api.DropboxClientBase.Dispose
    name: Dispose
    nameWithType: DropboxClientBase.Dispose
    fullName: Dropbox.Api.DropboxClientBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dropbox.Api.DropboxClientBase.Dispose
    name: Dispose
    nameWithType: DropboxClientBase.Dispose
    fullName: Dropbox.Api.DropboxClientBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.DropboxClientBase.Dispose(System.Boolean)
  commentId: M:Dropbox.Api.DropboxClientBase.Dispose(System.Boolean)
  parent: Dropbox.Api.DropboxClientBase
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DropboxClientBase.Dispose(Boolean)
  fullName: Dropbox.Api.DropboxClientBase.Dispose(System.Boolean)
  spec.csharp:
  - uid: Dropbox.Api.DropboxClientBase.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DropboxClientBase.Dispose
    fullName: Dropbox.Api.DropboxClientBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dropbox.Api.DropboxClientBase.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DropboxClientBase.Dispose
    fullName: Dropbox.Api.DropboxClientBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.DropboxClient
  commentId: T:Dropbox.Api.DropboxClient
  parent: Dropbox.Api
  name: DropboxClient
  nameWithType: DropboxClient
  fullName: Dropbox.Api.DropboxClient
- uid: Dropbox.Api.DropboxClient.#ctor*
  commentId: Overload:Dropbox.Api.DropboxClient.#ctor
  name: DropboxClient
  nameWithType: DropboxClient.DropboxClient
  fullName: Dropbox.Api.DropboxClient.DropboxClient
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dropbox.Api.DropboxClientConfig
  commentId: T:Dropbox.Api.DropboxClientConfig
  parent: Dropbox.Api
  name: DropboxClientConfig
  nameWithType: DropboxClientConfig
  fullName: Dropbox.Api.DropboxClientConfig
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: Dropbox.Api.DropboxClient.WithPathRoot*
  commentId: Overload:Dropbox.Api.DropboxClient.WithPathRoot
  name: WithPathRoot
  nameWithType: DropboxClient.WithPathRoot
  fullName: Dropbox.Api.DropboxClient.WithPathRoot
- uid: Dropbox.Api.Common.PathRoot
  commentId: T:Dropbox.Api.Common.PathRoot
  parent: Dropbox.Api.Common
  name: PathRoot
  nameWithType: PathRoot
  fullName: Dropbox.Api.Common.PathRoot
- uid: Dropbox.Api.Common
  commentId: N:Dropbox.Api.Common
  name: Dropbox.Api.Common
  nameWithType: Dropbox.Api.Common
  fullName: Dropbox.Api.Common
- uid: Dropbox.Api.DropboxClient.RefreshAccessToken*
  commentId: Overload:Dropbox.Api.DropboxClient.RefreshAccessToken
  name: RefreshAccessToken
  nameWithType: DropboxClient.RefreshAccessToken
  fullName: Dropbox.Api.DropboxClient.RefreshAccessToken
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Task{System.Boolean}
  commentId: '!:Task{System.Boolean}'
  definition: Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Dropbox.Api.DropboxClient.Account*
  commentId: Overload:Dropbox.Api.DropboxClient.Account
  name: Account
  nameWithType: DropboxClient.Account
  fullName: Dropbox.Api.DropboxClient.Account
- uid: Dropbox.Api.Account.Routes.AccountUserRoutes
  commentId: T:Dropbox.Api.Account.Routes.AccountUserRoutes
  parent: Dropbox.Api.Account.Routes
  name: AccountUserRoutes
  nameWithType: AccountUserRoutes
  fullName: Dropbox.Api.Account.Routes.AccountUserRoutes
- uid: Dropbox.Api.Account.Routes
  commentId: N:Dropbox.Api.Account.Routes
  name: Dropbox.Api.Account.Routes
  nameWithType: Dropbox.Api.Account.Routes
  fullName: Dropbox.Api.Account.Routes
- uid: Dropbox.Api.DropboxClient.Auth*
  commentId: Overload:Dropbox.Api.DropboxClient.Auth
  name: Auth
  nameWithType: DropboxClient.Auth
  fullName: Dropbox.Api.DropboxClient.Auth
- uid: Dropbox.Api.Auth.Routes.AuthUserRoutes
  commentId: T:Dropbox.Api.Auth.Routes.AuthUserRoutes
  parent: Dropbox.Api.Auth.Routes
  name: AuthUserRoutes
  nameWithType: AuthUserRoutes
  fullName: Dropbox.Api.Auth.Routes.AuthUserRoutes
- uid: Dropbox.Api.Auth.Routes
  commentId: N:Dropbox.Api.Auth.Routes
  name: Dropbox.Api.Auth.Routes
  nameWithType: Dropbox.Api.Auth.Routes
  fullName: Dropbox.Api.Auth.Routes
- uid: Dropbox.Api.DropboxClient.Check*
  commentId: Overload:Dropbox.Api.DropboxClient.Check
  name: Check
  nameWithType: DropboxClient.Check
  fullName: Dropbox.Api.DropboxClient.Check
- uid: Dropbox.Api.Check.Routes.CheckUserRoutes
  commentId: T:Dropbox.Api.Check.Routes.CheckUserRoutes
  parent: Dropbox.Api.Check.Routes
  name: CheckUserRoutes
  nameWithType: CheckUserRoutes
  fullName: Dropbox.Api.Check.Routes.CheckUserRoutes
- uid: Dropbox.Api.Check.Routes
  commentId: N:Dropbox.Api.Check.Routes
  name: Dropbox.Api.Check.Routes
  nameWithType: Dropbox.Api.Check.Routes
  fullName: Dropbox.Api.Check.Routes
- uid: Dropbox.Api.DropboxClient.Contacts*
  commentId: Overload:Dropbox.Api.DropboxClient.Contacts
  name: Contacts
  nameWithType: DropboxClient.Contacts
  fullName: Dropbox.Api.DropboxClient.Contacts
- uid: Dropbox.Api.Contacts.Routes.ContactsUserRoutes
  commentId: T:Dropbox.Api.Contacts.Routes.ContactsUserRoutes
  parent: Dropbox.Api.Contacts.Routes
  name: ContactsUserRoutes
  nameWithType: ContactsUserRoutes
  fullName: Dropbox.Api.Contacts.Routes.ContactsUserRoutes
- uid: Dropbox.Api.Contacts.Routes
  commentId: N:Dropbox.Api.Contacts.Routes
  name: Dropbox.Api.Contacts.Routes
  nameWithType: Dropbox.Api.Contacts.Routes
  fullName: Dropbox.Api.Contacts.Routes
- uid: Dropbox.Api.DropboxClient.FileProperties*
  commentId: Overload:Dropbox.Api.DropboxClient.FileProperties
  name: FileProperties
  nameWithType: DropboxClient.FileProperties
  fullName: Dropbox.Api.DropboxClient.FileProperties
- uid: Dropbox.Api.FileProperties.Routes.FilePropertiesUserRoutes
  commentId: T:Dropbox.Api.FileProperties.Routes.FilePropertiesUserRoutes
  parent: Dropbox.Api.FileProperties.Routes
  name: FilePropertiesUserRoutes
  nameWithType: FilePropertiesUserRoutes
  fullName: Dropbox.Api.FileProperties.Routes.FilePropertiesUserRoutes
- uid: Dropbox.Api.FileProperties.Routes
  commentId: N:Dropbox.Api.FileProperties.Routes
  name: Dropbox.Api.FileProperties.Routes
  nameWithType: Dropbox.Api.FileProperties.Routes
  fullName: Dropbox.Api.FileProperties.Routes
- uid: Dropbox.Api.DropboxClient.FileRequests*
  commentId: Overload:Dropbox.Api.DropboxClient.FileRequests
  name: FileRequests
  nameWithType: DropboxClient.FileRequests
  fullName: Dropbox.Api.DropboxClient.FileRequests
- uid: Dropbox.Api.FileRequests.Routes.FileRequestsUserRoutes
  commentId: T:Dropbox.Api.FileRequests.Routes.FileRequestsUserRoutes
  parent: Dropbox.Api.FileRequests.Routes
  name: FileRequestsUserRoutes
  nameWithType: FileRequestsUserRoutes
  fullName: Dropbox.Api.FileRequests.Routes.FileRequestsUserRoutes
- uid: Dropbox.Api.FileRequests.Routes
  commentId: N:Dropbox.Api.FileRequests.Routes
  name: Dropbox.Api.FileRequests.Routes
  nameWithType: Dropbox.Api.FileRequests.Routes
  fullName: Dropbox.Api.FileRequests.Routes
- uid: Dropbox.Api.DropboxClient.Files*
  commentId: Overload:Dropbox.Api.DropboxClient.Files
  name: Files
  nameWithType: DropboxClient.Files
  fullName: Dropbox.Api.DropboxClient.Files
- uid: Dropbox.Api.Files.Routes.FilesUserRoutes
  commentId: T:Dropbox.Api.Files.Routes.FilesUserRoutes
  parent: Dropbox.Api.Files.Routes
  name: FilesUserRoutes
  nameWithType: FilesUserRoutes
  fullName: Dropbox.Api.Files.Routes.FilesUserRoutes
- uid: Dropbox.Api.Files.Routes
  commentId: N:Dropbox.Api.Files.Routes
  name: Dropbox.Api.Files.Routes
  nameWithType: Dropbox.Api.Files.Routes
  fullName: Dropbox.Api.Files.Routes
- uid: Dropbox.Api.DropboxClient.Paper*
  commentId: Overload:Dropbox.Api.DropboxClient.Paper
  name: Paper
  nameWithType: DropboxClient.Paper
  fullName: Dropbox.Api.DropboxClient.Paper
- uid: Dropbox.Api.Paper.Routes.PaperUserRoutes
  commentId: T:Dropbox.Api.Paper.Routes.PaperUserRoutes
  parent: Dropbox.Api.Paper.Routes
  name: PaperUserRoutes
  nameWithType: PaperUserRoutes
  fullName: Dropbox.Api.Paper.Routes.PaperUserRoutes
- uid: Dropbox.Api.Paper.Routes
  commentId: N:Dropbox.Api.Paper.Routes
  name: Dropbox.Api.Paper.Routes
  nameWithType: Dropbox.Api.Paper.Routes
  fullName: Dropbox.Api.Paper.Routes
- uid: Dropbox.Api.DropboxClient.Sharing*
  commentId: Overload:Dropbox.Api.DropboxClient.Sharing
  name: Sharing
  nameWithType: DropboxClient.Sharing
  fullName: Dropbox.Api.DropboxClient.Sharing
- uid: Dropbox.Api.Sharing.Routes.SharingUserRoutes
  commentId: T:Dropbox.Api.Sharing.Routes.SharingUserRoutes
  parent: Dropbox.Api.Sharing.Routes
  name: SharingUserRoutes
  nameWithType: SharingUserRoutes
  fullName: Dropbox.Api.Sharing.Routes.SharingUserRoutes
- uid: Dropbox.Api.Sharing.Routes
  commentId: N:Dropbox.Api.Sharing.Routes
  name: Dropbox.Api.Sharing.Routes
  nameWithType: Dropbox.Api.Sharing.Routes
  fullName: Dropbox.Api.Sharing.Routes
- uid: Dropbox.Api.DropboxClient.Users*
  commentId: Overload:Dropbox.Api.DropboxClient.Users
  name: Users
  nameWithType: DropboxClient.Users
  fullName: Dropbox.Api.DropboxClient.Users
- uid: Dropbox.Api.Users.Routes.UsersUserRoutes
  commentId: T:Dropbox.Api.Users.Routes.UsersUserRoutes
  parent: Dropbox.Api.Users.Routes
  name: UsersUserRoutes
  nameWithType: UsersUserRoutes
  fullName: Dropbox.Api.Users.Routes.UsersUserRoutes
- uid: Dropbox.Api.Users.Routes
  commentId: N:Dropbox.Api.Users.Routes
  name: Dropbox.Api.Users.Routes
  nameWithType: Dropbox.Api.Users.Routes
  fullName: Dropbox.Api.Users.Routes
shouldSkipMarkup: true
