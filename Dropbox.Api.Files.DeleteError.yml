### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.DeleteError
  commentId: T:Dropbox.Api.Files.DeleteError
  id: DeleteError
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.DeleteError.#ctor
  - Dropbox.Api.Files.DeleteError.AsOther
  - Dropbox.Api.Files.DeleteError.AsPathLookup
  - Dropbox.Api.Files.DeleteError.AsPathWrite
  - Dropbox.Api.Files.DeleteError.AsTooManyFiles
  - Dropbox.Api.Files.DeleteError.AsTooManyWriteOperations
  - Dropbox.Api.Files.DeleteError.IsOther
  - Dropbox.Api.Files.DeleteError.IsPathLookup
  - Dropbox.Api.Files.DeleteError.IsPathWrite
  - Dropbox.Api.Files.DeleteError.IsTooManyFiles
  - Dropbox.Api.Files.DeleteError.IsTooManyWriteOperations
  langs:
  - csharp
  - vb
  name: DeleteError
  nameWithType: DeleteError
  fullName: Dropbox.Api.Files.DeleteError
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: DeleteError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The delete error object</p>\n"
  example: []
  syntax:
    content: 'public class DeleteError : object'
    content.vb: >-
      Public Class DeleteError
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Files.DeleteError.Other
  - Dropbox.Api.Files.DeleteError.PathLookup
  - Dropbox.Api.Files.DeleteError.PathWrite
  - Dropbox.Api.Files.DeleteError.TooManyFiles
  - Dropbox.Api.Files.DeleteError.TooManyWriteOperations
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.DeleteError.#ctor
  commentId: M:Dropbox.Api.Files.DeleteError.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Files.DeleteError
  langs:
  - csharp
  - vb
  name: DeleteError()
  nameWithType: DeleteError.DeleteError()
  fullName: Dropbox.Api.Files.DeleteError.DeleteError()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
    startLine: 32
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.DeleteError\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public DeleteError()
    content.vb: Public Sub New
  overload: Dropbox.Api.Files.DeleteError.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.DeleteError.IsPathLookup
  commentId: P:Dropbox.Api.Files.DeleteError.IsPathLookup
  id: IsPathLookup
  parent: Dropbox.Api.Files.DeleteError
  langs:
  - csharp
  - vb
  name: IsPathLookup
  nameWithType: DeleteError.IsPathLookup
  fullName: Dropbox.Api.Files.DeleteError.IsPathLookup
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsPathLookup
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
    startLine: 39
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is PathLookup</p>\n"
  example: []
  syntax:
    content: public bool IsPathLookup { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPathLookup As Boolean
  overload: Dropbox.Api.Files.DeleteError.IsPathLookup*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.DeleteError.AsPathLookup
  commentId: P:Dropbox.Api.Files.DeleteError.AsPathLookup
  id: AsPathLookup
  parent: Dropbox.Api.Files.DeleteError
  langs:
  - csharp
  - vb
  name: AsPathLookup
  nameWithType: DeleteError.AsPathLookup
  fullName: Dropbox.Api.Files.DeleteError.AsPathLookup
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsPathLookup
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
    startLine: 50
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a PathLookup, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public DeleteError.PathLookup AsPathLookup { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.DeleteError.PathLookup
    content.vb: Public ReadOnly Property AsPathLookup As DeleteError.PathLookup
  overload: Dropbox.Api.Files.DeleteError.AsPathLookup*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.DeleteError.IsPathWrite
  commentId: P:Dropbox.Api.Files.DeleteError.IsPathWrite
  id: IsPathWrite
  parent: Dropbox.Api.Files.DeleteError
  langs:
  - csharp
  - vb
  name: IsPathWrite
  nameWithType: DeleteError.IsPathWrite
  fullName: Dropbox.Api.Files.DeleteError.IsPathWrite
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsPathWrite
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
    startLine: 61
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is PathWrite</p>\n"
  example: []
  syntax:
    content: public bool IsPathWrite { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPathWrite As Boolean
  overload: Dropbox.Api.Files.DeleteError.IsPathWrite*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.DeleteError.AsPathWrite
  commentId: P:Dropbox.Api.Files.DeleteError.AsPathWrite
  id: AsPathWrite
  parent: Dropbox.Api.Files.DeleteError
  langs:
  - csharp
  - vb
  name: AsPathWrite
  nameWithType: DeleteError.AsPathWrite
  fullName: Dropbox.Api.Files.DeleteError.AsPathWrite
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsPathWrite
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
    startLine: 72
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a PathWrite, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public DeleteError.PathWrite AsPathWrite { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.DeleteError.PathWrite
    content.vb: Public ReadOnly Property AsPathWrite As DeleteError.PathWrite
  overload: Dropbox.Api.Files.DeleteError.AsPathWrite*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.DeleteError.IsTooManyWriteOperations
  commentId: P:Dropbox.Api.Files.DeleteError.IsTooManyWriteOperations
  id: IsTooManyWriteOperations
  parent: Dropbox.Api.Files.DeleteError
  langs:
  - csharp
  - vb
  name: IsTooManyWriteOperations
  nameWithType: DeleteError.IsTooManyWriteOperations
  fullName: Dropbox.Api.Files.DeleteError.IsTooManyWriteOperations
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsTooManyWriteOperations
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
    startLine: 84
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is\nTooManyWriteOperations</p>\n"
  example: []
  syntax:
    content: public bool IsTooManyWriteOperations { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTooManyWriteOperations As Boolean
  overload: Dropbox.Api.Files.DeleteError.IsTooManyWriteOperations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.DeleteError.AsTooManyWriteOperations
  commentId: P:Dropbox.Api.Files.DeleteError.AsTooManyWriteOperations
  id: AsTooManyWriteOperations
  parent: Dropbox.Api.Files.DeleteError
  langs:
  - csharp
  - vb
  name: AsTooManyWriteOperations
  nameWithType: DeleteError.AsTooManyWriteOperations
  fullName: Dropbox.Api.Files.DeleteError.AsTooManyWriteOperations
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsTooManyWriteOperations
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
    startLine: 95
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a TooManyWriteOperations, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public DeleteError.TooManyWriteOperations AsTooManyWriteOperations { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.DeleteError.TooManyWriteOperations
    content.vb: Public ReadOnly Property AsTooManyWriteOperations As DeleteError.TooManyWriteOperations
  overload: Dropbox.Api.Files.DeleteError.AsTooManyWriteOperations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.DeleteError.IsTooManyFiles
  commentId: P:Dropbox.Api.Files.DeleteError.IsTooManyFiles
  id: IsTooManyFiles
  parent: Dropbox.Api.Files.DeleteError
  langs:
  - csharp
  - vb
  name: IsTooManyFiles
  nameWithType: DeleteError.IsTooManyFiles
  fullName: Dropbox.Api.Files.DeleteError.IsTooManyFiles
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsTooManyFiles
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
    startLine: 106
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is TooManyFiles</p>\n"
  example: []
  syntax:
    content: public bool IsTooManyFiles { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTooManyFiles As Boolean
  overload: Dropbox.Api.Files.DeleteError.IsTooManyFiles*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.DeleteError.AsTooManyFiles
  commentId: P:Dropbox.Api.Files.DeleteError.AsTooManyFiles
  id: AsTooManyFiles
  parent: Dropbox.Api.Files.DeleteError
  langs:
  - csharp
  - vb
  name: AsTooManyFiles
  nameWithType: DeleteError.AsTooManyFiles
  fullName: Dropbox.Api.Files.DeleteError.AsTooManyFiles
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsTooManyFiles
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
    startLine: 117
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a TooManyFiles, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public DeleteError.TooManyFiles AsTooManyFiles { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.DeleteError.TooManyFiles
    content.vb: Public ReadOnly Property AsTooManyFiles As DeleteError.TooManyFiles
  overload: Dropbox.Api.Files.DeleteError.AsTooManyFiles*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.DeleteError.IsOther
  commentId: P:Dropbox.Api.Files.DeleteError.IsOther
  id: IsOther
  parent: Dropbox.Api.Files.DeleteError
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: DeleteError.IsOther
  fullName: Dropbox.Api.Files.DeleteError.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
    startLine: 128
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.Files.DeleteError.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.DeleteError.AsOther
  commentId: P:Dropbox.Api.Files.DeleteError.AsOther
  id: AsOther
  parent: Dropbox.Api.Files.DeleteError
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: DeleteError.AsOther
  fullName: Dropbox.Api.Files.DeleteError.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/DeleteError.cs
    startLine: 139
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public DeleteError.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.DeleteError.Other
    content.vb: Public ReadOnly Property AsOther As DeleteError.Other
  overload: Dropbox.Api.Files.DeleteError.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Files.DeleteError
  commentId: T:Dropbox.Api.Files.DeleteError
  parent: Dropbox.Api.Files
  name: DeleteError
  nameWithType: DeleteError
  fullName: Dropbox.Api.Files.DeleteError
- uid: Dropbox.Api.Files.DeleteError.#ctor*
  commentId: Overload:Dropbox.Api.Files.DeleteError.#ctor
  name: DeleteError
  nameWithType: DeleteError.DeleteError
  fullName: Dropbox.Api.Files.DeleteError.DeleteError
- uid: Dropbox.Api.Files.DeleteError.IsPathLookup*
  commentId: Overload:Dropbox.Api.Files.DeleteError.IsPathLookup
  name: IsPathLookup
  nameWithType: DeleteError.IsPathLookup
  fullName: Dropbox.Api.Files.DeleteError.IsPathLookup
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Files.DeleteError.AsPathLookup*
  commentId: Overload:Dropbox.Api.Files.DeleteError.AsPathLookup
  name: AsPathLookup
  nameWithType: DeleteError.AsPathLookup
  fullName: Dropbox.Api.Files.DeleteError.AsPathLookup
- uid: Dropbox.Api.Files.DeleteError.PathLookup
  commentId: T:Dropbox.Api.Files.DeleteError.PathLookup
  parent: Dropbox.Api.Files
  name: DeleteError.PathLookup
  nameWithType: DeleteError.PathLookup
  fullName: Dropbox.Api.Files.DeleteError.PathLookup
- uid: Dropbox.Api.Files.DeleteError.IsPathWrite*
  commentId: Overload:Dropbox.Api.Files.DeleteError.IsPathWrite
  name: IsPathWrite
  nameWithType: DeleteError.IsPathWrite
  fullName: Dropbox.Api.Files.DeleteError.IsPathWrite
- uid: Dropbox.Api.Files.DeleteError.AsPathWrite*
  commentId: Overload:Dropbox.Api.Files.DeleteError.AsPathWrite
  name: AsPathWrite
  nameWithType: DeleteError.AsPathWrite
  fullName: Dropbox.Api.Files.DeleteError.AsPathWrite
- uid: Dropbox.Api.Files.DeleteError.PathWrite
  commentId: T:Dropbox.Api.Files.DeleteError.PathWrite
  parent: Dropbox.Api.Files
  name: DeleteError.PathWrite
  nameWithType: DeleteError.PathWrite
  fullName: Dropbox.Api.Files.DeleteError.PathWrite
- uid: Dropbox.Api.Files.DeleteError.IsTooManyWriteOperations*
  commentId: Overload:Dropbox.Api.Files.DeleteError.IsTooManyWriteOperations
  name: IsTooManyWriteOperations
  nameWithType: DeleteError.IsTooManyWriteOperations
  fullName: Dropbox.Api.Files.DeleteError.IsTooManyWriteOperations
- uid: Dropbox.Api.Files.DeleteError.AsTooManyWriteOperations*
  commentId: Overload:Dropbox.Api.Files.DeleteError.AsTooManyWriteOperations
  name: AsTooManyWriteOperations
  nameWithType: DeleteError.AsTooManyWriteOperations
  fullName: Dropbox.Api.Files.DeleteError.AsTooManyWriteOperations
- uid: Dropbox.Api.Files.DeleteError.TooManyWriteOperations
  commentId: T:Dropbox.Api.Files.DeleteError.TooManyWriteOperations
  parent: Dropbox.Api.Files
  name: DeleteError.TooManyWriteOperations
  nameWithType: DeleteError.TooManyWriteOperations
  fullName: Dropbox.Api.Files.DeleteError.TooManyWriteOperations
- uid: Dropbox.Api.Files.DeleteError.IsTooManyFiles*
  commentId: Overload:Dropbox.Api.Files.DeleteError.IsTooManyFiles
  name: IsTooManyFiles
  nameWithType: DeleteError.IsTooManyFiles
  fullName: Dropbox.Api.Files.DeleteError.IsTooManyFiles
- uid: Dropbox.Api.Files.DeleteError.AsTooManyFiles*
  commentId: Overload:Dropbox.Api.Files.DeleteError.AsTooManyFiles
  name: AsTooManyFiles
  nameWithType: DeleteError.AsTooManyFiles
  fullName: Dropbox.Api.Files.DeleteError.AsTooManyFiles
- uid: Dropbox.Api.Files.DeleteError.TooManyFiles
  commentId: T:Dropbox.Api.Files.DeleteError.TooManyFiles
  parent: Dropbox.Api.Files
  name: DeleteError.TooManyFiles
  nameWithType: DeleteError.TooManyFiles
  fullName: Dropbox.Api.Files.DeleteError.TooManyFiles
- uid: Dropbox.Api.Files.DeleteError.IsOther*
  commentId: Overload:Dropbox.Api.Files.DeleteError.IsOther
  name: IsOther
  nameWithType: DeleteError.IsOther
  fullName: Dropbox.Api.Files.DeleteError.IsOther
- uid: Dropbox.Api.Files.DeleteError.AsOther*
  commentId: Overload:Dropbox.Api.Files.DeleteError.AsOther
  name: AsOther
  nameWithType: DeleteError.AsOther
  fullName: Dropbox.Api.Files.DeleteError.AsOther
- uid: Dropbox.Api.Files.DeleteError.Other
  commentId: T:Dropbox.Api.Files.DeleteError.Other
  parent: Dropbox.Api.Files
  name: DeleteError.Other
  nameWithType: DeleteError.Other
  fullName: Dropbox.Api.Files.DeleteError.Other
shouldSkipMarkup: true
