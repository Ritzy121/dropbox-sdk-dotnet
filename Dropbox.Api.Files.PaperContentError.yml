### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.PaperContentError
  commentId: T:Dropbox.Api.Files.PaperContentError
  id: PaperContentError
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.PaperContentError.#ctor
  - Dropbox.Api.Files.PaperContentError.AsContentMalformed
  - Dropbox.Api.Files.PaperContentError.AsDocLengthExceeded
  - Dropbox.Api.Files.PaperContentError.AsImageSizeExceeded
  - Dropbox.Api.Files.PaperContentError.AsInsufficientPermissions
  - Dropbox.Api.Files.PaperContentError.AsOther
  - Dropbox.Api.Files.PaperContentError.IsContentMalformed
  - Dropbox.Api.Files.PaperContentError.IsDocLengthExceeded
  - Dropbox.Api.Files.PaperContentError.IsImageSizeExceeded
  - Dropbox.Api.Files.PaperContentError.IsInsufficientPermissions
  - Dropbox.Api.Files.PaperContentError.IsOther
  langs:
  - csharp
  - vb
  name: PaperContentError
  nameWithType: PaperContentError
  fullName: Dropbox.Api.Files.PaperContentError
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: PaperContentError
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The paper content error object</p>\n"
  example: []
  syntax:
    content: 'public class PaperContentError : object'
    content.vb: >-
      Public Class PaperContentError
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Files.PaperContentError.ContentMalformed
  - Dropbox.Api.Files.PaperContentError.DocLengthExceeded
  - Dropbox.Api.Files.PaperContentError.ImageSizeExceeded
  - Dropbox.Api.Files.PaperContentError.InsufficientPermissions
  - Dropbox.Api.Files.PaperContentError.Other
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.PaperContentError.#ctor
  commentId: M:Dropbox.Api.Files.PaperContentError.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Files.PaperContentError
  langs:
  - csharp
  - vb
  name: PaperContentError()
  nameWithType: PaperContentError.PaperContentError()
  fullName: Dropbox.Api.Files.PaperContentError.PaperContentError()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
    startLine: 33
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.PaperContentError\" data-throw-if-not-resolved=\"false\"></xref>\nclass.</p>\n"
  example: []
  syntax:
    content: public PaperContentError()
    content.vb: Public Sub New
  overload: Dropbox.Api.Files.PaperContentError.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.PaperContentError.IsInsufficientPermissions
  commentId: P:Dropbox.Api.Files.PaperContentError.IsInsufficientPermissions
  id: IsInsufficientPermissions
  parent: Dropbox.Api.Files.PaperContentError
  langs:
  - csharp
  - vb
  name: IsInsufficientPermissions
  nameWithType: PaperContentError.IsInsufficientPermissions
  fullName: Dropbox.Api.Files.PaperContentError.IsInsufficientPermissions
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsInsufficientPermissions
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
    startLine: 41
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is\nInsufficientPermissions</p>\n"
  example: []
  syntax:
    content: public bool IsInsufficientPermissions { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInsufficientPermissions As Boolean
  overload: Dropbox.Api.Files.PaperContentError.IsInsufficientPermissions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperContentError.AsInsufficientPermissions
  commentId: P:Dropbox.Api.Files.PaperContentError.AsInsufficientPermissions
  id: AsInsufficientPermissions
  parent: Dropbox.Api.Files.PaperContentError
  langs:
  - csharp
  - vb
  name: AsInsufficientPermissions
  nameWithType: PaperContentError.AsInsufficientPermissions
  fullName: Dropbox.Api.Files.PaperContentError.AsInsufficientPermissions
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsInsufficientPermissions
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
    startLine: 52
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a InsufficientPermissions, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperContentError.InsufficientPermissions AsInsufficientPermissions { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.PaperContentError.InsufficientPermissions
    content.vb: Public ReadOnly Property AsInsufficientPermissions As PaperContentError.InsufficientPermissions
  overload: Dropbox.Api.Files.PaperContentError.AsInsufficientPermissions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperContentError.IsContentMalformed
  commentId: P:Dropbox.Api.Files.PaperContentError.IsContentMalformed
  id: IsContentMalformed
  parent: Dropbox.Api.Files.PaperContentError
  langs:
  - csharp
  - vb
  name: IsContentMalformed
  nameWithType: PaperContentError.IsContentMalformed
  fullName: Dropbox.Api.Files.PaperContentError.IsContentMalformed
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsContentMalformed
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
    startLine: 63
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is ContentMalformed</p>\n"
  example: []
  syntax:
    content: public bool IsContentMalformed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsContentMalformed As Boolean
  overload: Dropbox.Api.Files.PaperContentError.IsContentMalformed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperContentError.AsContentMalformed
  commentId: P:Dropbox.Api.Files.PaperContentError.AsContentMalformed
  id: AsContentMalformed
  parent: Dropbox.Api.Files.PaperContentError
  langs:
  - csharp
  - vb
  name: AsContentMalformed
  nameWithType: PaperContentError.AsContentMalformed
  fullName: Dropbox.Api.Files.PaperContentError.AsContentMalformed
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsContentMalformed
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
    startLine: 74
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a ContentMalformed, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperContentError.ContentMalformed AsContentMalformed { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.PaperContentError.ContentMalformed
    content.vb: Public ReadOnly Property AsContentMalformed As PaperContentError.ContentMalformed
  overload: Dropbox.Api.Files.PaperContentError.AsContentMalformed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperContentError.IsDocLengthExceeded
  commentId: P:Dropbox.Api.Files.PaperContentError.IsDocLengthExceeded
  id: IsDocLengthExceeded
  parent: Dropbox.Api.Files.PaperContentError
  langs:
  - csharp
  - vb
  name: IsDocLengthExceeded
  nameWithType: PaperContentError.IsDocLengthExceeded
  fullName: Dropbox.Api.Files.PaperContentError.IsDocLengthExceeded
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsDocLengthExceeded
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
    startLine: 85
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is DocLengthExceeded</p>\n"
  example: []
  syntax:
    content: public bool IsDocLengthExceeded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDocLengthExceeded As Boolean
  overload: Dropbox.Api.Files.PaperContentError.IsDocLengthExceeded*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperContentError.AsDocLengthExceeded
  commentId: P:Dropbox.Api.Files.PaperContentError.AsDocLengthExceeded
  id: AsDocLengthExceeded
  parent: Dropbox.Api.Files.PaperContentError
  langs:
  - csharp
  - vb
  name: AsDocLengthExceeded
  nameWithType: PaperContentError.AsDocLengthExceeded
  fullName: Dropbox.Api.Files.PaperContentError.AsDocLengthExceeded
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsDocLengthExceeded
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
    startLine: 96
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a DocLengthExceeded, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperContentError.DocLengthExceeded AsDocLengthExceeded { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.PaperContentError.DocLengthExceeded
    content.vb: Public ReadOnly Property AsDocLengthExceeded As PaperContentError.DocLengthExceeded
  overload: Dropbox.Api.Files.PaperContentError.AsDocLengthExceeded*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperContentError.IsImageSizeExceeded
  commentId: P:Dropbox.Api.Files.PaperContentError.IsImageSizeExceeded
  id: IsImageSizeExceeded
  parent: Dropbox.Api.Files.PaperContentError
  langs:
  - csharp
  - vb
  name: IsImageSizeExceeded
  nameWithType: PaperContentError.IsImageSizeExceeded
  fullName: Dropbox.Api.Files.PaperContentError.IsImageSizeExceeded
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsImageSizeExceeded
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
    startLine: 107
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is ImageSizeExceeded</p>\n"
  example: []
  syntax:
    content: public bool IsImageSizeExceeded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsImageSizeExceeded As Boolean
  overload: Dropbox.Api.Files.PaperContentError.IsImageSizeExceeded*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperContentError.AsImageSizeExceeded
  commentId: P:Dropbox.Api.Files.PaperContentError.AsImageSizeExceeded
  id: AsImageSizeExceeded
  parent: Dropbox.Api.Files.PaperContentError
  langs:
  - csharp
  - vb
  name: AsImageSizeExceeded
  nameWithType: PaperContentError.AsImageSizeExceeded
  fullName: Dropbox.Api.Files.PaperContentError.AsImageSizeExceeded
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsImageSizeExceeded
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
    startLine: 118
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a ImageSizeExceeded, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperContentError.ImageSizeExceeded AsImageSizeExceeded { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.PaperContentError.ImageSizeExceeded
    content.vb: Public ReadOnly Property AsImageSizeExceeded As PaperContentError.ImageSizeExceeded
  overload: Dropbox.Api.Files.PaperContentError.AsImageSizeExceeded*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperContentError.IsOther
  commentId: P:Dropbox.Api.Files.PaperContentError.IsOther
  id: IsOther
  parent: Dropbox.Api.Files.PaperContentError
  langs:
  - csharp
  - vb
  name: IsOther
  nameWithType: PaperContentError.IsOther
  fullName: Dropbox.Api.Files.PaperContentError.IsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
    startLine: 129
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Other</p>\n"
  example: []
  syntax:
    content: public bool IsOther { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOther As Boolean
  overload: Dropbox.Api.Files.PaperContentError.IsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.PaperContentError.AsOther
  commentId: P:Dropbox.Api.Files.PaperContentError.AsOther
  id: AsOther
  parent: Dropbox.Api.Files.PaperContentError
  langs:
  - csharp
  - vb
  name: AsOther
  nameWithType: PaperContentError.AsOther
  fullName: Dropbox.Api.Files.PaperContentError.AsOther
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsOther
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/PaperContentError.cs
    startLine: 140
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Other, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public PaperContentError.Other AsOther { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.PaperContentError.Other
    content.vb: Public ReadOnly Property AsOther As PaperContentError.Other
  overload: Dropbox.Api.Files.PaperContentError.AsOther*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Files.PaperContentError
  commentId: T:Dropbox.Api.Files.PaperContentError
  parent: Dropbox.Api.Files
  name: PaperContentError
  nameWithType: PaperContentError
  fullName: Dropbox.Api.Files.PaperContentError
- uid: Dropbox.Api.Files.PaperContentError.#ctor*
  commentId: Overload:Dropbox.Api.Files.PaperContentError.#ctor
  name: PaperContentError
  nameWithType: PaperContentError.PaperContentError
  fullName: Dropbox.Api.Files.PaperContentError.PaperContentError
- uid: Dropbox.Api.Files.PaperContentError.IsInsufficientPermissions*
  commentId: Overload:Dropbox.Api.Files.PaperContentError.IsInsufficientPermissions
  name: IsInsufficientPermissions
  nameWithType: PaperContentError.IsInsufficientPermissions
  fullName: Dropbox.Api.Files.PaperContentError.IsInsufficientPermissions
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Files.PaperContentError.AsInsufficientPermissions*
  commentId: Overload:Dropbox.Api.Files.PaperContentError.AsInsufficientPermissions
  name: AsInsufficientPermissions
  nameWithType: PaperContentError.AsInsufficientPermissions
  fullName: Dropbox.Api.Files.PaperContentError.AsInsufficientPermissions
- uid: Dropbox.Api.Files.PaperContentError.InsufficientPermissions
  commentId: T:Dropbox.Api.Files.PaperContentError.InsufficientPermissions
  parent: Dropbox.Api.Files
  name: PaperContentError.InsufficientPermissions
  nameWithType: PaperContentError.InsufficientPermissions
  fullName: Dropbox.Api.Files.PaperContentError.InsufficientPermissions
- uid: Dropbox.Api.Files.PaperContentError.IsContentMalformed*
  commentId: Overload:Dropbox.Api.Files.PaperContentError.IsContentMalformed
  name: IsContentMalformed
  nameWithType: PaperContentError.IsContentMalformed
  fullName: Dropbox.Api.Files.PaperContentError.IsContentMalformed
- uid: Dropbox.Api.Files.PaperContentError.AsContentMalformed*
  commentId: Overload:Dropbox.Api.Files.PaperContentError.AsContentMalformed
  name: AsContentMalformed
  nameWithType: PaperContentError.AsContentMalformed
  fullName: Dropbox.Api.Files.PaperContentError.AsContentMalformed
- uid: Dropbox.Api.Files.PaperContentError.ContentMalformed
  commentId: T:Dropbox.Api.Files.PaperContentError.ContentMalformed
  parent: Dropbox.Api.Files
  name: PaperContentError.ContentMalformed
  nameWithType: PaperContentError.ContentMalformed
  fullName: Dropbox.Api.Files.PaperContentError.ContentMalformed
- uid: Dropbox.Api.Files.PaperContentError.IsDocLengthExceeded*
  commentId: Overload:Dropbox.Api.Files.PaperContentError.IsDocLengthExceeded
  name: IsDocLengthExceeded
  nameWithType: PaperContentError.IsDocLengthExceeded
  fullName: Dropbox.Api.Files.PaperContentError.IsDocLengthExceeded
- uid: Dropbox.Api.Files.PaperContentError.AsDocLengthExceeded*
  commentId: Overload:Dropbox.Api.Files.PaperContentError.AsDocLengthExceeded
  name: AsDocLengthExceeded
  nameWithType: PaperContentError.AsDocLengthExceeded
  fullName: Dropbox.Api.Files.PaperContentError.AsDocLengthExceeded
- uid: Dropbox.Api.Files.PaperContentError.DocLengthExceeded
  commentId: T:Dropbox.Api.Files.PaperContentError.DocLengthExceeded
  parent: Dropbox.Api.Files
  name: PaperContentError.DocLengthExceeded
  nameWithType: PaperContentError.DocLengthExceeded
  fullName: Dropbox.Api.Files.PaperContentError.DocLengthExceeded
- uid: Dropbox.Api.Files.PaperContentError.IsImageSizeExceeded*
  commentId: Overload:Dropbox.Api.Files.PaperContentError.IsImageSizeExceeded
  name: IsImageSizeExceeded
  nameWithType: PaperContentError.IsImageSizeExceeded
  fullName: Dropbox.Api.Files.PaperContentError.IsImageSizeExceeded
- uid: Dropbox.Api.Files.PaperContentError.AsImageSizeExceeded*
  commentId: Overload:Dropbox.Api.Files.PaperContentError.AsImageSizeExceeded
  name: AsImageSizeExceeded
  nameWithType: PaperContentError.AsImageSizeExceeded
  fullName: Dropbox.Api.Files.PaperContentError.AsImageSizeExceeded
- uid: Dropbox.Api.Files.PaperContentError.ImageSizeExceeded
  commentId: T:Dropbox.Api.Files.PaperContentError.ImageSizeExceeded
  parent: Dropbox.Api.Files
  name: PaperContentError.ImageSizeExceeded
  nameWithType: PaperContentError.ImageSizeExceeded
  fullName: Dropbox.Api.Files.PaperContentError.ImageSizeExceeded
- uid: Dropbox.Api.Files.PaperContentError.IsOther*
  commentId: Overload:Dropbox.Api.Files.PaperContentError.IsOther
  name: IsOther
  nameWithType: PaperContentError.IsOther
  fullName: Dropbox.Api.Files.PaperContentError.IsOther
- uid: Dropbox.Api.Files.PaperContentError.AsOther*
  commentId: Overload:Dropbox.Api.Files.PaperContentError.AsOther
  name: AsOther
  nameWithType: PaperContentError.AsOther
  fullName: Dropbox.Api.Files.PaperContentError.AsOther
- uid: Dropbox.Api.Files.PaperContentError.Other
  commentId: T:Dropbox.Api.Files.PaperContentError.Other
  parent: Dropbox.Api.Files
  name: PaperContentError.Other
  nameWithType: PaperContentError.Other
  fullName: Dropbox.Api.Files.PaperContentError.Other
shouldSkipMarkup: true
