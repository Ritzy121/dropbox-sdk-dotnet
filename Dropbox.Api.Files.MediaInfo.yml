### YamlMime:ManagedReference
items:
- uid: Dropbox.Api.Files.MediaInfo
  commentId: T:Dropbox.Api.Files.MediaInfo
  id: MediaInfo
  parent: Dropbox.Api.Files
  children:
  - Dropbox.Api.Files.MediaInfo.#ctor
  - Dropbox.Api.Files.MediaInfo.AsMetadata
  - Dropbox.Api.Files.MediaInfo.AsPending
  - Dropbox.Api.Files.MediaInfo.IsMetadata
  - Dropbox.Api.Files.MediaInfo.IsPending
  langs:
  - csharp
  - vb
  name: MediaInfo
  nameWithType: MediaInfo
  fullName: Dropbox.Api.Files.MediaInfo
  type: Class
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MediaInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: MediaInfo
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MediaInfo.cs
    startLine: 15
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>The media info object</p>\n"
  example: []
  syntax:
    content: 'public class MediaInfo : object'
    content.vb: >-
      Public Class MediaInfo
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - Dropbox.Api.Files.MediaInfo.Metadata
  - Dropbox.Api.Files.MediaInfo.Pending
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Dropbox.Api.Files.MediaInfo.#ctor
  commentId: M:Dropbox.Api.Files.MediaInfo.#ctor
  id: '#ctor'
  parent: Dropbox.Api.Files.MediaInfo
  langs:
  - csharp
  - vb
  name: MediaInfo()
  nameWithType: MediaInfo.MediaInfo()
  fullName: Dropbox.Api.Files.MediaInfo.MediaInfo()
  type: Constructor
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MediaInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: .ctor
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MediaInfo.cs
    startLine: 32
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Initializes a new instance of the <xref href=\"Dropbox.Api.Files.MediaInfo\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public MediaInfo()
    content.vb: Public Sub New
  overload: Dropbox.Api.Files.MediaInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Dropbox.Api.Files.MediaInfo.IsPending
  commentId: P:Dropbox.Api.Files.MediaInfo.IsPending
  id: IsPending
  parent: Dropbox.Api.Files.MediaInfo
  langs:
  - csharp
  - vb
  name: IsPending
  nameWithType: MediaInfo.IsPending
  fullName: Dropbox.Api.Files.MediaInfo.IsPending
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MediaInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsPending
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MediaInfo.cs
    startLine: 39
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Pending</p>\n"
  example: []
  syntax:
    content: public bool IsPending { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPending As Boolean
  overload: Dropbox.Api.Files.MediaInfo.IsPending*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.MediaInfo.AsPending
  commentId: P:Dropbox.Api.Files.MediaInfo.AsPending
  id: AsPending
  parent: Dropbox.Api.Files.MediaInfo
  langs:
  - csharp
  - vb
  name: AsPending
  nameWithType: MediaInfo.AsPending
  fullName: Dropbox.Api.Files.MediaInfo.AsPending
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MediaInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsPending
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MediaInfo.cs
    startLine: 50
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Pending, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public MediaInfo.Pending AsPending { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.MediaInfo.Pending
    content.vb: Public ReadOnly Property AsPending As MediaInfo.Pending
  overload: Dropbox.Api.Files.MediaInfo.AsPending*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.MediaInfo.IsMetadata
  commentId: P:Dropbox.Api.Files.MediaInfo.IsMetadata
  id: IsMetadata
  parent: Dropbox.Api.Files.MediaInfo
  langs:
  - csharp
  - vb
  name: IsMetadata
  nameWithType: MediaInfo.IsMetadata
  fullName: Dropbox.Api.Files.MediaInfo.IsMetadata
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MediaInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: IsMetadata
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MediaInfo.cs
    startLine: 61
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets a value indicating whether this instance is Metadata</p>\n"
  example: []
  syntax:
    content: public bool IsMetadata { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMetadata As Boolean
  overload: Dropbox.Api.Files.MediaInfo.IsMetadata*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Dropbox.Api.Files.MediaInfo.AsMetadata
  commentId: P:Dropbox.Api.Files.MediaInfo.AsMetadata
  id: AsMetadata
  parent: Dropbox.Api.Files.MediaInfo
  langs:
  - csharp
  - vb
  name: AsMetadata
  nameWithType: MediaInfo.AsMetadata
  fullName: Dropbox.Api.Files.MediaInfo.AsMetadata
  type: Property
  source:
    remote:
      path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MediaInfo.cs
      branch: doc_fx_test
      repo: https://github.com/dropbox/dropbox-sdk-dotnet
    id: AsMetadata
    path: dropbox-sdk-dotnet/Dropbox.Api/Generated/Files/MediaInfo.cs
    startLine: 72
  assemblies:
  - Dropbox.Api
  namespace: Dropbox.Api.Files
  summary: "\n<p>Gets this instance as a Metadata, or <code>null</code>.</p>\n"
  example: []
  syntax:
    content: public MediaInfo.Metadata AsMetadata { get; }
    parameters: []
    return:
      type: Dropbox.Api.Files.MediaInfo.Metadata
    content.vb: Public ReadOnly Property AsMetadata As MediaInfo.Metadata
  overload: Dropbox.Api.Files.MediaInfo.AsMetadata*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Dropbox.Api.Files
  commentId: N:Dropbox.Api.Files
  name: Dropbox.Api.Files
  nameWithType: Dropbox.Api.Files
  fullName: Dropbox.Api.Files
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dropbox.Api.Files.MediaInfo
  commentId: T:Dropbox.Api.Files.MediaInfo
  parent: Dropbox.Api.Files
  name: MediaInfo
  nameWithType: MediaInfo
  fullName: Dropbox.Api.Files.MediaInfo
- uid: Dropbox.Api.Files.MediaInfo.#ctor*
  commentId: Overload:Dropbox.Api.Files.MediaInfo.#ctor
  name: MediaInfo
  nameWithType: MediaInfo.MediaInfo
  fullName: Dropbox.Api.Files.MediaInfo.MediaInfo
- uid: Dropbox.Api.Files.MediaInfo.IsPending*
  commentId: Overload:Dropbox.Api.Files.MediaInfo.IsPending
  name: IsPending
  nameWithType: MediaInfo.IsPending
  fullName: Dropbox.Api.Files.MediaInfo.IsPending
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dropbox.Api.Files.MediaInfo.AsPending*
  commentId: Overload:Dropbox.Api.Files.MediaInfo.AsPending
  name: AsPending
  nameWithType: MediaInfo.AsPending
  fullName: Dropbox.Api.Files.MediaInfo.AsPending
- uid: Dropbox.Api.Files.MediaInfo.Pending
  commentId: T:Dropbox.Api.Files.MediaInfo.Pending
  parent: Dropbox.Api.Files
  name: MediaInfo.Pending
  nameWithType: MediaInfo.Pending
  fullName: Dropbox.Api.Files.MediaInfo.Pending
- uid: Dropbox.Api.Files.MediaInfo.IsMetadata*
  commentId: Overload:Dropbox.Api.Files.MediaInfo.IsMetadata
  name: IsMetadata
  nameWithType: MediaInfo.IsMetadata
  fullName: Dropbox.Api.Files.MediaInfo.IsMetadata
- uid: Dropbox.Api.Files.MediaInfo.AsMetadata*
  commentId: Overload:Dropbox.Api.Files.MediaInfo.AsMetadata
  name: AsMetadata
  nameWithType: MediaInfo.AsMetadata
  fullName: Dropbox.Api.Files.MediaInfo.AsMetadata
- uid: Dropbox.Api.Files.MediaInfo.Metadata
  commentId: T:Dropbox.Api.Files.MediaInfo.Metadata
  parent: Dropbox.Api.Files
  name: MediaInfo.Metadata
  nameWithType: MediaInfo.Metadata
  fullName: Dropbox.Api.Files.MediaInfo.Metadata
shouldSkipMarkup: true
